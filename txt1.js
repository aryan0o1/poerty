{"status":"ok","count":145,"count_total":360,"pages":3,"posts":[{"id":10560,"type":"post","slug":"google-fonts-website-gets-a-new-fresh-material-design-look","url":"http:\/\/stacktips.com\/news\/google-fonts-website-gets-a-new-fresh-material-design-look","status":"publish","title":"Google Fonts Website Gets a New Fresh Material Design Look","title_plain":"Google Fonts Website Gets a New Fresh Material Design Look","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Google Fonts Website Gets a New Fresh Material Design Look' data-link='http:\/\/stacktips.com\/news\/google-fonts-website-gets-a-new-fresh-material-design-look' data-summary='Now Google fonts website interface is refreshed with the fresh new material deign look. With the new design, it makes it easy to search a Typography and choose the right typeface of your choice.'><\/div>\n<p><span class=\"mks_dropcap_letter\">S<\/span>ince its first release on 2010, Google fonts has been the first choice for web developers. It offers collections of free web fonts (under Apache License and SIL Open Font License) to use on personal and commercial projects.<\/p>\n<p>Now Google fonts website interface is refreshed with the fresh new material design look. With the new design, it makes it easy to search a Typography, choose the right typeface of your choice\u00a0or to preview typeface before using on your project.\u00a0The old list view layout is now revamped to grid layout.<\/p>\n<p>Typecast is integrated to the grid layout for better preview purpose. You can now resize, change font weight, size and style right there in the grid. The color fill option in the title allows to change the background color to preview typeface in different contrast background.<\/p>\n<p>Some of the beautiful font inspirations are curated in Featured section. As usual, you can click on plus button(+) to select and download the fonts to desktop or embed the web fonts into your own website.<img class=\"aligncenter wp-image-10564\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design.png\" alt=\"Google Web Fonts- Material Design\" width=\"601\" height=\"575\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design.png 601w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design-300x287.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design-300x287@2x.png 600w\" sizes=\"(max-width: 601px) 100vw, 601px\" \/><\/p>\n<p>Visit <strong><a href=\"https:\/\/fonts.google.com\/\" target=\"_blank\">Google Fonts<\/a><\/strong>.<\/p>\n<p>&nbsp;<\/p>\n","excerpt":"<p>Now Google fonts website interface is refreshed with the fresh new material deign look. With the new design, it makes it easy to search a Typography and choose the right typeface of your choice.<\/p>\n","date":"2016-06-15 21:52:27","modified":"2016-06-15 22:04:50","categories":[{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[{"id":310,"slug":"google","title":"Google","description":"","post_count":1},{"id":311,"slug":"web-fonts","title":"Web Fonts","description":"","post_count":1}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":10563,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design.png","slug":"google-fonts-website-material-design","title":"Google Fonts Website- Material Design","description":"Google Fonts Website- Material Design","caption":"","parent":10560,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design.png","width":1406,"height":786},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-292x194.png","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-620x347.png","width":620,"height":347},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design.png","width":1406,"height":786},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-300x168.png","width":300,"height":168},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-810x453.png","width":810,"height":453},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-1140x637.png","width":1140,"height":637},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-375x195.png","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-145x100.png","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-1406x500.png","width":1406,"height":500},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-380x260.png","width":380,"height":260}}},{"id":10564,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design.png","slug":"google-web-fonts-material-design","title":"Google Web Fonts- Material Design","description":"","caption":"","parent":10560,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design.png","width":601,"height":575},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design-292x194.png","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design.png","width":601,"height":575},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design.png","width":601,"height":575},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design.png","width":601,"height":575},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design-300x287.png","width":300,"height":287},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design.png","width":601,"height":575},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design.png","width":601,"height":575},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design-375x195.png","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design-145x100.png","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design-601x500.png","width":601,"height":500},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Web-Fonts-Material-Design-380x260.png","width":380,"height":260}}}],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-292x194.png","custom_fields":{"snap_isAutoPosted":["1"],"dsq_thread_id":["4912720454"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:279:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"736424361\";s:5:\"pDate\";s:19:\"2016-06-15 16:22:52\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"743116497678016513\";s:5:\"pDate\";s:19:\"2016-06-15 16:22:54\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design.png","width":1406,"height":786},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-292x194.png","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-620x347.png","width":620,"height":347},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design.png","width":1406,"height":786},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-300x168.png","width":300,"height":168},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-810x453.png","width":810,"height":453},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-1140x637.png","width":1140,"height":637},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-375x195.png","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-145x100.png","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-1406x500.png","width":1406,"height":500},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Google-Fonts-Website-Material-Design-380x260.png","width":380,"height":260}}},{"id":10528,"type":"post","slug":"how-to-enable-deep-links-for-app-content-in-android","url":"http:\/\/stacktips.com\/tutorials\/android\/how-to-enable-deep-links-for-app-content-in-android","status":"publish","title":"How to Enable Deep Links for App Content in Android","title_plain":"How to Enable Deep Links for App Content in Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Enable Deep Links for App Content in Android' data-link='http:\/\/stacktips.com\/tutorials\/android\/how-to-enable-deep-links-for-app-content-in-android' data-summary='Enable deep links for App content in Android, you need to fist add intent filters for the relevant activities in your application manifest. The intent filters allow deep linking to the content in any of your activities.'><\/div>\n<p>Enable deep links for App content in Android, you need to fist add intent filters for the relevant activities in your application manifest. The intent filters allow deep linking to the content in any of your activities.<\/p>\n<h3>Add Intent Filters for Links<\/h3>\n<p>For example, a user clicks on a website link <code>http:\/\/stacktips.com<\/code> on browser, that will resolve the link and open the content in installed activity.<\/p>\n<pre class=\"prettyprint lang-java\">&lt;activity\r\n    android:name=\"com.example.MainActivity\"\r\n    android:label=\"@string\/my_app\" &gt;\r\n    &lt;intent-filter android:label=\"@string\/my_app\"&gt;\r\n\t\r\n        &lt;action android:name=\"android.intent.action.VIEW\" \/&gt;\r\n        &lt;category android:name=\"android.intent.category.DEFAULT\" \/&gt;\r\n        &lt;category android:name=\"android.intent.category.BROWSABLE\" \/&gt;\r\n\t\t\r\n        &lt;!-- Accepts URIs that begin with \"http:\/\/stacktips.com\/tutorials\u201d --&gt;\r\n        &lt;data android:scheme=\"http\" android:host=\"stacktips.com\" android:pathPrefix=\"\/tutorials\" \/&gt;        \r\n    &lt;\/intent-filter&gt;\r\n&lt;\/activity&gt;\r\n<\/pre>\n<p>Once the above intent filters are added, Android will be able to route any Intent that has matching URIs to your app at runtime.<\/p>\n<h3>Read Data from Incoming Intents<\/h3>\n<p>Once Android system starts the routed activity through an intent filter. You can get the data bundle from Intent to determine what you which activity or fragment to render. Call the <code>getData()<\/code> and <code>getAction()<\/code> methods to retrieve the data and action associated with the incoming Intent. You can call these methods at any time during the lifecycle of the activity, but you should generally do so during early callbacks such as <code>onCreate()<\/code> or <code>onStart()<\/code>.<\/p>\n<p>The following code snippet shows how to retrieve data from an Intent<\/p>\n<pre class=\"prettyprint lang-java\">@Override\r\npublic void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    setContentView(R.layout.main);\r\n\r\n    Intent intent = getIntent();\r\n    String action = intent.getAction();\r\n    Uri data = intent.getData();\r\n}\r\n<\/pre>\n<h3>Test Your Deep Links<\/h3>\n<p>You can use the Android Debug Bridge with the activity manager tool to test that the intent filter URIs you specified for deep linking resolve to the correct app activity. You can run the adb command against a device or an emulator.<\/p>\n<p>The following command tries to view a target app activity that is associated with the specified URI.<\/p>\n<pre class=\"prettyprint lang-java\">$ adb shell am start -W -a android.intent.action.VIEW -d http:\/\/stacktips.com\/tutorials\/android com.example\r\n<\/pre>\n","excerpt":"<p>Enable deep links for App content in Android, you need to fist add intent filters for the relevant activities in your application manifest. The intent filters allow deep linking to the content in any of your activities.<\/p>\n","date":"2016-06-14 01:28:48","modified":"2016-06-14 01:28:48","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8542,"name":"lokesh goyal","url":"","date":"2016-06-17 15:39:00","content":"<p>Sir thanx for that..<br \/>\nCan you call particular activity of a application having deep linking with other application<\/p>\n","parent":0},{"id":8543,"name":"Stack Tips","url":"http:\/\/stacktips.com\/","date":"2016-06-17 17:29:00","content":"<p>Sure you can. It will open the activity specified in <code> android:name=\"com.example.MainActivity\"<\/code>,<\/p>\n","parent":8542}],"attachments":[],"comment_count":2,"comment_status":"open","thumbnail":null,"custom_fields":{"slide_template":["default"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:279:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"742446202591936512\";s:5:\"pDate\";s:19:\"2016-06-13 19:59:20\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"735656108\";s:5:\"pDate\";s:19:\"2016-06-13 19:59:22\";}}\";"],"dsq_thread_id":["4907771184"],"snapTR":["s:198:\"a:1:{i:0;a:5:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:146073252007;s:7:\"postURL\";s:45:\"http:\/\/stacktips.tumblr.com\/post\/146073252007\";s:5:\"pDate\";s:19:\"2016-06-17 19:33:33\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":10494,"type":"post","slug":"bootstrap-jumbotron-example","url":"http:\/\/stacktips.com\/tutorials\/bootstrap\/bootstrap-jumbotron-example","status":"publish","title":"Bootstrap Jumbotron Example","title_plain":"Bootstrap Jumbotron Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Bootstrap Jumbotron Example' data-link='http:\/\/stacktips.com\/tutorials\/bootstrap\/bootstrap-jumbotron-example' data-summary='Jumbotron optionally captures the whole viewport and renders the contents inside. A jumbotron is displayed as a grey box with rounded corners.'><\/div>\n<p>Jumbotron optionally captures the whole viewport and renders the contents inside. A jumbotron is displayed as a grey box with rounded corners. It also enlarges the font sizes of the text inside it.<\/p>\n<p>Inside a jumbotron you can put nearly any valid HTML, including other Bootstrap elements\/classes.\u00a0Place the jumbotron inside the\u00a0<code>&lt;div class=\"container\"&gt;<\/code>\u00a0if you want the jumbotron to NOT extend to the edge of the screen.<\/p>\n<p>Jumbotron example,<\/p>\n<pre class=\"prettyprint lang-html\">&lt;!DOCTYPE html&gt; \r\n&lt;html lang=\"en\"&gt;  \r\n&lt;head&gt;    \r\n&lt;title&gt;My first Bootstrap page &lt;\/title&gt;    \r\n&lt;meta name=\"viewport\" content=\"width=device-width, initialscale=1\"&gt;    \r\n&lt;link href=\"CSS\/bootstrap.min.css\" rel=\"stylesheet\"&gt;   \r\n&lt;link href=\"CSS\/bootstrap-theme.min.css\" rel=\"stylesheet\"&gt;    \r\n&lt;script src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/2.2.2\/jquery.min.js\"&gt;&lt;\/script&gt;\r\n&lt;script type=\"text\/javascript\" src=\"JS\/bootstrap.min.js\"&gt;&lt;\/script&gt; \r\n &lt;\/head&gt; \r\n &lt;body&gt;\r\n&lt;div class=\"container\" style=\"margin:50px;\"&gt;\r\n\t&lt;div class=\"container\"&gt;\r\n\t  &lt;div class=\"jumbotron\" style=\"background:#ebeff2\"&gt;\r\n\t    &lt;h1 style=\"font-size:130px;\"&gt;400!&lt;\/h1&gt;      \r\n\t\t&lt;h2&gt;Sorry but the page that you looking for does not exist..&lt;\/h2&gt;\r\n\t    &lt;a href=\"\/index.html\" class=\"btn btn-warning btn-lg\"&gt;Go to Home Page&lt;\/a&gt;  \r\n\t  &lt;\/div&gt;\r\n\t&lt;\/div&gt;\r\n&lt;\/body&gt;\r\n&lt;\/html&gt;\r\n<\/pre>\n<p>Output,<br \/>\n<img class=\"alignnone size-full wp-image-10495\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example.png\" alt=\"Bootstrap Jumbotron Example\" width=\"956\" height=\"386\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example.png 956w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example-620x250.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example-940x380.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example-810x327.png 810w\" sizes=\"(max-width: 956px) 100vw, 956px\" \/><\/p>\n","excerpt":"<p>Jumbotron optionally captures the whole viewport and renders the contents inside. A jumbotron is displayed as a grey box with rounded corners.<\/p>\n","date":"2016-06-13 20:17:45","modified":"2016-06-13 20:21:52","categories":[{"id":281,"slug":"bootstrap","title":"Bootstrap","description":"","parent":297,"post_count":12}],"tags":[],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":10495,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example.png","slug":"bootstrap-jumbotron-example","title":"Bootstrap Jumbotron Example","description":"Bootstrap Jumbotron Example","caption":"","parent":10494,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example.png","width":956,"height":386},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example-292x194.png","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example-620x250.png","width":620,"height":250},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example.png","width":956,"height":386},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example-810x327.png","width":810,"height":327},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example.png","width":956,"height":386},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example-375x195.png","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example-145x100.png","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example.png","width":956,"height":386},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Jumbotron-Example-380x260.png","width":380,"height":260}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"slide_template":["default"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:279:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"735545911\";s:5:\"pDate\";s:19:\"2016-06-13 14:48:13\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"742367900804075520\";s:5:\"pDate\";s:19:\"2016-06-13 14:48:12\";}}\";"],"dsq_thread_id":["4907029152"],"snapBG":["s:142:\"a:1:{i:0;a:4:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"795034717796251301\";s:5:\"pDate\";s:19:\"2016-06-17 15:35:45\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400}}},{"id":10480,"type":"post","slug":"bootstrap-warning-info-success-and-error-alerts-example","url":"http:\/\/stacktips.com\/tutorials\/bootstrap\/bootstrap-warning-info-success-and-error-alerts-example","status":"publish","title":"Bootstrap Warning, Info, Success and Error Alerts Example","title_plain":"Bootstrap Warning, Info, Success and Error Alerts Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Bootstrap Warning, Info, Success and Error Alerts Example' data-link='http:\/\/stacktips.com\/tutorials\/bootstrap\/bootstrap-warning-info-success-and-error-alerts-example' data-summary='Alerts are used to for information purpose. Bootstrap supports following different styles of contextual alert classes, Alert-info, Alert-success, Alert-danger, Alert-warning'><\/div>\n<p>Alerts are used to for\u00a0information purpose. Bootstrap supports following different styles of\u00a0contextual alert classes,<\/p>\n<ul>\n<li>Alert-info<\/li>\n<li>Alert-success<\/li>\n<li>Alert-danger<\/li>\n<li>Alert-warning<\/li>\n<\/ul>\n<p>Example,<br \/>\n<img class=\"alignnone wp-image-10482 size-full\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example-e1465825994884.png\" alt=\"Bootstrap Alerts Example\" width=\"740\" height=\"299\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example-e1465825994884.png 740w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example-e1465825994884-620x251.png 620w\" sizes=\"(max-width: 740px) 100vw, 740px\" \/><\/p>\n<pre class=\"prettyprint lang-html\">&lt;!DOCTYPE html&gt; \r\n&lt;html lang=\"en\"&gt;  \r\n&lt;head&gt;    \r\n&lt;title&gt;My first Bootstrap page &lt;\/title&gt;    \r\n&lt;meta name=\"viewport\" content=\"width=device-width, initialscale=1\"&gt;    \r\n&lt;link href=\"CSS\/bootstrap.min.css\" rel=\"stylesheet\"&gt;   \r\n&lt;link href=\"CSS\/bootstrap-theme.min.css\" rel=\"stylesheet\"&gt;    \r\n&lt;script type=\"text\/javascript\" src=\"JS\/bootstrap.min.js\"&gt;&lt;\/script&gt; \r\n &lt;\/head&gt; \r\n &lt;body&gt;\r\n&lt;div class=\"container\"&gt;\r\n\t&lt;div class=\"container\"&gt;\r\n\t &lt;h2&gt;Alerts&lt;\/h2&gt;\r\n\t &lt;div class=\"alert alert-success\"&gt;\r\n\t    &lt;strong&gt;Success!&lt;\/strong&gt; This alert box indicates a successful action.\r\n\t  &lt;\/div&gt;\r\n\t  &lt;div class=\"alert alert-info\"&gt;\r\n\t    &lt;strong&gt;Info!&lt;\/strong&gt; This alert box indicates a neutral informative change or action.\r\n\t  &lt;\/div&gt;\r\n\t  &lt;div class=\"alert alert-warning\"&gt;\r\n\t    &lt;strong&gt;Warning!&lt;\/strong&gt; This alert box indicates a warning that might need attention.\r\n\t  &lt;\/div&gt;\r\n\t  &lt;div class=\"alert alert-danger\"&gt;\r\n\t    &lt;strong&gt;Danger!&lt;\/strong&gt; This alert box indicates a dangerous action.\r\n\t  &lt;\/div&gt;\r\n\t &lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/body&gt;\r\n&lt;\/html&gt;\r\n<\/pre>\n<h3><\/h3>\n<h3>Dismissible alerts<\/h3>\n<p>Any alert can be made dismissible by adding an optional <code>.alert-dismissible<\/code> class and close button.\u00a0For dismissible alert to work you need to include the jQuery and bootstrap JavaScript plugin.\u00a0Include the\u00a0following javascript\u00a0inside <code>&lt;head&gt;<\/code> .. <code>&lt;\/head&gt;<\/code> tag.<\/p>\n<pre class=\"prettyprint lang-html\">&lt;script src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/2.2.2\/jquery.min.js\"&gt;&lt;\/script&gt;\r\n&lt;script type=\"text\/javascript\" src=\"JS\/bootstrap.min.js\"&gt;&lt;\/script&gt;\r\n<\/pre>\n<p>Now to create dismissible alert,<\/p>\n<pre class=\"prettyprint lang-html\">&lt;div class=\"alert alert-warning alert-dismissible\" &gt;\r\n     &lt;button type=\"button\" class=\"close\" data-dismiss = \"alert\" aria-label=\"Close\"&gt;\r\n     &lt;span &gt;&amp;times;&lt;\/span&gt;&lt;\/button&gt; \r\n     &lt;strong&gt;Warning!&lt;\/strong&gt; This alert box indicates a warning that might need attention.\r\n&lt;\/div&gt;\r\n<\/pre>\n<p><img class=\"alignnone wp-image-10487 size-full\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example-e1465827048208.png\" alt=\"Bootstrap Dismissible Alerts Example\" width=\"733\" height=\"73\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example-e1465827048208.png 733w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example-e1465827048208-620x62.png 620w\" sizes=\"(max-width: 733px) 100vw, 733px\" \/><\/p>\n<h3>Animated Alerts<\/h3>\n<p>The .fade and .in classes add a fading effect while closing the alert message.<\/p>\n<pre class=\"prettyprint lang-html\">&lt;div class=\"alert alert-success fade in\"&gt;\r\n     &lt;a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria- label=\"close\"&gt;&amp;times;&lt;\/a&gt;\r\n     &lt;strong&gt;Success!&lt;\/strong&gt; This alert box indicates a successful action.\r\n&lt;\/div&gt;\r\n<\/pre>\n<h3>Links in alerts<\/h3>\n<p>Use the <code>.alert-link<\/code> utility class to provide matching colored links within any alert.<\/p>\n<pre class=\"prettyprint lang-html\">&lt;div class=\"alert alert-warning\" &gt;\r\n    &lt;strong&gt; Warning!&lt;\/strong&gt; This alert box indicates a warning that might need attention.\r\n    &lt;a href=\"#\" class=\"alert-link\"&gt;Click here&lt;\/a&gt;\r\n&lt;\/div&gt;\r\n<\/pre>\n","excerpt":"<p>Alerts are used to for information purpose. Bootstrap supports following different styles of contextual alert classes, Alert-info, Alert-success, Alert-danger, Alert-warning<\/p>\n","date":"2016-06-13 19:48:45","modified":"2016-06-13 19:48:45","categories":[{"id":281,"slug":"bootstrap","title":"Bootstrap","description":"","parent":297,"post_count":12}],"tags":[],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":10482,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example.png","slug":"bootstrap-alerts-example","title":"Bootstrap Alerts Example","description":"","caption":"","parent":10480,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example-e1465825994884.png","width":740,"height":299},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example-e1465825994884-292x194.png","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example-e1465825994884-620x251.png","width":620,"height":251},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example-e1465825994884.png","width":740,"height":299},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example-e1465825994884.png","width":740,"height":299},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example-e1465825994884.png","width":740,"height":299},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example-e1465825994884.png","width":740,"height":299},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example-e1465825994884-375x195.png","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example-e1465825994884-145x100.png","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example-e1465825994884.png","width":740,"height":299},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Alerts-Example-e1465825994884-380x260.png","width":380,"height":260}}},{"id":10487,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example.png","slug":"bootstrap-dismissible-alerts-example","title":"Bootstrap Dismissible Alerts Example","description":"","caption":"","parent":10480,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example-e1465827048208.png","width":733,"height":73},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example-e1465827048208-292x73.png","width":292,"height":73},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example-e1465827048208-620x62.png","width":620,"height":62},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example-e1465827048208.png","width":733,"height":73},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example-e1465827048208.png","width":733,"height":73},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example-e1465827048208.png","width":733,"height":73},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example-e1465827048208.png","width":733,"height":73},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example-e1465827048208-375x73.png","width":375,"height":73},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example-e1465827048208-145x73.png","width":145,"height":73},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example-e1465827048208.png","width":733,"height":73},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Dismissible-Alerts-Example-e1465827048208-380x73.png","width":380,"height":73}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"slide_template":["default"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:279:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"735536155\";s:5:\"pDate\";s:19:\"2016-06-13 14:19:09\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"742360597648445441\";s:5:\"pDate\";s:19:\"2016-06-13 14:19:10\";}}\";"],"dsq_thread_id":["4906995787"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400}}},{"id":10464,"type":"post","slug":"bootstrap-css-responsive-utility-classes","url":"http:\/\/stacktips.com\/tutorials\/bootstrap\/bootstrap-css-responsive-utility-classes","status":"publish","title":"Bootstrap CSS Responsive Utility Classes","title_plain":"Bootstrap CSS Responsive Utility Classes","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Bootstrap CSS Responsive Utility Classes' data-link='http:\/\/stacktips.com\/tutorials\/bootstrap\/bootstrap-css-responsive-utility-classes' data-summary=''><\/div>\n<p>Bootstrap provides a number of utility classes that are designed to reduce the effort of repetitive declarations in CSS and allow quick and easy development.<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#spacing\">Spacing<\/a><\/li><li><a href=\"#text-alignment\">Text alignment<\/a><\/li><li><a href=\"#close-icon\">Close icon<\/a><\/li><li><a href=\"#screen-readers\">Screen readers<\/a><\/li><li><a href=\"#image-replacement\">Image replacement<\/a><\/li><li><a href=\"#responsive-table\">Responsive table<\/a><\/li><li><a href=\"#responsive-embeds\">Responsive embeds<\/a><\/li><\/ul><\/div>\n<\/p>\n<h3><span id=\"spacing\">Spacing<\/span><\/h3>\n<p><code>margin<\/code> or <code>padding<\/code> are assigned to an element or a subset of it\u2019s sides with shorthand classes. Includes supports for individual properties, all properties, vertical and horizontal properties.<\/p>\n<h3><span id=\"text-alignment\">Text alignment<\/span><\/h3>\n<p>You can easily realign the text to components with text alignment classes.<br \/>\nFor example,<\/p>\n<pre class=\"prettyprint lang-html\">&lt;p class=\"text-left\"&gt; Provide your text here to see the left alignment. &lt;\/p&gt;\r\n&lt;p class=\"text-center\"&gt; Provide your text here to see the centre alignment. &lt;\/p&gt;\r\n&lt;p class=\"text-right\"&gt; Provide your text here to see the right alignment. &lt;\/p&gt;\r\n<\/pre>\n<p>Text Transform: Transform text in components with text capitalization classes such as<br \/>\n<code>text-lowercase<\/code>, <code>text-uppercase<\/code> and <code>text-capitalize<\/code>.<\/p>\n<p>For Example<\/p>\n<pre class=\"prettyprint lang-html\">&lt;p class=\"text-lowercase\"&gt;text in lowercase. &lt;\/p&gt;\r\n&lt;p class=\"text-uppercase\"&gt;text in uppercased. &lt;\/p&gt;\r\n&lt;p class=\"text-capitalize\"&gt;text in capitalized. &lt;\/p&gt;\r\n<\/pre>\n<p>Contextual colors and backgrounds: Bootstrap provides many different color classes for foreground such as, <code>.text-primary<\/code>, <code>.text-danger<\/code>, <code>.text-warning<\/code>, <code>.text-info<\/code> , <code>.text-success<\/code> and <code>text-muted<\/code>. These can also be applied to links and will darken on hover just like our default link styles.<\/p>\n<p>For Example,<\/p>\n<pre class=\"prettyprint lang-html\">&lt;p class=\"text-warning\"&gt; this text shown as a warning text. &lt;\/p&gt;\r\n&lt;p class=\"text-danger\"&gt; this test shown as a danger text. &lt;\/p&gt;\r\n<\/pre>\n<p>Similarly for background you have .bg-primary, .bg-danger, .bg-warning, .bg-info and .bg-success.<\/p>\n<p>For example,<br \/>\n<code>&lt;div class=\"bg-warning\"&gt;<\/code>The background color reflects as warning. &lt;\/div&gt;<br \/>\n<code>&lt;div class=\"bg-danger\"&gt;<\/code>The background color reflects danger.&lt;\/div&gt;<\/p>\n<h3><span id=\"close-icon\">Close icon<\/span><\/h3>\n<p>Use a generic close icon for dismissing content like modals and alerts.\u00a0Be sure to include screen reader text when you can\u00a0as we\u2019ve done with\u00a0<code>.sr-only<\/code>.<\/p>\n<p>For Example,<\/p>\n<pre class=\"prettyprint lang-html\">&lt;button type=\"button\" class=\"close\" aria-label=\"Close\"&gt;\r\n  &lt;span aria-hidden=\"true\"&gt;&amp;times;&lt;\/span&gt;\r\n  &lt;span class=\"sr-only\"&gt;Close&lt;\/span&gt;\r\n&lt;\/button&gt;\r\n<\/pre>\n<p>Float: For horizontal alignment of content, available classes are <code>.pull-left<\/code> and <code>.pull-right<\/code>. Float an element to the left or right with a class !important is included to avoid specificity issues.<\/p>\n<p>For Example,<\/p>\n<pre class=\"prettyprint lang-html\">&lt;div class=\"pull-left\"&gt;Float left&lt;\/div&gt;\r\n&lt;div class=\"pull-right\"&gt;Float right&lt;\/div&gt;\r\n\r\n.pull-left {\r\n  float: left !important;\r\n}\r\n.pull-right {\r\n  float: right !important;\r\n}\r\n<\/pre>\n<p>Center content: Set an element to display: block; and center via margin.<\/p>\n<p>For example,<\/p>\n<pre class=\"prettyprint lang-html\">&lt;div class=\"center-block\"&gt;Centered block&lt;\/div&gt;\r\n\r\n\/\/ Class\r\n.center-block {\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n<\/pre>\n<p>Hidden Content: Hide any HTML element with the <code>[hidden]<\/code> attribute. <code>.hidden<\/code> class that forced toggled content.<br \/>\nFor example,<\/p>\n<pre class=\"prettyprint lang-html\">&lt;input type=\"text\" hidden&gt;\r\n<\/pre>\n<p>Furthermore,\u00a0<code>.invisible<\/code>\u00a0can be used to toggle the visibility of an element, meaning its\u00a0display\u00a0is not modified and the element can still affect the flow of the document.<br \/>\nFor example,<\/p>\n<pre class=\"prettyprint lang-html\">&lt;div class=\"invisible\"&gt;...&lt;\/div&gt;\r\n\r\n\/\/ Class\r\n.invisible {\r\n  visibility: hidden;\r\n}\r\n<\/pre>\n<h3><span id=\"screen-readers\">Screen readers<\/span><\/h3>\n<p>Hide an element to all devices other than screen reader with <code>.sr-only<\/code>. Combine <code>.sr-only<\/code> with <code>.sr-only-focusable<\/code> to show the element again when it is focused.<\/p>\n<h3><span id=\"image-replacement\">Image replacement<\/span><\/h3>\n<p>Utilize the\u00a0.text-hide\u00a0class to help replace an element\u2019s text content with a background image.<\/p>\n<pre class=\"prettyprint lang-html\">&lt;h1 class=\"text-hide\"&gt;Hide this heading&lt;\/h1&gt;\r\n<\/pre>\n<h3><span id=\"responsive-table\">Responsive table<\/span><\/h3>\n<p>In order to create responsive tables, you should use the <code>.table-responsive<\/code> class. This class only affects the display on devices less than 768px, for larger devices there would be no effect. For creating tables, you would use a standard <code>&lt;table&gt;<\/code> tag; however, along with this we should also use .table class for the element.<\/p>\n<p>For rendering borders around the tables and cells, the class is <code>.table-bordered<\/code>; and for displaying alternate colored rows you should use <code>.table-striped<\/code> class. Similarly, for changing colors of the rows while mouse hovering, you would use the .table-hover class.<\/p>\n<h3><span id=\"responsive-embeds\">Responsive embeds<\/span><\/h3>\n<p>Allow browsers to determine video or slideshow dimensions based on the width of their containing block by creating an intrinsic ratio that will properly scale on any device. Rules are directly applied to\u00a0<code>&lt;iframe&gt;<\/code>,\u00a0<code>&lt;embed&gt;<\/code>,\u00a0<code>&lt;video&gt;<\/code>, and\u00a0<code>&lt;object&gt;<\/code>\u00a0elements; optionally use an explicit descendant class\u00a0<code>.embed-responsive-item<\/code>\u00a0when you want to match the styling for other attributes.<br \/>\nFor Example,<\/p>\n<pre class=\"prettyprint lang-html\">&lt;!-- 21:9 aspect ratio --&gt;\r\n&lt;div class=\"embed-responsive embed-responsive-21by9\"&gt;\r\n  &lt;iframe class=\"embed-responsive-item\" src=\"...\"&gt;&lt;\/iframe&gt;\r\n&lt;\/div&gt;\r\n<\/pre>\n<p>Aspect ratios can be customised with modifier classes.<\/p>\n","excerpt":"<p>Bootstrap provides a number of utility classes that are designed to reduce the effort of repetitive declarations in CSS and allow quick and easy development. Spacing margin or padding are assigned to an element or a subset of it\u2019s sides with shorthand classes. Includes supports for individual properties, all properties, vertical and horizontal properties. Text [&hellip;]<\/p>\n","date":"2016-06-13 16:23:33","modified":"2016-06-13 19:49:42","categories":[{"id":281,"slug":"bootstrap","title":"Bootstrap","description":"","parent":297,"post_count":12}],"tags":[],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"slide_template":["default"],"dsq_thread_id":["4906798963"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:279:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"735536586\";s:5:\"pDate\";s:19:\"2016-06-13 14:20:15\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"742360877907611648\";s:5:\"pDate\";s:19:\"2016-06-13 14:20:17\";}}\";"],"snapBG":["s:143:\"a:1:{i:0;a:4:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:19:\"5511617793010497056\";s:5:\"pDate\";s:19:\"2016-06-17 16:34:12\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400}}},{"id":10452,"type":"post","slug":"vertical-horizontal-and-inline-form-example-in-bootstrap","url":"http:\/\/stacktips.com\/tutorials\/bootstrap\/vertical-horizontal-and-inline-form-example-in-bootstrap","status":"publish","title":"Vertical, Horizontal and Inline Form Example in Bootstrap","title_plain":"Vertical, Horizontal and Inline Form Example in Bootstrap","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Vertical, Horizontal and Inline Form Example in Bootstrap' data-link='http:\/\/stacktips.com\/tutorials\/bootstrap\/vertical-horizontal-and-inline-form-example-in-bootstrap' data-summary='Forms are the essential part of any web page or web application. Styling the basic HTML form controls with CSS are often tedious.'><\/div>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-bootstrap-form-layouts\">1. Bootstrap Form Layouts<\/a><\/li><li><a href=\"#2-bootstrap-vertical-form-layout\">2. Bootstrap Vertical Form Layout<\/a><\/li><li><a href=\"#3-bootstrap-horizontal-form-layout\">3. Bootstrap Horizontal Form Layout<\/a><\/li><li><a href=\"#4-bootstrap-inline-form-layout\">4. Bootstrap Inline Form Layout<\/a><\/li><\/ul><\/div>\n<\/p>\n<h3><span id=\"1-bootstrap-form-layouts\">1. Bootstrap Form Layouts<\/span><\/h3>\n<p>Forms are the essential part of any web page or web application. Styling the basic HTML form controls with CSS are often tedious. Bootstrap simplifies this by providing set of predefined classes. Bootstrap provides three types of form layouts:<\/p>\n<ol>\n<li>Vertical form layout (default layout)<\/li>\n<li>Horizontal form layout<\/li>\n<li>Inline form layout<\/li>\n<\/ol>\n<p>Bootstrap form controls automatically gets\u00a0some global styling like,\u00a0all textual <code>&lt;input&gt;<\/code>, <code>&lt;textarea&gt;<\/code> and <code>&lt;select&gt;<\/code> elements with class <code>.form-control<\/code> have a width of 100%.\u00a0Basic rules for form layouts are as follows;<\/p>\n<ul>\n<li>Always use <code>&lt;form role=\"form\"&gt;<\/code>, helps improve accessibility for people using screen readers<\/li>\n<li>For optimum spacing wrap labels and form controls in <code>&lt;div class=\"form-group\"&gt;<\/code><\/li>\n<li>Add class .form-control to all textual <code>&lt;input&gt;,&lt;textarea&gt;<\/code> and <code>&lt;select&gt;<\/code> elements<\/li>\n<\/ul>\n<p>Let\u2019s dive in details to each form layout examples.<\/p>\n<h3><span id=\"2-bootstrap-vertical-form-layout\">2. Bootstrap Vertical Form Layout<\/span><\/h3>\n<p>This is the default Bootstrap form layout in which the fields are aligned vertically to its parent.\u00a0Let us create a simple log-in registration form\u00a0using vertical form layout.<\/p>\n<pre class=\"prettyprint lang-html\">&lt;!DOCTYPE html&gt; \r\n&lt;html lang=\"en\"&gt;  \r\n&lt;head&gt;    \r\n&lt;title&gt;My first Bootstrap page &lt;\/title&gt;    \r\n&lt;meta name=\"viewport\" content=\"width=device-width, initialscale=1\"&gt;    \r\n&lt;link href=\"CSS\/bootstrap.min.css\" rel=\"stylesheet\"&gt;   \r\n&lt;link href=\"CSS\/bootstrap-theme.min.css\" rel=\"stylesheet\"&gt;    \r\n&lt;script type=\"text\/javascript\" src=\"JS\/bootstrap.min.js\"&gt;&lt;\/script&gt; \r\n &lt;\/head&gt; \r\n &lt;body&gt;\r\n&lt;div class=\"container\" style=\"max-width:600px;margin:60px auto;\"&gt;\r\n\t&lt;form role=\"form\"&gt;\r\n\t   &lt;div class=\"form-group\"&gt;\r\n\t      &lt;label for=\"name\"&gt;First name&lt;\/label&gt;\r\n\t      &lt;input type=\"name\" class=\"form-control\" id=\"fname\" placeholder=\"Enter name\"&gt;\r\n\t   &lt;\/div&gt;\r\n\t   &lt;div class=\"form-group\"&gt;\r\n\t      &lt;label for=\"address\"&gt;Second name&lt;\/label&gt;\r\n\t      &lt;input type=\"address\" class=\"form-control\" id=\"sname\" placeholder=\"Enter surname\"&gt;\r\n\t   &lt;\/div&gt;\r\n\t   &lt;div class=\"form-group\"&gt;\r\n\t      &lt;label for=\"email\"&gt;Email&lt;\/label&gt;\r\n\t      &lt;input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\"&gt;\r\n\t   &lt;\/div&gt;\r\n\t   &lt;div class=\"form-group\"&gt;\r\n\t      &lt;label for=\"pwd\"&gt;Password&lt;\/label&gt;\r\n\t      &lt;input type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\"&gt;\r\n\t   &lt;\/div&gt;\r\n\t     &lt;button type=\"submit\" class=\"btn btn-default\"&gt;Register&lt;\/button&gt;\r\n\t&lt;\/form&gt;\r\n&lt;\/div&gt;\r\n&lt;\/body&gt;\r\n&lt;\/html&gt;\r\n<\/pre>\n<p>Here the output for the above code,<br \/>\n<img class=\"aligncenter wp-image-10456 size-full\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Vertical-Form-Layout-Example.png\" alt=\"Bootstrap Vertical Form Layout Example\" width=\"595\" height=\"429\" \/><\/p>\n<h3><span id=\"3-bootstrap-horizontal-form-layout\">3. Bootstrap Horizontal Form Layout<\/span><\/h3>\n<p>A horizontal form is different from the Vertical forms layout both in the amount of mark-up, and in the presentation of the form. In this form layout labels are floated to left of the input field. Both Label and Input field appear on the same line. Rules for a horizontal form in addition to the default rules,<\/p>\n<p>All you have to do is to add <code>.form-horizontal<\/code> class to the <code>&lt;form&gt;<\/code>\u00a0element and <code>.control-label<\/code> class to all <code>&lt;label&gt;<\/code> element. Use Bootstrap\u2019s predefined grid classes to align labels and form controls.<\/p>\n<pre class=\"prettyprint lang-html\">&lt;div class=\"container\" style=\"max-width:600px;padding:40px 20px;background:#ebeff2\"&gt;\r\n\t&lt;h3&gt;Signup&lt;\/h3&gt;\r\n\t&lt;form class=\"form-horizontal\" role=\"form\"&gt;\r\n\t   &lt;div class=\"form-group\"&gt;\r\n\t      &lt;label for=\"name\" class =\"control-label col-sm-3\"&gt;First name&lt;\/label&gt;\r\n\t\t&lt;div class=\"col-sm-8\"&gt;\r\n\t      &lt;input type=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Enter name\"&gt;\r\n\t\t&lt;\/div&gt;\r\n\t    &lt;\/div&gt;\r\n\t   &lt;div class=\"form-group\"&gt;\r\n\t      &lt;label for=\"address\" class =\"control-label col-sm-3\"&gt;Second name&lt;\/label&gt;\r\n\t\t&lt;div class=\"col-sm-8\"&gt;\r\n\t      &lt;input type=\"address\" class=\"form-control\" id=\"address\" placeholder=\"Enter address\"&gt;\r\n\t\t&lt;\/div&gt;\r\n\t    &lt;\/div&gt;\r\n\t   &lt;div class=\"form-group\"&gt;\r\n\t      &lt;label for=\"email\" class =\"control-label col-sm-3\"&gt;Email&lt;\/label&gt;\r\n\t\t&lt;div class=\"col-sm-8\"&gt;\r\n\t      &lt;input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\"&gt;\r\n\t\t&lt;\/div&gt;\r\n\t    &lt;\/div&gt;\r\n\t   &lt;div class=\"form-group\"&gt;\r\n\t      &lt;label for=\"pwd\" class =\"control-label col-sm-3\"&gt;Password&lt;\/label&gt;\r\n\t\t&lt;div class=\"col-sm-8\"&gt;\r\n\t      &lt;input type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\"&gt;\r\n\t\t&lt;\/div&gt;\r\n\t    &lt;\/div&gt;\r\n\t   &lt;div class=\"col-sm-offset-2 col-sm-8\"&gt;\r\n\t     &lt;button type=\"submit\" class=\"btn btn-default\"&gt;Register&lt;\/button&gt;\r\n\t   &lt;\/div&gt;\r\n\t&lt;\/form&gt;\r\n&lt;\/div&gt;\r\n<\/pre>\n<p>Here the output for the above code,<br \/>\n<img class=\"alignnone wp-image-10458 size-full\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Horizontal-Form-Layout.png\" alt=\"Bootstrap Horizontal Form Layout\" width=\"598\" height=\"319\" \/><\/p>\n<h3><span id=\"4-bootstrap-inline-form-layout\">4. Bootstrap Inline Form Layout<\/span><\/h3>\n<p>Bootstrap\u2019s Inline form layout\u00a0can be used to\u00a0place the form controls side-by-side in a\u00a0compact layout. In an inline form, all of the elements are in-line, left-aligned, and the labels are alongside. For this, you need to add\u00a0.form-inline class\u00a0to &lt;form&gt; element.<\/p>\n<p>Inline bootstrap form\u00a0layout example;<\/p>\n<pre class=\"prettyprint lang-html\">&lt;form class=\"form-inline\" role=\"form\"&gt;\r\n   &lt;div class=\"form-group\"&gt;\r\n      &lt;label for=\"name\"&gt;Name&lt;\/label&gt;\r\n\t  &lt;input type=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Enter name\"&gt;\r\n   &lt;\/div&gt;\r\n   &lt;div class=\"form-group\"&gt;\r\n      &lt;label for=\"email\"&gt;Email&lt;\/label&gt;\r\n\t  &lt;input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\"&gt;\r\n &lt;\/div&gt;\r\n   &lt;div class=\"form-group\"&gt;\r\n      &lt;label for=\"pwd\"&gt;Password&lt;\/label&gt;\r\n\t  &lt;input type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\"&gt;\r\n   &lt;\/div&gt;\r\n   &lt;button type=\"submit\" class=\"btn btn-default\"&gt;Register&lt;\/button&gt;\r\n&lt;\/form&gt;\r\n<\/pre>\n<p>Here the output for the above code,<br \/>\n<img class=\"alignnone size-full wp-image-10459\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout.png\" alt=\"Bootstrap Inline Form Layout\" width=\"795\" height=\"166\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout.png 795w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout-620x129.png 620w\" sizes=\"(max-width: 795px) 100vw, 795px\" \/><\/p>\n<h4>Did you know?<\/h4>\n<ul>\n<li>The .form-group class is used to encapsulate multiple controls in a group \u2013 just as we have done for labels and corresponding text boxes.<\/li>\n<li>The .control-label and .form-control classes are used to style the labels and form elements respectively.<\/li>\n<li>Using the .input-group class you can associate multiple controls in adjacently.<\/li>\n<li>Disabled or read-only state can be used for the controls \u2013 Bootstrap will associate necessary styles automatically, however, all the controls must have .form-control class added.<\/li>\n<li>In order to control the sizes you can use .input-lg, .input-sm classes. For controlling the size of a group you can use .form-group-lg or .form-group-sm classes.<\/li>\n<li>In order to control the sizes you can use .input-lg, .input-sm classes. For controlling the size of a group you can use .form-group-lg or\u00a0 .form-group-sm classes<\/li>\n<li>For showing up any help texts, you can use .help-block class in a separate label. This will show the texts in a new line.<\/li>\n<\/ul>\n","excerpt":"<p>Forms are the essential part of any web page or web application. Styling the basic HTML form controls with CSS are often tedious.<\/p>\n","date":"2016-06-13 16:02:21","modified":"2016-06-13 16:03:46","categories":[{"id":281,"slug":"bootstrap","title":"Bootstrap","description":"","parent":297,"post_count":12}],"tags":[],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":10456,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Vertical-Form-Layout-Example.png","slug":"bootstrap-vertical-form-layout-example","title":"Bootstrap Vertical Form Layout Example","description":"","caption":"","parent":10452,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Vertical-Form-Layout-Example.png","width":595,"height":429},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Vertical-Form-Layout-Example-292x194.png","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Vertical-Form-Layout-Example.png","width":595,"height":429},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Vertical-Form-Layout-Example.png","width":595,"height":429},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Vertical-Form-Layout-Example.png","width":595,"height":429},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Vertical-Form-Layout-Example.png","width":595,"height":429},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Vertical-Form-Layout-Example.png","width":595,"height":429},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Vertical-Form-Layout-Example-375x195.png","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Vertical-Form-Layout-Example-145x100.png","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Vertical-Form-Layout-Example.png","width":595,"height":429},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Vertical-Form-Layout-Example-380x260.png","width":380,"height":260}}},{"id":10458,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Horizontal-Form-Layout.png","slug":"bootstrap-horizontal-form-layout","title":"Bootstrap Horizontal Form Layout","description":"","caption":"","parent":10452,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Horizontal-Form-Layout.png","width":598,"height":319},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Horizontal-Form-Layout-292x194.png","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Horizontal-Form-Layout.png","width":598,"height":319},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Horizontal-Form-Layout.png","width":598,"height":319},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Horizontal-Form-Layout.png","width":598,"height":319},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Horizontal-Form-Layout.png","width":598,"height":319},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Horizontal-Form-Layout.png","width":598,"height":319},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Horizontal-Form-Layout-375x195.png","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Horizontal-Form-Layout-145x100.png","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Horizontal-Form-Layout.png","width":598,"height":319},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Horizontal-Form-Layout-380x260.png","width":380,"height":260}}},{"id":10459,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout.png","slug":"bootstrap-inline-form-layout","title":"Bootstrap Inline Form Layout","description":"Bootstrap Inline Form Layout","caption":"","parent":10452,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout.png","width":795,"height":166},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout-292x166.png","width":292,"height":166},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout-620x129.png","width":620,"height":129},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout.png","width":795,"height":166},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout.png","width":795,"height":166},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout.png","width":795,"height":166},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout.png","width":795,"height":166},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout-375x166.png","width":375,"height":166},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout-145x100.png","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout.png","width":795,"height":166},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Bootstrap-Inline-Form-Layout-380x166.png","width":380,"height":166}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"slide_template":["default"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4906462702"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:279:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"735468492\";s:5:\"pDate\";s:19:\"2016-06-13 10:32:53\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"742303647032217600\";s:5:\"pDate\";s:19:\"2016-06-13 10:32:52\";}}\";"],"snapTR":["s:198:\"a:1:{i:0;a:5:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:146073353897;s:7:\"postURL\";s:45:\"http:\/\/stacktips.tumblr.com\/post\/146073353897\";s:5:\"pDate\";s:19:\"2016-06-17 19:36:21\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400}}},{"id":10419,"type":"post","slug":"integrate-facebook-instant-articles-to-your-wordpress-website","url":"http:\/\/stacktips.com\/how-to\/integrate-facebook-instant-articles-to-your-wordpress-website","status":"publish","title":"Integrate Facebook Instant Articles to Your WordPress Website","title_plain":"Integrate Facebook Instant Articles to Your WordPress Website","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Integrate Facebook Instant Articles to Your WordPress Website' data-link='http:\/\/stacktips.com\/how-to\/integrate-facebook-instant-articles-to-your-wordpress-website' data-summary='Facebook instant articles are shared 30% more as compared to traditional web pages. As it loads 10x times faster, it also drives more clicks. Initially for a limited period, Facebook released this feature for few allowed publishers. Now from April 2016 it open to all publishers.'><\/div>\n<p>Not so long ago Facebook announced the instant articles. Since then there has been a lot of hype around this feature and many websites already started adopting to it. With the instant articles features the web masters can now publish any type of article, from daily news to long form features. It can be integrated seamlessly with your current workflow and existing production tools.<\/p>\n<p>According to the recent study, Facebook instant articles are shared 30% more as compared to traditional web pages. As it loads 10x times faster, it also drives more clicks. Initially for a limited period, Facebook released this feature for few allowed publishers. Now from April 2016 it open to all publishers.<\/p>\n<h2>How Facebook Instant Articles Work?<\/h2>\n<p>The first thing you need for instant article to work on your Website is to have an Facebook Page. When a publisher shares an article onto Facebook, it will generate an instant article optimized version rather than a mobile web version. This can be managed from publisher Facebook page. Publishers can also get paid from the ad revenue generated by selling the ad space within Instance articles.<\/p>\n<p>To get started with Facebook instant articles, here are a few steps you need to follow:<\/p>\n<h3>1. Signup for Instant Articles program<\/h3>\n<p>First you need to signup for the program at <a href=\"https:\/\/instantarticles.fb.com\" target=\"_blank\">Instant Articles<\/a>. You will be asked to select your Facebook page for which you want to activate this service.<\/p>\n<p><img class=\"alignnone size-full wp-image-10423\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article.png\" alt=\"Signup for Facebook Instant Article\" width=\"925\" height=\"688\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article.png 925w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article-620x461.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article-810x602.png 810w\" sizes=\"(max-width: 925px) 100vw, 925px\" \/><\/p>\n<h3>2. Claim Your URL<\/h3>\n<p>Once you signed up, you will be redirected to your Facebook page. Now claim a URL that you would like to use for publishing articles. Before claim your website&#8217;s URL, add the following meta tag to your website&#8217;s &lt;head&gt; tag in the HTML and then click &#8220;Claim URL&#8221; button.<\/p>\n<pre>&lt;meta property=\"fb:pages\" content=\"22885084343345\" \/&gt;<\/pre>\n<p>If your claim is successful, you will notice as following.<\/p>\n<p><img class=\"alignnone size-full wp-image-10422\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL.png\" alt=\"Facebook Instant Articles- Claim your URL\" width=\"662\" height=\"418\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL.png 662w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL-620x391.png 620w\" sizes=\"(max-width: 662px) 100vw, 662px\" \/><\/p>\n<h3>3. Connect your RSS feed<\/h3>\n<p>You can synchronize your blog with Facebook instant articles via API or an RSS feed. Provide your RSS feed URL and save. Make sure your RSS feed is valid and error free.<\/p>\n<p><img class=\"alignnone size-full wp-image-10421\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS.png\" alt=\"Facebook Instant Articles- Submit RSS\" width=\"663\" height=\"238\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS.png 663w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS-620x223.png 620w\" sizes=\"(max-width: 663px) 100vw, 663px\" \/><\/p>\n<h2>Integrate Facebook Instant Articles to WordPress Blog<\/h2>\n<p>Facebook has partnered with different CMS vendors including WordPress, Drupal for helping publisher for seamless integration of their website to instant articles. If you&#8217;re a WordPress user, you can download and install the official\u00a0<a href=\"https:\/\/wordpress.org\/plugins\/fb-instant-articles\" target=\"_blank\">Instant Articles for WP<\/a> plugin for WordPress plugin directory. Once plugin is activated,<\/p>\n<p><img class=\"alignnone size-full wp-image-10420\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin.png\" alt=\"Instant Article for WP WordPress plugin\" width=\"774\" height=\"376\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin.png 774w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin-620x301.png 620w\" sizes=\"(max-width: 774px) 100vw, 774px\" \/><\/p>\n<p>Provide your Facebook App ID and App Secret to start using the plugin. If you don&#8217;t have an Facebook app setup already, you can create a new app.<br \/>\nAfter you provide your Facebook app id, you will be asked to login to Facebook and authorize your page. Once the authorization is complete your setup is almost ready.<br \/>\nNote, Although you use the WordPress plugin, the signup for the Instant article as described above is need to be completed to get the plugin to work.<\/p>\n<h3>4. Publish Articles for Review<\/h3>\n<p>Once you complete the above configuration, you need to submit at least 10 articles for review. For that, you can open previously published WordPress post in edit mode and save them and send those to Facebook instant articles RSS feed.<\/p>\n<p>This would send the articles for review. It takes 3-4 days to get them approved. Once approved, you can publish the articles automatically. You can enable auto-publishing from the auto feed and you\u2019re done.<\/p>\n","excerpt":"<p>Facebook instant articles are shared 30% more as compared to traditional web pages. As it loads 10x times faster, it also drives more clicks. Initially for a limited period, Facebook released this feature for few allowed publishers. Now from April 2016 it open to all publishers.<\/p>\n","date":"2016-06-10 22:57:56","modified":"2016-06-13 16:05:54","categories":[{"id":299,"slug":"how-to","title":"How-Tos","description":"","parent":0,"post_count":14}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":10420,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin.png","slug":"instant-article-for-wp-wordpress-plugin","title":"Instant Article for WP Wordpress plugin","description":"","caption":"","parent":10419,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin.png","width":774,"height":376},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin-292x194.png","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin-620x301.png","width":620,"height":301},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin.png","width":774,"height":376},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin.png","width":774,"height":376},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin.png","width":774,"height":376},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin.png","width":774,"height":376},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin-375x195.png","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin-145x100.png","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin.png","width":774,"height":376},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Instant-Article-for-WP-Wordpress-plugin-380x260.png","width":380,"height":260}}},{"id":10421,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS.png","slug":"facebook-instant-articles-submit-rss","title":"Facebook Instant Articles- Submit RSS","description":"","caption":"","parent":10419,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS.png","width":663,"height":238},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS-292x194.png","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS-620x223.png","width":620,"height":223},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS.png","width":663,"height":238},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS.png","width":663,"height":238},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS.png","width":663,"height":238},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS.png","width":663,"height":238},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS-375x195.png","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS-145x100.png","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS.png","width":663,"height":238},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Submit-RSS-380x238.png","width":380,"height":238}}},{"id":10422,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL.png","slug":"facebook-instant-articles-claim-your-url","title":"Facebook Instant Articles- Claim your URL","description":"","caption":"","parent":10419,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL.png","width":662,"height":418},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL-292x194.png","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL-620x391.png","width":620,"height":391},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL.png","width":662,"height":418},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL.png","width":662,"height":418},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL.png","width":662,"height":418},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL.png","width":662,"height":418},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL-375x195.png","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL-145x100.png","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL.png","width":662,"height":418},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-Claim-your-URL-380x260.png","width":380,"height":260}}},{"id":10423,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article.png","slug":"signup-for-facebook-instant-article","title":"Signup for Facebook Instant Article","description":"Signup for Facebook Instant Article","caption":"","parent":10419,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article.png","width":925,"height":688},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article-292x194.png","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article-620x461.png","width":620,"height":461},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article.png","width":925,"height":688},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article-810x602.png","width":810,"height":602},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article.png","width":925,"height":688},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article-375x195.png","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article-145x100.png","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article-925x500.png","width":925,"height":500},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Signup-for-Facebook-Instant-Article-380x260.png","width":380,"height":260}}},{"id":10424,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles.gif","slug":"facebook-instant-articles","title":"Facebook Instant Articles","description":"Facebook Instant Articles","caption":"","parent":10419,"mime_type":"image\/gif","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles.gif","width":680,"height":356},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-292x194.gif","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-620x325.gif","width":620,"height":325},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles.gif","width":680,"height":356},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles.gif","width":680,"height":356},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles.gif","width":680,"height":356},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles.gif","width":680,"height":356},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-375x195.gif","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-145x100.gif","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles.gif","width":680,"height":356},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-380x260.gif","width":380,"height":260}}}],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-292x194.gif","custom_fields":{"slide_template":["default"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4900206399"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:279:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"734636140\";s:5:\"pDate\";s:19:\"2016-06-10 17:28:13\";}}\";"],"snapTW":["s:197:\"a:1:{i:0;a:7:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapBG":["s:43:\"a:1:{i:0;a:1:{s:11:\"isPrePosted\";s:1:\"1\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles.gif","width":680,"height":356},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-292x194.gif","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-620x325.gif","width":620,"height":325},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles.gif","width":680,"height":356},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles.gif","width":680,"height":356},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles.gif","width":680,"height":356},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles.gif","width":680,"height":356},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-375x195.gif","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-145x100.gif","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles.gif","width":680,"height":356},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-Instant-Articles-380x260.gif","width":380,"height":260}}},{"id":10400,"type":"post","slug":"jquery-3-0-final-version-is-now-released","url":"http:\/\/stacktips.com\/news\/jquery-3-0-final-version-is-now-released","status":"publish","title":"jQuery 3.0 Final Version is Now Released","title_plain":"jQuery 3.0 Final Version is Now Released","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='jQuery 3.0 Final Version is Now Released' data-link='http:\/\/stacktips.com\/news\/jquery-3-0-final-version-is-now-released' data-summary=''><\/div>\n<p>Today jQuery 3.0 final version is out! The overarching goals of the release were to create a slimmer, faster and better version of jQuery with compatibility in mind. New version of jQuery is the continuation of 2.x branch, but with fixes to long overdue issues.<\/p>\n<p>Older version (v1.12 and v2.2) branches will continue to receive critical support; however developers will not get any new features or major revisions.<\/p>\n<p>All of the Internet Explorer browser workarounds are removed and using some of the morden web APIs. Now if you still want to support IE v6-8 version, you may continue to use the latest 1.12 release.<\/p>\n<p>It is recommended that, for any new development developers should use jQuery 3.0 version. For existing projects, transition to 3.0 won&#8217;t be a hassel. There are a few breaking changes, hopefully it actually wont affect that many people. Per usual, to assist with upgrading, brand new jQuery 3.0 developer upgrade guide released. You may use the jQuery Migrate 3.0 plugin to identify compatibility issues in your code.<\/p>\n<h3>jQuery 3.0 CDN files:<\/h3>\n<pre class=\"prettyprint lang-js\">&lt;script src=\"https:\/\/code.jquery.com\/jquery-3.0.0.js\"&gt;&lt;\/script&gt;\r\n\r\n&lt;!-- Minified version --&gt;\r\n&lt;script src=\"https:\/\/code.jquery.com\/jquery-3.0.0.min.js\"&gt;&lt;\/script&gt;\r\n<\/pre>\n<h3>You can also get the release from npm:<\/h3>\n<pre>npm install jquery@3.0.0<\/pre>\n<p>In addition, we\u2019ve got the release for jQuery Migrate 3.0. We highly recommend using this to address any issues with breaking changes in jQuery 3.0. You can get those files here:<\/p>\n<pre class=\"prettyprint lang-js\">&lt;script src=\"https:\/\/code.jquery.com\/jquery-3.0.0.min.js\"&gt;&lt;\/script&gt;\r\n\r\n&lt;!-- Minified version --&gt;\r\n&lt;script src=\"https:\/\/code.jquery.com\/jquery-migrate-3.0.0.js\"&gt;&lt;\/script&gt;\r\n<\/pre>\n<p>or<\/p>\n<pre>npm install jquery-migrate@3.0.0<\/pre>\n<p>For more information about upgrading your jQuery 1.x and 2.x pages to jQuery 3.0 with the help of jQuery Migrate, see <a href=\"http:\/\/blog.jquery.com\/2016\/05\/19\/jquery-migrate-1-4-1-released-and-the-path-to-jquery-3-0\/\" target=\"_blank\">the jQuery Migrate 1.4.1 blog post<\/a>.\u00a0You can dig into more details on major new features, improvements, bug fixes and migration check out the new\u00a0<a href=\"\/\/jquery.com\/upgrade-guide\/3.0\/\" target=\"_blank\">3.0 Upgrade Guide<\/a>. A complete list of issues fixed is available on our <a href=\"https:\/\/github.com\/jquery\/jquery\/issues?q=is%3Aissue+milestone%3A3.0.0\">GitHub bug tracker<\/a>.<\/p>\n","excerpt":"<p>Today jQuery 3.0 final version is out! The overarching goals of the release were to create a slimmer, faster and better version of jQuery with compatibility in mind. New version of jQuery is the continuation of 2.x branch, but with fixes to long overdue issues. Older version (v1.12 and v2.2) branches will continue to receive [&hellip;]<\/p>\n","date":"2016-06-10 04:00:11","modified":"2016-06-10 22:39:55","categories":[{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[{"id":36,"slug":"javascript","title":"JavaScript","description":"","post_count":5}],"author":{"id":49,"slug":"celin-smith","name":"Celin Smith","first_name":"Celin","last_name":"Smith","nickname":"Celin Smith","url":"http:\/\/www.xicom.biz","description":"Celin Smith is renowned web developer and blogger at <a href=\"http:\/\/www.xicom.biz\">Xicom Technologies Ltd.<\/a> who loves to write regarding mobile and web applications."},"comments":[],"attachments":[{"id":10402,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","slug":"jquery-3-0","title":"jquery 3.0","description":"","caption":"","parent":10400,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","width":500,"height":320},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0-292x194.jpg","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","width":500,"height":320},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","width":500,"height":320},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","width":500,"height":320},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","width":500,"height":320},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","width":500,"height":320},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0-375x195.jpg","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0-145x100.jpg","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","width":500,"height":320},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0-380x260.jpg","width":380,"height":260}}}],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0-292x194.jpg","custom_fields":{"slide_template":["default"],"dsq_thread_id":["4898123188"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:251:\"a:1:{i:0;a:9:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";}}\";"],"snapIP":["s:119:\"a:1:{i:0;a:4:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";}}\";"],"snapTW":["s:170:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";}}\";"],"snapTR":["s:198:\"a:1:{i:0;a:5:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:146073404287;s:7:\"postURL\";s:45:\"http:\/\/stacktips.tumblr.com\/post\/146073404287\";s:5:\"pDate\";s:19:\"2016-06-17 19:37:45\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","width":500,"height":320},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0-292x194.jpg","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","width":500,"height":320},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","width":500,"height":320},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","width":500,"height":320},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","width":500,"height":320},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","width":500,"height":320},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0-375x195.jpg","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0-145x100.jpg","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0.jpg","width":500,"height":320},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/jquery-3.0-380x260.jpg","width":380,"height":260}}},{"id":10380,"type":"post","slug":"restrict-edittext-min-and-max-value-input-range-using-android-inputfilter","url":"http:\/\/stacktips.com\/tutorials\/android\/restrict-edittext-min-and-max-value-input-range-using-android-inputfilter","status":"publish","title":"Restrict EditText Min and Max Value Input Range in Android","title_plain":"Restrict EditText Min and Max Value Input Range in Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Restrict EditText Min and Max Value Input Range in Android' data-link='http:\/\/stacktips.com\/tutorials\/android\/restrict-edittext-min-and-max-value-input-range-using-android-inputfilter' data-summary='Using Android LengthFilter, AllCaps and CustomInputFilter example. This tutorial explains how to restrict min max input range using custom InputFilter.'><\/div>\n<p>EditText in Android is one of the basic UI widget used for user data input. An <code>InputFilter<\/code> can be attached to an EditText to constrain the changes that can be made to them. For example, you want to allow maximum of 10 characters to be entered, or you want to allow only uppercase characters.<\/p>\n<p>Android SDK comes handy with set of basic filters such as <code>AllCaps<\/code> and <code>LengthFilter<\/code>. However, you can always write your own filter implementation using\u00a0<code>InputFilter<\/code> interface.<\/p>\n<p>You can use attach a filter to Editables by calling <code>setFilters()<\/code> method.<\/p>\n<pre class=\"prettyprint lang-java\">\/\/Set Length filter. Restricting to 10 characters only\r\neditText.setFilters(new InputFilter[]{new InputFilter.LengthFilter(MAX_LENGTH)});\r\n\r\n\/\/Allowing only upper case characters\r\neditText.setFilters(new InputFilter[]{new InputFilter.AllCaps()});\r\n\r\n\/\/Attaching multiple filters\r\neditText.setFilters(new InputFilter[]{new InputFilter.LengthFilter(MAX_LENGTH), new InputFilter.AllCaps()});\r\n<\/pre>\n<h3>Min and Max Value Range Filter Example<\/h3>\n<p>For defining your own custom filter, you need to implements <code>InputFilter<\/code> interface and override the <code>filter()<\/code> method.<\/p>\n<ul>\n<li>The filter() method is called when the buffer is going to replace the range dStart to dEnd of dest with the new text from the range start to end of source.<\/li>\n<li>Return the CharSequence that you would like to have placed there instead, including an empty string if appropriate, or null to accept the original replacement.<\/li>\n<li>Be careful to not to reject 0-length replacements, as this is what happens when you delete text.<\/li>\n<li>Also beware that you should not attempt to make any changes to dest from this method; you may only examine it for context.<\/li>\n<\/ul>\n<p>Let us now create a custom filter to define Min and Max value range. The min max range can be set by setting values to constructor initialisation.<\/p>\n<pre class=\"prettyprint lang-java\">import android.text.InputFilter;\r\nimport android.text.Spanned;\r\n\r\npublic class CustomRangeInputFilter implements InputFilter {\r\n    private double minValue;\r\n    private double maxValue;\r\n\r\n    public CustomRangeInputFilter(double minVal, double maxVal) {\r\n        this.minValue = minVal;\r\n        this.maxValue = maxVal;\r\n    }\r\n\r\n    @Override\r\n    public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dStart, int dEnd) {\r\n        try {\r\n            \/\/ Remove the string out of destination that is to be replaced\r\n            String newVal = dest.toString().substring(0, dStart) + dest.toString().substring(dEnd, dest.toString().length());\r\n            newVal = newVal.substring(0, dStart) + source.toString() + newVal.substring(dStart, newVal.length());\r\n            double input = Double.parseDouble(newVal);\r\n\r\n            if (isInRange(minValue, maxValue, input)) {\r\n                return null;\r\n            }\r\n        } catch (NumberFormatException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    private boolean isInRange(double a, double b, double c) {\r\n        return b &gt; a ? c &gt;= a &amp;&amp; c &lt;= b : c &gt;= b &amp;&amp; c &lt;= a;\r\n    }\r\n}\r\n<\/pre>\n<p>You can use this filter using;<\/p>\n<pre class=\"prettyprint lang-java\">\/\/Define Min, Max range value using custom input filter\r\neditText.setFilters(new InputFilter[]{new CustomRangeInputFilter(0f, 10.0f)});\r\n<\/pre>\n","excerpt":"<p>Using Android LengthFilter, AllCaps and CustomInputFilter example. This tutorial explains how to restrict min max input range using custom InputFilter. <\/p>\n","date":"2016-06-09 03:08:54","modified":"2016-06-13 18:43:05","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":21,"slug":"android-ui","title":"Android UI","description":"","post_count":28},{"id":251,"slug":"edittext","title":"EditText","description":"","post_count":2}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"slide_template":["default"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4895041630"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:279:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"733874421\";s:5:\"pDate\";s:19:\"2016-06-08 21:40:09\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"740659652539514880\";s:5:\"pDate\";s:19:\"2016-06-08 21:40:07\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":7289,"type":"post","slug":"what-is-seo-a-beginners-guide-to-search-engine-optimisation","url":"http:\/\/stacktips.com\/how-to\/seo\/what-is-seo-a-beginners-guide-to-search-engine-optimisation","status":"publish","title":"What is SEO? A Beginners Guide to Search Engine Optimisation","title_plain":"What is SEO? A Beginners Guide to Search Engine Optimisation","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='What is SEO? A Beginners Guide to Search Engine Optimisation' data-link='http:\/\/stacktips.com\/how-to\/seo\/what-is-seo-a-beginners-guide-to-search-engine-optimisation' data-summary='What is SEO? A Beginners Guide to Search Engine Optimisation to get you started with information you need to get on the road to professional quality Search Engine Optimization, or SEO.'><\/div>\n<p>SEO Stands for\u00a0Search\u00a0Engine Optimisation. SEO is the process of developing or tweaking\u00a0your website for search engine\u00a0to understand, with intention to achieve\u00a0a high rank in search results.\u00a0Once your website is developed, the most\u00a0fundamental and essential thing you must worry about is to define your\u00a0online marketing strategy.\u00a0SEO is the first thing that you need to do on that regards.<\/p>\n<p>SEO is nothing but of set of tricks, guidelines and includes massive amount of rich contents. Contents must unique, contextual containing\u00a0popular\/most searched keywords. As SEO\u00a0deals mostly with rich text, it sometimes also\u00a0understood as\u00a0copy writing.<\/p>\n<h2>What is SEO Optimisation?<\/h2>\n<p>Following are some of the terms that well describes the SEO optimisation techniques<\/p>\n<ul class=\"space\">\n<li>SEO is all about optimising a web site for Search Engines<\/li>\n<li>SEO is the process of designing and developing a web site to rank well in search engine results.<\/li>\n<li>The intent of SEO is to improve the volume and quality of traffic to a web site from search engines.<\/li>\n<li>SEO is one of\u00a0of online\u00a0marketing strategy but not the only one.<\/li>\n<li>Building SEO for your website, needs deep\u00a0understanding of how different search algorithms works, what human visitors might search and\u00a0what are the essential metadata&#8217;s that you must configure to let search engines find your website.<\/li>\n<\/ul>\n<h2>How Search Engine Works ?<\/h2>\n<p>Search engines perform various activities in order to deliver search results. Following are some of the activities that most of the leading search engines including Google and Yahoo\u00a0does for better results.<\/p>\n<p><strong>Crawling<\/strong> &#8211;\u00a0is the process of fetching all the web pages linked to a web site. This task is performed by a software, called a\u00a0crawler\u00a0or a\u00a0spider. Google calls its crawler as <strong>Googlebot<\/strong>.<\/p>\n<p><strong>Indexing<\/strong> &#8211;\u00a0is the process of creating index for all the fetched web pages and keeping them into a giant database from where it can later be retrieved. Essentially, the process of indexing is identifying the words and expressions that best describe the page and assigning the page to particular keywords.<\/p>\n<p><strong>Processing<\/strong> &#8211;\u00a0When a search request comes, the search engine processes it . i.e. it compares the search string in the search request with the indexed pages in the database.<\/p>\n<p><strong>Relevancy Check<\/strong> &#8211;\u00a0Since it is likely that more than one pages contains the search string, so the search engine starts calculating the relevancy of each of the pages in its index to the search string.<\/p>\n<p><strong>Retrieving Results<\/strong> &#8211;\u00a0The last step in search engines activities is retrieving the best matched results. Basically, it is nothing more than simply displaying them in the browser.<\/p>\n<p>Search engines such as Google and Yahoo! often update their relevancy algorithm dozens of times per month. When you see changes in your rankings it is due to an algorithmic shift or something else outside of your control. Although the basic principle of operation of all search engines is the same, the minor differences between their relevancy algorithm lead to major changes in results relevancy.<\/p>\n<h2>What is SEO Copy Writing?<\/h2>\n<p>SEO Copy writing is the technique of writing the viewable rich text content\u00a0on a web page in such a way that the search engine\u00a0reads\u00a0well. It should target specific search terms and keywords. Its purpose is to rank highly in the search engines for the targeted search terms.<\/p>\n<p>As well as the viewable text, SEO Copy writing usually optimizes other on page elements for the targeted search terms. These include the Title, Description and Keywords tags, headings and alt text.<\/p>\n<p>The idea behind SEO Copy writing is that search engines want genuine content pages and not\u00a0doorway pages that are created for cheating to gain\u00a0search engine ranking.<\/p>\n<h2>What is Search Engine Rank?<\/h2>\n<p>When you search any keyword using a search engine then it displays thousands of results found in its database. A page ranking is measured by the position of web pages displayed in the search engine results. If Search engine is putting your web page on first position then your web page rank will be number 1 and it will be assumed as with a high rank.<\/p>\n<p>Well, now that we understand what is SEO. Lets think about how to build your website SEO. There are two ways you can plan to build your website\u00a0SEO;\u00a0<strong>On-Page SEO <\/strong>and<strong>\u00a0<strong>Off-Page SEO <\/strong><\/strong>building. In on page SEO,\u00a0you need to include\u00a0good content, good keywords and putting keywords on right\u00a0places, giving appropriate title to every page etc.\u00a0Off-Page SEO is all about link building. This means you need to increase the more number of incoming links from reputed websites or by submitting your site to be indexed by open directories, search engines, link exchange etc.<\/p>\n","excerpt":"<p>What is SEO? A Beginners Guide to Search Engine Optimisation to get you started with information you need to get on the road to professional quality Search Engine Optimization, or SEO.<\/p>\n","date":"2016-06-08 18:04:55","modified":"2016-06-11 00:37:12","categories":[{"id":304,"slug":"seo","title":"SEO","description":"","parent":299,"post_count":1}],"tags":[{"id":303,"slug":"seo","title":"SEO","description":"","post_count":1}],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":10396,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation.jpg","slug":"seo-a-beginners-guide-to-search-engine-optimisation","title":"SEO-A Beginners Guide to Search Engine Optimisation","description":"SEO-A Beginners Guide to Search Engine Optimisation","caption":"","parent":7289,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation.jpg","width":1544,"height":896},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-292x194.jpg","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-620x360.jpg","width":620,"height":360},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation.jpg","width":1544,"height":896},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-810x470.jpg","width":810,"height":470},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-1140x662.jpg","width":1140,"height":662},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-375x195.jpg","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-145x100.jpg","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-1544x500.jpg","width":1544,"height":500},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-380x260.jpg","width":380,"height":260}}}],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-292x194.jpg","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDA":["s:104:\"a:1:{i:0;a:3:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapLI":["s:265:\"a:1:{i:0;a:8:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapSU":["s:127:\"a:1:{i:0;a:4:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";}}\";"],"snapTR":["s:370:\"a:1:{i:0;a:8:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"slide_template":["default"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4895123354"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:237:\"a:1:{i:0;a:8:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:244:\"a:1:{i:0;a:9:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:111:\"a:1:{i:0;a:4:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:163:\"a:1:{i:0;a:6:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation.jpg","width":1544,"height":896},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-292x194.jpg","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-620x360.jpg","width":620,"height":360},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation.jpg","width":1544,"height":896},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-810x470.jpg","width":810,"height":470},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-1140x662.jpg","width":1140,"height":662},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-375x195.jpg","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-145x100.jpg","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-1544x500.jpg","width":1544,"height":500},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/SEO-A-Beginners-Guide-to-Search-Engine-Optimisation-380x260.jpg","width":380,"height":260}}},{"id":10370,"type":"post","slug":"how-to-include-wordpress-custom-post-types-to-archive-page","url":"http:\/\/stacktips.com\/tutorials\/wordpress\/how-to-include-wordpress-custom-post-types-to-archive-page","status":"publish","title":"How to Include WordPress Custom Post Types to Archive Page","title_plain":"How to Include WordPress Custom Post Types to Archive Page","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Include WordPress Custom Post Types to Archive Page' data-link='http:\/\/stacktips.com\/tutorials\/wordpress\/how-to-include-wordpress-custom-post-types-to-archive-page' data-summary='The default WordPress author archive page template displays only default post types. The custom posts are not included. The following WordPress code snippet will help you to include WordPress custom post types to author archive page.'><\/div>\n<p>The default WordPress author archive page template displays only default post types. The custom posts are not included. The following WordPress code snippet will help you to include WordPress custom post types to author archive page.<\/p>\n<p>Add the following snippets to your WordPress theme <code>functions.php<\/code> file:<\/p>\n<pre class=\"prettyprint lang-php\">add_filter( 'pre_get_posts', 'my_get_posts' );\r\nfunction my_get_posts( $query ) {\r\n\r\n\tif ( is_author() &amp;&amp; $query-&gt;is_main_query()) {\r\n\t\t$query-&gt;set( 'post_type', array( 'post', 'post_type1', 'post_type2' ) );\r\n\t}\r\n\treturn $query;\r\n}\r\n<\/pre>\n<p>Save the changed <code>functions.php<\/code> and visit your your WordPress author archive.<\/p>\n","excerpt":"<p>The default WordPress author archive page template displays only default post types. The custom posts are not included. The following WordPress code snippet will help you to include WordPress custom post types to author archive page.<\/p>\n","date":"2016-06-07 03:51:40","modified":"2016-06-11 00:37:15","categories":[{"id":299,"slug":"how-to","title":"How-Tos","description":"","parent":0,"post_count":14},{"id":181,"slug":"wordpress","title":"Wordpress","description":"","parent":297,"post_count":6}],"tags":[],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"slide_template":["default"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4889361872"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:279:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"733074073\";s:5:\"pDate\";s:19:\"2016-06-06 22:22:04\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"739945453836328960\";s:5:\"pDate\";s:19:\"2016-06-06 22:22:05\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338}}},{"id":10314,"type":"post","slug":"facebook-encouraging-developers-migrate-to-new-facebook-sdk-v4","url":"http:\/\/stacktips.com\/news\/facebook-encouraging-developers-migrate-to-new-facebook-sdk-v4","status":"publish","title":"Facebook Encouraging Developers to Migrate to Facebook SDK v4","title_plain":"Facebook Encouraging Developers to Migrate to Facebook SDK v4","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Facebook Encouraging Developers to Migrate to Facebook SDK v4' data-link='http:\/\/stacktips.com\/news\/facebook-encouraging-developers-migrate-to-new-facebook-sdk-v4' data-summary='The new version of Facebook SDK v4 was announced last year on Facebook Developer Conference. This version includes a major changes to the Login flow, improved error handling and a massive improvement on reducing the overall size of application using Facebook SDK.'><\/div>\n<p>Facebook SDK is widely used almost in every app today. It allows seamless integration of Facebook into Android, iOS and web application. Using this you can login to your app via Facebook, comment, like share and access users informations and many more.<\/p>\n<p>The new version of <strong>Facebook SDK v4<\/strong> was announced last year on Facebook Developer Conference. This version includes a major changes to the Login flow, improved error handling and a massive improvement on reducing the overall size of application using Facebook SDK.<\/p>\n<p>Since then, for quite some time the company is encouraging developers to make a shift from v3 to v4. And finally, Facebook has now announced that it will no longer support v3 starting <strong>June 1, 2017<\/strong>. This announcement applies to both Android and iOS versions or Unity(v7) versions. The older apps that implements SDK v3 version will continue to work; however, developers cannot take advantages of the new new features after the June 2017.<\/p>\n<p>Some of the improvements on Facebook SDK v4 includes:<\/p>\n<ul>\n<li>The size of SDK is significantly reduced. This results the iOS and Android build size. Now your 10MB apk might get around 6\/7.<\/li>\n<li>iOS SDK design overhaul to made it\u00a0more modular with separate Login and Sharing libraries. Now you only include what you need<\/li>\n<li>Updated Facebook Login UI and simpler programming model that doesn&#8217;t require the Facebook app to be installed on the person&#8217;s device<\/li>\n<li>Improved sharing functionality including video sharing, hashtags, and mixed multimedia support<\/li>\n<li>iOS and Android automatic error recovery<\/li>\n<li>Facebook Analytics for Apps improvements<\/li>\n<li>tvOS and Android\/Fire TV support<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n","excerpt":"<p>The new version of Facebook SDK v4 was announced last year on Facebook Developer Conference. This version includes a major changes to the Login flow, improved error handling and a massive improvement on reducing the overall size of application using Facebook SDK.<\/p>\n","date":"2016-06-04 18:00:07","modified":"2016-06-13 18:44:56","categories":[{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[{"id":302,"slug":"facebook","title":"Facebook","description":"","post_count":1}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":10316,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK.jpg","slug":"facebook-developers-sdk","title":"Facebook developers SDK","description":"","caption":"","parent":10314,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK.jpg","width":721,"height":467},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK-620x402.jpg","width":620,"height":402},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK.jpg","width":721,"height":467},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK.jpg","width":721,"height":467},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK.jpg","width":721,"height":467},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK.jpg","width":721,"height":467},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK-375x195.jpg","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK-145x100.jpg","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK.jpg","width":721,"height":467},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK-380x260.jpg","width":380,"height":260}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"slide_template":["default"],"dsq_thread_id":["4883143353"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:251:\"a:1:{i:0;a:9:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";}}\";"],"snapIP":["s:119:\"a:1:{i:0;a:4:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";}}\";"],"snapTW":["s:170:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK.jpg","width":721,"height":467},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK-620x402.jpg","width":620,"height":402},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK.jpg","width":721,"height":467},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK.jpg","width":721,"height":467},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK.jpg","width":721,"height":467},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK.jpg","width":721,"height":467},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK-375x195.jpg","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK-145x100.jpg","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK.jpg","width":721,"height":467},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/Facebook-developers-SDK-380x260.jpg","width":380,"height":260}}},{"id":10291,"type":"post","slug":"dns-server-is-not-responding-how-do-i-flush-dns-cache-on-my-computer","url":"http:\/\/stacktips.com\/how-to\/dns-server-is-not-responding-how-do-i-flush-dns-cache-on-my-computer","status":"publish","title":"DNS Server is not Responding? How to Flush your Computer DNS Cache?","title_plain":"DNS Server is not Responding? How to Flush your Computer DNS Cache?","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='DNS Server is not Responding? How to Flush your Computer DNS Cache?' data-link='http:\/\/stacktips.com\/how-to\/dns-server-is-not-responding-how-do-i-flush-dns-cache-on-my-computer' data-summary=''><\/div>\n<h3>What is DNS?<\/h3>\n<p>DNS is an acronym for Domain Name System (also referred to as Domain Name Service). When you open a website on your computer, the DNS information of that website is cached in your computer memory. So that when you visit the same website next time, the resource record may be referred from cache.<\/p>\n<p>This may cause problems if the website\u2019s DNS information has changed since you last visited the website. For such instances, you may require to force your computer to flush the DNS cache.<\/p>\n<p>The following commands can be used in different operating system to flush the DNS cache.<\/p>\n<h3>Flush DNS on Windows OS<\/h3>\n<ul>\n<li>Click on Start button.<\/li>\n<li>Select Run..<\/li>\n<li>Type &#8220;cmd&#8221; and press OK button.<\/li>\n<li>You should see the following line: C:\\Documents and Settings\\User&gt;. Type:<\/li>\n<\/ul>\n<pre>ipconfig \/flushdns<\/pre>\n<p>You will see a message containing the following:<\/p>\n<p>&#8220;Windows IP Configuration Successfully flushed the DNS Resolver Cache.&#8221;<br \/>\nType &#8220;exit&#8221; to close the prompt.<\/p>\n<h3>Flush DNS in Mac OS X<\/h3>\n<ul>\n<li>Click on Finder in the dock.<\/li>\n<li>Click on Macintosh HD.<\/li>\n<li>Click on Applications.<\/li>\n<li>Click on Utilities.<\/li>\n<li>Double-click on Terminal.<\/li>\n<\/ul>\n<p>On\u00a0Mac OSX Leopard or newer versions, you can use the following command to flush the DNS resolver cache:<\/p>\n<pre>dscacheutil -flushcache<\/pre>\n<p>For\u00a0Mac OSX 10.5.1 or earlier versions, you can use the\u00a0following command:<\/p>\n<pre>lookupd -flushcache<\/pre>\n<h3>Flush DNS in Linux OS<\/h3>\n<p>In Linux, the <code>nscd<\/code> daemon manages the DNS cache. To flush the DNS cache, restart the nscd daemon. To restart the nscd daemon, use the following command.<\/p>\n<pre>\/etc\/init.d\/nscd restart<\/pre>\n","excerpt":"<p>What is DNS? DNS is an acronym for Domain Name System (also referred to as Domain Name Service). When you open a website on your computer, the DNS information of that website is cached in your computer memory. So that when you visit the same website next time, the resource record may be referred from [&hellip;]<\/p>\n","date":"2016-06-03 03:39:33","modified":"2016-06-13 19:58:47","categories":[{"id":299,"slug":"how-to","title":"How-Tos","description":"","parent":0,"post_count":14}],"tags":[],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":10298,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image.jpg","slug":"server-image","title":"server-image","description":"","caption":"","parent":10291,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image.jpg","width":738,"height":519},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image-620x436.jpg","width":620,"height":436},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image.jpg","width":738,"height":519},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image.jpg","width":738,"height":519},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image.jpg","width":738,"height":519},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image.jpg","width":738,"height":519},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image-375x195.jpg","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image-145x100.jpg","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image-738x500.jpg","width":738,"height":500},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image-380x260.jpg","width":380,"height":260}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"slide_template":["default"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4879151497"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:279:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"731649545\";s:5:\"pDate\";s:19:\"2016-06-02 22:09:58\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"738492873973207040\";s:5:\"pDate\";s:19:\"2016-06-02 22:09:58\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image.jpg","width":738,"height":519},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image-620x436.jpg","width":620,"height":436},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image.jpg","width":738,"height":519},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image.jpg","width":738,"height":519},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image.jpg","width":738,"height":519},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image.jpg","width":738,"height":519},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image-375x195.jpg","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image-145x100.jpg","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image-738x500.jpg","width":738,"height":500},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/06\/server-image-380x260.jpg","width":380,"height":260}}},{"id":10067,"type":"post","slug":"jsonp-in-spring-mvc-using-responsebody-responseentity","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/jsonp-in-spring-mvc-using-responsebody-responseentity","status":"publish","title":"Support JSONP in Spring MVC 4.2 Using @ResponseBody and ResponseEntity","title_plain":"Support JSONP in Spring MVC 4.2 Using @ResponseBody and ResponseEntity","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Support JSONP in Spring MVC 4.2 Using @ResponseBody and ResponseEntity' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/jsonp-in-spring-mvc-using-responsebody-responseentity' data-summary=''><\/div>\n<p>One of the current trends in web applications is communicating with the content and functionality from two different sources. For example, features such as embedding adding maps, videos and playlists, comments of third party provides into your own application.<\/p>\n<p>Browsers security restriction imposes the cross domain web Service calls using Ajax. \u00a0All the modern bowsers\u00a0by default do not support cross domain Ajax calls.\u00a0If you do so, it will end up with\u00a0the following error:<\/p>\n<p>XMLHttpRequest cannot load URL. Origin http:\/\/yourwebserver.com is not allowed by Access-Control-Allow-Origin.<\/p>\n<p>Visit the below link for more details on browser security policy: <a href=\"http:\/\/code.google.com\/p\/browsersec\/wiki\/Part2#Same-origin_policy\">Same-origin policy.<\/a>\u00a0The solution to the above problem is JSONP.<\/p>\n<h2>What is JSONP?<\/h2>\n<p>JSONP (JSON with Padding) is a technique used by web developers to overcome the cross-domain restrictions imposed by browsers to allow data to be retrieved from systems other than the one the page was served by.<\/p>\n<h2>Support JSONP in Spring MVC 4.2<\/h2>\n<p>Since Spring version\u00a04.2 release, the JSONP is inbuilt to \u00a0Spring framework. In order to enable <a href=\"http:\/\/en.wikipedia.org\/wiki\/JSONP\">JSONP<\/a> support for <code>@ResponseBody<\/code> and <code>ResponseEntity<\/code> methods, declare an <code>@ControllerAdvice<\/code> bean that extends\u00a0<code>AbstractJsonpResponseBodyAdvice<\/code> as shown below where the constructor argument indicates the JSONP query parameter name(s):<\/p>\n<pre class=\"prettyprint lang-java\">import org.springframework.web.bind.annotation.ControllerAdvice;\r\nimport org.springframework.web.servlet.mvc.method.annotation.AbstractJsonpResponseBodyAdvice;\r\n\r\n@ControllerAdvice \r\npublic class JsonpAdvice extends AbstractJsonpResponseBodyAdvice {\r\n\r\n    public JsonpAdvice() {\r\n        super(\"callback\");\r\n    }\r\n\r\n}\r\n<\/pre>\n<p>With such <code>@ControllerAdvice<\/code> bean registered, it will be possible to request the JSON web service from another domain using a <code>&lt;script \/&gt;<\/code> tag.<\/p>\n<p>Let us consider the following bean<\/p>\n<pre class=\"prettyprint lang-java\">public class Post {\r\n\tprivate int id;\r\n\tprivate String title;\r\n\tprivate String body;\r\n}\r\n<\/pre>\n<p>The above bean can be accessed via JSONP using the URL as <code>http:\/\/localhost:8080\/myapp\/post?callback=postCallback<\/code>, and it In this example, the received JSONP payload would be:<\/p>\n<pre class=\"prettyprint lang-javascript\">postCallback({\r\n\tid: 11,\r\n\ttitle: \"Post title\",\r\n\tbody: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \",\r\n})\r\n<\/pre>\n<p>If you want to access it form another domain, we can use it as<\/p>\n<pre class=\"prettyprint lang-html\">&lt;script src=\"http:\/\/localhost:8080\/myapp\/post?callback=postCallback\" type=\"application\/javascript\"&gt; \r\n&lt;\/script&gt;<\/pre>\n<h3>JSONP with @ResponseBody and ResponseEntity<\/h3>\n<p>Now find a controller in which we have created methods that will return <code>@ResponseBody<\/code> and <code>ResponseEntity<\/code>.<\/p>\n<pre class=\"prettyprint lang-java\">@RequestMapping(value = \"\/post\", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)\r\n@ResponseBody\r\npublic ResponseEntity&lt;Post&gt; embedSnippet(HttpServletResponse response) {\r\n\tPost post = new Post();\r\n\tpost.setId(11);\r\n\tpost.setTitle(\"Post title\");\r\n\tpost.setBody(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\");\r\n\t\r\n\treturn ResponseEntity.accepted().body(post);\r\n}\r\n<\/pre>\n","excerpt":"<p>One of the current trends in web applications is communicating with the content and functionality from two different sources. For example, features such as embedding adding maps, videos and playlists, comments of third party provides into your own application. Browsers security restriction imposes the cross domain web Service calls using Ajax. \u00a0All the modern bowsers\u00a0by [&hellip;]<\/p>\n","date":"2016-01-04 14:08:54","modified":"2016-06-11 00:37:23","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":279,"slug":"spring-core","title":"Spring Core","description":"","post_count":9},{"id":292,"slug":"spring-mvc","title":"Spring MVC","description":"","post_count":1}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1976"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4459689552"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"d0e26945223cadacb8fb34a90957ae8d\";s:5:\"pDate\";s:19:\"2016-01-04 08:39:33\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:384:\"a:1:{i:0;a:13:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1131501300195456\";s:5:\"pDate\";s:19:\"2016-01-04 08:39:31\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"673743682\";s:5:\"pDate\";s:19:\"2016-01-04 08:39:26\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"683930716170657792\";s:5:\"pDate\";s:19:\"2016-01-04 08:39:27\";s:2:\"do\";i:0;}}\";"],"snapBG":["s:424:\"a:1:{i:0;a:5:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:19:\"6136745954656113656\";s:5:\"pDate\";s:19:\"2016-06-17 16:41:58\";s:10:\"SNAPformat\";s:254:\"<p><img src=\"%IMG%\"> %ANNOUNCE%....<\/p>\n<em>Follow author on twitter <\/em> <strong><a href=\"http:\/\/twitter.com\/%AUTHORTWNAME%\">%AUTHORTWNAME%<\/a><\/strong>. \n<strong>Posted under: <\/strong> %HCATS%\n<p>Read full article from <a href=\"%SURL%\">%SITENAME%<\/p>\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":10032,"type":"post","slug":"upload-bitmap-image-to-server-using-http-multipart-in-xamarin-android","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/upload-bitmap-image-to-server-using-http-multipart-in-xamarin-android","status":"publish","title":"Upload Bitmap Image Using HTTP Multipart in Xamarin Android","title_plain":"Upload Bitmap Image Using HTTP Multipart in Xamarin Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Upload Bitmap Image Using HTTP Multipart in Xamarin Android' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/upload-bitmap-image-to-server-using-http-multipart-in-xamarin-android' data-summary='In this post, we will take a look at what are the API&#039;s Xamarin Android facilitates to support multi part upload. For the sake of simplicity, in this example we will upload an bitmap image to server.'><\/div>\n<p>In this post, we will take a look at what are the API&#8217;s Xamarin Android facilitates to support multi part upload. For the sake of simplicity, in this example we will upload an bitmap image to server.<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-convert-the-bitmap-to-stream\">1. Convert the Bitmap to stream<\/a><\/li><li><a href=\"#2-add-request-headers\">2. Add request headers<\/a><\/li><li><a href=\"#3-add-content-chunks\">3. Add content chunks<\/a><\/li><li><a href=\"#4-upload-bitmap-using-httpclient\">4. Upload Bitmap using HttpClient<\/a><\/li><li><a href=\"#5-completeexample-code\">5. Complete\u00a0example code<\/a><\/li><\/ul><\/div>\n<\/p>\n<p>The Multipart upload is a mechanism that enables you to upload large objects in chunks. In a mobile application context, it is useful when you capture a video or an photo using device camera and want to upload it to your server.<\/p>\n<p>In a multi part request, each chunks\/parts are separated by a delimiter. A delimiter is also known as boundary that separates each part of a multi part message. Each part of the message can define its own standard header such as Content Type and Content Disposition providing the name of the file whose value it contains. The multi part delimiters and header fields are always 7-bit ASCII in any case.<\/p>\n<p>For more detailed information on multi part content type search for RFC1341(MIME) or visit <a href=\"http:\/\/www.w3.org\/Protocols\/rfc1341\/7_2_Multipart.html\" target=\"_blank\">http:\/\/www.w3.org\/<\/a><\/p>\n<h2><span id=\"1-convert-the-bitmap-to-stream\">1. Convert the Bitmap to stream<\/span><\/h2>\n<p>Let us first convert the bitmap image into byte array to send it as ByteArrayContent via multi part form upload.<\/p>\n<pre class=\"prettyprint lang-cs\">public async Task&lt;String&gt; UploadBitmapAsync(Bitmap bitmap)\r\n{\r\n\t\/\/converting bitmap into byte stream\r\n\tbyte[] bitmapData;\r\n\tvar stream = new MemoryStream();\r\n\tbitmap.Compress(Bitmap.CompressFormat.Jpeg, 0, stream);\r\n\tbitmapData = stream.ToArray();\r\n\tvar fileContent = new ByteArrayContent(bitmapData);\r\n}\r\n<\/pre>\n<p>Notice that the <code>bitmap.Compress()<\/code> write a compressed version of the bitmap to the specified stream. The second integer argument indicates the compress quality ranging from 0 being low quality and to 100 maximum.<\/p>\n<h2><span id=\"2-add-request-headers\">2. Add request headers<\/span><\/h2>\n<p>Add the following additional content header such as media content type and content disposition. The <code>\"my_uploaded_image.jpg\"<\/code> is the name of image sent to server.<\/p>\n<pre class=\"prettyprint lang-cs\">fileContent.Headers.ContentType = MediaTypeHeaderValue.Parse (\"application\/octet-stream\");\r\nfileContent.Headers.ContentDisposition = new ContentDispositionHeaderValue(\"form-data\")\r\n{\r\n    Name = \"file\",\r\n    FileName = \"my_uploaded_image.jpg\"\r\n};\r\n<\/pre>\n<h2><span id=\"3-add-content-chunks\">3. Add content chunks<\/span><\/h2>\n<p>Now let us initialize <code>MultipartFormDataContent<\/code> and add the chunks. The boundary is a random string used as a delimiter to separate each part of the message body.<\/p>\n<pre class=\"prettyprint lang-cs\">string boundary = \"---8d0f01e6b3b5dafaaadaada\";\r\nMultipartFormDataContent multipartContent= new MultipartFormDataContent (boundary);\r\nmultipartContent.Add (fileContent);\r\n\/\/multipartContent.Add(fileContent2);\r\n\/\/multipartContent.Add(fileContent3);\r\n<\/pre>\n<p>Declare a string constant that represents the web service endpoint to upload the poi image using multi part.<\/p>\n<h2><span id=\"4-upload-bitmap-using-httpclient\">4. Upload Bitmap using HttpClient<\/span><\/h2>\n<p>Let us now proceed to upload the form content to server using HttpClient class PostAsync() method. The following code snippet demonstrates using HttpClient class for posting data to server.<\/p>\n<pre class=\"prettyprint lang-cs\">HttpClient httpClient = new HttpClient ();\r\nHttpResponseMessage response = await httpClient.PostAsync (UPLOAD_IMAGE, multipartContent);\r\nif (response.IsSuccessStatusCode) {\r\n      string content = await response.Content.ReadAsStringAsync();\r\n \treturn content;\r\n}\r\nreturn null;\r\n<\/pre>\n<h2><span id=\"5-completeexample-code\">5. Complete\u00a0example code<\/span><\/h2>\n<pre class=\"prettyprint lang-cs\">private const string UPLOAD_IMAGE = \u201chttp:\/\/YOUR_SERVER\/api\/poi\/upload\u201d\r\npublic async Task&lt;String&gt; UploadBitmapAsync (Bitmap bitmap){\r\n\tbyte[] bitmapData;\r\n\tvar stream = new MemoryStream();\r\n\tbitmap.Compress(Bitmap.CompressFormat.Jpeg, 0, stream);\r\n\tbitmapData = stream.ToArray();\r\n\tvar fileContent = new ByteArrayContent(bitmapData);\r\n\r\n\tfileContent.Headers.ContentType = MediaTypeHeaderValue.Parse (\"application\/octet-stream\");\r\n\tfileContent.Headers.ContentDisposition = new ContentDispositionHeaderValue(\"form-data\")\r\n\t{\r\n\t\tName = \"file\",\r\n\t\tFileName = \"my_uploaded_image.jpg\"\r\n\t};\r\n\r\n\tstring boundary = \"---8d0f01e6b3b5dafaaadaad\";\r\n\tMultipartFormDataContent multipartContent= new MultipartFormDataContent (boundary);\r\n\tmultipartContent.Add (fileContent);\r\n\t\r\n\tHttpClient httpClient = new HttpClient ();\r\n\tHttpResponseMessage response = await httpClient.PostAsync (UPLOAD_IMAGE, multipartContent);\r\n\tif (response.IsSuccessStatusCode) {\r\n\t\tstring content = await response.Content.ReadAsStringAsync ();\r\n\t\treturn content;\r\n\t}\r\n\treturn null;\r\n}\r\n<\/pre>\n","excerpt":"<p>In this post, we will take a look at what are the API&#8217;s Xamarin Android facilitates to support multi part upload. For the sake of simplicity, in this example we will upload an bitmap image to server.<\/p>\n","date":"2015-12-01 16:55:39","modified":"2016-06-13 18:43:42","categories":[{"id":211,"slug":"net","title":".NET","description":"","parent":297,"post_count":3},{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["3024"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4365631331"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"bec99c395f93997644b6bf7691faf4c6\";s:5:\"pDate\";s:19:\"2015-12-01 11:26:04\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:384:\"a:1:{i:0;a:13:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1113300738682179\";s:5:\"pDate\";s:19:\"2015-12-01 11:26:10\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"662102472\";s:5:\"pDate\";s:19:\"2015-12-01 11:26:02\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"671651459872624640\";s:5:\"pDate\";s:19:\"2015-12-01 11:26:03\";s:2:\"do\";i:0;}}\";"],"snapBG":["s:143:\"a:1:{i:0;a:4:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:19:\"3912405035331321733\";s:5:\"pDate\";s:19:\"2016-06-17 16:52:52\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}},{"id":10246,"type":"post","slug":"how-to-speed-up-your-android-smartphone","url":"http:\/\/stacktips.com\/how-to\/how-to-speed-up-your-android-smartphone","status":"publish","title":"How to Speed up your Android Smartphone","title_plain":"How to Speed up your Android Smartphone","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Speed up your Android Smartphone' data-link='http:\/\/stacktips.com\/how-to\/how-to-speed-up-your-android-smartphone' data-summary=''><\/div>\n<p>Is your Android phone is sluggish? Here are couple of tips that will help to improve the\u00a0performance and responsiveness of your Android device.<\/p>\n<h2>1. Uninstall or disable unused apps<\/h2>\n<p>Android phone shipped with many preloaded applications, which you may not be using frequently. Uninstall all the apps that are unused\u00a0and install the app only\u00a0as you need them. For easy discovery, you can add your favourite application\u00a0\u00a0to your Google Play wish list.<\/p>\n<p>Each time downloading application form Google Play, will cost you the data. And this is painful, especially if you are in a limited data plan. For such cases, you can take a backup of your application to your device SDCard and delete from the installed application list. You can download \u201c<a href=\"https:\/\/play.google.com\/store\/apps\/details?id=mobi.infolife.appbackup&amp;hl=en\"><b>App Backup &amp; Restore<\/b><\/a>\u201d. This will help you not to download apps from Google Play each time you need them.<\/p>\n<h2>2. Uninstall additional launchers and themes<\/h2>\n<p>Awesomeness of Android Operating system is, it allows you to customize your phone completely. You can choose your launcher, theme and icon pack. But having many launchers and themes may result slowness to your phone response time.<\/p>\n<p>As a launcher is a way to, access your apps from the list of installed apps. If the launcher is not optimized, then this will disappoint you with your smartphone experience. So be picky while choosing your launcher and theme. Below are the list of my recommended ones<\/p>\n<ul>\n<li><a href=\"https:\/\/play.google.com\/store\/apps\/details?id=com.anddoes.launcher&amp;hl=en\">Apex Launcher<\/a><\/li>\n<li><a href=\"https:\/\/play.google.com\/store\/apps\/details?id=com.gau.go.launcherex&amp;hl=en\">Go Launcher EX<\/a><\/li>\n<li><a href=\"https:\/\/play.google.com\/store\/apps\/details?id=com.teslacoilsw.launcher&amp;hl=en\">Nova Launcher<\/a><\/li>\n<li><a href=\"https:\/\/play.google.com\/store\/apps\/details?id=com.google.android.launcher&amp;hl=en\">Google Now Launcher<\/a><\/li>\n<\/ul>\n<h2>3.<b> Clear browser cache<\/b><\/h2>\n<p>Most of the browsers are cache enabled. If you have not cleared your browser cache manually, this will consume the memory and can slow down your smartphone. You can delete your browser cache form \u201cHistory\u201d -&gt; \u201cClear Browsing Data\u201d.<\/p>\n<p>For clearing cache on Chrome,<\/p>\n<ul>\n<li>Click the menu button on Chrome browser. It is placed on your top right corner and then settings.<\/li>\n<li>Scroll down to Privacy Configuration. Should see options to clear History, Cache, Cookies, Form data, passwords, and location access.<\/li>\n<li>Click whichever one you want to clear, (this case Cache) and click okay.<\/li>\n<\/ul>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Clear-Your-Browsers-Cache-Android.jpg\"><img src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Clear-Your-Browsers-Cache-Android.jpg\" alt=\"Clear-Your-Browsers-Cache-Android\" width=\"670\" height=\"503\" class=\"alignnone size-full wp-image-10249\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Clear-Your-Browsers-Cache-Android.jpg 670w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Clear-Your-Browsers-Cache-Android-300x225.jpg 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Clear-Your-Browsers-Cache-Android-620x465.jpg 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Clear-Your-Browsers-Cache-Android-300x225@2x.jpg 600w\" sizes=\"(max-width: 670px) 100vw, 670px\" \/><\/a><\/p>\n<h2>4. Remove unnecessary widgets and shortcuts<\/h2>\n<p>Android widgets are the useful stuffs, that makes you to reach to the important information without opening the application. They can added to your phone home screen. These widgets are getting refreshed periodically to query the data. For example, If you have an widget for getting the live football score, then it will need to refresh periodically. Which means that the widgets runs on the background. Which will lead to data and memory consumption. Delete all unused application shortcuts and widgets and keep it to minimal to improve your android phone performance.<\/p>\n<h2>5. Limit or disable background data<\/h2>\n<p>Most of the android application uses services to fetch latest information from internet. For example, Facebook app in android takes considerable amount of data even when it is in the background. It is not just Facebook only app, most others do the same. This will result in data cost as well as impact hugely on your battery.<\/p>\n<p>If your phone has Android 4.0 or above you can check your usage via the OS. If your phone is not currently running Android 4.0 or above you\u2019ll want to skip down to the next section where we talk about third-party monitoring tools.<\/p>\n<p>To\u00a0limit or\u00a0disable background data usage, navigate to <strong>Settings \u2013&gt; Wireless &amp; Networks \u2013&gt; Data Usage<\/strong>. You\u2019ll see a screen that looks something like the first screen:<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/limit-or-disable-background-data-usage-Android.jpg\"><img src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/limit-or-disable-background-data-usage-Android.jpg\" alt=\"limit-or-disable-background-data-usage-Android\" width=\"650\" height=\"346\" class=\"alignnone size-full wp-image-10248\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/limit-or-disable-background-data-usage-Android.jpg 650w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/limit-or-disable-background-data-usage-Android-300x160.jpg 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/limit-or-disable-background-data-usage-Android-620x330.jpg 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/limit-or-disable-background-data-usage-Android-300x160@2x.jpg 600w\" sizes=\"(max-width: 650px) 100vw, 650px\" \/><\/a><br \/>\n&nbsp;<\/p>\n","excerpt":"<p>Is your Android phone is sluggish? Here are couple of tips that will help to improve the\u00a0performance and responsiveness of your Android device. 1. Uninstall or disable unused apps Android phone shipped with many preloaded applications, which you may not be using frequently. Uninstall all the apps that are unused\u00a0and install the app only\u00a0as you [&hellip;]<\/p>\n","date":"2015-11-29 20:28:47","modified":"2016-05-29 20:35:52","categories":[{"id":299,"slug":"how-to","title":"How-Tos","description":"","parent":0,"post_count":14}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":10250,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android.jpg","slug":"how-to-speed-up-android","title":"how to speed up android","description":"","caption":"","parent":10246,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android.jpg","width":700,"height":467},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android-620x414.jpg","width":620,"height":414},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android.jpg","width":700,"height":467},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android.jpg","width":700,"height":467},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android.jpg","width":700,"height":467},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android.jpg","width":700,"height":467},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android.jpg","width":700,"height":467}}},{"id":10248,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/limit-or-disable-background-data-usage-Android.jpg","slug":"limit-or-disable-background-data-usage-android","title":"limit-or-disable-background-data-usage-Android","description":"","caption":"","parent":10246,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/limit-or-disable-background-data-usage-Android.jpg","width":650,"height":346},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/limit-or-disable-background-data-usage-Android-620x330.jpg","width":620,"height":330},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/limit-or-disable-background-data-usage-Android.jpg","width":650,"height":346},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/limit-or-disable-background-data-usage-Android.jpg","width":650,"height":346},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/limit-or-disable-background-data-usage-Android.jpg","width":650,"height":346},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/limit-or-disable-background-data-usage-Android.jpg","width":650,"height":346},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/limit-or-disable-background-data-usage-Android.jpg","width":650,"height":346}}},{"id":10249,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Clear-Your-Browsers-Cache-Android.jpg","slug":"clear-your-browsers-cache-android","title":"Clear-Your-Browsers-Cache-Android","description":"","caption":"","parent":10246,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Clear-Your-Browsers-Cache-Android.jpg","width":670,"height":503},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Clear-Your-Browsers-Cache-Android-620x465.jpg","width":620,"height":465},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Clear-Your-Browsers-Cache-Android.jpg","width":670,"height":503},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Clear-Your-Browsers-Cache-Android.jpg","width":670,"height":503},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Clear-Your-Browsers-Cache-Android.jpg","width":670,"height":503},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Clear-Your-Browsers-Cache-Android.jpg","width":670,"height":503}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"slide_template":["default"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4867015275"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:251:\"a:1:{i:0;a:9:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";}}\";"],"snapIP":["s:119:\"a:1:{i:0;a:4:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";}}\";"],"snapTW":["s:170:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android.jpg","width":700,"height":467},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android-620x414.jpg","width":620,"height":414},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android.jpg","width":700,"height":467},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android.jpg","width":700,"height":467},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android.jpg","width":700,"height":467},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android.jpg","width":700,"height":467},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/how-to-speed-up-android.jpg","width":700,"height":467}}},{"id":9996,"type":"post","slug":"how-to-display-text-overlay-on-a-responsive-image-in-bootstrap","url":"http:\/\/stacktips.com\/tutorials\/bootstrap\/how-to-display-text-overlay-on-a-responsive-image-in-bootstrap","status":"publish","title":"How to Display Text Overlay on a Responsive Image in Bootstrap","title_plain":"How to Display Text Overlay on a Responsive Image in Bootstrap","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Display Text Overlay on a Responsive Image in Bootstrap' data-link='http:\/\/stacktips.com\/tutorials\/bootstrap\/how-to-display-text-overlay-on-a-responsive-image-in-bootstrap' data-summary='Displaying text over an image thumbnail is one of the most common pattern used widely by most of the websites. In this tutorial, we will take a look into how to design a responsive grid of images using and display text over each image item.'><\/div>\n<p>Displaying text over an image thumbnail is one of the most common pattern used widely by most of the websites. In this tutorial, we will take a look into how to design a responsive grid of images using and display text over each image item.<\/p>\n<p>Bootstrap offers different ways to achieve this result. While some developers prefer to use a carousel with a single item others use CSS tricks.\u00a0In this example, we will use one of the easy way out.<\/p>\n<h3 style=\"text-align: center;\"><a href=\"http:\/\/stacktips.com\/text-overlay-on-image-in-bootstrap-demo\" target=\"_blank\">DEMO<\/a><\/h3>\n<div class=\"filename\">Complete Source Code<\/div>\n<pre class=\"prettyprint lang-html\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;title&gt;Bootstrap image Overlay&lt;\/title&gt;\r\n    &lt;meta content=\"width=device-width, initialscale=1\" name=\"viewport\"&gt;\r\n    &lt;link href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/css\/bootstrap.min.css\" rel=\"stylesheet\"&gt;\r\n    &lt;link href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/css\/bootstrap-theme.min.css\" rel=\"stylesheet\"&gt;\r\n    &lt;script src=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/js\/bootstrap.min.j\" type=\"text\/javascript\"&gt;\r\n    &lt;\/script&gt;\r\n    &lt;script src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/2.1.3\/jquery.min.js\" type=\"text\/javascript\"&gt;\r\n    &lt;\/script&gt;\r\n    &lt;style&gt;\r\n    .caption {\r\n        width:100%;\r\n        bottom: .3rem;\r\n        position: absolute;\r\n        background:#000;\r\n        background: -webkit-linear-gradient(bottom, #000 40%, rgba(0, 0, 0, 0) 100%) repeat scroll 0 0 rgba(0, 0, 0, 0);\r\n        background: -moz-linear-gradient(bottom, #000 40%, rgba(0, 0, 0, 0) 100%) repeat scroll 0 0 rgba(0, 0, 0, 0);\r\n        background: -o-linear-gradient(bottom, #000 40%, rgba(0, 0, 0, 0) 100%) repeat scroll 0 0 rgba(0, 0, 0, 0);\r\n        background: linear-gradient(to top, #000 40%, rgba(0, 0, 0, 0) 100%) repeat scroll 0 0 rgba(0, 0, 0, 0);\r\n    }\r\n\r\n    .thumbnail {\r\n        border: 0 none;\r\n        box-shadow: none;\r\n        margin:0;\r\n        padding:0;\r\n    }\r\n\r\n    .caption h4 {\r\n        color: #fff;\r\n        -webkit-font-smoothing: antialiased;\r\n    }\r\n    &lt;\/style&gt;\r\n&lt;\/head&gt;\r\n&lt;body&gt;\r\n    &lt;div class=\"conainer\" style=\"margin:20px;\"&gt;\r\n        &lt;div class=\" col-sm-12 row\"&gt;\r\n            &lt;div class=\"col-sm-4\"&gt;\r\n                &lt;div class=\"col-sm-12 thumbnail text-center\"&gt;\r\n                    &lt;img alt=\"\" class=\"img-responsive\" src=\r\n                    \"http:\/\/www.wallpapereast.com\/static\/images\/6801692-lovely-nature-wallpaper.jpg\"&gt;\r\n\r\n                    &lt;div class=\"caption\"&gt;\r\n                        &lt;h4&gt;Lorem ipsum dolor sit amet, consectetur&lt;\/h4&gt;\r\n                    &lt;\/div&gt;\r\n                &lt;\/div&gt;\r\n            &lt;\/div&gt;\r\n\r\n            &lt;div class=\"col-sm-4\"&gt;\r\n                &lt;div class=\"col-sm-12 thumbnail text-center\"&gt;\r\n                    &lt;img alt=\"\" class=\"img-responsive\" src=\r\n                    \"http:\/\/www.wallpapereast.com\/static\/images\/6801692-lovely-nature-wallpaper.jpg\"&gt;\r\n\r\n                    &lt;div class=\"caption\"&gt;\r\n                        &lt;h4&gt;Lorem ipsum dolor sit amet, consectetur&lt;\/h4&gt;\r\n                    &lt;\/div&gt;\r\n                &lt;\/div&gt;\r\n            &lt;\/div&gt;\r\n            \r\n            &lt;div class=\"col-sm-4\"&gt;\r\n                &lt;div class=\"col-sm-12 thumbnail text-center\"&gt;\r\n                    &lt;img alt=\"\" class=\"img-responsive\" src=\r\n                    \"http:\/\/www.wallpapereast.com\/static\/images\/6801692-lovely-nature-wallpaper.jpg\"&gt;\r\n\r\n                    &lt;div class=\"caption\"&gt;\r\n                        &lt;h4&gt;Lorem ipsum dolor sit amet, consectetur&lt;\/h4&gt;\r\n                    &lt;\/div&gt;\r\n                &lt;\/div&gt;\r\n            &lt;\/div&gt;\r\n        &lt;\/div&gt;\r\n    &lt;\/div&gt;\r\n&lt;\/body&gt;\r\n&lt;\/html&gt;\r\n<\/pre>\n","excerpt":"<p>Displaying text over an image thumbnail is one of the most common pattern used widely by most of the websites. In this tutorial, we will take a look into how to design a responsive grid of images using and display text over each image item.<\/p>\n","date":"2015-11-05 18:14:07","modified":"2015-11-05 18:14:07","categories":[{"id":281,"slug":"bootstrap","title":"Bootstrap","description":"","parent":297,"post_count":12}],"tags":[{"id":282,"slug":"css","title":"css","description":"","post_count":2},{"id":273,"slug":"html","title":"HTML","description":"","post_count":6}],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[{"id":8459,"name":"Randall West","url":"","date":"2016-03-29 23:26:00","content":"<p>Hard to imagine this code working with &#8220;conainer&#8221;<\/p>\n","parent":0},{"id":8529,"name":"Rajesh","url":"","date":"2016-05-30 22:02:00","content":"<p>How come its working without container class.<\/p>\n","parent":0}],"attachments":[],"comment_count":2,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["4237"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1101234213222165\";s:5:\"pDate\";s:19:\"2015-11-05 12:44:40\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"eba82fb21b61fd2cea04eb5f521f4f60\";s:5:\"pDate\";s:19:\"2015-11-05 12:44:42\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"652780859\";s:5:\"pDate\";s:19:\"2015-11-05 12:44:43\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"662249179998105600\";s:5:\"pDate\";s:19:\"2015-11-05 12:44:44\";}}\";"],"dsq_thread_id":["4291919858"],"minimaldog_user_liked":["a:1:{s:7:\"user-12\";i:12;}"],"minimaldog_post_like_count":["2"],"minimaldog_user_IP":["a:1:{s:15:\"ip-82.41.97.126\";s:12:\"82.41.97.126\";}"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_facebook":["0"],"fsb_social_linkedin":["0"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400}}},{"id":9000,"type":"post","slug":"7-commendable-html5-frameworks-that-augment-responsive-web-design","url":"http:\/\/stacktips.com\/tutorials\/html5\/7-commendable-html5-frameworks-that-augment-responsive-web-design","status":"publish","title":"7 Commendable HTML5 Frameworks That Augment Responsive Web Design","title_plain":"7 Commendable HTML5 Frameworks That Augment Responsive Web Design","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='7 Commendable HTML5 Frameworks That Augment Responsive Web Design' data-link='http:\/\/stacktips.com\/tutorials\/html5\/7-commendable-html5-frameworks-that-augment-responsive-web-design' data-summary=''><\/div>\n<p>Not long ago, developing a full-fledged website while ensuring its cross-browser compatibility was considered as one of the most tedious jobs. However, the evolution of web design frameworks entailed with the latest technology has made the task much efficient and simpler. These frameworks have eradicated the need to manually write the code again and again when needed, as they include predefined codes. They, thus, scrutinize the web development process, and make it easier and faster.<\/p>\n<p>In this mobile age, the significance of a responsive web design cannot be ignored. Since, with this design approach, your websites can proficiently scale to a variety of websites, you can proficiently target a gigantic audience base. Moreover, while ensuring a smooth and flawless performance of your site on any device, it also enhances the visibility of your site on the web.<\/p>\n<p>Fortunately, there are several HTML5 frameworks that buttress the responsive website development. In this post, I have enlisted a few of the most recommended HTML5 frameworks that every web developer or designer must know. Let&#8217;s explore them briefly.<\/p>\n<h2>1. Foundation<\/h2>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation.png\"><img class=\"aligncenter wp-image-9008 size-large\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation-940x373.png\" alt=\"html5 framework foundation\" width=\"660\" height=\"262\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation-940x373.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation-300x119.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation-620x246.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation-800x318.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation-900x357.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation-370x147.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation.png 952w\" sizes=\"(max-width: 660px) 100vw, 660px\" \/><\/a>You might have heard about the <a href=\"http:\/\/foundation.zurb.com\" target=\"_blank\">Foundation<\/a> framework before, as it is one of the most popular responsive framework available out there. It offers a slew of HTML and CSS based design templates for UI components, including buttons, typography, navigation, and more. With this framework, you can easily create even complicated design layouts without delving deep into the creation of a plethora of custom elements. It supports up to 12 column grid that can scale down to fit any size. It is loaded with brilliant features like Off Canvas, Flex, Video, Interchange and a lot more.<\/p>\n<h2>2. Bootstrap<\/h2>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap.png\"><img class=\"wp-image-9713 size-medium aligncenter\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap-620x280.png\" alt=\"Bootstrap\" width=\"620\" height=\"280\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap-620x280.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap-300x136.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap-800x362.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap-900x407.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap-370x167.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap.png 911w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><br \/>\n<a href=\"http:\/\/getbootstrap.com\" target=\"_blank\">Bootstrap<\/a> is an amazing framework that is popular among web professionals for delivering outstanding front end web solutions. It expedites the web development and makes it extremely easy to design the look and feel of a website in a desired way. It is HTML and CSS compliant, and allows one to design intuitive and enticing interfaces with UI components like carousels, forms, typography, navigations, buttons, tabs, and so forth. Most importantly, it supports responsive design, thus you can efficiently create a responsive website.<\/p>\n<h2>3. HTML5 Boilerpoint<\/h2>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint.png\"><img class=\"aligncenter wp-image-9009 size-large\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint-940x373.png\" alt=\"html5 framework boilerpoint\" width=\"660\" height=\"262\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint-940x373.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint-300x119.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint-620x246.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint-800x318.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint-900x357.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint-370x147.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint.png 952w\" sizes=\"(max-width: 660px) 100vw, 660px\" \/><\/a><br \/>\nHTML5 <a href=\"https:\/\/html5boilerplate.com\" target=\"_blank\">Boilerpoint<\/a> is a powerful front-end template framework that offers fast and highly adaptable web solutions. It offers a sleek HTML template with an optimized Google Analytics snippet and responsive design. It is based on the HTML5 and CSS technologies. You can deploy this framework and get started with your new projects with ease and a great efficiency.<\/p>\n<h2>4. Skeleton<\/h2>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton.png\"><img class=\"aligncenter wp-image-9010 size-large\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton-940x373.png\" alt=\"html5 framework skeleton\" width=\"660\" height=\"262\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton-940x373.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton-300x119.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton-620x246.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton-800x318.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton-900x357.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton-370x147.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton.png 952w\" sizes=\"(max-width: 660px) 100vw, 660px\" \/><\/a><br \/>\nThis powerful framework only features an array of standard HTML elements and a grid. For this reason, it makes a great choice for accomplishing the front-end website designing needs of a smaller project or for the projects that don&#8217;t require components and features included in any larger frameworks. The framework is extremely lightweight, embracing around 400 lines of code and offers an invaluable solution for developing simple websites for mobile. Although it is not a UI framework, it is a great tool to get started. You can efficiently start working on this framework, as it hardly requires compilation and installation. Get more info from <a href=\"http:\/\/getskeleton.com\" target=\"_blank\">Skeleton<\/a> website.<\/p>\n","excerpt":"<p>Not long ago, developing a full-fledged website while ensuring its cross-browser compatibility was considered as one of the most tedious jobs. However, the evolution of web design frameworks entailed with the latest technology has made the task much efficient and simpler. These frameworks have eradicated the need to manually write the code again and again [&hellip;]<\/p>\n","date":"2015-11-05 15:20:41","modified":"2016-06-11 00:38:59","categories":[{"id":131,"slug":"html5","title":"HTML5","description":"","parent":297,"post_count":5},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[{"id":273,"slug":"html","title":"HTML","description":"","post_count":6},{"id":36,"slug":"javascript","title":"JavaScript","description":"","post_count":5}],"author":{"id":854,"slug":"guest","name":"Guest","first_name":"Guest","last_name":"Blogger","nickname":"guest","url":"","description":""},"comments":[{"id":8056,"name":"Lucy Barret","url":"http:\/\/www.hirewpgeeks.com","date":"2015-06-30 17:21:00","content":"<p>Good post Jack Calder. I found it useful as the post is well written.<\/p>\n","parent":0},{"id":8061,"name":"jackcalder","url":"http:\/\/www.markupcloud.com\/","date":"2015-07-02 14:36:00","content":"<p>Thanks&#8230;for your appreciation.<\/p>\n","parent":8056}],"attachments":[{"id":9014,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Html5-responsive-design-frameworks.png","slug":"html5-responsive-design-frameworks","title":"Html5 responsive design frameworks","description":"Html5 responsive design frameworks","caption":"","parent":9000,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Html5-responsive-design-frameworks.png","width":810,"height":437},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Html5-responsive-design-frameworks-620x334.png","width":620,"height":334},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Html5-responsive-design-frameworks.png","width":810,"height":437},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Html5-responsive-design-frameworks.png","width":810,"height":437},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Html5-responsive-design-frameworks.png","width":810,"height":437},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Html5-responsive-design-frameworks.png","width":810,"height":437},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Html5-responsive-design-frameworks.png","width":810,"height":437}}},{"id":9006,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap.jpg","slug":"html5-framework-bootstrap","title":"html5 framework bootstrap","description":"html5 framework bootstrap","caption":"","parent":9000,"mime_type":"image\/jpeg","images":[]},{"id":9008,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation.png","slug":"html5-framework-foundation","title":"html5 framework foundation","description":"html5 framework foundation","caption":"","parent":9000,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation.png","width":952,"height":378},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation-620x246.png","width":620,"height":246},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation.png","width":952,"height":378},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation.png","width":952,"height":378},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-foundation.png","width":952,"height":378}}},{"id":9009,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint.png","slug":"html5-framework-boilerpoint","title":"html5 framework  boilerpoint","description":"","caption":"","parent":9000,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint.png","width":952,"height":378},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint-620x246.png","width":620,"height":246},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint.png","width":952,"height":378},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint.png","width":952,"height":378},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-boilerpoint.png","width":952,"height":378}}},{"id":9010,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton.png","slug":"html5-framework-skeleton","title":"html5 framework skeleton","description":"html5 framework skeleton","caption":"","parent":9000,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton.png","width":952,"height":378},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton-620x246.png","width":620,"height":246},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton.png","width":952,"height":378},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton.png","width":952,"height":378},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-skeleton.png","width":952,"height":378}}},{"id":9011,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-kickstart.png","slug":"html5-framework-kickstart","title":"html5 framework kickstart","description":"html5 framework kickstart","caption":"","parent":9000,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-kickstart.png","width":952,"height":378},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-kickstart-620x246.png","width":620,"height":246},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-kickstart.png","width":952,"height":378},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-kickstart.png","width":952,"height":378},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-kickstart.png","width":952,"height":378}}},{"id":9012,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-webstarter-kit.png","slug":"html5-framework-webstarter-kit","title":"html5 framework webstarter kit","description":"html5 framework webstarter kit","caption":"","parent":9000,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-webstarter-kit.png","width":952,"height":378},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-webstarter-kit-620x246.png","width":620,"height":246},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-webstarter-kit.png","width":952,"height":378},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-webstarter-kit.png","width":952,"height":378},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-webstarter-kit.png","width":952,"height":378}}},{"id":9013,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-uikit.png","slug":"html5-framework-uikit","title":"html5 framework uikit","description":"html5 framework uikit","caption":"","parent":9000,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-uikit.png","width":952,"height":378},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-uikit-620x246.png","width":620,"height":246},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-uikit.png","width":952,"height":378},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-uikit.png","width":952,"height":378},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-uikit.png","width":952,"height":378}}},{"id":9713,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap.png","slug":"html5-framework-bootstrap-2","title":"html5-framework-bootstrap","description":"Bootstrap","caption":"","parent":9000,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap.png","width":911,"height":412},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap-620x280.png","width":620,"height":280},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap.png","width":911,"height":412},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap.png","width":911,"height":412},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/html5-framework-bootstrap.png","width":911,"height":412}}}],"comment_count":2,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["2563"],"dsq_thread_id":["3823150383"],"fsb_social_facebook":["2"],"fsb_social_twitter":["7"],"fsb_social_google":["6"],"fsb_social_linkedin":["0"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:237:\"a:1:{i:0;a:8:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:243:\"a:1:{i:0;a:9:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:111:\"a:1:{i:0;a:4:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:162:\"a:1:{i:0;a:6:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Mobile-Frameworks-HTML-CSS.jpeg","width":1050,"height":557},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Mobile-Frameworks-HTML-CSS-620x329.jpeg","width":620,"height":329},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Mobile-Frameworks-HTML-CSS.jpeg","width":1050,"height":557},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Mobile-Frameworks-HTML-CSS.jpeg","width":1050,"height":557}}},{"id":10256,"type":"post","slug":"how-to-enable-usb-debugging-and-developer-options-in-android-4-2-and-higher","url":"http:\/\/stacktips.com\/how-to\/how-to-enable-usb-debugging-and-developer-options-in-android-4-2-and-higher","status":"publish","title":"How to Enable USB Debugging and Developer Options in Android 4.2 and Higher","title_plain":"How to Enable USB Debugging and Developer Options in Android 4.2 and Higher","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Enable USB Debugging and Developer Options in Android 4.2 and Higher' data-link='http:\/\/stacktips.com\/how-to\/how-to-enable-usb-debugging-and-developer-options-in-android-4-2-and-higher' data-summary='If you&#039;re an developer, I am sure the first thing you will do after you buying your brand new Android phone is to enable the developer options...'><\/div>\n<p>If you&#8217;re an developer, I am sure the first thing you will do after you buying your brand new Android phone is to enable the developer options. But you will notice that the the developer option is not available beforehand in your device settings for Android 4.2 and higher.<\/p>\n<p>In all earlier versions of Android you can simply hop into the settings menu and go to developer options preference to enable the USB debugging. But in the latest versions of Android, Google has hidden the developer options so that non-develoeprs unintentionally won\u2019t mess up their devices.<\/p>\n<p>Here are the steps to enable the Developer Options on your phone.<\/p>\n<ol>\n<li>Go to <strong>Settings<\/strong> menu on your device.<\/li>\n<li>Go to <strong>About<\/strong> submenu. In some devices the About submenu will be under <strong>More<\/strong>\/<strong>General<\/strong>\u00a0submenu. On some other devices (On HTC devices you will have to goto <strong>Settings<\/strong> &gt; <strong>About<\/strong>&gt; <strong>Software Information\u00a0<\/strong>&gt; <strong>More<\/strong>)<\/li>\n<li>Now scroll to <strong>Build Number<\/strong>\u00a0and tap it 7 times.<\/li>\n<li>After tapping 7 times you will see an alert saying <strong>You are now a developer\u00a0<\/strong>or<strong>\u00a0Developer mode has been enabled<\/strong>.<\/li>\n<li>Now if you go to your <strong>Settings<\/strong> menu, you will see the developer options submenu over there.<\/li>\n<li>Tap on the <strong>Developer<\/strong> options and then turn on <strong>USB Debugging<\/strong>.<\/li>\n<\/ol>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/USB-Debugging-Android.png\"><img class=\"alignnone size-large wp-image-10257\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/USB-Debugging-Android-940x392.png\" alt=\"USB-Debugging-Android\" width=\"900\" height=\"375\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/USB-Debugging-Android-940x392.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/USB-Debugging-Android-300x125.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/USB-Debugging-Android-620x258.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/USB-Debugging-Android-768x320.png 768w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/USB-Debugging-Android.png 960w, http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/USB-Debugging-Android-300x125@2x.png 600w\" sizes=\"(max-width: 900px) 100vw, 900px\" \/><\/a><br \/>\nBingo! Now you&#8217;re a developer. You can now be able to connect your device to your computer and do your development experiment.<\/p>\n","excerpt":"<p>If you&#8217;re an developer, I am sure the first thing you will do after you buying your brand new Android phone is to enable the developer options&#8230;<\/p>\n","date":"2015-10-29 20:38:06","modified":"2016-06-11 00:39:02","categories":[{"id":299,"slug":"how-to","title":"How-Tos","description":"","parent":0,"post_count":14}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":10257,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/USB-Debugging-Android.png","slug":"usb-debugging-android","title":"USB-Debugging-Android","description":"","caption":"","parent":10256,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/USB-Debugging-Android.png","width":960,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/USB-Debugging-Android-620x258.png","width":620,"height":258},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/USB-Debugging-Android-768x320.png","width":768,"height":320},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/USB-Debugging-Android.png","width":960,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/USB-Debugging-Android.png","width":960,"height":400}}},{"id":10258,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android.jpeg","slug":"how-to-speedup-your-android","title":"How-to-speedup-your-android","description":"","caption":"","parent":10256,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android.jpeg","width":640,"height":412},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android-620x399.jpeg","width":620,"height":399},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android.jpeg","width":640,"height":412},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android.jpeg","width":640,"height":412},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android.jpeg","width":640,"height":412},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android.jpeg","width":640,"height":412},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android.jpeg","width":640,"height":412}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"slide_template":["default"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4869907971"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:392:\"a:1:{i:0;a:13:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1226863033992615\";s:5:\"pDate\";s:19:\"2016-05-29 15:14:13\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"729947650\";s:5:\"pDate\";s:19:\"2016-05-29 15:14:15\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"736938630829084673\";s:5:\"pDate\";s:19:\"2016-05-29 15:13:56\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android.jpeg","width":640,"height":412},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android-620x399.jpeg","width":620,"height":399},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android.jpeg","width":640,"height":412},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android.jpeg","width":640,"height":412},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android.jpeg","width":640,"height":412},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android.jpeg","width":640,"height":412},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/How-to-speedup-your-android.jpeg","width":640,"height":412}}},{"id":9985,"type":"post","slug":"bootstrap-grid-system-example","url":"http:\/\/stacktips.com\/tutorials\/bootstrap\/bootstrap-grid-system-example","status":"publish","title":"Bootstrap Grid System Example","title_plain":"Bootstrap Grid System Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Bootstrap Grid System Example' data-link='http:\/\/stacktips.com\/tutorials\/bootstrap\/bootstrap-grid-system-example' data-summary='Bootstrap framework offers grid system with extensive use of div element which is dynamically compatible with all devices and screens.'><\/div>\n<p>Bootstrap framework offers grid system with extensive use of div element which is dynamically compatible with all devices and screens. The main advantage of grid systems you get rid of the traditional HTML Tables as far as possible and use fluid div elements.<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#bootstrap-grid-classes\">Bootstrap Grid Classes<\/a><\/li><li><a href=\"#grid-system-rules\">Grid System Rules<\/a><\/li><li><a href=\"#structure-of-a-bootstrap-grid\">Structure of a Bootstrap Grid<\/a><\/li><\/ul><\/div>\n<\/p>\n<p>The basic architecture of the grid system is that the screen is horizontally divided into maximum 12 columns (logically).It means grid system allows up to 12 columns across the page .If you don\u2019t want to use all 12 column individually, you can group the columns together to create wider columns.<\/p>\n<h2><span id=\"bootstrap-grid-classes\">Bootstrap Grid Classes<\/span><\/h2>\n<p>The Bootstrap grid system has four classes, they are\u00a0xs,\u00a0sm,\u00a0md and\u00a0lg.\u00a0These provided classes are used to create each combination of columns \u2013for each device size. Remember that grid columns should add up to twelve for a row. More than that, columns will stack no matter the viewport.<\/p>\n<p>The following matrix illustrates this:<\/p>\n<table>\n<tbody>\n<tr>\n<td><strong>Class Names<\/strong><\/td>\n<td><strong>Description<\/strong><\/td>\n<\/tr>\n<tr>\n<td>.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1<\/td>\n<td>Classes to use to consume one column in the corresponding device size.<\/td>\n<\/tr>\n<tr>\n<td>.col-xs-2, .col-sm-2, .col-md-2, .col-lg-2<\/td>\n<td>Classes to use to consume two columns in the corresponding device size.<\/td>\n<\/tr>\n<tr>\n<td>.col-xs-3, .col-sm-3, .col-md-3, .col-lg-3<\/td>\n<td>Classes to use to consume three columns in the corresponding device size.<\/td>\n<\/tr>\n<tr>\n<td>.col-xs-4, .col-sm-4, .col-md-4, .col-lg-4<\/td>\n<td>Classes to use to consume four columns in the corresponding device size.<\/td>\n<\/tr>\n<tr>\n<td>.col-xs-5, .col-sm-5, .col-md-5, .col-lg-5<\/td>\n<td>Classes to use to consume five columns in the corresponding device size.<\/td>\n<\/tr>\n<tr>\n<td>.col-xs-6, .col-sm-6, .col-md-6, .col-lg-6<\/td>\n<td>Classes to use to consume six columns in the corresponding device size.<\/td>\n<\/tr>\n<tr>\n<td>.col-xs-7, .col-sm-7, .col-md-7, .col-lg-7<\/td>\n<td>Classes to use to consume seven columns in the corresponding device size.<\/td>\n<\/tr>\n<tr>\n<td>.col-xs-8, .col-sm-8, .col-md-8, .col-lg-8<\/td>\n<td>Classes to use to consume eight columns in the corresponding device size.<\/td>\n<\/tr>\n<tr>\n<td>.col-xs-9, .col-sm-9, .col-md-9, .col-lg-9<\/td>\n<td>Classes to use to consume nine columns in the corresponding device size.<\/td>\n<\/tr>\n<tr>\n<td>.col-xs-10, .col-sm-10, .col-md-10, .col-lg-10<\/td>\n<td>Classes to use to consume ten columns in the corresponding device size.<\/td>\n<\/tr>\n<tr>\n<td>.col-xs-11, .col-sm-11, .col-md-11, .col-lg-11<\/td>\n<td>Classes to use to consume eleven columns in the corresponding device size.<\/td>\n<\/tr>\n<tr>\n<td>.col-xs-12, .col-sm-12, .col-md-12, .col-lg-12<\/td>\n<td>Classes to use to consume twelve columns in the corresponding device size.<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<h2><span id=\"grid-system-rules\">Grid System Rules<\/span><\/h2>\n<p>Some Boot strap grid system rules,<\/p>\n<ul>\n<li>Rows must be placed within a .container (fixed-width) or .container-fluid (full-width) for proper alignment and padding.<\/li>\n<li>Use Rows to create horizontal groups of columns<\/li>\n<li>Content should be placed within columns, and only columns may be immediate children of rows<\/li>\n<li>Predefined classes like .row and .col-sm-4 are available for quickly making grid layouts.<\/li>\n<li>Columns create gutters (gaps between column content) via padding. That padding is offset in rows for the first and last column via negative margin on .rows<\/li>\n<li>Grid columns are created by specifying the number of 12 available columns you wish to span. For example, three equal columns would use three\u00a0.col-sm-4<\/li>\n<\/ul>\n<h2><span id=\"structure-of-a-bootstrap-grid\">Structure of a Bootstrap Grid<\/span><\/h2>\n<p>The following is the basic structure of the Bootstrap grid,<\/p>\n<pre class=\"prettyprint lang-html\">&lt;div class=\"container\"&gt;\r\n  &lt;div class=\"row\"&gt;\r\n    &lt;div class=\"col-*-*\"&gt;&lt;\/div&gt;\r\n  &lt;\/div&gt;\r\n  &lt;div class=\"row\"&gt;\r\n    &lt;div class=\"col-*-*\"&gt;&lt;\/div&gt;\r\n    &lt;div class=\"col-*-*\"&gt;&lt;\/div&gt;\r\n    &lt;div class=\"col-*-*\"&gt;&lt;\/div&gt;\r\n  &lt;\/div&gt;\r\n  &lt;div class=\"row\"&gt;\r\n    ...\r\n  &lt;\/div&gt;\r\n&lt;\/div&gt;\r\n<\/pre>\n<p>Let\u2019s see with more Examples,<\/p>\n<p><strong>Scenario: 1<\/strong><br \/>\nSuppose we want to create three equal columns \u2013 irrespective of all device sizes. The code for this is as follows:<\/p>\n<pre class=\"prettyprint lang-html\">&lt;div class=\"row\"&gt;\r\n  &lt;div class=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\"&gt;   \r\n Column 1: col-xs-4 col-sm-4 col-md-4 col-lg-4 \r\n &lt;\/div&gt; \r\n &lt;div class=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\"&gt;    \r\nColumn 2: col-xs-4 col-sm-4 col-md-4 col-lg-4 \r\n &lt;\/div&gt; \r\n &lt;div class=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\"&gt;  \r\n  Column 3: col-xs-4 col-sm-4 col-md-4 col-lg-4  \r\n&lt;\/div&gt; \r\n&lt;\/div&gt;\r\n<\/pre>\n<p>The output of the above code,<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example1.png\"><img class=\"alignnone size-medium wp-image-9989\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example1-620x127.png\" alt=\"Bootstrap Grid Sample Example1\" width=\"620\" height=\"127\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example1-620x127.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example1-300x62.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example1-370x76.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example1.png 657w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<p>Note: Make sure that the sum always adds up to 12.<br \/>\n<strong>Scenario: 2<\/strong><br \/>\nIn the below code we are displaying only first two column in smaller screen and the third column will not be displayed. This is why we mentioned col-xs-6 in two columns, which is sum as 12.<\/p>\n<pre class=\"prettyprint lang-html\">&lt;div class=\"row\"&gt;\r\n&lt;div class=\"col-xs-6 col-sm-4 col-md-4 col-lg-4\" style=\"background-color:#F0B2D1;\"&gt;  \r\nColumn 1: display-xs,display-sm,display-md,display-lg \r\n&lt;\/div&gt;\r\n&lt;div class=\"col-xs-6 col-sm-4 col-md-4 col-lg-4\" style=\"background-color:#E066A3;\"&gt;  \r\nColumn 2: display-xs,display-sm,display-md,display-lg  \r\n&lt;\/div&gt;  \r\n&lt;div class=\"hidden-xs col-sm-4 col-md-4 col-lg-4\" style=\"background-color:#D11975;\"&gt;  \r\nColumn 3: hidden-xs,display-sm,display-md,display-lg \r\n&lt;\/div&gt;\r\n<\/pre>\n<p>The output of the above code<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2.png\"><img class=\"alignnone size-large wp-image-9990\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2-940x336.png\" alt=\"Bootstrap Grid Sample Example2\" width=\"660\" height=\"236\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2-940x336.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2-300x107.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2-620x221.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2-800x286.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2-900x321.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2-370x132.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2.png 941w\" sizes=\"(max-width: 660px) 100vw, 660px\" \/><\/a><\/p>\n<p><strong>Scenario 3:<\/strong><br \/>\nIn smaller screens we need all the columns to be vertical. In medium screens first two columns should consume more space while in large screens they should be equal. Here is the code,<\/p>\n<pre class=\"prettyprint lang-html\">&lt;div class=\"row\"&gt;\r\n&lt;div class=\"col-xs-12 col-sm-5 col-md-5 col-lg-4\" style=\"background-color:#F0B2D1;\"&gt;  \r\n Column 1: vertical display-xs,column 1: large area display-sm,column 1: large area display-md,display-lg \r\n&lt;\/div&gt;\r\n&lt;div class=\"col-xs-12 col-sm-5 col-md-5 col-lg-4\" style=\"background-color:#E066A3;\"&gt;  \r\nColumn 2: Vertical display-xs,column 2: large area display-sm,column 2: large area display-md,display-lg  \r\n&lt;\/div&gt;  \r\n&lt;div class=\"col-xs-12 col-sm-2 col-md-2 col-lg-4\" style=\"background-color:#D11975;\"&gt;  \r\nColumn 3: Vertical display-xs,column 3: small area display-sm,column31: small areadisplay-md,display-lg \r\n&lt;\/div&gt; \r\n&lt;\/div&gt;\r\n<\/pre>\n<p>The output of the above code,<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example3.png\"><img class=\"alignnone size-large wp-image-9991\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example3-940x443.png\" alt=\"Bootstrap Grid Sample Example3\" width=\"660\" height=\"311\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example3.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example3-300x141.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example3-620x292.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example3-800x377.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example3-900x424.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example3-370x174.png 370w\" sizes=\"(max-width: 660px) 100vw, 660px\" \/><\/a><\/p>\n<pre class=\"prettyprint lang-html\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;Bootstrap responsive image example - JavaTechig&lt;\/title&gt;\r\n&lt;link href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/css\/bootstrap.min.css\" rel=\"stylesheet\"&gt;\r\n&lt;link href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/css\/bootstrap-theme.min.css\" rel=\"stylesheet\"&gt;\r\n&lt;script type=\"text\/javascript\" src=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/js\/bootstrap.min.js\"&gt;&lt;\/script&gt;\r\n&lt;script type=\"text\/javascript\" src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/2.1.3\/jquery.min.js\"&gt;&lt;\/script&gt;\r\n&lt;\/head&gt; \r\n     &lt;body&gt;\r\n       &lt;div class=\"container\"&gt;\r\n        &lt;div class=\"row\"&gt;\r\n        &lt;div class=\"col-xs-12 col-sm-5 col-md-5 col-lg-4\" style=\"min-height:200px;background-color:#F0B2D1;\"&gt;  \r\n          Column 1: vertical display-xs,column 1: large area display-sm,column 1: large area display-md,display-lg \r\n        &lt;\/div&gt;\r\n        &lt;div class=\"col-xs-12 col-sm-5 col-md-5 col-lg-4\" style=\"min-height:200px;background-color:#E066A3;\"&gt;  \r\n        Column 2: Vertical display-xs,column 2: large area display-sm,column 2: large area display-md,display-lg  \r\n        &lt;\/div&gt;  \r\n        &lt;div class=\"col-xs-12 col-sm-2 col-md-2 col-lg-4\" style=\"min-height:200px;background-color:#D11975;\"&gt;  \r\n        Column 3: Vertical display-xs,column 3: small area display-sm,column31: small areadisplay-md,display-lg \r\n\t\t    &lt;\/div&gt; \r\n\t     &lt;\/div&gt;\r\n      &lt;\/div&gt;\r\n    &lt;\/body&gt;\r\n&lt;\/html&gt;\r\n<\/pre>\n<p>One of the most important points here is that the total size of the columns must always be 12 \u2013 if it is less than 12, some space will be left unused, if it is more than 12, the last placeholder will be wrapped in the next line.<\/p>\n<p>As you can see in the above examples, the width (and visibility) of the three columns are being automatically controlled by the classes as per the target device and screen size. Hence, Bootstrap\u2019s grid system enables you to create tabular layouts for all the device sizes quite effortlessly, and without any extra complex CSS\/ JavaScript coding.<\/p>\n","excerpt":"<p>Bootstrap framework offers grid system with extensive use of div element which is dynamically compatible with all devices and screens. <\/p>\n","date":"2015-10-27 09:28:45","modified":"2015-10-27 16:32:16","categories":[{"id":281,"slug":"bootstrap","title":"Bootstrap","description":"","parent":297,"post_count":12}],"tags":[{"id":273,"slug":"html","title":"HTML","description":"","post_count":6}],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":9989,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example1.png","slug":"bootstrap-grid-sample-example1","title":"Bootstrap Grid Sample Example1","description":"Bootstrap Grid Sample Example1","caption":"","parent":9985,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example1.png","width":657,"height":135},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example1-620x127.png","width":620,"height":127},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example1.png","width":657,"height":135},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example1.png","width":657,"height":135},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example1.png","width":657,"height":135},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example1.png","width":657,"height":135},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example1.png","width":657,"height":135}}},{"id":9990,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2.png","slug":"bootstrap-grid-sample-example2","title":"Bootstrap Grid Sample Example2","description":"Bootstrap Grid Sample Example2","caption":"","parent":9985,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2.png","width":941,"height":336},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2-620x221.png","width":620,"height":221},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2.png","width":941,"height":336},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2.png","width":941,"height":336},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example2.png","width":941,"height":336}}},{"id":9991,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example3.png","slug":"bootstrap-grid-sample-example3","title":"Bootstrap Grid Sample Example3","description":"Bootstrap Grid Sample Example3","caption":"","parent":9985,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example3.png","width":940,"height":443},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example3-620x292.png","width":620,"height":292},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example3.png","width":940,"height":443},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example3.png","width":940,"height":443},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Grid-Sample-Example3.png","width":940,"height":443}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1743"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapTW":["s:153:\"a:1:{i:0;a:5:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1097468860265367\";s:5:\"pDate\";s:19:\"2015-10-27 11:02:21\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"3a1e6a1d4c5b79115024f993771b38c0\";s:5:\"pDate\";s:19:\"2015-10-27 11:02:21\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"649334588\";s:5:\"pDate\";s:19:\"2015-10-27 11:02:27\";}}\";"],"dsq_thread_id":["4263753840"],"minimaldog_user_IP":["a:1:{s:15:\"ip-82.41.97.126\";s:12:\"82.41.97.126\";}"],"minimaldog_post_like_count":["1"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_facebook":["0"],"fsb_social_linkedin":["0"],"snapImportedFBComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400}}},{"id":9979,"type":"post","slug":"rendering-responsive-images-using-bootstrap","url":"http:\/\/stacktips.com\/tutorials\/bootstrap\/rendering-responsive-images-using-bootstrap","status":"publish","title":"Rendering Responsive Images Using Bootstrap","title_plain":"Rendering Responsive Images Using Bootstrap","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Rendering Responsive Images Using Bootstrap' data-link='http:\/\/stacktips.com\/tutorials\/bootstrap\/rendering-responsive-images-using-bootstrap' data-summary=''><\/div>\n<p>The <strong>.img-responsive<\/strong>\u00a0bootstrap class provides the ability to control the image rendering as per the available space and screen size. Ideally except images, most of the other HTML elements respond to the target device automatically when you include the Bootstrap CSS in your pages. However in case of images, you need to add this class manually.<\/p>\n<p>Following are the &lt;img&gt; classes which can be used to style any image.<\/p>\n<ul>\n<li><strong>.img-rounded<\/strong>: Adds round corners to an image<\/li>\n<li><strong>.img-circle<\/strong>: Shapes the images to a circle<\/li>\n<li><strong>.img-thumbnail<\/strong>: Shapes the images to a thumbnail<\/li>\n<li><strong>.img-responsive<\/strong>: makes an image responsive. The image will scale nicely to the parent element.<\/li>\n<\/ul>\n<p><strong>Example<\/strong><\/p>\n<pre class=\"prettyprint lang-html\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;Bootstrap responsive image example - JavaTechig&lt;\/title&gt;\r\n&lt;link href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/css\/bootstrap.min.css\" rel=\"stylesheet\"&gt;\r\n&lt;link href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/css\/bootstrap-theme.min.css\" rel=\"stylesheet\"&gt;\r\n&lt;script type=\"text\/javascript\" src=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/js\/bootstrap.min.js\"&gt;&lt;\/script&gt;\r\n&lt;script type=\"text\/javascript\" src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/2.1.3\/jquery.min.js\"&gt;&lt;\/script&gt;\r\n&lt;\/head&gt; \r\n     &lt;body&gt;\r\n       &lt;div class=\"container\"&gt;\r\n         &lt;div class=\"page-header\"&gt;&lt;h1&gt;Hello Bootstrap!!&lt;\/h1&gt;&lt;\/div&gt;\r\n         &lt;div class=\"row\"&gt;\r\n\r\n          &lt;!-- Start content panel --&gt;\r\n           &lt;div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"&gt;\r\n           \r\n           &lt;ul class=\"list-inline\"&gt;\r\n              &lt;li&gt;&lt;img src=\"images\/son.jpg\" class=\"img-responsive\" &gt;&lt;\/li&gt;\r\n              &lt;li&gt;&lt;img src=\"images\/son.jpg\" class=\"img-responsive\" &gt;&lt;\/li&gt;\r\n          &lt;\/ul&gt;\r\n\r\n\t\t  &lt;ul class = \"list-inline\"&gt;\r\n          &lt;li&gt;&lt;img src=\"images\/temple.jpg\" class=\"img-rounded img-responsive\"&gt;&lt;\/li&gt;\r\n          &lt;li&gt;&lt;img src=\"images\/son.jpg\" class=\"img-circle img-responsive\"&gt;&lt;\/li&gt;\r\n          &lt;li&gt;&lt;img src=\"images\/rock.jpg\" class=\"img-thumbnail img-responsive\"&gt;&lt;\/li&gt;\r\n\t\t  &lt;\/ul&gt;\r\n         &lt;\/div&gt; &lt;!-- End row --&gt; \r\n       &lt;\/div&gt; &lt;!-- End container --&gt;\r\n\r\n      &lt;!-- Start footer --&gt;\r\n       &lt;div id=\"footer\"&gt;\r\n         &lt;div class=\"container\"&gt;\r\n           &lt;div class=\"text-muted pull-left\"&gt;&lt;a href=\"http:\/\/stacktips.com\" target=\"_blank\"&gt;stacktips.com&lt;\/a&gt;&lt;\/div&gt;\r\n           &lt;div class=\"text-muted pull-right\"&gt;&lt;a href=\"http:\/\/twitter.com\/npanigrahy\" target=\"_blank\"&gt;Follow me on twitter&lt;\/a&gt;&lt;\/div&gt;\r\n         &lt;\/div&gt;\r\n       &lt;\/div&gt;\r\n       &lt;!-- End footer --&gt;\r\n     &lt;\/body&gt;\r\n&lt;\/html&gt;\r\n<\/pre>\n<p>Output<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap.png\"><img class=\"alignnone size-full wp-image-9982\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap.png\" alt=\"Rendering Responsive Images Using Bootstrap\" width=\"1062\" height=\"705\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap.png 1062w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap-300x199.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap-620x412.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap-940x624.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap-800x531.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap-1000x664.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap-900x597.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap-370x246.png 370w\" sizes=\"(max-width: 1062px) 100vw, 1062px\" \/><\/a><\/p>\n","excerpt":"<p>The .img-responsive\u00a0bootstrap class provides the ability to control the image rendering as per the available space and screen size. Ideally except images, most of the other HTML elements respond to the target device automatically when you include the Bootstrap CSS in your pages. However in case of images, you need to add this class manually. [&hellip;]<\/p>\n","date":"2015-10-27 09:00:41","modified":"2015-10-27 16:30:33","categories":[{"id":281,"slug":"bootstrap","title":"Bootstrap","description":"","parent":297,"post_count":12}],"tags":[{"id":273,"slug":"html","title":"HTML","description":"","post_count":6},{"id":289,"slug":"responsive","title":"Responsive","description":"","post_count":1}],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":9982,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap.png","slug":"rendering-responsive-images-using-bootstrap","title":"Rendering Responsive Images Using Bootstrap","description":"Rendering Responsive Images Using Bootstrap","caption":"","parent":9979,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap.png","width":1062,"height":705},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap-620x412.png","width":620,"height":412},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap.png","width":1062,"height":705},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Rendering-Responsive-Images-Using-Bootstrap.png","width":1062,"height":705}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[null],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1585"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"179b7effc2b96d60cf48dea18ea7a768\";s:5:\"pDate\";s:19:\"2015-10-27 11:00:36\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1097468406932079\";s:5:\"pDate\";s:19:\"2015-10-27 11:00:49\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"649334175\";s:5:\"pDate\";s:19:\"2015-10-27 11:00:53\";}}\";"],"snap_isAutoPosted":["1"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"658961581510823937\";s:5:\"pDate\";s:19:\"2015-10-27 11:00:59\";}}\";"],"dsq_thread_id":["4263755483"],"minimaldog_user_IP":["a:1:{s:15:\"ip-82.41.97.126\";s:12:\"82.41.97.126\";}"],"minimaldog_post_like_count":["1"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400}}},{"id":9971,"type":"post","slug":"how-to-configure-pojos-with-java-collection-attributes","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/how-to-configure-pojos-with-java-collection-attributes","status":"publish","title":"How to Configure POJOs with Java Collection Attributes","title_plain":"How to Configure POJOs with Java Collection Attributes","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Configure POJOs with Java Collection Attributes' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/how-to-configure-pojos-with-java-collection-attributes' data-summary='In Spring java collection types can be configured using set of built-in XML tags such as , , and . In this example, we will discuss how to configure the the List collection.'><\/div>\n<p>Java POJO can contain simple primitive data types or collections. Like the primitive types, the Spring IoC container can instantiate POJOs with Java collection attributes. Java provides different types of collection types including set, list, map, etc. All of the collection types has their specific characteristics.<\/p>\n<p>In Spring all these collection types can be configured using set of built-in XML tags such as <code>&lt;list&gt;<\/code>, <code>&lt;set&gt;<\/code>, and <code>&lt;map&gt;<\/code>. In this example, we will discuss how to configure the the List collection. However the same concept will apply to other collection types.<\/p>\n<p>Let us first, declare the following POJOs.<\/p>\n<div class=\"filename\">User.java<\/div>\n<pre class=\"prettyprint lang-java\">public class User {\r\n\tprivate String name;\r\n\tprivate String email;\r\n\tprivate List&lt;Car&gt; cars;\r\n\r\n\tpublic String getName() {\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic void setName(String name) {\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tpublic String getEmail() {\r\n\t\treturn email;\r\n\t}\r\n\r\n\tpublic void setEmail(String email) {\r\n\t\tthis.email = email;\r\n\t}\r\n\r\n\tpublic List&lt;Car&gt; getCars() {\r\n\t\treturn cars;\r\n\t}\r\n\r\n\tpublic void setCars(List&lt;Car&gt; cars) {\r\n\t\tthis.cars = cars;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn \"Name=\" + name + \" , Email=\" + email + \" , Car=\" + cars.toString();\r\n\t}\r\n}\r\n<\/pre>\n<div class=\"filename\">Car.java<\/div>\n<pre class=\"prettyprint lang-java\">public class Car {\r\n\tprivate String model;\r\n\tprivate double price;\r\n\r\n\tpublic String getModel() {\r\n\t\treturn model;\r\n\t}\r\n\r\n\tpublic void setModel(String model) {\r\n\t\tthis.model = model;\r\n\t}\r\n\r\n\tpublic double getPrice() {\r\n\t\treturn price;\r\n\t}\r\n\r\n\tpublic void setPrice(double price) {\r\n\t\tthis.price = price;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn model + \" \" + price;\r\n\t}\r\n}\r\n<\/pre>\n<p>As you can notice, a user can own a list of Cars. Let us now configure the bean inside beans.xml file.<\/p>\n<p>To define a property of the interface <code>java.util.List<\/code> in the bean configuration, you specify a &lt;list&gt; tag that contains the elements. The elements allowed inside the <code>&lt;list&gt;<\/code> tag can be a simple constant value specified by <code>&lt;value&gt;<\/code>.<\/p>\n<div class=\"filename\">beans.xml<\/div>\n<pre class=\"prettyprint lang-xml\">&lt;bean id=\"userBean\" class=\"com.javatechig.spring.collection.User\"&gt;\r\n\t&lt;property name=\"name\" value=\"Nilanchala\" \/&gt;\r\n\t&lt;property name=\"email\" value=\"test@example.com\" \/&gt;\r\n\t&lt;property name=\"cars\"&gt;\r\n\t\t&lt;list&gt;\r\n\t\t\t&lt;bean class=\"com.javatechig.spring.collection.Car\"&gt;\r\n\t\t\t\t&lt;property name=\"model\" value=\"Volkswagen Polo\" \/&gt;\r\n\t\t\t\t&lt;property name=\"price\" value=\"5000\" \/&gt;\r\n\t\t\t&lt;\/bean&gt;\r\n\r\n\t\t\t&lt;bean class=\"com.javatechig.spring.collection.Car\"&gt;\r\n\t\t\t\t&lt;property name=\"model\" value=\"Volkswagen Vento\" \/&gt;\r\n\t\t\t\t&lt;property name=\"price\" value=\"9000\" \/&gt;\r\n\t\t\t&lt;\/bean&gt;\r\n\t\t\t&lt;null \/&gt;\r\n\t\t&lt;\/list&gt;\r\n\t&lt;\/property&gt;\r\n&lt;\/bean&gt;\r\n<\/pre>\n<p>Now from the main class you can test the above configuration as follows.<\/p>\n<div class=\"filename\">Main.java<\/div>\n<pre class=\"prettyprint lang-java\">public class Main {\r\n\tpublic static void main(String[] args) throws Exception {\r\n\t\tApplicationContext context = new GenericXmlApplicationContext(\"beans.xml\");\r\n\t\tUser user = (User) context.getBean(\"userBean\");\r\n\t\tSystem.out.println(user.toString());\r\n\t}\r\n}\r\n<\/pre>\n<p>If you want to configure the list by refering to other beans, you can do it using <code>&lt;ref&gt;<\/code> element.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;bean id=\"userBean\" class=\"com.javatechig.spring.collection.User\"&gt;\r\n\t&lt;property name=\"name\" value=\"Nilanchala\" \/&gt;\r\n\t&lt;property name=\"email\" value=\"test@example.com\" \/&gt;\r\n\t&lt;property name=\"cars\"&gt;\r\n\t\t&lt;list&gt;\r\n\t\t\t&lt;ref bean=\"myCarBean1\"\/&gt;\r\n\t\t\t&lt;ref bean=\"myCarBean2\"\/&gt;\r\n\t\t&lt;\/list&gt;\r\n\t&lt;\/property&gt;\r\n&lt;\/bean&gt; \r\n<\/pre>\n","excerpt":"<p>In Spring java collection types can be configured using set of built-in XML tags such as <list>, <set>, and<br \/>\n<map>. In this example, we will discuss how to configure the the List collection.<\/p>\n","date":"2015-10-17 17:43:30","modified":"2015-10-27 00:02:51","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":279,"slug":"spring-core","title":"Spring Core","description":"","post_count":9}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[null],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["2064"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4233965241"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"925f9f7723aace363405049777ea6b86\";s:5:\"pDate\";s:19:\"2015-10-17 12:14:12\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1093156290696624\";s:5:\"pDate\";s:19:\"2015-10-17 12:14:15\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"645807387\";s:5:\"pDate\";s:19:\"2015-10-17 12:14:15\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"655356090356404224\";s:5:\"pDate\";s:19:\"2015-10-17 12:14:02\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":9967,"type":"post","slug":"spring-jdbc-query-database-using-jdbctemplate","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/spring-jdbc-query-database-using-jdbctemplate","status":"publish","title":"Spring JDBC Query Database Using JdbcTemplate","title_plain":"Spring JDBC Query Database Using JdbcTemplate","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Spring JDBC Query Database Using JdbcTemplate' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/spring-jdbc-query-database-using-jdbctemplate' data-summary='In this tutorial, we will focus on how to query data database. A JDBC query operation involves the following tasks.'><\/div>\n<p>In our previous tutorial, we have discussed how to use JdbcTemplate to access the MySQL database and perform insert and delete operation. In this tutorial, we will focus on how to query data database using the following approaches.<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#using-rowcallbackhandler\">Using RowCallbackHandler<\/a><\/li><li><a href=\"#using-rowmapper\">Using RowMapper<\/a><\/li><li><a href=\"#using-beanpropertyrowmapper\">Using BeanPropertyRowMapper<\/a><\/li><li><a href=\"#querying-for-multiple-rows\">Querying for Multiple Rows<\/a><\/li><\/ul><\/div>\n<\/p>\n<p>The JdbcTemplate class provides different overloaded <code>query()<\/code> methods to control the overall query process.\u00a0A JDBC query operation involves the following tasks.<\/p>\n<ul>\n<li>Obtain a database connection from the data source.<\/li>\n<li>Create a PreparedStatement and Bind the parameters<\/li>\n<li>Execute the PreparedStatement object.<\/li>\n<li>Iterate the returned result set to extract data from the result set.<\/li>\n<li>Clean up the statement object and connection.<\/li>\n<\/ul>\n<h2><span id=\"using-rowcallbackhandler\">Using RowCallbackHandler<\/span><\/h2>\n<p>The <code>RowCallbackHandler<\/code> is the is the primary interface that allows you to process the current row of the result set. One of the query() methods iterates the result set for you and calls your RowCallbackHandler for each row. So, the <code>processRow()<\/code> method will be called once for each row of the returned result set.<\/p>\n<p>The following code snippet depicts how to query database using RowCallbackHandler interface.<\/p>\n<pre class=\"prettyprint lang-java\">public Car selectCar(int id) {\r\n\tfinal String sql = \"select * from cars where id = ?\";\r\n\tfinal Car car = new Car();\r\n\tRowCallbackHandler callback = new RowCallbackHandler() {\r\n\r\n\t\tpublic void processRow(ResultSet rs) throws SQLException {\r\n\t\t\tcar.setId(rs.getInt(\"id\"));\r\n\t\t\tcar.setModel(rs.getString(\"model\"));\r\n\t\t\tcar.setPrice(rs.getDouble(\"price\"));\r\n\t\t}\r\n\t};\r\n\t\r\n\tjdbcTemplate.query(sql, callback, id);\r\n\treturn car;\r\n}\r\n<\/pre>\n<h2><span id=\"using-rowmapper\">Using RowMapper<\/span><\/h2>\n<p>The <code>RowMapper&lt;T&gt;<\/code> interface is more general than <code>RowCallbackHandler<\/code>. It maps a single row of the result set to a custom object. So this can be applied to a single row result set as well as a multiple row result set. In the <code>mapRow()<\/code> method of this interface, you have to construct the object that represents a row and return it as the methods return value.<\/p>\n<pre class=\"prettyprint lang-java\">public Car selectCar(int id) {\r\n\tfinal String sql = \"select * from cars where id = ?\";\r\n\treturn jdbcTemplate.queryForObject(sql, new RowMapper&lt;Car&gt;() {\r\n\r\n\t\tpublic Car mapRow(ResultSet rs, int rowNum) throws SQLException {\r\n\t\t\tfinal Car car = new Car();\r\n\t\t\tcar.setId(rs.getInt(\"id\"));\r\n\t\t\tcar.setModel(rs.getString(\"model\"));\r\n\t\t\tcar.setPrice(rs.getDouble(\"price\"));\r\n\t\t\treturn car;\r\n\t\t}\r\n\r\n\t}, id);\r\n}\r\n<\/pre>\n<p>Although the above code works well, spring offers class <code>BeanPropertyRowMapper<\/code> for your convenience. The BeanPropertyRowMapper class automatically maps a row to a new instance of the specified class.<\/p>\n<p>This method requires that the resultant class should have a default constructor. It does exactly the same thing as what we have done in the above code snippet. It first instantiates the class using Java reflection and then maps each column value to a property by matching their names.<\/p>\n<h2><span id=\"using-beanpropertyrowmapper\">Using BeanPropertyRowMapper<\/span><\/h2>\n<p>The following code snippet depicts how to use <code>BeanPropertyRowMapper<\/code> implementation to query form database.<\/p>\n<pre class=\"prettyprint lang-java\">public Car selectCar(int id) {\r\n\tfinal String sql = \"select * from cars where id = ?\";\r\n\treturn jdbcTemplate.queryForObject(sql, BeanPropertyRowMapper.newInstance(Car.class), id);\r\n}\r\n<\/pre>\n<h2><span id=\"querying-for-multiple-rows\">Querying for Multiple Rows<\/span><\/h2>\n<p>Now that we understand how to query single record, we can now have a look at querying list of cars from database. This can be achieved using the <code>queryForList()<\/code> method by passing the SQL statement. The returned result will be a list of maps. Each map stores a row of the result set with the column names as the keys.<\/p>\n<pre class=\"prettyprint lang-java\">public List&lt;Car&gt; getAllCars() {\r\n\tfinal String sql = \"select * from cars\";\r\n\tfinal List&lt;Car&gt; vehicles = new ArrayList&lt;Car&gt;();\r\n\tfinal List&lt;Map&lt;String, Object&gt;&gt; rows = jdbcTemplate.queryForList(sql);\r\n\r\n\tfor (Map&lt;String, Object&gt; row : rows) {\r\n\t\tCar car = new Car();\r\n\t\tcar.setId((Integer) row.get(\"id\"));\r\n\t\tcar.setModel((String) row.get(\"model\"));\r\n\t\tcar.setPrice((Double) row.get(\"price\"));\r\n\t\tvehicles.add(car);\r\n\t}\r\n\treturn vehicles;\r\n}\r\n<\/pre>\n","excerpt":"<p>In this tutorial, we will focus on how to query data database. A JDBC query operation involves the following tasks.<\/p>\n","date":"2015-10-17 17:34:22","modified":"2015-10-17 17:34:22","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":287,"slug":"jdbc","title":"JDBC","description":"","post_count":4},{"id":288,"slug":"spring-jdbc","title":"Spring JDBC","description":"","post_count":2}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["2308"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"655353877517107200\";s:5:\"pDate\";s:19:\"2015-10-17 12:05:15\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"645805421\";s:5:\"pDate\";s:19:\"2015-10-17 12:05:17\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1093154227363497\";s:5:\"pDate\";s:19:\"2015-10-17 12:05:38\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"d7b97fbf593b6d0eb1afe3e91d60dd5e\";s:5:\"pDate\";s:19:\"2015-10-17 12:05:44\";}}\";"],"dsq_thread_id":["4876602441"],"minimaldog_user_IP":["a:1:{s:17:\"ip-80.169.158.130\";s:14:\"80.169.158.130\";}"],"minimaldog_post_like_count":["2"],"minimaldog_user_liked":["a:1:{s:7:\"user-12\";i:12;}"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":9962,"type":"post","slug":"spring-jdbc-batch-update-operation-using-jdbctemplate","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/spring-jdbc-batch-update-operation-using-jdbctemplate","status":"publish","title":"Spring JDBC Batch Update Operation Using JdbcTemplate","title_plain":"Spring JDBC Batch Update Operation Using JdbcTemplate","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Spring JDBC Batch Update Operation Using JdbcTemplate' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/spring-jdbc-batch-update-operation-using-jdbctemplate' data-summary='In our previous example, we have discussed how to use JdbcTemplate to access the MySQL database and perform insert and delete operation. In this tutorial, we will focus on how to insert list of cars into database.'><\/div>\n<p>In the\u00a0previous example, we have discussed how to use <a href=\"http:\/\/stacktips.com\/java\/spring\/java-spring-jdbc-using-jdbctemplate-example\">JdbcTemplate to access the MySQL database<\/a> and perform insert and delete operation. In this tutorial, we will focus on how to insert list of cars into database.<\/p>\n<p>For inserting batch of cars, you need to call <code>insert()<\/code> method multiple times, the update will be very slow as the SQL statement will be compiled repeatedly. Instead, we can add a new method <code>insertCars()<\/code> in CarsDao for inserting a batch of Cars.<\/p>\n<p>The <code>JdbcTemplate<\/code> class offers the <code>batchUpdate()<\/code> template method for batch update operations. It requires two arguments, a SQL statement and a <code>BatchPreparedStatementSetter<\/code> object. Using <code>batchUpdate()<\/code> method, the SQL statement is compiled only ones and executed multiple times.<\/p>\n<p>The following snippet shows how to perform batch insert operation using JdbcTemplate.<\/p>\n<pre class=\"prettyprint lang-java\">public void insertCars(final List&lt;Car&gt; cars) {\r\n\tfinal String inserQuery = \"insert into cars (id, model, price) values (?, ?, ?) \";\r\n\tjdbcTemplate.batchUpdate(inserQuery, \r\n                new BatchPreparedStatementSetter() {\r\n\t\tpublic void setValues(PreparedStatement ps, int i) throws SQLException {\r\n\t\t\tCar car = cars.get(i);\r\n\t\t\tps.setInt(1, car.getId());\r\n\t\t\tps.setString(2, car.getModel());\r\n\t\t\tps.setDouble(3, car.getPrice());\r\n\t\t}\r\n\r\n\t\tpublic int getBatchSize() {\r\n\t\t\treturn cars.size();\r\n\t\t}\r\n\t});\r\n}\r\n<\/pre>\n<p>Let us now write a main class and test the above code.<\/p>\n<pre class=\"prettyprint lang-java\">public class Main {\r\n\tpublic static void main(String[] args) {\r\n\t\tApplicationContext appContext = new GenericXmlApplicationContext(\"beans.xml\");\r\n\t\tICarsDao dao = appContext.getBean(\"carsDao\", ICarsDao.class);\r\n\t\t\r\n\t\t\/\/Batch update statement\r\n\t\tList&lt;Car&gt; cars = new ArrayList&lt;Car&gt;();\r\n\t\tfor (int i = 1; i &lt;= 20; i++) {\r\n\t\t\tCar car = new Car(i, \"Volkswgen Polo\" + i, 1*300);\r\n\t\t\tcars.add(car);\r\n\t\t}\r\n\t\tdao.insertCars(cars);\r\n\t}\r\n}<\/pre>\n","excerpt":"<p>In our previous example, we have discussed how to use JdbcTemplate to access the MySQL database and perform insert and delete operation. In this tutorial, we will focus on how to insert list of cars into database.<\/p>\n","date":"2015-10-16 04:47:45","modified":"2016-06-11 00:39:05","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":287,"slug":"jdbc","title":"JDBC","description":"","post_count":4},{"id":288,"slug":"spring-jdbc","title":"Spring JDBC","description":"","post_count":2}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["2590"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4229014029"],"minimaldog_user_IP":["a:1:{s:17:\"ip-80.169.158.130\";s:14:\"80.169.158.130\";}"],"minimaldog_post_like_count":["2"],"minimaldog_user_liked":["a:1:{s:7:\"user-12\";i:12;}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"7a45a63722c3b80f5fca2dea1d6cfbd3\";s:5:\"pDate\";s:19:\"2015-10-15 23:18:35\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:384:\"a:1:{i:0;a:13:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1092548834090703\";s:5:\"pDate\";s:19:\"2015-10-15 23:18:39\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"645300986\";s:5:\"pDate\";s:19:\"2015-10-15 23:18:28\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"654798554356027392\";s:5:\"pDate\";s:19:\"2015-10-15 23:18:35\";s:2:\"do\";i:0;}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"snapBG":["s:143:\"a:1:{i:0;a:4:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:19:\"1522456296725048624\";s:5:\"pDate\";s:19:\"2016-06-17 16:55:12\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":9958,"type":"post","slug":"spring-constructor-injection-using-constructor-arg","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/spring-constructor-injection-using-constructor-arg","status":"publish","title":"Spring Constructor Injection Using constructor-arg","title_plain":"Spring Constructor Injection Using constructor-arg","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Spring Constructor Injection Using constructor-arg' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/spring-constructor-injection-using-constructor-arg' data-summary='In our previous example, we have seen how to create POJO Instances from the IoC Container. In this tutorial, we will examine how to create a POJO instance or bean in the Spring IoC container by invoking its constructor.'><\/div>\n<p>In our previous example, we have seen how to create <a href=\"http:\/\/stacktips.com\/java\/spring\/create-and-manage-pojos-with-spring-ioc-container\">POJO Instances from the IoC Container<\/a>. In this tutorial, we will examine how to create a POJO instance or bean in the Spring IoC container by invoking its constructor.<\/p>\n<p>Creating bean instance by invoking constructor is the common and direct way of creating beans. It is similar to creating the class instance using new operator. All you have to do is to define a POJO class with a constructor and use the <code>&lt;constructor-arg&gt;<\/code> configuration.<\/p>\n<p>In this example, I will use the following POJO class to demonstrate how to create POJOs by invoking the constructor.<\/p>\n<pre class=\"prettyprint lang-java\">public class Car {\r\n\tprivate String model;\r\n\tprivate double price;\r\n\r\n\tpublic Car() { }\r\n\r\n\tpublic Car(String model, double price) {\r\n\t\tthis.model = model;\r\n\t\tthis.price = price;\r\n\t}\r\n\r\n\tpublic String getModel() {\r\n\t\treturn model;\r\n\t}\r\n\r\n\tpublic void setModel(String model) {\r\n\t\tthis.model = model;\r\n\t}\r\n\r\n\tpublic double getPrice() {\r\n\t\treturn price;\r\n\t}\r\n\r\n\tpublic void setPrice(double price) {\r\n\t\tthis.price = price;\r\n\t}\r\n}\r\n<\/pre>\n<p>To define the above Car bean in the Spring IoC container, you can add the following code snippet to <code>bean.xml<\/code> configuration file.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;bean id=\"carBean\" class=\"com.javatechig.spring.bean.Car\"&gt;\r\n\t&lt;constructor-arg value=\"Volkswagen\" \/&gt;\r\n\t&lt;constructor-arg value=\"500\" \/&gt;\r\n&lt;\/bean&gt;\r\n<\/pre>\n<ul>\n<li>Note that, if more then one <code>&lt;constructor-arg&gt;<\/code> elements is specified, Spring invokes the most appropriate constructor that matches your arguments.<\/li>\n<li>Use Spring\u2019s &lt;constructor-arg&gt; element to define constructor arguments, then for each &lt;property&gt; element Spring injects the value through the setter method.<\/li>\n<li>If no &lt;constructor-arg&gt; is specified to the bean configuration, the default constructor with no arguments is invoked.<\/li>\n<li>You can specify the type and index attributes or the name attribute for the &lt;constructor-arg&gt; element to avoid constructor ambiguity.<\/li>\n<\/ul>\n<p>You can write the following Main class to test your Cars bean initialization by retrieving the bean instance from the Spring IoC container:<\/p>\n<pre class=\"prettyprint lang-java\">public class Main {\r\n\tpublic static void main(String[] args) throws Exception {\r\n\t\tApplicationContext context = new GenericXmlApplicationContext(\"beans.xml\");\r\n\t\tCar car = (Car) context.getBean(\"carBean\");\r\n\t\tSystem.out.println(car.toString());\r\n\t}\r\n}\r\n\r\n<\/pre>\n","excerpt":"<p>In our previous example, we have seen how to create POJO Instances from the IoC Container. In this tutorial, we will examine how to create a POJO instance or bean in the Spring IoC container by invoking its constructor.<\/p>\n","date":"2015-10-15 12:44:47","modified":"2015-10-15 12:44:47","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":279,"slug":"spring-core","title":"Spring Core","description":"","post_count":9}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1676"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"ff78c26f592d59f210a88b6fc5e32821\";s:5:\"pDate\";s:19:\"2015-10-15 07:15:16\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"654556138701062144\";s:5:\"pDate\";s:19:\"2015-10-15 07:15:19\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1092259574119629\";s:5:\"pDate\";s:19:\"2015-10-15 07:15:23\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"645019412\";s:5:\"pDate\";s:19:\"2015-10-15 07:15:24\";}}\";"],"dsq_thread_id":["4226801951"],"minimaldog_user_liked":["a:1:{s:7:\"user-12\";i:12;}"],"minimaldog_post_like_count":["1"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":9933,"type":"post","slug":"bootstrap-responsive-classes-for-building-adaptive-layouts","url":"http:\/\/stacktips.com\/tutorials\/bootstrap\/bootstrap-responsive-classes-for-building-adaptive-layouts","status":"publish","title":"Bootstrap Responsive Classes for Building Adaptive Layouts","title_plain":"Bootstrap Responsive Classes for Building Adaptive Layouts","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Bootstrap Responsive Classes for Building Adaptive Layouts' data-link='http:\/\/stacktips.com\/tutorials\/bootstrap\/bootstrap-responsive-classes-for-building-adaptive-layouts' data-summary=''><\/div>\n<p>In\u00a0morden web development, the main concern of a developer is to build the application\u00a0that works on various form factors, including standard browsers, mobile tablet, tv, etc.\u00a0True responsive design is fluid, using CSS3 media queries to respond to any screen sizes. With the use of this CSS3 module, you can create a flexible grid where text can wrap and images can shrink to adjust along with your browser. \u00a0For designers, this is similar to adjusting a text box in Photoshop and having the copy adjust to fill the height and width of the box.<\/p>\n<p>Bootstrap makes it easier to build responsive mobile optimized website with the minimal effort using set\u00a0of css classes.<\/p>\n<h2>Bootstrap\u00a0size classes<\/h2>\n<p>Bootstrap provides four different markers for controlling and mentioning element and device size. Following table depicts the bootstrap size classes in detail.<\/p>\n<table>\n<tbody>\n<tr>\n<td><strong>Marker name<\/strong><\/td>\n<td><strong>Screen size<\/strong><\/td>\n<td><strong>class name<\/strong><\/td>\n<\/tr>\n<tr>\n<td>xs<\/td>\n<td>This will render the element with extra small size. Extra small devices, such as phones with &lt; 768px width.<\/td>\n<td>.hidden-xs<\/td>\n<\/tr>\n<tr>\n<td>sm<\/td>\n<td>This will render the element with small size.\u00a0This is the default size. Phablets and tablets with width \u2265 768px and &lt; 992px<\/td>\n<td>.hidden-sm<\/td>\n<\/tr>\n<tr>\n<td>md<\/td>\n<td>This will render the element with large size. Desktops with width \u2265 992px and &lt;1200px<\/td>\n<td>.hidden-md<\/td>\n<\/tr>\n<tr>\n<td>lg<\/td>\n<td>This will render the element with large size. Big desktop monitors and TVs with \u2265 1200px width<\/td>\n<td>.hidden-lg<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<h5>Classification of classes associated with marker name<\/h5>\n<p><strong>.hidden-xs :<\/strong> A div marked with this class in your HTML code result in hiding the div element in all extra small devices (devices with &lt; 768px width) ,where as displayed in all other devices. For example, if you mention the div class as\u00a0<code>&lt;div class=\"hidden-xs\"&gt;<\/code>, this div will be not be displayed in extra small devices, and will be displayed in all other devices<\/p>\n<p>Similarly the other classes such as,<\/p>\n<ul>\n<li><strong>.hidden-sm :<\/strong> A div marked with this class in your HTML code result in hiding the div element in all small devices (devices with width \u2265 768px and &lt; 992px) ,where as displayed in all other devices.<\/li>\n<li><strong>.hidden-dm<\/strong>: A div marked with this class in your HTML code result in hiding the div element in all small devices (devices with width \u2265 992px and &lt; 1200px), where as displayed in all other devices.<\/li>\n<li><strong>.hidden-lg:<\/strong> A div marked with this class in your HTML code result in hiding the div element in all small devices (devices with width \u2265 1200px), where as displayed in all other devices.<\/li>\n<\/ul>\n<p>Similarly for the display purpose we have the following classes,<\/p>\n<ul>\n<li><strong>\u00a0.Visible-xs\/<\/strong> .visible-xs-block, .visiblexs-inline, .visible-xsinline-block : visble in extra small devices<\/li>\n<li><strong>.Visible-sm\/<\/strong> .visiblesm-block, .visiblesm-inline, .visible-sminline-block : visble in small devices<\/li>\n<li><strong>.Visible-md \/<\/strong> .visiblemd-block, .visiblemd-inline, .visible-mdinline-block: visble in medium devices ,default display.<\/li>\n<li><strong>.Visible-lg<\/strong>\/ .visible-lg-block, .visiblelg-inline, .visible-lginline-block : visble in large devices<\/li>\n<\/ul>\n<p>For example, if you want your DIV element should only be visible in large devices (devices with width \u22651200px) and not in smaller devices, then you just use the class .visible-lg-block<\/p>\n<p>Let\u2019s see the above mentioned classes with a simple example,<\/p>\n<pre class=\"prettyprint lang-html\">&lt;!DOCTYPE html&gt; \r\n&lt;html lang=\"en\"&gt;\r\n  &lt;head&gt;\r\n    &lt;title&gt;My first Bootstrap page &lt;\/title&gt;\r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initialscale=1\"&gt;\r\n    &lt;link href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/css\/bootstrap.min.css\" rel=\"stylesheet\"&gt;\r\n    &lt;link href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/css\/bootstrap-theme.min.css\" rel=\"stylesheet\"&gt;\r\n    &lt;script type=\"text\/javascript\" src=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/js\/bootstrap.min.js\"&gt;&lt;\/script&gt; \r\n    &lt;script type=\"text\/javascript\" src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/2.1.3\/jquery.min.js\"&gt;&lt;\/script&gt;\r\n    &lt;style&gt;\r\n      div {\r\n      background-color: #F2F2F2;\r\n      }\r\n    &lt;\/style&gt;\r\n  &lt;\/head&gt;\r\n  &lt;body&gt;\r\n    &lt;div class=\"container\" style=\"padding: 40px;\"&gt;\r\n    &lt;div class=\"row visible-on\"&gt;\r\n      &lt;div class=\"col-xs-6 col-sm-3\" style=\"background-color: #EDDEF1; border:1px solid #666; height:70px;\"&gt;\r\n        &lt;span class=\"hidden-xs\" style=\"\"&gt;Extra small hidden class&lt;\/span&gt;\r\n        &lt;span class=\"visible-xs-inline\" style=\"color:red;\"&gt;Visible on x-small&lt;\/span&gt;\r\n      &lt;\/div&gt;\r\n      &lt;div class=\"col-xs-6 col-sm-3\" style=\"background-color: #EDDEF1; border:1px solid #666; height:70px;\"&gt;\r\n        &lt;span class=\"hidden-sm\" &gt;Small hidden class&lt;\/span&gt;\r\n        &lt;span class=\"visible-sm-inline\" style=\"color:red;\"&gt;Visible on small&lt;\/span&gt;\r\n      &lt;\/div&gt;\r\n      &lt;div class=\"clearfix visible-xs\"&gt;&lt;\/div&gt;\r\n      &lt;div class=\"col-xs-6 col-sm-3\" style=\"background-color: #EDDEF1; border:1px solid #666; height:70px;\"&gt;\r\n        &lt;span class=\"hidden-md\" style=\"color:blue;\"&gt;Medium hidden class&lt;\/span&gt;\r\n        &lt;span class=\"visible-md-inline\"style=\"color:red;\"&gt;Visible on medium&lt;\/span&gt;\r\n      &lt;\/div&gt;\r\n      &lt;div class=\"col-xs-6 col-sm-3\" style=\"background-color: #EDDEF1; border:1px solid #666; height:70px;\"&gt;\r\n        &lt;span class=\"hidden-lg\" style=\"color:blue;\"&gt;Large hidden class&lt;\/span&gt;\r\n        &lt;span class=\"visible-lg-inline\" style=\"color:red;\"&gt; Visible on large&lt;\/span&gt;\r\n      &lt;\/div&gt;\r\n    &lt;\/div&gt;\r\n  &lt;\/body&gt;\r\n&lt;\/html&gt;\r\n<\/pre>\n<p>Output of the above code is<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS.png\"><img class=\"alignnone size-full wp-image-9953\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS.png\" alt=\"Creating Responsive Layouts Using Bootstrap CSS\" width=\"1206\" height=\"301\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS.png 1206w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-300x75.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-620x155.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-940x235.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-800x200.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-1000x250.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-900x225.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-370x92.png 370w\" sizes=\"(max-width: 1206px) 100vw, 1206px\" \/><\/a><\/p>\n<p>Output on small screen device<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-2.png\"><img class=\"alignnone size-full wp-image-9952\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-2.png\" alt=\"Creating Responsive Layouts Using Bootstrap CSS 2\" width=\"504\" height=\"372\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-2.png 504w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-2-300x221.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-2-370x273.png 370w\" sizes=\"(max-width: 504px) 100vw, 504px\" \/><\/a><\/p>\n","excerpt":"<p>In\u00a0morden web development, the main concern of a developer is to build the application\u00a0that works on various form factors, including standard browsers, mobile tablet, tv, etc.\u00a0True responsive design is fluid, using CSS3 media queries to respond to any screen sizes. With the use of this CSS3 module, you can create a flexible grid where text [&hellip;]<\/p>\n","date":"2015-10-14 18:09:43","modified":"2016-06-11 00:39:06","categories":[{"id":281,"slug":"bootstrap","title":"Bootstrap","description":"","parent":297,"post_count":12}],"tags":[{"id":273,"slug":"html","title":"HTML","description":"","post_count":6}],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":9952,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-2.png","slug":"creating-responsive-layouts-using-bootstrap-css-2","title":"Creating Responsive Layouts Using Bootstrap CSS 2","description":"Creating Responsive Layouts Using Bootstrap CSS 2","caption":"","parent":9933,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-2.png","width":504,"height":372},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-2.png","width":504,"height":372},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-2.png","width":504,"height":372},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-2.png","width":504,"height":372},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-2.png","width":504,"height":372},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-2.png","width":504,"height":372},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-2.png","width":504,"height":372}}},{"id":9953,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS.png","slug":"creating-responsive-layouts-using-bootstrap-css","title":"Creating Responsive Layouts Using Bootstrap CSS","description":"","caption":"","parent":9933,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS.png","width":1206,"height":301},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS-620x155.png","width":620,"height":155},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS.png","width":1206,"height":301},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-Responsive-Layouts-Using-Bootstrap-CSS.png","width":1206,"height":301}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1506"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4224107809"],"minimaldog_user_IP":["a:1:{s:15:\"ip-82.41.97.126\";s:12:\"82.41.97.126\";}"],"minimaldog_post_like_count":["1"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"5e839e1caf20e5a9a1e67f6e038c72ed\";s:5:\"pDate\";s:19:\"2015-10-14 12:40:08\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:384:\"a:1:{i:0;a:13:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1091924430819810\";s:5:\"pDate\";s:19:\"2015-10-14 12:40:08\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"644698535\";s:5:\"pDate\";s:19:\"2015-10-14 12:40:09\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"654275521472167936\";s:5:\"pDate\";s:19:\"2015-10-14 12:40:15\";s:2:\"do\";i:0;}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400}}},{"id":9945,"type":"post","slug":"java-spring-jdbc-using-jdbctemplate-example","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/java-spring-jdbc-using-jdbctemplate-example","status":"publish","title":"Java Spring JDBC Using JdbcTemplate Example","title_plain":"Java Spring JDBC Using JdbcTemplate Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Java Spring JDBC Using JdbcTemplate Example' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/java-spring-jdbc-using-jdbctemplate-example' data-summary='There are various data access technologies to perform persistence operations in Java enterprise applications. Spring JdbcTemplate is a class that takes care of all the boilerplate code required for creating a database connection and closing the resources.'><\/div>\n<p>There are various data access technologies to perform persistence operations in Java enterprise applications. JDBC is among the most popular one. This tutorial explains how to initialize a database and access data using Spring JDBC.<br \/>\n<div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-configuringbean\">1. Configuring\u00a0Bean<\/a><\/li><li><a href=\"#2-configuring-data-source-object\">2. Configuring data source object<\/a><\/li><li><a href=\"#3-understanding-spring-jdbctemplate\">3. Understanding Spring JdbcTemplate<\/a><\/li><li><a href=\"#4-executing-sql-statements\">4. Executing SQL statements<\/a><\/li><\/ul><\/div>\n<\/p>\n<p>Spring offers two ways connect to\u00a0a database. Data source or the <code>DriverManager<\/code>. The DriverManager is the legacy approach and data source is newer one. It is recommended to use the new DataSource facility to connect to databases and other resources.<\/p>\n<p>DataSource facility has several advantages over DriverManager facility like DataSource increases portability, enables connection pooling and distributed transactions, the DriverManager does not allow such techniques.<\/p>\n<p>Here in this example, we are using data source to communicate with MySQL database. We will create the <code>Cars<\/code> table with the following attributes.<\/p>\n<pre class=\"prettyprint lang-sql\">CREATE TABLE `Cars` (\r\n  `id` int(11) NOT NULL,\r\n  `model` varchar(45) DEFAULT NULL,\r\n  `price` double(10,2) DEFAULT NULL,\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\r\n<\/pre>\n<h2><span id=\"1-configuringbean\">1. Configuring\u00a0Bean<\/span><\/h2>\n<p>The corresponding Java bean class for the above Cars table will look like the following code:<\/p>\n<pre class=\"prettyprint lang-java\">public class Car {\r\n\tprivate int id;\r\n\tprivate String model;\r\n\tprivate double price;\r\n\r\n\tpublic Car() { }\r\n\r\n\tpublic Car(int id, String model, double price) {\r\n\t\tthis.id = id;\r\n\t\tthis.model = model;\r\n\t\tthis.price = price;\r\n\t}\r\n\r\n\tpublic int getId() {\r\n\t\treturn id;\r\n\t}\r\n\r\n\tpublic void setId(int id) {\r\n\t\tthis.id = id;\r\n\t}\r\n\r\n\tpublic String getModel() {\r\n\t\treturn model;\r\n\t}\r\n\r\n\tpublic void setModel(String model) {\r\n\t\tthis.model = model;\r\n\t}\r\n\r\n\tpublic double getPrice() {\r\n\t\treturn price;\r\n\t}\r\n\r\n\tpublic void setPrice(double price) {\r\n\t\tthis.price = price;\r\n\t}\r\n}\r\n<\/pre>\n<p>Now, let us configure the Car bean declaration to <code>beans.xml<\/code> file for Spring IoC to locate, initialize and manage to Car bean instance.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;bean id=\"carBean\" class=\"com.javatechig.spring.bean.Car\" \/&gt;\r\n<\/pre>\n<h2><span id=\"2-configuring-data-source-object\">2. Configuring data source object<\/span><\/h2>\n<p>As discussed above, we will be using Spring data source approach to connect to MySQL database. For this you need to add the <code>BasicDataSource<\/code> bean configuration to your <code>bean.xml<\/code> file.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\"&gt;\r\n\t&lt;property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"\/&gt;\r\n\t&lt;property name=\"url\" value=\"jdbc:mysql:\/\/localhost\/SpringDemo\"\/&gt;\r\n\t&lt;property name=\"username\" value=\"root\" \/&gt;\r\n\t&lt;property name=\"password\" value=\"admin\" \/&gt;\r\n&lt;\/bean&gt;\r\n<\/pre>\n<p>Notice that in the above bean configuration the <code>localhost<\/code> indicated the location of MySQL database. Currently it is located on my development machine. Don&#8217;t forget to change the username and password of your own, if you configured differently while installing your MySQL server.<\/p>\n<h2><span id=\"3-understanding-spring-jdbctemplate\">3. Understanding Spring JdbcTemplate<\/span><\/h2>\n<p>Spring JdbcTemplate is a class that takes care of all the boilerplate code required for creating a database connection and closing the resources. It makes our life a lot easier by saving the effort and development time. Add the following bean declaration to initialize the JdbcTemplate instance.<\/p>\n<pre class=\"prettyprint lang-java\">&lt;bean id=\"jdbcTemplate\" class=\"org.springframework.jdbc.core.JdbcTemplate\"&gt;\r\n\t&lt;property name=\"dataSource\" ref=\"dataSource\" \/&gt;\r\n&lt;\/bean&gt;\r\n\r\n&lt;bean id=\"carsDao\" class=\"com.javatechig.spring.bean.CarsDao\"&gt;\r\n\t&lt;property name=\"jdbcTemplate\" ref=\"jdbcTemplate\" \/&gt;\r\n&lt;\/bean&gt;\r\n<\/pre>\n<p>Notice that we are injecting the datasource bean instance defined above to initialize the JdbcTemplate bean.<\/p>\n<h2><span id=\"4-executing-sql-statements\">4. Executing SQL statements<\/span><\/h2>\n<p>Spring JdbcTemplate exposes many helpful methods for performing CRUD operations on database. Following are most common methods that we use from JdbcTemplate.<\/p>\n<ul>\n<li><strong>execute(String sql)<\/strong> &#8211; Issue a single SQL execute, typically a DDL statement.<\/li>\n<li><strong>queryForList(String sql, Object[] args)<\/strong> &#8211; Query given SQL to create a prepared statement from SQL and a list of arguments to bind to the query, expecting a result list.<\/li>\n<li><strong>update(String sql)<\/strong> &#8211; Issue a single SQL update operation (such as an insert, update or delete statement).<\/li>\n<\/ul>\n<p>Now lets bring our JdbcTemplate to action. We will use the JdbcTemplate bean in our DAO class or any class that will communicate with our database. Let us create a DAO interface with the following methods:<\/p>\n<pre class=\"prettyprint lang-java\">public interface ICarsDao {\r\n\tint insertCar(Car car);\r\n\tvoid deleteCar(int id);\r\n}\r\n<\/pre>\n<p>Now let us implement ICarDao interface and provide the logic to insert and delete a user form database.<\/p>\n<pre class=\"prettyprint lang-java\">public class CarsDao implements ICarsDao {\r\n\tprivate JdbcTemplate jdbcTemplate;\r\n\r\n\tpublic void setJdbcTemplate(JdbcTemplate jdbcTemplate) {\r\n\t\tthis.jdbcTemplate = jdbcTemplate;\r\n\t}\r\n\r\n\tpublic int insertCar(Car car) {\r\n\t\tString inserQuery = \"insert into cars (id, model, price) values (?, ?, ?) \";\r\n\t\tObject[] params = new Object[] { car.getId(), car.getModel(), car.getPrice() };\r\n\t\tint[] types = new int[] { Types.INTEGER, Types.VARCHAR, Types.INTEGER };\r\n\r\n\t\treturn jdbcTemplate.update(inserQuery, params, types);\r\n\t}\r\n\r\n\tpublic void deleteCar(int model) {\r\n\t\tString delQuery = \"delete from cars where id = ?\";\r\n\t\tint count = jdbcTemplate.update(delQuery, new Object[] { model });\r\n\t\tif (count != 0)\r\n\t\t\tSystem.out.println(\"Car deleted successfully.\");\r\n\t\telse\r\n\t\t\tSystem.out.println(\"Car with given id as it doesn't exist\");\r\n\t}\r\n\t\r\n}\r\n<\/pre>\n<p>Now that we are ready with the DAO implementation, let us test those methods. Create a Java class TestMain.java and add the following code snippets<\/p>\n<pre class=\"prettyprint lang-java\">public class Main {\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tApplicationContext appContext = new GenericXmlApplicationContext(\"beans.xml\");\r\n\t\tICarsDao dao = appContext.getBean(\"carsDao\", ICarsDao.class);\r\n\t\tCar car = new Car(1, \"Volkswgen\", 300);\r\n\t\tdao.insertCar(car);\r\n\r\n\t\tSystem.out.println(\"User inserted with id= \" + 2);\r\n\t\tdao.deleteCar(3);\r\n\t}\r\n}\r\n<\/pre>\n<p>If all your configurations are fine, you should be able to insert and delete data from Cars table.<\/p>\n","excerpt":"<p>There are various data access technologies to perform persistence operations in Java enterprise applications. Spring JdbcTemplate is a class that takes care of all the boilerplate code required for creating a database connection and closing the resources.<\/p>\n","date":"2015-10-13 04:21:54","modified":"2015-10-13 04:21:54","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":287,"slug":"jdbc","title":"JDBC","description":"","post_count":4},{"id":279,"slug":"spring-core","title":"Spring Core","description":"","post_count":9}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["3271"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"644094294\";s:5:\"pDate\";s:19:\"2015-10-12 22:52:08\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"653704739968782336\";s:5:\"pDate\";s:19:\"2015-10-12 22:52:10\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"5fee728065c363259624e7c659606d92\";s:5:\"pDate\";s:19:\"2015-10-12 22:52:10\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1091105130901740\";s:5:\"pDate\";s:19:\"2015-10-12 22:52:12\";}}\";"],"dsq_thread_id":["4219343040"],"minimaldog_user_liked":["a:1:{s:7:\"user-12\";i:12;}"],"minimaldog_post_like_count":["1"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":9938,"type":"post","slug":"introduction-to-spring-jdbc","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/introduction-to-spring-jdbc","status":"publish","title":"Introduction to Spring JDBC","title_plain":"Introduction to Spring JDBC","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Introduction to Spring JDBC' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/introduction-to-spring-jdbc' data-summary='There are various data access technologies to perform persistence operations in Java enterprise applications. JDBC is among the most popular one. Spring provides data access operations performed with JDBC..'><\/div>\n<p>There are various data access technologies to perform persistence operations in Java enterprise applications. JDBC is among the most popular one. Spring provides data access operations performed with JDBC using three main approaches:<\/p>\n<ol>\n<li><strong>Using Template Method pattern<\/strong> based utility classes, namely JdbcTemplate and NamedParameterJdbcTemplate, to perform JDBC operations more easily by removing repetitive data access code blocks in the application, properly handling resource cleanups, and so on.<\/li>\n<li><strong>Using database<\/strong> meta data to simplify queries using classes such as SimpleJdbcInsert and SimpleJdbcCall. That way you need to provide only a table or stored procedure name and a map of parameters corresponding to column names to perform an SQL operation.<\/li>\n<li><strong>Using MappingSqlQuery<\/strong>, SqlUpdate, and StoredProcedure classes to represent database operations as reusable Java objects so that you can use them over and over again by providing only different query parameters each time.<\/li>\n<\/ol>\n<p>To start working with JDBC from Spring application, you first need to obtain the data- base connection. Spring offers two ways to obtain database connections within the JDBC API. <code>Data source<\/code> or the <code>DriverManager<\/code>.<\/p>\n<p>The DriverManager is the legacy approach and DataSource is newer one. It is recommended to use the new DataSource facility to connect to databases and other resources. DataSource facility has several advantages over DriverManager facility like DataSource increases portability, enables connection pooling and distributed transactions, the DriverManager does not allow such techniques.<\/p>\n<p>If you&#8217;re using Maven project configuration, you need to add the following Spring dependencies elements into your <code>pom.xml<\/code>:<\/p>\n<h4>Maven dependency<\/h4>\n<pre class=\"prettyprint lang-xml\">&lt;dependency&gt;\r\n    &lt;groupId&gt;org.springframework&lt;\/groupId&gt;\r\n    &lt;artifactId&gt;spring-jdbc&lt;\/artifactId&gt;\r\n    &lt;version&gt;4.2.1.RELEASE&lt;\/version&gt;\r\n&lt;\/dependency&gt;\r\n\r\n&lt;dependency&gt;\r\n    &lt;groupId&gt;commons-dbcp&lt;\/groupId&gt;\r\n    &lt;artifactId&gt;commons-dbcp&lt;\/artifactId&gt;\r\n    &lt;version&gt;1.4&lt;\/version&gt;\r\n&lt;\/dependency&gt;\r\n<\/pre>\n<h4>Gradle dependency<\/h4>\n<pre class=\"prettyprint lang-java\">'org.springframework:spring-jdbc:4.2.1.RELEASE'\r\n'commons-dbcp:commons-dbcp:1.4'\r\n<\/pre>\n<p>The core class of Spring\u2019s JDBC support is <code>JdbcTemplate<\/code>. It simplifies the use of JDBC and helps to avoid common errors. JdbcTemplate can be used to execute SQL queries or insert, update, and delete statements. It executes core JDBC work flow, initiating iteration over ResultSets and catching JDBC exceptions and translating them to the generic, more informative DataAccessException hierarchy defined by Spring. Application code only needs to provide SQL and ResultSet processing logic if necessary.<\/p>\n<p>Now that we understood the basics of Spring JDBC, in the next post we will continue with creating our first Spring JDBC application.<\/p>\n","excerpt":"<p>There are various data access technologies to perform persistence operations in Java enterprise applications. JDBC is among the most popular one. Spring provides data access operations performed with JDBC..<\/p>\n","date":"2015-10-13 04:06:17","modified":"2015-10-13 04:06:17","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":287,"slug":"jdbc","title":"JDBC","description":"","post_count":4}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1508"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"722cd3aade6e130023003ffc72547a54\";s:5:\"pDate\";s:19:\"2015-10-12 22:36:39\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"644090697\";s:5:\"pDate\";s:19:\"2015-10-12 22:36:54\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"653700911148040192\";s:5:\"pDate\";s:19:\"2015-10-12 22:36:57\";}}\";"],"dsq_thread_id":["4219784297"],"minimaldog_user_IP":["a:1:{s:17:\"ip-80.169.158.130\";s:14:\"80.169.158.130\";}"],"minimaldog_post_like_count":["1"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":9923,"type":"post","slug":"creating-your-first-bootstrap-example","url":"http:\/\/stacktips.com\/tutorials\/bootstrap\/creating-your-first-bootstrap-example","status":"publish","title":"Creating Your First Bootstrap Example","title_plain":"Creating Your First Bootstrap Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Creating Your First Bootstrap Example' data-link='http:\/\/stacktips.com\/tutorials\/bootstrap\/creating-your-first-bootstrap-example' data-summary='In our previous tutorials, we have covered the overview of bootstrap framework and the structure of the framework. Let us now proceed to create a working bootstrap example.'><\/div>\n<p>In our previous tutorials, we have covered the <a href=\"http:\/\/stacktips.com\/bootstrap\/getting-started-with-bootstrap\">overview of bootstrap framework<\/a> and the structure of the framework. Let us now proceed to create a working bootstrap example.<\/p>\n<p>For building bootstrap application, you need to download the required bootstrap framework files. You may visit getting started with Bootstrap, to know more on how to download and link the bootstrap framework to your HTML page.<\/p>\n<p>The following section describes the basic structure of a bootstrap page.<\/p>\n<ul>\n<li>HTML file must be marked as <code>HTML5<\/code> doctype, i.e<\/li>\n<\/ul>\n<pre class=\"prettyprint lang-html\">&lt;!DOCTYPE html&gt;\r\n &lt;html lang=\"en\"&gt;\r\n  ...\r\n &lt;\/html&gt;\r\n<\/pre>\n<ul>\n<li>You must include meta <code>viewport<\/code> tag in the head section ,<\/li>\n<\/ul>\n<pre class=\"prettyprint lang-html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;<\/pre>\n<ul>\n<li>You have to include the Bootstrap <code>CSS<\/code> and <code>JS<\/code> files, as follows<\/li>\n<\/ul>\n<pre class=\"prettyprint lang-html\">&lt;!DOCTYPE html&gt; \r\n&lt;html lang=\"en\"&gt;  \r\n &lt;head&gt;    \r\n    &lt;title&gt;My first Bootstrap page &lt;\/title&gt;    \r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initialscale=1\"&gt;    \r\n    &lt;link href=\"CSS\/bootstrap.min.css\" rel=\"stylesheet\"&gt;   \r\n    &lt;link href=\"CSS\/bootstrap-theme.min.css\" rel=\"stylesheet\"&gt;    \r\n    &lt;script type=\"text\/javascript\" src=\"JS\/bootstrap.min.js\"\/&gt;\r\n    &lt;script type=\"text\/javascript\" src=\"JS\/jquery.min.js\"\/&gt;\r\n&lt;\/head&gt; \r\n<\/pre>\n<ul>\n<li><strong>Body section:<\/strong> All of your HTML body section must be kept inside div element with class attached as <code>container<\/code> or <code>container-fluid<\/code>.<\/li>\n<\/ul>\n<pre class=\"prettyprint lang-html\">&lt;body&gt;    \r\n   &lt;div class=\"container\"&gt;\r\n     ...  \r\n   &lt;\/div&gt; \r\n&lt;\/body&gt;\r\n<\/pre>\n<p>The container class renders the page with a fixed width in middle of the browser where as the container-fluid renders the page with the full browser width. So if you want to let the page fill the whole screen, change <code>.container<\/code> to <code>.container-fluid<\/code>.<\/p>\n<h4>Complete example<\/h4>\n<pre class=\"prettyprint lang-html\">&lt;!DOCTYPE html&gt; \r\n&lt;html lang=\"en\"&gt;\r\n   &lt;head&gt;\r\n      &lt;title&gt;My first Bootstrap page &lt;\/title&gt;\r\n      &lt;meta name=\"viewport\" content=\"width=device-width, initialscale=1\"&gt;\r\n      &lt;link href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/css\/bootstrap.min.css\" rel=\"stylesheet\"&gt;\r\n      &lt;link href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/css\/bootstrap-theme.min.css\" rel=\"stylesheet\"&gt;\r\n      &lt;script type=\"text\/javascript\" src=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/js\/bootstrap.min.j\"&gt;&lt;\/script&gt; \r\n      &lt;script type=\"text\/javascript\" src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/2.1.3\/jquery.min.js\"&gt;&lt;\/script&gt;\r\n   &lt;\/head&gt;\r\n   &lt;body&gt;\r\n      &lt;div class=\"conainer\" style=\"margin:20px;\"&gt;\r\n         &lt;div class=\"page-header\"&gt;\r\n            &lt;h1&gt; \r\n               &lt;span class=\"glyphicon glyphiconhome\"&gt;&lt;\/span&gt;&amp;nbsp; Welcome to the Bootstrap framework\r\n            &lt;\/h1&gt;\r\n         &lt;\/div&gt;\r\n         &lt;div class=\"row\"&gt;\r\n            &lt;!--Column display with the xs-12&amp;sm-12 : for mobile , md-8&amp;lg-8 : for tablet and desctop --&gt; \r\n            &lt;div class=\"col-xs-12 col-sm-12 col-md-8 col-lg-8\"&gt;\r\n               &lt;div class=\"panel panel-warning\" style=\"height:200px;\" &gt;\r\n                  &lt;div class=\"panel-heading\"&gt;Content panel&lt;\/div&gt;\r\n                  &lt;div class=\"panel-body\"&gt;...&lt;\/div&gt;\r\n               &lt;\/div&gt;\r\n            &lt;\/div&gt;\r\n\r\n            &lt;!--Column display with the xs-12&amp;sm-12 : for mobile , md-4&amp;lg-4 : for tablet and desctop --&gt; \r\n            &lt;div class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\"&gt;\r\n               &lt;div class=\"panel panel-info\" style=\"height:200px;\"&gt;\r\n                  &lt;div class=\"panel-heading\"&gt;Right sidebar&lt;\/div&gt;\r\n                  &lt;div class=\"panel-body\"&gt;...&lt;\/div&gt;\r\n               &lt;\/div&gt;\r\n            &lt;\/div&gt;\r\n            \r\n\r\n         &lt;\/div&gt;\r\n      &lt;\/div&gt;\r\n      &lt;div id=\"footer\"&gt;\r\n         &lt;div class=\"container\"&gt;\r\n            &lt;div class=\"text-muted pull-left\"&gt;\r\n               &lt;a href=\"http:\/\/stacktips.com\/bootstrap\" target=\"_blank\"&gt;Bootstrap Tutorials&lt;\/a&gt;\r\n            &lt;\/div&gt;\r\n            &lt;div class=\"text-muted pull-right\"&gt;&lt;a href=\"http:\/\/stacktips.com\"&gt;http:\/\/stacktips.com&lt;\/a&gt;\r\n            &lt;\/div&gt;\r\n         &lt;\/div&gt;\r\n      &lt;\/div&gt;\r\n   &lt;\/body&gt;\r\n&lt;\/html&gt;\r\n<\/pre>\n<p>In the above example we have started creating a web page using the elementary classes of Bootstrap. Note that the HTML file must be marked as HTML5 doctype.\u00a0Here we created the base structure of an application. The above HTML code produce the following output.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page.png\"><img class=\"alignnone size-full wp-image-9929\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page.png\" alt=\"Creating first bootstrap page\" width=\"1043\" height=\"488\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page.png 1043w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page-300x140.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page-620x290.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page-940x440.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page-800x374.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page-1000x468.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page-900x421.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page-370x173.png 370w\" sizes=\"(max-width: 1043px) 100vw, 1043px\" \/><\/a><\/p>\n<p>You can try seeing the same in mobile view. You can visibly notice that the two blocks will be automatically adjusted and rendered in a vertical pattern.<\/p>\n","excerpt":"<p>In our previous tutorials, we have covered the overview of bootstrap framework and the structure of the framework. Let us now proceed to create a working bootstrap example. <\/p>\n","date":"2015-10-12 17:02:15","modified":"2015-10-12 17:14:17","categories":[{"id":281,"slug":"bootstrap","title":"Bootstrap","description":"","parent":297,"post_count":12}],"tags":[{"id":273,"slug":"html","title":"HTML","description":"","post_count":6}],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":9929,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page.png","slug":"creating-first-bootstrap-page","title":"Creating first bootstrap page","description":"Creating first bootstrap page","caption":"","parent":9923,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page.png","width":1043,"height":488},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page-620x290.png","width":620,"height":290},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page.png","width":1043,"height":488},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page.png","width":1043,"height":488},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Creating-first-bootstrap-page.png","width":1043,"height":488}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1841"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4217530240"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:234:\"a:1:{i:0;a:8:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:153:\"a:1:{i:0;a:5:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400}}},{"id":9893,"type":"post","slug":"jdxa-object-relational-mapping-orm-for-android","url":"http:\/\/stacktips.com\/tutorials\/jdxa-object-relational-mapping-orm-for-android","status":"publish","title":"JDXA Object Relational Mapping (ORM) Solution for Android","title_plain":"JDXA Object Relational Mapping (ORM) Solution for Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='JDXA Object Relational Mapping (ORM) Solution for Android' data-link='http:\/\/stacktips.com\/tutorials\/jdxa-object-relational-mapping-orm-for-android' data-summary='JDXA is a simple, non-intrusive and flexible Object Relational Mapping (ORM) product that can significantly simplify and accelerate development of Android apps.'><\/div>\n<p><strong>JDXA is a simple, non-intrusive and flexible Object Relational Mapping (ORM)\u00a0product that can significantly simplify and accelerate development of Android apps.\u00a0<\/strong><\/p>\n<p>JDXA solution improves mobile app developer&#8217;s productivity and fills an important gap in Google\u2019s Android development platform. Based on some well thought-out <a href=\"http:\/\/softwaretree.com\/2015\/KISSPrinciples.html\" target=\"_blank\">KISS Principles<\/a>, JDXA dramatically decreases development time by presenting a more intuitive object-oriented view of on-device relational data, eliminating the need to write and maintain endless lines of complex low-level SQL code.<\/p>\n<p>JDXA provides powerful and easy-to-use ORM functionality in a small footprint, resulting in the following benefits:<\/p>\n<ul>\n<li>Improved developer productivity<\/li>\n<li>Fewer maintenance hassles and associated costs<\/li>\n<li>Reduced development risks<\/li>\n<li>Apps that are flexible and easier to evolve, giving developers a competitive advantage<\/li>\n<li>Accelerated time-to-market and revenue<\/li>\n<li>Higher customer satisfaction<\/li>\n<\/ul>\n<p>JDXA easily supports inheritance, one-to-one, one-to-many, and many-to-many relationships and offers a POJO (Plain Old Java Objects) friendly non-intrusive programming model, which does not require you to change your Java classes in any way.<\/p>\n<ul>\n<li>No need to subclass your domain classes from any base class<\/li>\n<li>No need to clutter your source code with annotations<\/li>\n<li>No need for DAO classes<\/li>\n<li>No source code generation<\/li>\n<li>No pre-processing or post-processing of your code<\/li>\n<\/ul>\n<p>The SDK comes with comprehensive documentation and many illustrative sample example. You may learn more about JDXA by visiting Software Tree\u2019s <a href=\"http:\/\/www.softwaretree.com\/\" target=\"_blank\">website<\/a>.<\/p>\n","excerpt":"<p>JDXA is a simple, non-intrusive and flexible Object Relational Mapping (ORM) product that can significantly simplify and accelerate development of Android apps. <\/p>\n","date":"2015-10-09 12:43:08","modified":"2016-05-29 20:47:44","categories":[{"id":297,"slug":"tutorials","title":"Tutorials &amp; Tips","description":"","parent":0,"post_count":3}],"tags":[{"id":286,"slug":"jdxa","title":"JDXA","description":"","post_count":1},{"id":285,"slug":"orm","title":"ORM","description":"","post_count":1}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8244,"name":"Damodar Periwal","url":"https:\/\/www.facebook.com\/app_scoped_user_id\/10153677629793834\/","date":"2015-10-10 00:50:16","content":"<p>For a Free Trial Download of JDXA ORM, visit <a href=\"http:\/\/softwaretree.com\/2015\/products\/jdxa\/download-jdxa.php\" rel=\"nofollow\">http:\/\/softwaretree.com\/2015\/products\/jdxa\/download-jdxa.php<\/a><\/p>\n","parent":0},{"id":8462,"name":"Bell leaf","url":"","date":"2016-03-30 12:46:00","content":"<p>Thanks for the info on JDXA. Looks like a cool ORM. Will give it a spin.<\/p>\n","parent":0}],"attachments":[],"comment_count":2,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1477"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4208280677"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"e0531ca571fc3723ea9952eabe0b8f5d\";s:5:\"pDate\";s:19:\"2015-10-09 07:13:38\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:384:\"a:1:{i:0;a:13:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1089320411080212\";s:5:\"pDate\";s:19:\"2015-10-09 07:13:37\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"642895492\";s:5:\"pDate\";s:19:\"2015-10-09 07:13:39\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"652381397609373696\";s:5:\"pDate\";s:19:\"2015-10-09 07:13:40\";s:2:\"do\";i:0;}}\";"],"snapImportedFBComments":["a:1:{i:8244;s:38:\"fbxcw1089320411080212_1089548584390728\";}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":9148,"type":"post","slug":"opensource-custom-listview-scrollview-implementation-libraries-in-android","url":"http:\/\/stacktips.com\/tutorials\/android\/opensource-custom-listview-scrollview-implementation-libraries-in-android","status":"publish","title":"OpenSource Custom ListView ScrollView Libraries in Android","title_plain":"OpenSource Custom ListView ScrollView Libraries in Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='OpenSource Custom ListView ScrollView Libraries in Android' data-link='http:\/\/stacktips.com\/tutorials\/android\/opensource-custom-listview-scrollview-implementation-libraries-in-android' data-summary=''><\/div>\n<table class=\"reference\" width=\"100%\">\n<tbody>\n<tr>\n<td width=\"34\"><strong>#<\/strong><\/td>\n<td width=\"319\"><strong>Custom ListView ScrollView Implementation &#8211; Android<\/strong><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>1<\/strong><\/td>\n<td width=\"319\"><strong>Pinned section listview<\/strong><\/p>\n<p>Easy to use ListView with pinned sections for Android.<br \/>\n<a href=\"https:\/\/github.com\/beworker\/pinned-section-listview\">https:\/\/github.com\/beworker\/pinned-section-listview<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>2<\/strong><\/td>\n<td width=\"319\"><strong>PullToRefresh-ListView<\/strong><\/p>\n<p>A generic, customizable, open source Android ListView implementation that has &#8216;Pull to Refresh&#8217; functionality.<br \/>\n<a href=\"https:\/\/github.com\/erikwt\/PullToRefresh-ListView\">https:\/\/github.com\/erikwt\/PullToRefresh-ListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>3<\/strong><\/td>\n<td width=\"319\"><strong>FlabbyListView<\/strong><\/p>\n<p>Android library to display a ListView whose cells are not rigid but flabby and react to ListView scroll.<br \/>\n<a href=\"https:\/\/github.com\/jpardogo\/FlabbyListView\">https:\/\/github.com\/jpardogo\/FlabbyListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>4<\/strong><\/td>\n<td width=\"319\"><strong>XListView-Android<\/strong><\/p>\n<p>ListView supports pull refresh and pull up to load more feature.<br \/>\n<a href=\"https:\/\/github.com\/Maxwin-z\/XListView-Android\">https:\/\/github.com\/Maxwin-z\/XListView-Android<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>5<\/strong><\/td>\n<td width=\"319\"><strong>PinterestListView<\/strong><\/p>\n<p>Pinterest style ListView for Android<br \/>\n<a href=\"https:\/\/github.com\/vladexologija\/PinterestListView\">https:\/\/github.com\/vladexologija\/PinterestListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>6<\/strong><\/td>\n<td width=\"319\"><strong>Android-pulltorefresh-and-loadmore<\/strong><\/p>\n<p>Android custom list view, with interaction pattern load more and pull to refresh to load data dynamically<br \/>\n<a href=\"https:\/\/github.com\/shontauro\/android-pulltorefresh-and-loadmore\">https:\/\/github.com\/shontauro\/android-pulltorefresh-and-loadmore<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>7<\/strong><\/td>\n<td width=\"319\"><strong>PinnedHeaderListView<\/strong><\/p>\n<p>A ListView with pinned section headers for Android<br \/>\n<a href=\"https:\/\/github.com\/JimiSmith\/PinnedHeaderListView\">https:\/\/github.com\/JimiSmith\/PinnedHeaderListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>8<\/strong><\/td>\n<td width=\"319\"><strong>ParallaxScroll<\/strong><\/p>\n<p>Parallax ScrollView and ListView for Android<br \/>\n<a href=\"https:\/\/github.com\/nirhart\/ParallaxScroll\">https:\/\/github.com\/nirhart\/ParallaxScroll<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>9<\/strong><\/td>\n<td width=\"319\"><strong>Android-HorizontalListView<\/strong><\/p>\n<p>HorizontalListView is an Android ListView widget which scrolls in a horizontal manner (in contrast with the SDK-provided ListView which scrolls vertically).<br \/>\n<a href=\"https:\/\/github.com\/MeetMe\/Android-HorizontalListView\">https:\/\/github.com\/MeetMe\/Android-HorizontalListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>10<\/strong><\/td>\n<td width=\"319\"><strong>LinearListView<\/strong><\/p>\n<p>Android library that allows you to bind a LinearLayout with a ListAdapter.<br \/>\n<a href=\"https:\/\/github.com\/frankiesardo\/LinearListView\">https:\/\/github.com\/frankiesardo\/LinearListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>11<\/strong><\/td>\n<td width=\"319\"><strong>ParallaxListView<\/strong><\/p>\n<p>An Android ListView Demo with a parallax effect header like Path.<br \/>\n<a href=\"https:\/\/github.com\/Gnod\/ParallaxListView\">https:\/\/github.com\/Gnod\/ParallaxListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>12<\/strong><\/td>\n<td width=\"319\"><strong>PagedHeadListView<\/strong><\/p>\n<p>Android boosted ListView supporting paginated header with a new material page indicator.<br \/>\n<a href=\"https:\/\/github.com\/JorgeCastilloPrz\/PagedHeadListView\">https:\/\/github.com\/JorgeCastilloPrz\/PagedHeadListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>13<\/strong><\/td>\n<td width=\"319\"><strong>PullZoomView<\/strong><\/p>\n<p>An Android custom ListView and ScrollView with pull to zoom-in.<br \/>\n<a href=\"https:\/\/github.com\/Frank-Zhu\/PullZoomView\">https:\/\/github.com\/Frank-Zhu\/PullZoomView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>14<\/strong><\/td>\n<td width=\"319\"><strong>HeaderListView<\/strong><\/p>\n<p>Android ListView with sticky headers<br \/>\n<a href=\"https:\/\/github.com\/applidium\/HeaderListView\">https:\/\/github.com\/applidium\/HeaderListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>15<\/strong><\/td>\n<td width=\"319\"><strong>ListviewFilter<\/strong><\/p>\n<p>Awesome Listview filter functionality in Android.<br \/>\n<a href=\"https:\/\/github.com\/bhavyahmehta\/ListviewFilter\">https:\/\/github.com\/bhavyahmehta\/ListviewFilter<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>16<\/strong><\/td>\n<td width=\"319\"><strong>android-accordion-view<\/strong><\/p>\n<p>Simple ListView based Android AccordionView<br \/>\n<a href=\"https:\/\/github.com\/hamsterready\/android-accordion-view\">https:\/\/github.com\/hamsterready\/android-accordion-view<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>17<\/strong><\/td>\n<td width=\"319\"><strong>DragNDropList<\/strong><\/p>\n<p>An easy to use Drag &amp; Drop List for Android. Direct replacement of the android ListView.<br \/>\n<a href=\"https:\/\/github.com\/terlici\/DragNDropList\">https:\/\/github.com\/terlici\/DragNDropList<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>18<\/strong><\/td>\n<td width=\"319\"><strong>QuickReturn<\/strong><\/p>\n<p>Android ListView that implements the QuickReturn UI pattern. Written from scratch with focus on performance.<br \/>\n<a href=\"https:\/\/github.com\/felipecsl\/QuickReturn\">https:\/\/github.com\/felipecsl\/QuickReturn<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>19<\/strong><\/td>\n<td width=\"319\"><strong>ZrcListView<\/strong><\/p>\n<p>\u4e00\u4e2a\u987a\u6ed1\u53c8\u6f02\u4eae\u7684Android\u4e0b\u62c9\u5237\u65b0\u4e0e\u52a0\u8f7d\u66f4\u591a\u5217\u8868\u7ec4\u4ef6\u3002<br \/>\n<a href=\"https:\/\/github.com\/zarics\/ZrcListView\">https:\/\/github.com\/zarics\/ZrcListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>20<\/strong><\/td>\n<td width=\"319\"><strong>android-swipelistview<\/strong><\/p>\n<p>An Android List View implementation with support for drawable cells and many other swipe related features<br \/>\n<a href=\"https:\/\/github.com\/47deg\/android-swipelistview\">https:\/\/github.com\/47deg\/android-swipelistview<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>21<\/strong><\/td>\n<td width=\"319\"><strong>android-pulltorefresh<\/strong><\/p>\n<p>This project aims to provide a reusable pull to refresh widget for Android.<br \/>\n<a href=\"https:\/\/github.com\/johannilsson\/android-pulltorefresh\">https:\/\/github.com\/johannilsson\/android-pulltorefresh<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>22<\/strong><\/td>\n<td width=\"319\"><strong>StickyListHeaders<\/strong><\/p>\n<p>An android library for section headers that stick to the top<br \/>\n<a href=\"https:\/\/github.com\/emilsjolander\/StickyListHeaders\">https:\/\/github.com\/emilsjolander\/StickyListHeaders<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>23<\/strong><\/td>\n<td width=\"319\"><strong>LazyList<\/strong><\/p>\n<p>Lazy load of images in Android<br \/>\n<a href=\"https:\/\/github.com\/thest1\/LazyList\">https:\/github.com\/thest1\/LazyList<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>24<\/strong><\/td>\n<td width=\"319\"><strong>Floating Group Expandable ListView<\/strong><\/p>\n<p>An open source Android library that provides a floating group view at the top of the ExpandableListView<br \/>\n<a href=\"https:\/\/github.com\/diegocarloslima\/FloatingGroupExpandableListView\">https:\/\/github.com\/diegocarloslima\/FloatingGroupExpandableListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>25<\/strong><\/td>\n<td width=\"319\"><strong>PullSeparateListView<\/strong><\/p>\n<p>\u5230\u9876\u90e8\u6216\u5e95\u90e8\u65f6\u62c9\u52a8\uff0citem\u5206\u79bb\u6548\u679c<br \/>\n<a href=\"https:\/\/github.com\/chiemy\/PullSeparateListView\">https:\/\/github.com\/chiemy\/PullSeparateListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>26<\/strong><\/td>\n<td width=\"319\"><strong>Android-SlideExpandableListView<\/strong><\/p>\n<p>A better ExpandableListView, with animated expandable views for each list item<br \/>\n<a href=\"https:\/\/github.com\/tjerkw\/Android-SlideExpandableListView\">https:\/\/github.com\/tjerkw\/Android-SlideExpandableListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>27<\/strong><\/td>\n<td width=\"319\"><strong>HorizontalVariableListView<\/strong><\/p>\n<p>Horizontal list view for Android which allows variable items widths<br \/>\n<a href=\"https:\/\/github.com\/sephiroth74\/HorizontalVariableListView\">https:\/\/github.com\/sephiroth74\/HorizontalVariableListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>28<\/strong><\/td>\n<td width=\"319\"><strong>ListBuddies<\/strong><\/p>\n<p>Android library to achieve in an easy way, the behaviour of the home page in the Expedia app, with a pair of auto-scroll circular parallax ListViews.<br \/>\n<a href=\"https:\/\/github.com\/jpardogo\/ListBuddies\">https:\/\/github.com\/jpardogo\/ListBuddies<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>29<\/strong><\/td>\n<td width=\"319\"><strong>Android-Tiling-ScrollView<\/strong><\/p>\n<p>A tiling scrollview to display large picture (similar to iOS &#8220;CATiledLayer&#8221;)<br \/>\n<a href=\"https:\/\/github.com\/ened\/Android-Tiling-ScrollView\">https:\/\/github.com\/ened\/Android-Tiling-ScrollView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>30<\/strong><\/td>\n<td width=\"319\"><strong>PullScrollView<\/strong><\/p>\n<p>1.\u4eff\u7167\u65b0\u6d6a\u5fae\u535aAndroid\u5ba2\u6237\u7aef\u4e2a\u4eba\u4e2d\u5fc3\u7684ScrollView\uff0c\u4e0b\u62c9\u80cc\u666f\u4f38\u7f29\u56de\u5f39\u6548\u679c\u3002 2.ScrollView\u4effIOS\u56de\u5f39\u6548\u679c\u3002<br \/>\n<a href=\"https:\/\/github.com\/MarkMjw\/PullScrollView\">https:\/\/github.com\/MarkMjw\/PullScrollView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>31<\/strong><\/td>\n<td width=\"319\"><strong>Discrollview<\/strong><\/p>\n<p>Scroll + discover = DiscrollView<br \/>\n<a href=\"https:\/\/github.com\/flavienlaurent\/discrollview\">https:\/\/github.com\/flavienlaurent\/discrollview<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>32<\/strong><\/td>\n<td width=\"319\"><strong>StickyScrollViewItems<\/strong><\/p>\n<p>A small android library for tagging views inside a ScrollView as &#8220;sticky&#8221; making them stick to the top of the scroll container until a new sticky view comes and takes it&#8217;s place<br \/>\n<a href=\"https:\/\/github.com\/emilsjolander\/StickyScrollViewItems\">https:\/\/github.com\/emilsjolander\/StickyScrollViewItems<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>33<\/strong><\/td>\n<td width=\"319\"><strong>SwipeMenuListView<\/strong><\/p>\n<p>SwipeMenuListView<br \/>\n<a href=\"https:\/\/github.com\/baoyongzhang\/SwipeMenuListView\">https:\/\/github.com\/baoyongzhang\/SwipeMenuListView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>34<\/strong><\/td>\n<td width=\"319\"><strong>Android-ObservableScrollView<\/strong><\/p>\n<p>Android library to observe scroll events on scrollable views.<br \/>\n<a href=\"https:\/\/github.com\/ksoichiro\/Android-ObservableScrollView\">https:\/\/github.com\/ksoichiro\/Android-ObservableScrollView<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>35<\/strong><\/td>\n<td width=\"319\"><strong>Pull-to-Refresh.Rentals-Android<\/strong><\/p>\n<p>This project aims to provide a simple and customizable pull to refresh implementation. Made in Yalantis<br \/>\n<a href=\"https:\/\/github.com\/Yalantis\/Pull-to-Refresh.Rentals-Android\">https:\/\/github.com\/Yalantis\/Pull-to-Refresh.Rentals-Android<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>36<\/strong><\/td>\n<td width=\"319\"><strong>StikkyHeader<\/strong><\/p>\n<p>This is a very simple library for Android that allows you to stick an header to a scrollable view and easly apply animation to it<br \/>\n<a href=\"https:\/\/github.com\/carlonzo\/StikkyHeader\">https:\/\/github.com\/carlonzo\/StikkyHeader<\/a><\/td>\n<\/tr>\n<tr>\n<td width=\"34\"><strong>37<\/strong><\/td>\n<td width=\"319\"><strong>Quickscroll<\/strong><\/p>\n<p>Bringing extended scrolling features to Android&#8217;s native ListView and ExpandableListView.<br \/>\n<a href=\"https:\/\/github.com\/andraskindler\/quickscroll\">https:\/\/github.com\/andraskindler\/quickscroll<\/a><\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n","excerpt":"<p># Custom ListView ScrollView Implementation &#8211; Android 1 Pinned section listview Easy to use ListView with pinned sections for Android. https:\/\/github.com\/beworker\/pinned-section-listview 2 PullToRefresh-ListView A generic, customizable, open source Android ListView implementation that has &#8216;Pull to Refresh&#8217; functionality. https:\/\/github.com\/erikwt\/PullToRefresh-ListView 3 FlabbyListView Android library to display a ListView whose cells are not rigid but flabby and react [&hellip;]<\/p>\n","date":"2015-10-09 03:14:04","modified":"2016-06-09 03:16:25","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112},{"id":270,"slug":"library","title":"library","description":"","parent":297,"post_count":1}],"tags":[],"author":{"id":854,"slug":"guest","name":"Guest","first_name":"Guest","last_name":"Blogger","nickname":"guest","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["14"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"slide_template":["default"],"dsq_thread_id":["4895050664"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:237:\"a:1:{i:0;a:8:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:243:\"a:1:{i:0;a:9:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:111:\"a:1:{i:0;a:4:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:162:\"a:1:{i:0;a:6:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:2:\"do\";i:0;}}\";"]}},{"id":9878,"type":"post","slug":"getting-started-with-bootstrap","url":"http:\/\/stacktips.com\/tutorials\/bootstrap\/getting-started-with-bootstrap","status":"publish","title":"Getting Started with Bootstrap","title_plain":"Getting Started with Bootstrap","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Getting Started with Bootstrap' data-link='http:\/\/stacktips.com\/tutorials\/bootstrap\/getting-started-with-bootstrap' data-summary='To work with Bootstrap you need to include bootstrap.min.css and bootstrap.min.js files to your HTML page. This can be done in two ways. Either you can download a copy of Bootstrap framework and host the required files on your web server or directly use the Bootstrap\u2019s CDN files.'><\/div>\n<p>In our previous example, we have discussed bootstrap features and what makes the CSS framework widely popular. Now let us get our hands on the next step to build our\u00a0first bootstrap application. For building bootstrap application, first you need to download the required bootstrap framework files.<\/p>\n<p>To work with Bootstrap you\u00a0need to include\u00a0<code>bootstrap.min.css<\/code> and <code>bootstrap.min.js<\/code>\u00a0files to your HTML page. This can be done in two\u00a0ways. Either you can download a copy of Bootstrap framework and host the required files on your web server or\u00a0directly use the Bootstrap\u2019s CDN files.<\/p>\n<p>I personally prefer to use the bootstrap CDN, as the CDN copies are always up to date.<\/p>\n<h2>Linking Bootstrap from CDN<\/h2>\n<p>The folks over at MaxCDN graciously provide CDN support for Bootstrap&#8217;s CSS and JavaScript. Just use these Bootstrap CDN links.<\/p>\n<pre class=\"prettyprint lang-html\">&lt;link rel=\"stylesheet\" href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/css\/bootstrap.min.css\"&gt;\r\n&lt;link rel=\"stylesheet\" href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/css\/bootstrap-theme.min.css\"&gt;\r\n&lt;script src=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/js\/bootstrap.min.js\"&gt;&lt;\/script&gt;\r\n<\/pre>\n<h2>Downloading Bootstrap Bundle<\/h2>\n<p>There are two versions available for download, compiled Bootstrap and Bootstrap source files. You can download Bootstrap files from <a href=\"http:\/\/getbootstrap.com\/getting-started\/\" target=\"_blank\">here<\/a>.<\/p>\n<p>Compiled download contain compiled and minified version of CSS and JavaScript files as well as icons in font format for faster and easier web development, while the source contain original source files for all CSS and JavaScript, along with a local copy of the docs. The\u00a0compiled bootstrap files are optimized for performance and easy to use.\u00a0To start with, you can start downloading the compiled Bootstrap copy.<\/p>\n<h4>Get the precompiled bundle<\/h4>\n<p>Download the <a href=\"https:\/\/github.com\/twbs\/bootstrap\/releases\/download\/v3.3.5\/bootstrap-3.3.5-dist.zip\" target=\"_blank\">precompiled bootstrap bundle<\/a> from here.<br \/>\nThis will download the compiled and minified <code>bootstrap-x.x.1dist.zip<\/code> file, which contains all the packaged CSS, JavaScript, and Font files.\u00a0A precompiled and distributable bundle comes with three folders. The following is the snapshot of the folders and their contents.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Precompiled-bootstrap-bundle.png\"><img class=\"alignnone wp-image-9880 size-full\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Precompiled-bootstrap-bundle.png\" alt=\"Precompiled bootstrap bundle\" width=\"883\" height=\"333\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Precompiled-bootstrap-bundle.png 883w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Precompiled-bootstrap-bundle-300x113.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Precompiled-bootstrap-bundle-620x234.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Precompiled-bootstrap-bundle-800x302.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Precompiled-bootstrap-bundle-370x140.png 370w\" sizes=\"(max-width: 883px) 100vw, 883px\" \/><\/a><\/p>\n<h4>Get the full source code:<\/h4>\n<p>Download the bootstrap <a href=\"https:\/\/github.com\/twbs\/bootstrap\/archive\/v3.3.5.zip\" target=\"_blank\">complete source code<\/a> bundle from here.<br \/>\nThis will download the full source code bundle of Bootstrap. You have to install and compile the source code before actually using this.\u00a0Here are the files and folders that come with the source code bundle.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-complete-source-bundle.png\"><img class=\"alignnone size-full wp-image-9884\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-complete-source-bundle.png\" alt=\"Bootstrap complete source bundle\" width=\"918\" height=\"556\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-complete-source-bundle.png 918w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-complete-source-bundle-300x182.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-complete-source-bundle-620x376.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-complete-source-bundle-800x485.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-complete-source-bundle-900x545.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-complete-source-bundle-370x224.png 370w\" sizes=\"(max-width: 918px) 100vw, 918px\" \/><\/a><\/p>\n<p>In case of a downloaded local copy of Bootstrap, we include the\u00a0following files to your\u00a0HTML HEAD section.<\/p>\n<pre class=\"prettyprint lang-html\">&lt;link rel=\"stylesheet\" href=\"bootstrap.min.css\"&gt; \r\n&lt;link rel=\"stylesheet\" href=\"bootstrap-theme.min.css\"&gt; \r\n&lt;script type=\"text\/javascript\" src=\"bootstrap.min.js\"&gt;&lt;\/script&gt; \r\n&lt;script type=\"text\/javascript\" src=\"jquery.min.js\"&gt;&lt;\/script&gt;\r\n<\/pre>\n","excerpt":"<p>To work with Bootstrap you need to include bootstrap.min.css and bootstrap.min.js files to your HTML page. This can be done in two ways. Either you can download a copy of Bootstrap framework and host the required files on your web server or directly use the Bootstrap\u2019s CDN files.<\/p>\n","date":"2015-10-08 15:18:49","modified":"2015-10-08 15:19:00","categories":[{"id":281,"slug":"bootstrap","title":"Bootstrap","description":"","parent":297,"post_count":12}],"tags":[],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":9880,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Precompiled-bootstrap-bundle.png","slug":"precompiled-bootstrap-bundle","title":"Precompiled bootstrap bundle","description":"Precompiled bootstrap bundle","caption":"","parent":9878,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Precompiled-bootstrap-bundle.png","width":883,"height":333},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Precompiled-bootstrap-bundle-620x234.png","width":620,"height":234},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Precompiled-bootstrap-bundle.png","width":883,"height":333},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Precompiled-bootstrap-bundle.png","width":883,"height":333},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Precompiled-bootstrap-bundle.png","width":883,"height":333}}},{"id":9884,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-complete-source-bundle.png","slug":"bootstrap-complete-source-bundle","title":"Bootstrap complete source bundle","description":"Bootstrap complete source bundle","caption":"","parent":9878,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-complete-source-bundle.png","width":918,"height":556},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-complete-source-bundle-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-complete-source-bundle.png","width":918,"height":556},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-complete-source-bundle.png","width":918,"height":556}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1027"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"642533202\";s:5:\"pDate\";s:19:\"2015-10-08 09:49:03\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"652058116838682624\";s:5:\"pDate\";s:19:\"2015-10-08 09:49:04\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"37ec66200a47df6f1650ee68e9036a09\";s:5:\"pDate\";s:19:\"2015-10-08 09:49:06\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1088911174454469\";s:5:\"pDate\";s:19:\"2015-10-08 09:49:09\";}}\";"],"dsq_thread_id":["4205355854"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400}}},{"id":9874,"type":"post","slug":"how-to-customize-pojo-initialization-and-destruction-in-spring-core","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/how-to-customize-pojo-initialization-and-destruction-in-spring-core","status":"publish","title":"How to Customize POJO Initialization and Destruction in Spring Core","title_plain":"How to Customize POJO Initialization and Destruction in Spring Core","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Customize POJO Initialization and Destruction in Spring Core' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/how-to-customize-pojo-initialization-and-destruction-in-spring-core' data-summary='Spring POJOs are initialized and managed by Spring IoC Container. Sometimes, you may need perform some initialization code before a POJO is used.'><\/div>\n<p>Spring POJOs are initialized and managed by Spring IoC Container. Sometimes, you may need perform some initialization code before a POJO is used. A typical example is to open a database or network connection. Similarly you may want to perform the corresponding destruction tasks at the end of their life cycle. Therefore, sometimes it is necessary to customize bean initialization and destruction in the Spring IoC container.<\/p>\n<p>The POJO life cycle tasks can be created using callback methods. A typical life cycle of a bean can be explained as follows:<\/p>\n<ol>\n<li>Create the bean instance either by a constructor injection or by a factory method.<\/li>\n<li>Set the values and bean references to the bean properties.<\/li>\n<li>Call the bean initialization callback methods.<\/li>\n<li>The bean is ready to be used.<\/li>\n<li>When the container is shut down, call the bean destruction callback methods are called.<\/li>\n<\/ol>\n<p>Spring initialization and destruction callback methods can be configured by setting the values for <code>init-method<\/code> and <code>destroy-method<\/code> attributes in the bean declaration. You need to specify the callback method names as follows.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;bean id=\"pizza\" class=\"com.javatechig.spring.bean.Pizza\"\r\n\tinit-method=\"onStart\" destroy-method=\"onDestroy\"&gt;\r\n\t&lt;property name=\"name\" value=\"Italian Pizza\" \/&gt;\r\n\t&lt;property name=\"price\" value=\"5.0\" \/&gt;\r\n&lt;\/bean&gt;\r\n<\/pre>\n<p>Notice that in the above code snippet, we have specified <code>onStart<\/code> and <code>onDestroy<\/code> callback methods to control POJO initialization and destruction. Here is how, you can configure the callback methods to your POJO class.<\/p>\n<pre class=\"prettyprint lang-java\">public class Pizza {\r\n\tprivate String name;\r\n\tprivate double price;\r\n\t\r\n\tpublic Pizza() { }\r\n\r\n\tpublic String getName() {\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic void setName(String name) {\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tpublic double getPrice() {\r\n\t\treturn price;\r\n\t}\r\n\r\n\tpublic void setPrice(double price) {\r\n\t\tthis.price = price;\r\n\t}\r\n\r\n\tpublic void onStart() throws IOException {\r\n\t\tSystem.out.println(\"Inside onStart\");\r\n\t}\r\n\r\n\tpublic void onDestroy() throws IOException {\r\n\t\tSystem.out.println(\"Inside onDestroy\");\r\n\t}\r\n}<\/pre>\n","excerpt":"<p>Spring POJOs are initialized and managed by Spring IoC Container. Sometimes, you may need perform some initialization code before a POJO is used.<\/p>\n","date":"2015-10-08 04:47:33","modified":"2016-05-31 14:59:39","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":30,"slug":"code-sample","title":"Code Sample","description":"","post_count":26},{"id":93,"slug":"java-2","title":"java","description":"","post_count":7}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1114"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4204161589"],"minimaldog_user_IP":["a:1:{s:17:\"ip-80.169.158.130\";s:14:\"80.169.158.130\";}"],"minimaldog_post_like_count":["1"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:237:\"a:1:{i:0;a:8:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:243:\"a:1:{i:0;a:9:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:111:\"a:1:{i:0;a:4:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:162:\"a:1:{i:0;a:6:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":9870,"type":"post","slug":"spring-internationalization-or-i18n-locales-using-properties-files","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/spring-internationalization-or-i18n-locales-using-properties-files","status":"publish","title":"Spring Internationalization or i18n Locales Using Properties Files","title_plain":"Spring Internationalization or i18n Locales Using Properties Files","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Spring Internationalization or i18n Locales Using Properties Files' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/spring-internationalization-or-i18n-locales-using-properties-files' data-summary='The string message for different locale are stored in separate properties files. These properties files are also called as resource bundles. Spring application context can resolve text messages for target locales by keys.'><\/div>\n<p>Most commercial websites are targeted for global users. This means that you need to make your application to support different languages. Spring provides built in support for localizing strings used across application.<\/p>\n<p>The string message for different locale are stored in separate properties files. These properties files are also called as resource bundles. Spring application context can resolve text messages for target locales by keys. By convention the Java resource bundle files are named as <code>&lt;filename&gt;_&lt;language_code&gt;_&lt;country_code&gt;.properties<\/code>.<\/p>\n<p>Spring uses the <code>MessageSource<\/code> interface to resolve the resource bundles. The ApplicationContext interface extends MessageSource interface so that all application contexts are able to resolve text messages. An application context delegates the message resolution to a bean with the name <code>messageSource<\/code>. <code>ResourceBundleMessageSource<\/code> is the most common MessageSource implementation that resolves messages from resource bundles for different locales.<\/p>\n<p>Create a properties file containing your static strings in your default locale i.e English. In our example we will create <code>message.properties<\/code> file.<\/p>\n<p><strong>message.properties<\/strong><\/p>\n<pre class=\"prettyprint lang-java\">message.hello = Hello\r\nmessage.welcome = {0}. {1} {2} welcome to stacktips.com.\r\n<\/pre>\n<p>Next thing we will do is to add translated strings in a separate file. By convention the file names are append the name of the file with an &#8220;underscore&#8221; sign followed by the locale code of the language you are translating it to.<\/p>\n<p>In this example, we will crate the French translation of the above strings. Create a new file named <code>message_fr.properties<\/code> and paste the following strings.<\/p>\n<p><strong>message_fr.properties<\/strong><\/p>\n<pre class=\"prettyprint lang-java\">message.hello = Bonjour\r\nmessage.welcome = {0}. {1} {2} Bienvenue a stacktips.com.\r\n<\/pre>\n<p>Please note that, I have used Google translator to translate the above messages in to French version.<\/p>\n<p>Now we need to tell Spring to handle the localization by using the above two files. This can be done by adding the <code>ResourceBundleMessageSource<\/code> bean in <code>beans.xml<\/code> declaration.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;bean id=\"messageSource\"\r\n\tclass=\"org.springframework.context.support.ResourceBundleMessageSource\"&gt;\r\n\t&lt;property name=\"basename\" value=\"message\" \/&gt;\r\n\t&lt;property name=\"defaultEncoding\" value=\"UTF-8\" \/&gt;\r\n&lt;\/bean&gt;\r\n<\/pre>\n<p>Notice that in the above bean configuration, the basename is used to tell the Spring IoC controller, which file to look for for resolving the localized string.<\/p>\n<p>Now, let us load the strings form different files based on the selected locale.<\/p>\n<pre class=\"prettyprint lang-java\">public class Main {\r\n\tpublic static void main(String[] args) throws Exception {\r\n\t\tApplicationContext context = new GenericXmlApplicationContext(\"beans.xml\");\r\n\r\n\t\tString helloEn = context.getMessage(\"message.hello\", null, Locale.ENGLISH);\r\n\t\tString welcomeEn = context.getMessage(\"message.welcome\", new String[] { \"Mrs\", \"Sally\", \"Peterson\" }, Locale.ENGLISH);\r\n\t\tSystem.out.println(helloEn +  welcomeEn);\r\n\r\n\t\tString helloFr = context.getMessage(\"message.hello\", null, Locale.FRENCH);\r\n\t\tString welcomeFr = context.getMessage(\"message.welcome\", new String[] { \"Mr\", \"Sally\", \"Peterson\" }, Locale.FRENCH);\r\n\t\tSystem.out.println(helloFr  + welcomeFr);\r\n\t}\r\n}<\/pre>\n","excerpt":"<p>The string message for different locale are stored in separate properties files. These properties files are also called as resource bundles. Spring application context can resolve text messages for target locales by keys.<\/p>\n","date":"2015-10-08 04:16:43","modified":"2015-10-08 04:16:43","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":279,"slug":"spring-core","title":"Spring Core","description":"","post_count":9}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1588"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"e478d55fd72d4b73d9e9a815bf690c7d\";s:5:\"pDate\";s:19:\"2015-10-07 22:47:48\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"642352270\";s:5:\"pDate\";s:19:\"2015-10-07 22:47:49\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"651891721962283009\";s:5:\"pDate\";s:19:\"2015-10-07 22:47:52\";}}\";"],"dsq_thread_id":["4204107551"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":9859,"type":"post","slug":"introduction-to-bootstrap-and-basic-building-blocks","url":"http:\/\/stacktips.com\/tutorials\/bootstrap\/introduction-to-bootstrap-and-basic-building-blocks","status":"publish","title":"Introduction to Bootstrap and Basic Building Blocks","title_plain":"Introduction to Bootstrap and Basic Building Blocks","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Introduction to Bootstrap and Basic Building Blocks' data-link='http:\/\/stacktips.com\/tutorials\/bootstrap\/introduction-to-bootstrap-and-basic-building-blocks' data-summary='Bootstrap is predominantly based on CSS3. CSS3 has a major shift with comparison to CSS1 &amp; CC2 and is currently the latest version. It has come up with a number of powerful capabilities and boosted the mobile-first philosophy of the technology.'><\/div>\n<p>Bootstrap is predominantly based on CSS3.\u00a0CSS3 has a major shift with comparison to CSS1 &amp; CC2 and is currently the latest version. It has come up with a number of powerful capabilities and boosted the mobile-first philosophy of the technology. Some of the very crucial inclusions are Media queries, Selectors, Cascading and Inheritance, Template layouts, Namespaces, MathML, Flexible and Grid layouts, Transformations and Transitions, and so on.<\/p>\n<p>Designing and building the website that would properly render in almost all the devices irrespective of the device size, browser, screen size, and so on widely known as Responsive web design.<\/p>\n<p>Bootstrap, frontend frameworks which will help you design and develop a Responsive Web application in a much optimized and efficient way.<\/p>\n<ul>\n<li>Bootstrap is a frontend framework for faster and easier web development in today\u2019s fiercely competitive world of mobile.<\/li>\n<li>It uses HTML,CSS and JavaScript<\/li>\n<li>Twitter released Bootstrap as an open source in August 2010.<\/li>\n<li>Although there are few similar frameworks available in market, Bootstrap is most popular and widely used one.<\/li>\n<\/ul>\n<h2>Why and Where to use Bootstrap?<\/h2>\n<p>Following are some of the points where bootstrap is the key to use,<\/p>\n<ul>\n<li><strong>Responsive design<\/strong>: Responsive Web Design means designing and building your website that would properly render in almost all the devices irrespective of the device size, browser, screen size, and so on.<\/li>\n<li><strong>Automatic browser support:<\/strong> The ability of a Web browser to effectively display the HTML code and execute the scripts on Web pages.So thatall current browsers will render the page the same.<\/li>\n<li><strong>The mobile-first approach<\/strong>: The technique of creating mobile websites first and then progressively enhancing them to create the desktop version. It goes parallel with the term Progressive Enhancement, which means you are designing your website bottom-up (mobile, tablet and desktop).<\/li>\n<li><strong>Easy adaption:<\/strong> This is similar to the progressive enhancement technique, where the focus goes to the user rather than the browser.<\/li>\n<\/ul>\n<h2>Basic Building blocks of Bootstrap<\/h2>\n<p>As we mentioned earlier the overall structure of Bootstrap contains, CSS, Components and JavaScript.<\/p>\n<ul>\n<li>Bootstrap comes with fundamental HTML element styled, global CSS classes, Classes for advanced grid patterns. It also includes lots of enhanced and extended CSS classes.<\/li>\n<li>Bootstrap offers rich set of reusable and built-in components such as breadcrumbs, progressbar, alerts and navigation bars. These components are technically custom CSS classes specially crafted for specific purposes.<\/li>\n<li>Bootstrap framework comes with a number of ready to use JavaScript plug-ins. So, when you need to create pop-up windows, carousels or tooltips and so on, you just use one of the pre-packaged JavaScript plug-ins.<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<p>[box style=&#8221;0&#8243;]<\/p>\n<p><strong>Did you know?<\/strong><br \/>\nThe Bootstrap JS plug-in are built on top of JQuery; hence the code you would write in JS in Bootstrap will be based on JQuery. Bootstrap also provides the feature and flexibility of customization where you can deploy your own branding and themes, instead of using the\u00a0bootstrap default ones.<\/p>\n<p>[\/box]<\/p>\n","excerpt":"<p>Bootstrap is predominantly based on CSS3. CSS3 has a major shift with comparison to CSS1 &#038; CC2 and is currently the latest version. It has come up with a number of powerful capabilities and boosted the mobile-first philosophy of the technology.<\/p>\n","date":"2015-10-07 14:34:22","modified":"2015-10-07 14:34:38","categories":[{"id":281,"slug":"bootstrap","title":"Bootstrap","description":"","parent":297,"post_count":12}],"tags":[{"id":282,"slug":"css","title":"css","description":"","post_count":2}],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":9862,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","slug":"bootstrap-tutorials","title":"Bootstrap Tutorials","description":"Bootstrap Tutorials","caption":"","parent":9859,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["990"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"651684555372388352\";s:5:\"pDate\";s:19:\"2015-10-07 09:04:40\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"3689c07208acc8fb1149bc20b9383e0d\";s:5:\"pDate\";s:19:\"2015-10-07 09:04:42\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"642085827\";s:5:\"pDate\";s:19:\"2015-10-07 09:04:43\";}}\";"],"dsq_thread_id":["4201961948"],"minimaldog_user_IP":["a:1:{s:15:\"ip-82.41.97.126\";s:12:\"82.41.97.126\";}"],"minimaldog_post_like_count":["1"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/10\/Bootstrap-Tutorials.png","width":660,"height":400}}},{"id":9851,"type":"post","slug":"how-to-initialize-bean-by-reading-data-from-properties-file-in-spring","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/how-to-initialize-bean-by-reading-data-from-properties-file-in-spring","status":"publish","title":"How to Initialize Bean by Reading Data from .properties File in Spring","title_plain":"How to Initialize Bean by Reading Data from .properties File in Spring","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Initialize Bean by Reading Data from .properties File in Spring' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/how-to-initialize-bean-by-reading-data-from-properties-file-in-spring' data-summary='In our previous tutorial, we have seen how to create and manage POJOs With Spring IoC container using XML configuration and @Configuration and @Bean Annotations. In this example, we will examine how to initialize spring POJO by reading data from external resources such as property file.'><\/div>\n<p>In our previous tutorial, we have seen how to create and manage POJOs With Spring IoC container using XML configuration and <code>@Configuration<\/code> and <code>@Bean<\/code> Annotations. In this example, we will examine how to initialize spring POJO by reading data from external resources such as property file.<\/p>\n<p>In regular Java applications, you need to write your own code to read file, but Spring offers the the <code>PropertySourcesPlaceholderConfigurer<\/code> class that facilitates to load the contents of external file.<\/p>\n<p>In this example, we will initialize the POJO by reading the data from a .properties file. Let us first create a bean class <code>Car.java<\/code> with two properties name and model.<\/p>\n<pre class=\"prettyprint lang-java\">public class Car {\r\n\tprivate String model;\r\n\tprivate double price;\r\n\r\n\tpublic Car() { }\r\n\r\n\tpublic String getModel() {\r\n\t\treturn model;\r\n\t}\r\n\r\n\tpublic void setModel(String model) {\r\n\t\tthis.model = model;\r\n\t}\r\n\r\n\tpublic double getPrice() {\r\n\t\treturn price;\r\n\t}\r\n\r\n\tpublic void setPrice(double price) {\r\n\t\tthis.price = price;\r\n\t}\r\n}\r\n<\/pre>\n<p>Let us assume you have a series of values in a properties file you want to access and initialize the bean properties. Create a property file named <code>car.properties<\/code> with the following data.<\/p>\n<pre class=\"prettyprint lang-xml\">car.model=Volkswagen Polo\r\ncar.price=5000.00\r\n<\/pre>\n<p>To make the contents of the car.properties file accessible to set up other beans, you can use the <code>PropertySourcesPlaceholderConfigurer<\/code> class read its value. Add the following configuration to your <code>beans.xml<\/code> file.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;bean id=\"carProperty\"\r\n\tclass=\"org.springframework.context.support.PropertySourcesPlaceholderConfigurer\"&gt;\r\n\t&lt;property name=\"location\"&gt;\r\n\t\t&lt;value&gt;classpath:car.properties&lt;\/value&gt;\r\n\t&lt;\/property&gt;\r\n&lt;\/bean&gt;\r\n<\/pre>\n<p>Notice that in the above code snippet, the location property for the bean is defined with <code>classpath:car.properties<\/code>. The classpath: prefix tells Spring to look for the car.properties file in the Java class path.<\/p>\n<p>The above configuration is enough, but this can throw an exception if the file is not found. This can be avoided using <code>ignoreResourceNotFound<\/code> and <code>ignoreUnresolvablePlaceholders<\/code> properties as follows.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;bean id=\"carProperty\"\r\n\tclass=\"org.springframework.context.support.PropertySourcesPlaceholderConfigurer\"&gt;\r\n\t&lt;property name=\"location\"&gt;\r\n\t\t&lt;value&gt;classpath:car.properties&lt;\/value&gt;\r\n\t&lt;\/property&gt;\r\n\t&lt;property name=\"ignoreResourceNotFound\" value=\"true\" \/&gt;\r\n\t&lt;property name=\"ignoreUnresolvablePlaceholders\" value=\"true\" \/&gt;\r\n&lt;\/bean&gt;\r\n<\/pre>\n<p>After declaring the <code>PropertySourcesPlaceholderConfigurer<\/code> bean, you can access the values of the <code>car.properties<\/code> file as follows.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;bean id=\"carDetailsBean\" class=\"com.javatechig.spring.bean3.Car\"&gt;\r\n\t&lt;property name=\"model\" value=\"${car.model:0}\" \/&gt;\r\n\t&lt;property name=\"price\" value=\"${car.price:0.00}\" \/&gt;\r\n&lt;\/bean&gt;\r\n<\/pre>\n<p>The syntax to read the values form the file is <code>${yy:default_value}<\/code>. If value for a key is is found in the properties file, the corresponding value is assigned to the bean property. Otherwise it loads the default value.<\/p>\n<p>Now you can initialize the bean and test the code as follows.<\/p>\n<pre class=\"prettyprint lang-java\">public class Main {\r\n\r\n\tpublic static void main(String[] args) throws Exception {\r\n\t\tApplicationContext context = new GenericXmlApplicationContext(\"beans.xml\");\r\n\t\tCar car = (Car) context.getBean(\"carDetailsBean\");\r\n\t\tSystem.out.println(car.getModel()); \/\/ Volkswagen Polo\r\n\t\tSystem.out.println(car.getPrice()); \/\/ 5000\r\n\t}\r\n}\r\n<\/pre>\n","excerpt":"<p>In our previous tutorial, we have seen how to create and manage POJOs With Spring IoC container using XML configuration and @Configuration and @Bean Annotations. In this example, we will examine how to initialize spring POJO by reading data from external resources such as property file.<\/p>\n","date":"2015-10-06 12:43:26","modified":"2015-10-06 12:44:54","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":280,"slug":"bean","title":"Bean","description":"","post_count":1},{"id":279,"slug":"spring-core","title":"Spring Core","description":"","post_count":9}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8290,"name":"Namrata","url":"","date":"2015-10-29 17:50:00","content":"<p>Plz tell me!!!How can we do the same in android to parse this?<\/p>\n<p>       101<\/p>\n<p>       101<\/p>\n<p>       101<\/p>\n<p>       2-113<\/p>\n<p>        LRao<\/p>\n<p>       101<\/p>\n<p>       1<\/p>\n<p>       K K Raju Puram<\/p>\n","parent":0}],"attachments":[],"comment_count":1,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["2816"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"117d1f09ab53709316d9cb82e15bb3f7\";s:5:\"pDate\";s:19:\"2015-10-06 07:13:50\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"641649132\";s:5:\"pDate\";s:19:\"2015-10-06 07:13:51\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"651294311334547456\";s:5:\"pDate\";s:19:\"2015-10-06 07:13:58\";}}\";"],"dsq_thread_id":["4198400865"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":9836,"type":"post","slug":"how-to-set-bean-scope-using-xml-configuration-and-scope-annotation","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/how-to-set-bean-scope-using-xml-configuration-and-scope-annotation","status":"publish","title":"How to Set Bean Scope Using XML Configuration and @Scope Annotation in Spring","title_plain":"How to Set Bean Scope Using XML Configuration and @Scope Annotation in Spring","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Set Bean Scope Using XML Configuration and @Scope Annotation in Spring' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/how-to-set-bean-scope-using-xml-configuration-and-scope-annotation' data-summary='When you declare a POJO instance or bean in the configuration file, you are actually defining a template for bean creation, not an actual bean instance.'><\/div>\n<p>When you declare a POJO instance or bean in the configuration file, you are actually defining a template for bean creation, not an actual bean instance. The actual bean instance is created when the <code>getBean()<\/code> method is called. While bean is instantiated by the Spring IoC, the framework decides the scope of the instance.<\/p>\n<p>Following are the different bean instance scopes supported in Spring.<\/p>\n<ul>\n<li>singleton &#8211; Creates at most one bean instance per Spring IoC container<\/li>\n<li>prototype &#8211; Creates a new instance each requested<\/li>\n<li>request &#8211; Creates a single bean instance per HTTP request;<\/li>\n<li>session &#8211; Creates a single bean instance per HTTP session;<\/li>\n<li>global session- Creates a single bean instance per global HTTP session<\/li>\n<\/ul>\n<p>You can set the bean scope using the <code>&lt;bean&gt;<\/code> element scope attribute. The default scope fro bean is set to Singleton. This means that only one instance of bean can be created in the IoC container and the same instance can be shared across.<\/p>\n<p>The following code snippet shows how to define the bean scope using XML configuration.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;bean id=\"crayon\" class=\"com.javatechig.spring.bean.Crayon\" scope=\"prototype\"&gt;\r\n      &lt;property name=\"name\" value=\"Dancing Crayon\" \/&gt;\r\n      &lt;property name=\"price\" value=\"30\" \/&gt;\r\n&lt;\/bean&gt;\r\n<\/pre>\n<p>You can also specifying bean scope from Java code using <code>@Scope<\/code> annotation as follows:<\/p>\n<pre class=\"prettyprint lang-java\">@Configuration\r\npublic class MyBeanConfig {\r\n\t@Bean\r\n\t@Scope(value = BeanDefinition.SCOPE_SINGLETON)\r\n\tpublic Crayon crayonToy() {\r\n\t\treturn new Crayon(\"Yellow crayon\", 50);\r\n\r\n\t}\r\n}\r\n<\/pre>\n","excerpt":"<p>When you declare a POJO instance or bean in the configuration file, you are actually defining a template for bean creation, not an actual bean instance.<\/p>\n","date":"2015-10-03 01:33:24","modified":"2016-06-11 00:39:10","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":279,"slug":"spring-core","title":"Spring Core","description":"","post_count":9}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1117"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4188118878"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"f44717e174d33d4a5ceedb3d2cf17162\";s:5:\"pDate\";s:19:\"2015-10-02 20:03:52\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"640506792\";s:5:\"pDate\";s:19:\"2015-10-02 20:03:57\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"650038503837822976\";s:5:\"pDate\";s:19:\"2015-10-02 20:03:51\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":9833,"type":"post","slug":"bean-configuration-using-configuration-and-bean-annotations","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/bean-configuration-using-configuration-and-bean-annotations","status":"publish","title":"Spring Bean Configuration using @Configuration and @Bean Annotations","title_plain":"Spring Bean Configuration using @Configuration and @Bean Annotations","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Spring Bean Configuration using @Configuration and @Bean Annotations' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/bean-configuration-using-configuration-and-bean-annotations' data-summary='In this tutorial we will examine how to configuring the Spring POJO for the Spring IoC container using @Configuration and @Bean annotation.'><\/div>\n<p>In our previous tutorial, we have declared and configured Spring bean classes using XML configuration file. If you want to reduce the number of XML configuration files, you can do so by configuring the Spring POJO for the Spring IoC container using <code>@Configuration<\/code> and <code>@Bean<\/code> annotation.<\/p>\n<h2>@Configuration &amp; @Bean Annotations<\/h2>\n<p>Annotating a class with the @Configuration indicates that the class can be used by the Spring IoC container as a source of bean definitions.<\/p>\n<p>The @Bean annotation tells Spring that a method annotated with @Bean will return an object that should be registered as a bean in the Spring application context.<\/p>\n<p>Let us examine how to use the @Configuration and @Bean annotation to configure the following bean class.<\/p>\n<pre class=\"prettyprint lang-java\">public class Toy {\r\n\tprivate String name;\r\n\tprivate double price;\r\n\r\n\tpublic Toy() { }\r\n\tpublic Toy(String name, double price) {\r\n\t\tthis.name = name;\r\n\t\tthis.price = price;\r\n\t}\r\n\r\n\tpublic String getName() {\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic void setName(String name) {\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tpublic double getPrice() {\r\n\t\treturn price;\r\n\t}\r\n\r\n\tpublic void setPrice(double price) {\r\n\t\tthis.price = price;\r\n\t}\r\n}\r\n<\/pre>\n<p>The above bean class can be configured using the following XML configuration.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;beans&gt;\r\n   &lt;bean id=\"crayonToy\" class=\"com.javatechig.spring.bean.Toy\" \/&gt;\r\n&lt;\/beans&gt;\r\n<\/pre>\n<p>The following code snippet shows the simplest form of bean declaration using @Configuration and @Bean annotation.<\/p>\n<pre class=\"prettyprint lang-java\">@Configuration\r\npublic class MyBeanConfig {\r\n\r\n\t@Bean\r\n\tpublic Toy crayonToy() {\r\n\t\treturn new Toy();\r\n\t}\r\n}\r\n<\/pre>\n<p>Here the method name annotated with @Bean works as bean ID and it creates and returns actual bean instance. Your configuration class can have declaration for more than one @Bean.<\/p>\n<p>Once your configuration classes are defined, you can load &amp; provide them to Spring container using <code>AnnotationConfigApplicationContext<\/code> class.<\/p>\n<pre class=\"prettyprint lang-java\">AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext();\r\ncontext.register(MyBeanConfig.class);\r\ncontext.refresh();\r\n\r\nCrayon myService = context.getBean(Crayon.class);\r\n<\/pre>\n","excerpt":"<p>In this tutorial we will examine how to configuring the Spring POJO for the Spring IoC container using @Configuration and @Bean annotation.<\/p>\n","date":"2015-10-02 13:00:48","modified":"2016-06-11 00:39:11","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":279,"slug":"spring-core","title":"Spring Core","description":"","post_count":9}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1163"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4186086091"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"c1717eb88b64311c5baa76f4e8c33e41\";s:5:\"pDate\";s:19:\"2015-10-02 07:31:27\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"640283232\";s:5:\"pDate\";s:19:\"2015-10-02 07:31:28\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"649849156043825152\";s:5:\"pDate\";s:19:\"2015-10-02 07:31:27\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":9820,"type":"post","slug":"create-and-manage-pojos-with-spring-ioc-container","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/create-and-manage-pojos-with-spring-ioc-container","status":"publish","title":"Create and Manage POJOs with Spring IoC Container","title_plain":"Create and Manage POJOs with Spring IoC Container","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Create and Manage POJOs with Spring IoC Container' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/create-and-manage-pojos-with-spring-ioc-container' data-summary='In this tutorial, we will examine how to design a POJO class and configure POJO instance values for the Spring IoC container in an XML file. Next, instantiate the Spring IoC container to access to the POJO instance values defined in an XML file.'><\/div>\n<p>In this tutorial, we will examine how to design and configure POJO instance values for the Spring IoC container in an XML file. Next, instantiate the Spring IoC container to access to the POJO instance values defined in an XML file.<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1add-the-required-dependencies\">1.\u00a0Add the required dependencies<\/a><\/li><li><a href=\"#2-create-the-pojo-class\">2. Create the POJO Class<\/a><\/li><li><a href=\"#3-create-a-xml-configuration-for-your-pojo\">3. Create a XML Configuration for your POJO<\/a><\/li><li><a href=\"#4-instantiate-the-spring-ioc-container\">4. Instantiate the Spring IoC Container<\/a><\/li><li><a href=\"#5-get-bean-instance-from-the-ioc-container\">5. Get Bean Instance from the IoC Container<\/a><\/li><\/ul><\/div>\n<\/p>\n<p>For the sake of simplicity, in this example we will declare a class NameGenerator which\u00a0will generate full name from initial, firstname and surname.<\/p>\n<p>Let us first began with creating a new eclipse Maven project.<\/p>\n<h2><span id=\"1add-the-required-dependencies\">1.\u00a0Add the required dependencies<\/span><\/h2>\n<p>Add the following Maven depandencies to your project pom.xml file.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\"&gt;\r\n\t&lt;modelVersion&gt;4.0.0&lt;\/modelVersion&gt;\r\n\t&lt;groupId&gt;com.javatechig&lt;\/groupId&gt;\r\n\t&lt;artifactId&gt;SpringBeanExample&lt;\/artifactId&gt;\r\n\t&lt;version&gt;0.0.1-SNAPSHOT&lt;\/version&gt;\r\n\r\n\t&lt;properties&gt;\r\n\t\t&lt;org.springframework.version&gt;4.0.2.RELEASE&lt;\/org.springframework.version&gt;\r\n\t\t&lt;apache.tiles&gt;3.0.3&lt;\/apache.tiles&gt;\r\n\t\t&lt;spring.security.version&gt;3.2.3.RELEASE&lt;\/spring.security.version&gt;\r\n\t&lt;\/properties&gt;\r\n\r\n\t&lt;dependencies&gt;\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;org.springframework&lt;\/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;spring-core&lt;\/artifactId&gt;\r\n\t\t\t&lt;version&gt;${org.springframework.version}&lt;\/version&gt;\r\n\t\t&lt;\/dependency&gt;\r\n\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;org.springframework&lt;\/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;spring-beans&lt;\/artifactId&gt;\r\n\t\t\t&lt;version&gt;${org.springframework.version}&lt;\/version&gt;\r\n\t\t&lt;\/dependency&gt;\r\n\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;org.springframework&lt;\/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;spring-context&lt;\/artifactId&gt;\r\n\t\t\t&lt;version&gt;${org.springframework.version}&lt;\/version&gt;\r\n\t\t&lt;\/dependency&gt;\r\n\t&lt;\/dependencies&gt;\r\n&lt;\/project&gt;\r\n<\/pre>\n<h2><span id=\"2-create-the-pojo-class\">2. Create the POJO Class<\/span><\/h2>\n<p>Let us create a NameGenerator class that has three properties\u2014 prefix, firstName, and surName.<\/p>\n<pre class=\"prettyprint lang-java\">public class NameGenerator {\r\n\tprivate String firstName;\r\n\tprivate String surName;\r\n\tprivate String initial;\r\n\r\n\tpublic NameGenerator() {}\r\n\r\n\tpublic NameGenerator(String initial, String firstName, String surName) {\r\n\t\tthis.firstName = firstName;\r\n\t\tthis.surName = surName;\r\n\t\tthis.initial = initial;\r\n\t}\r\n\r\n\tpublic String getFullName() {\r\n\t\treturn initial + \" \" + firstName + \" \" + surName;\r\n\t}\r\n\r\n\tpublic String getFirstName() {\r\n\t\treturn firstName;\r\n\t}\r\n\r\n\tpublic void setFirstName(String firstName) {\r\n\t\tthis.firstName = firstName;\r\n\t}\r\n\r\n\tpublic String getSurName() {\r\n\t\treturn surName;\r\n\t}\r\n\r\n\tpublic void setSurName(String surName) {\r\n\t\tthis.surName = surName;\r\n\t}\r\n\r\n\tpublic String getInitial() {\r\n\t\treturn initial;\r\n\t}\r\n\r\n\tpublic void setInitial(String initial) {\r\n\t\tthis.initial = initial;\r\n\t}\r\n}\r\n<\/pre>\n<p>Notice that, in the above code snippet the NameGenerator class has a method <code>getFullName(),<\/code>\u00a0that is used to generate the fullname.<\/p>\n<p>The NameGenerator class can be instantiated by using standard Java constructorn call. When you use the Spring IoC container to initialize POJOs, if you use the standard Java constructor the mechanism is called constructor injection, where as if you use setter methods the mechanism is called setter injection.<\/p>\n<h2><span id=\"3-create-a-xml-configuration-for-your-pojo\">3. Create a XML Configuration for your POJO<\/span><\/h2>\n<p>To define instances of a POJO class in the Spring IoC container, you have to create an XML configuration and initialize the properties.<\/p>\n<p>Create a new xml file named <code>bean.xml<\/code> under the root of the project classpath for easier testing with in an IDE. The following code snippet explains how to configure bean in Spring.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;beans xmlns=\"http:\/\/www.springframework.org\/schema\/beans\"\r\n\txmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http:\/\/www.springframework.org\/schema\/beans\r\n        http:\/\/www.springframework.org\/schema\/beans\/spring-beans-3.2.xsd\"&gt;\r\n\r\n\t&lt;bean name=\"nameGenerator\" class=\"com.javatechig.spring.bean.NameGenerator\"&gt;\r\n\t\t&lt;property name=\"initial\"&gt;\r\n\t\t\t&lt;value&gt;Mr.&lt;\/value&gt;\r\n\t\t&lt;\/property&gt;\r\n\t\t&lt;property name=\"firstName\"&gt;\r\n\t\t\t&lt;value&gt;Steve&lt;\/value&gt;\r\n\t\t&lt;\/property&gt;\r\n\t\t&lt;property name=\"surName\"&gt;\r\n\t\t\t&lt;value&gt;Peterson&lt;\/value&gt;\r\n\t\t&lt;\/property&gt;\r\n\t&lt;\/bean&gt;\r\n&lt;\/beans&gt;\r\n<\/pre>\n<p><strong>Notes:<\/strong><\/p>\n<ul>\n<li>Spring XML configuration file can have any name, in this example we have created beans.xml.<\/li>\n<li>Each POJO instances must have a unique name or id per context. The id will be used to to uniquly identify the beans.<\/li>\n<li>The value for class attribute should contain a fully qualified POJO class name so the Spring IoC container can instantiate\u00a0it.<\/li>\n<li>If you want to configure the bean property via setter injection, you use the <code>&lt;property&gt;<\/code> element and specify the property name in its name attribute. A requires that the underlying POJO class contain a corresponding setter method.<\/li>\n<li>The Spring bean properties can be initialized via constructor injection by declaring them in the <code>&lt;constructor-arg&gt;<\/code> elements.<\/li>\n<\/ul>\n<p>The following example shows how to use the constructor-arg element to initialize bean via constructor injection.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;bean name=\"nameGenerator\" class=\"com.javatechig.spring.bean.NameGenerator\"&gt;\r\n\t\t&lt;constructor-arg&gt;\r\n\t\t\t&lt;value&gt;Mr.&lt;\/value&gt; \r\n\t\t&lt;\/constructor-arg&gt;\r\n\t\t&lt;constructor-arg&gt;\r\n\t\t\t&lt;value&gt;Steve&lt;\/value&gt; \r\n\t\t&lt;\/constructor-arg&gt;\r\n\t\t&lt;constructor-arg&gt;\r\n\t\t\t&lt;value&gt;Peterson&lt;\/value&gt; \r\n\t\t&lt;\/constructor-arg&gt;\r\n&lt;\/bean&gt;\r\n<\/pre>\n<p>Note that the constructor arguments are order based, so you have to be careful about the order while declaring in <code>bean.xml<\/code> file.<\/p>\n<p>Although a bean\u2019s name can be defined by the name attribute of the element, the preferred way of identifying a bean is through the standard XML id attribute. In this way, if your text editor is XML-aware, it can help to validate each bean\u2019s uniqueness at design time.<\/p>\n<h2><span id=\"4-instantiate-the-spring-ioc-container\">4. Instantiate the Spring IoC Container<\/span><\/h2>\n<p>To create bean instances, we first need to instantiate the Spring IoC container by reading the XML configuration files (in our case <code>beans.xml<\/code>). Once IoC container is initialized, you can get the bean instances from the IoC container using bean name or id.<\/p>\n<p>Spring provides two types of IoC container implementations.<\/p>\n<ul>\n<li>Using bean factory (BeanFactory class)<\/li>\n<li>Using application context (ApplicationContext interface)<\/li>\n<\/ul>\n<p>The application context provides some of the advance features than the bean factory. We recommend using the application context for every application unless it is intended. The <code>ApplicationContext<\/code> is an interface, so will use <code>GenericXmlApplicationContext<\/code> class which is an implementation of ApplicationContext interface.<\/p>\n<p>The following code snippet shows how to load the XML configuration file from the classpath.<\/p>\n<pre class=\"prettyprint lang-java\">ApplicationContext context = new GenericXmlApplicationContext(\"beans.xml\");<\/pre>\n<p>Once the application context is instantiated, we can get the POJO instance and access the properties.<\/p>\n<h2><span id=\"5-get-bean-instance-from-the-ioc-container\">5. Get Bean Instance from the IoC Container<\/span><\/h2>\n<p>To get the bean instance, you need to call the <code>getBean()<\/code> method by pasing unique bean name.<br \/>\nLet us create a new class with a main method so that we can instantiate the bean and call the <code>getFullName()<\/code> method.<\/p>\n<pre class=\"prettyprint lang-java\">import org.springframework.context.ApplicationContext;\r\nimport org.springframework.context.support.GenericXmlApplicationContext;\r\n\r\npublic class Main {\r\n\tpublic static void main(String[] args) {\r\n\t\tApplicationContext context = new GenericXmlApplicationContext(\"beans.xml\");\r\n\t\tNameGenerator generator = (NameGenerator) context.getBean(\"nameGenerator\");\r\n\t\tSystem.out.println(generator.getFullName());\r\n\t}\r\n}<\/pre>\n<p><strong>Output:<\/strong><\/p>\n<p>The application will initialize the bean and print the full name on console.<\/p>\n","excerpt":"<p>In this tutorial, we will examine how to design a POJO class and configure POJO instance values for the Spring IoC container in an XML file. Next, instantiate the Spring IoC container to access to the POJO instance values defined in an XML file.<\/p>\n","date":"2015-09-30 05:00:35","modified":"2016-06-11 00:39:14","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":279,"slug":"spring-core","title":"Spring Core","description":"","post_count":9}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1858"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4178504070"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"75ad13267e5e84f75a4ad183c2f9d53c\";s:5:\"pDate\";s:19:\"2015-09-29 23:31:06\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"639371748\";s:5:\"pDate\";s:19:\"2015-09-29 23:31:07\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"649003505844289536\";s:5:\"pDate\";s:19:\"2015-09-29 23:31:08\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":10253,"type":"post","slug":"apache-cordova-windows-version-4-1-0-is-is-now-out","url":"http:\/\/stacktips.com\/news\/apache-cordova-windows-version-4-1-0-is-is-now-out","status":"publish","title":"Apache Cordova Windows Version 4.1.0 is is Now Out","title_plain":"Apache Cordova Windows Version 4.1.0 is is Now Out","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Apache Cordova Windows Version 4.1.0 is is Now Out' data-link='http:\/\/stacktips.com\/news\/apache-cordova-windows-version-4-1-0-is-is-now-out' data-summary=''><\/div>\n<p>The newer version of Apache Cordova for Windows version 4.1.0 is released. As per official Cordova release note, this version will be the default Windows version after next Cordova -cli release.<\/p>\n<p>This release adds compatibility to Microsoft Windows 10 RTM version and supports the new web platform enhancements that it included, such as hosted apps and a new version of WinJS. It also supports the new .NET Native compilation model for Cordova plugins that include a native or .NET component.<\/p>\n<p>Along with the above new feature enhancements, it also includes numerous bug fixes and stability improvements, including platform dependency problems and the ability to perform a Cordova prepare for Windows while running on a Mac.<\/p>\n<p>Now you can use the console.log statement to see the log messages including the runtime exceptions from your app console. This is certainly will help in quick diagnostics as a result it will speedup the development process.<\/p>\n<p>We will take a deep dive into the new version and will update with more details.<\/p>\n","excerpt":"<p>The newer version of Apache Cordova for Windows version 4.1.0 is released. As per official Cordova release note, this version will be the default Windows version after next Cordova -cli release. This release adds compatibility to Microsoft Windows 10 RTM version and supports the new web platform enhancements that it included, such as hosted apps [&hellip;]<\/p>\n","date":"2015-09-29 20:33:54","modified":"2016-05-29 20:36:51","categories":[{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":10254,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova.png","slug":"apache-cordova","title":"Apache-Cordova","description":"","caption":"","parent":10253,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova.png","width":700,"height":454},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova-620x402.png","width":620,"height":402},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova.png","width":700,"height":454},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova.png","width":700,"height":454},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova.png","width":700,"height":454},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova.png","width":700,"height":454},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova.png","width":700,"height":454}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"snap_isAutoPosted":["1"],"slide_template":["default"],"dsq_thread_id":["4867025894"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:392:\"a:1:{i:0;a:13:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1226843087327943\";s:5:\"pDate\";s:19:\"2016-05-29 15:04:35\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"729944978\";s:5:\"pDate\";s:19:\"2016-05-29 15:04:30\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"736936266235711488\";s:5:\"pDate\";s:19:\"2016-05-29 15:04:32\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova.png","width":700,"height":454},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova-620x402.png","width":620,"height":402},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova.png","width":700,"height":454},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova.png","width":700,"height":454},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova.png","width":700,"height":454},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova.png","width":700,"height":454},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Apache-Cordova.png","width":700,"height":454}}},{"id":9796,"type":"post","slug":"how-spring-controller-request-mapping-works-in-spring-mvc","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/how-spring-controller-request-mapping-works-in-spring-mvc","status":"publish","title":"How Spring Controller Request Mapping works in Spring MVC","title_plain":"How Spring Controller Request Mapping works in Spring MVC","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How Spring Controller Request Mapping works in Spring MVC' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/how-spring-controller-request-mapping-works-in-spring-mvc' data-summary='In this tutorial, we will discuss how Spring controller request mapping works in Spring MVC and different type of request mapping mechanisms.'><\/div>\n<p>In the previous tutorial, we have discussed the role of a Dispatcher Servlet and the steps required to create a Spring MVC application. In this tutorial, we will discuss different type of request mapping to Spring controllers.<\/p>\n<p>Dispatcher Servlet is used to handle all incoming requests and route them through Spring. When <code>DispatcherServlet<\/code> receives a web request, it determines which controllers should handle the incoming request.<\/p>\n<p>It first scans for all classes that are declared with the <code>@Controller<\/code> annotation. The dispatching process depends on the various <code>@RequestMapping<\/code> annotations declared in a controller class and its handler methods. There are three levels of request mapping can be defined in Spring controller.<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-handler-level-mapping\">1. Handler level mapping<\/a><\/li><li><a href=\"#2-mapping-at-controller-class-level\">2. Mapping at Controller class level<\/a><\/li><li><a href=\"#3-mapping-requests-by-request-type\">3. Mapping requests by request type<\/a><\/li><\/ul><\/div>\n<\/p>\n<h2><span id=\"1-handler-level-mapping\">1. Handler level mapping<\/span><\/h2>\n<p>The simplest strategy for using @RequestMapping annotations is to decorate the handler methods directly. In this method, you need to declare mapping for each handler method with the @RequestMapping annotation containing a URL pattern. If a handler\u2019s @RequestMapping annotation matches the request URL, DispatcherServlet it dispatches the request to this handler for it to process the request.<\/p>\n<p>Following are the different mapping types supported.<\/p>\n<ul>\n<li><strong>By path<\/strong><br \/>\n@RequestMapping(\u201cpath\u201d)<\/li>\n<li><strong>By HTTP method<\/strong><br \/>\n@RequestMapping(\u201cpath\u201d, method=RequestMethod.GET). Other Http methods such as\u00a0POST, PUT, DELETE, OPTIONS, and TRACE are are also supported.<\/li>\n<li><strong>By query parameter<\/strong><br \/>\n@RequestMapping(\u201cpath\u201d, method=RequestMethod.GET, params=\u201dparam1\u201d)<\/li>\n<li><strong>By presence of request header<\/strong><br \/>\n@RequestMapping(\u201cpath\u201d, header=\u201dcontent-type=text\/*\u201d)<\/li>\n<\/ul>\n<p>The request mapping for methods can be\u00a0defined as follows:<\/p>\n<pre class=\"prettyprint lang-java\">@Controller\r\npublic class Employee {\r\n\r\n\t@RequestMapping(\"\/employee\/add\")\r\n\tpublic ModelAndView add(\r\n\t\t\t@RequestParam(value = \"firstName\") String firstName,\r\n\t\t\t@RequestParam(value = \"surName\") String surName) {\r\n\t\t\/\/....\r\n\t\t\/\/....\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t@RequestMapping(value={\"\/employee\/remove\",\"\/employee\/delete\"})\r\n\tpublic ModelAndView delete(\r\n\t\t\t@RequestParam(value = \"uuid\") String uuid) {\r\n\t\t\/\/....\r\n\t\t\/\/....\r\n\t\treturn null;\r\n\t}\t\r\n}<\/pre>\n<p>In the above code snippet, the controller <code>add()<\/code> method is declared with <code>@RequestMapping(\"\/employee\/add\")<\/code>. If the incoming request path to matches is <code>\/employee\/add<\/code>, then the add() handler method will be invoked to process the request.<\/p>\n<p>Handler mappings match URLs according to their paths relative to the context path (i.e., the path where the web application is deployed) and the servlet path (i.e., the path mapped to DispatcherServlet).<\/p>\n<h2><span id=\"2-mapping-at-controller-class-level\">2. Mapping at Controller class level<\/span><\/h2>\n<p>The @RequestMapping annotation can also be used to decorate a controller class. This is helpful to take the control at top level and filter the incoming requests. If the incoming request matches the pattern defined in controller class, then it search the controller methods mappings.<\/p>\n<p>The following code snippet describes how to define Spring @RequestMapping at controller class level.<\/p>\n<pre class=\"prettyprint lang-java\">@Controller\r\n@RequestMapping(\"\/employee\/*\")\r\npublic class Employee {\r\n\r\n\t@RequestMapping(\"add\")\r\n\tpublic ModelAndView add(\r\n\t\t\t@RequestParam(value = \"firstName\") String firstName,\r\n\t\t\t@RequestParam(value = \"surName\") String surName) {\r\n\t\t\/\/....\r\n\t\t\/\/....\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t@RequestMapping(value={\"remove\",\"delete\"})\r\n\tpublic ModelAndView delete(\r\n\t\t\t@RequestParam(value = \"uuid\") String uuid) {\r\n\t\t\/\/....\r\n\t\t\/\/....\r\n\t\t\r\n\t\treturn null;\r\n\t}\t\r\n}<\/pre>\n<p>Notice that, we have used the wildcard (*) for the @RequestMapping annotation for broader URL matching.<\/p>\n<h2><span id=\"3-mapping-requests-by-request-type\">3. Mapping requests by request type<\/span><\/h2>\n<p>The <code>@RequestMapping<\/code> annotation handles all types of incoming HTTP request including GET, POST, PUT, DELETE, PATCH etc. By default, it\u2019s assumed all incoming requests to URLs are of the HTTP GET kind. To differentiate the mapping by HTTP request type, we need to explicitly specify the HTTP request method in the @RequestMapping declaration.<\/p>\n<p>The following code snippet describes how to declare Spring mappings by HTTP request methods.<\/p>\n<pre class=\"prettyprint lang-java\">@Controller\r\n@RequestMapping(\"\/employee\/*\")\r\npublic class Employee {\r\n\r\n\t@RequestMapping(value = { \"remove\", \"delete\" }, method = { RequestMethod.POST, \tRequestMethod.DELETE })\r\n\t\tpublic ModelAndView delete(@RequestParam(value = \"uuid\") String uuid) {\r\n\t\t\t\/\/ ....\r\n\t\t\t\/\/ ....\r\n\t\r\n\t\t\treturn null;\r\n\t\t}\r\n}<\/pre>\n","excerpt":"<p>In this tutorial, we will discuss how Spring controller request mapping works in Spring MVC and different type of request mapping  mechanisms.<\/p>\n","date":"2015-09-24 16:43:41","modified":"2015-10-21 02:21:57","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":275,"slug":"mvc","title":"MVC","description":"","post_count":3}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["4705"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4160724422"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"31dc74e4390614bf033803df2db256d8\";s:5:\"pDate\";s:19:\"2015-09-24 11:14:05\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"637430912\";s:5:\"pDate\";s:19:\"2015-09-24 11:14:04\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"647006077297397760\";s:5:\"pDate\";s:19:\"2015-09-24 11:14:04\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":9772,"type":"post","slug":"creating-spring-mvc-helloworld-using-maven-in-eclipse-tomcat","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/creating-spring-mvc-helloworld-using-maven-in-eclipse-tomcat","status":"publish","title":"Creating Spring MVC HelloWorld Using Maven in Eclipse Tomcat","title_plain":"Creating Spring MVC HelloWorld Using Maven in Eclipse Tomcat","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Creating Spring MVC HelloWorld Using Maven in Eclipse Tomcat' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/creating-spring-mvc-helloworld-using-maven-in-eclipse-tomcat' data-summary='In the course of this tutorial, we will learn how to create your first Spring MVC application using eclipse IDE using Maven build type.'><\/div>\n<p>In the course of this tutorial, we will learn how to create your first Spring MVC application using eclipse IDE using Maven build type.<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-prerequisites\">1. Prerequisites<\/a><\/li><li><a href=\"#1-create-a-maven-project\">1. Create a Maven Project<\/a><\/li><li><a href=\"#3-create-a-server-instance\">3. Create a Server Instance<\/a><\/li><li><a href=\"#4-update-project-build-path\">4. Update Project Build Path<\/a><\/li><li><a href=\"#5-configure-spring-dependency\">5. Configure Spring Dependency<\/a><\/li><li><a href=\"#6-configure-dispatcher-servlet\">6. Configure Dispatcher Servlet<\/a><\/li><li><a href=\"#7-mapping-requests\">7. Mapping Requests<\/a><\/li><li><a href=\"#8-create-controller-class\">8. Create Controller class<\/a><\/li><li><a href=\"#9-working-with-views\">9. Working with Views<\/a><\/li><\/ul><\/div>\n<\/p>\n<h2><span id=\"1-prerequisites\">1. Prerequisites<\/span><\/h2>\n<ul>\n<li>Java version 1.7<\/li>\n<li>Latest Spring STS<\/li>\n<li>Apache Tomcat 7.0.x<\/li>\n<\/ul>\n<p>This tutorial assumes that, you have downloaded and installed the above mentioned softwares on your computer. If you have not installed Java on your development machine, you can follow the official oracle documentation for the installation for your configuration.<\/p>\n<p>Without spending any further time, let us jump straight into creating the project in eclipse.<\/p>\n<h2><span id=\"1-create-a-maven-project\">1. Create a Maven Project<\/span><\/h2>\n<ul>\n<li><strong>File<\/strong> -&gt; <strong>New<\/strong> -&gt; <strong>Other<\/strong>&#8230; It will open the eclipse select wizard.<\/li>\n<\/ul>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-Maven-Spring-project.png\"><img class=\"alignnone size-full wp-image-9778\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-Maven-Spring-project.png\" alt=\"Create Maven Spring project\" width=\"524\" height=\"500\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-Maven-Spring-project.png 524w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-Maven-Spring-project-300x286.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-Maven-Spring-project-370x353.png 370w\" sizes=\"(max-width: 524px) 100vw, 524px\" \/><\/a><\/p>\n<ul>\n<li>Select <strong>Maven<\/strong> -&gt; <strong>Maven Project<\/strong> and click <strong>Next<\/strong>.<\/li>\n<li>Again click <strong>Next<\/strong> on New Maven Project dialog.<\/li>\n<li>Select an Archetype either by filtering <strong>webapp<\/strong> or selecting from the available artifacts and click <strong>Next<\/strong>.<\/li>\n<\/ul>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-new-eclipse-maven-project.png\"><img class=\"alignnone size-full wp-image-9779\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-new-eclipse-maven-project.png\" alt=\"Create new eclipse maven project\" width=\"617\" height=\"539\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-new-eclipse-maven-project.png 617w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-new-eclipse-maven-project-300x262.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-new-eclipse-maven-project-370x323.png 370w\" sizes=\"(max-width: 617px) 100vw, 617px\" \/><\/a><\/p>\n<ul>\n<li>Provide the details for Group Id and Artifact Id and click <strong>Finish<\/strong>. As a general practice, the group id is your company domain name (i.e. com.javatechig) and artifact id is the name of your application.<\/li>\n<li>This will create a basic Maven project template in eclipse.<\/li>\n<\/ul>\n<h2><span id=\"3-create-a-server-instance\">3. Create a Server Instance<\/span><\/h2>\n<p>In this example we will be using <strong>Apache<\/strong>\u00a0<strong>Tomcat<\/strong> application server for deploying our Spring MVC application. Now let us add a server instance on eclipse.<\/p>\n<ul>\n<li><strong>File<\/strong> -&gt; <strong>New<\/strong> -&gt; <strong>Other<\/strong>&#8230; It will open the eclipse select wizard.<\/li>\n<\/ul>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Add-Tomcat-Server-Eclipse.png\"><img class=\"alignnone size-full wp-image-9777\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Add-Tomcat-Server-Eclipse.png\" alt=\"Add Tomcat Server Eclipse\" width=\"524\" height=\"634\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Add-Tomcat-Server-Eclipse.png 524w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Add-Tomcat-Server-Eclipse-300x363.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Add-Tomcat-Server-Eclipse-370x448.png 370w\" sizes=\"(max-width: 524px) 100vw, 524px\" \/><\/a><\/p>\n<ul>\n<li>Select Server -&gt; Server and click <strong>Next<\/strong>.<\/li>\n<li>Select Apache -&gt; <strong>Tomcat v7.0 Server<\/strong> and click <strong>Next<\/strong>. In this example, we will be using Apache Tomcat version 7.0. However, the similar steps will work for other tomcat versions.<\/li>\n<li>Browse and select the <strong>Apache Tomcat v7.0<\/strong> server installation directory and click <strong>Finish<\/strong>.<\/li>\n<\/ul>\n<h2><span id=\"4-update-project-build-path\">4. Update Project Build Path<\/span><\/h2>\n<p>You might notice a error on your project. This is\u00a0due to the project\u00a0Build path problem. To fix this you need to right click on project -&gt; <strong>Properties<\/strong> to open project Java Build Path settings.<\/p>\n<p>Select <strong>Libraries<\/strong> tab and click on <strong>Add Library<\/strong>&#8230;-&gt; <strong>Server Runtime<\/strong> -&gt; <strong>Apache Tomcat<\/strong> -&gt; <strong>Finish<\/strong>.<\/p>\n<h2><span id=\"5-configure-spring-dependency\">5. Configure Spring Dependency<\/span><\/h2>\n<p>Before we develop Spring MVC web application, we need to configure the project by adding the required Maven dependencies. Add the following Maven dependencies into your <code>pom.xml<\/code> file.<\/p>\n<h5>pom.xml<\/h5>\n<pre class=\"prettyprint lang-xml\">&lt;project \r\n        xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\" \r\n        xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/maven-v4_0_0.xsd\"&gt;\r\n\t&lt;modelVersion&gt;4.0.0&lt;\/modelVersion&gt;\r\n\t&lt;groupId&gt;com.javatechig&lt;\/groupId&gt;\r\n\t&lt;artifactId&gt;HelloMVC&lt;\/artifactId&gt;\r\n\t&lt;packaging&gt;war&lt;\/packaging&gt;\r\n\t&lt;version&gt;0.0.1-SNAPSHOT&lt;\/version&gt;\r\n\t&lt;name&gt;HelloMVC Maven Webapp&lt;\/name&gt;\r\n\t&lt;url&gt;http:\/\/maven.apache.org&lt;\/url&gt;\r\n\r\n\t&lt;!--Spring library version --&gt;\r\n\t&lt;properties&gt;\r\n\t\t&lt;spring.version&gt;4.2.1.RELEASE&lt;\/spring.version&gt;\r\n\t&lt;\/properties&gt;\r\n\r\n\t&lt;dependencies&gt;\r\n\r\n\t\t&lt;!-- Spring dependencies --&gt;\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;org.springframework&lt;\/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;spring-core&lt;\/artifactId&gt;\r\n\t\t\t&lt;version&gt;${spring.version}&lt;\/version&gt;\r\n\t\t&lt;\/dependency&gt;\r\n\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;org.springframework&lt;\/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;spring-webmvc&lt;\/artifactId&gt;\r\n\t\t\t&lt;version&gt;${spring.version}&lt;\/version&gt;\r\n\t\t&lt;\/dependency&gt;\r\n\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;org.springframework&lt;\/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;spring-web&lt;\/artifactId&gt;\r\n\t\t\t&lt;version&gt;${spring.version}&lt;\/version&gt;\r\n\t\t&lt;\/dependency&gt;\r\n\t\t&lt;!--End Spring dependencies --&gt;\r\n\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;junit&lt;\/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;junit&lt;\/artifactId&gt;\r\n\t\t\t&lt;version&gt;3.8.1&lt;\/version&gt;\r\n\t\t\t&lt;scope&gt;test&lt;\/scope&gt;\r\n\t\t&lt;\/dependency&gt;\r\n\t&lt;\/dependencies&gt;\r\n\t&lt;build&gt;\r\n\t\t&lt;finalName&gt;HelloMVC&lt;\/finalName&gt;\r\n\t&lt;\/build&gt;\r\n&lt;\/project&gt;\r\n<\/pre>\n<p>With this the basic Spring project configuration is complete. Your project structure should look like as the following screenshot.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-Eclipse-Maven-Project-Structure.png\"><img class=\"alignnone size-full wp-image-9780\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-Eclipse-Maven-Project-Structure.png\" alt=\"Spring MVC Eclipse Maven Project Structure\" width=\"356\" height=\"550\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-Eclipse-Maven-Project-Structure.png 356w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-Eclipse-Maven-Project-Structure-300x463.png 300w\" sizes=\"(max-width: 356px) 100vw, 356px\" \/><\/a><\/p>\n<p>The following steps will take you through the rest of the steps to create and deploy Spring MVC HelloWorld app.<\/p>\n<h2><span id=\"6-configure-dispatcher-servlet\">6. Configure Dispatcher Servlet<\/span><\/h2>\n<p>The <code>DispatcherServlet<\/code> must be configured as normal in<code> web.xml<\/code> to bootstrap a Spring WebApplicationContext. Edit the default <code>web.xml<\/code> file and add the following.<\/p>\n<h5>web.xml<\/h5>\n<pre class=\"prettyprint lang-xml\">&lt;!DOCTYPE web-app PUBLIC\r\n \"-\/\/Sun Microsystems, Inc.\/\/DTD Web Application 2.3\/\/EN\"\r\n \"http:\/\/java.sun.com\/dtd\/web-app_2_3.dtd\" &gt;\r\n\r\n&lt;web-app&gt;\r\n\t&lt;display-name&gt;Archetype Created Web Application&lt;\/display-name&gt;\r\n\t&lt;context-param&gt;\r\n\t\t&lt;param-name&gt;contextConfigLocation&lt;\/param-name&gt;\r\n\t\t&lt;param-value&gt;\/WEB-INF\/dispatcher-servlet.xml&lt;\/param-value&gt;\r\n\t&lt;\/context-param&gt;\r\n\r\n\t&lt;listener&gt;\r\n\t\t&lt;listener-class&gt;\r\n\t\t\torg.springframework.web.context.ContextLoaderListener\r\n\t\t&lt;\/listener-class&gt;\r\n\t&lt;\/listener&gt;\r\n\r\n\t&lt;servlet&gt;\r\n\t\t&lt;servlet-name&gt;dispatcher&lt;\/servlet-name&gt;\r\n\t\t&lt;servlet-class&gt;\r\n\t\t\torg.springframework.web.servlet.DispatcherServlet\r\n\t\t&lt;\/servlet-class&gt;\r\n\t\t&lt;load-on-startup&gt;1&lt;\/load-on-startup&gt;\r\n\t&lt;\/servlet&gt;\r\n\r\n\t&lt;servlet-mapping&gt;\r\n\t\t&lt;servlet-name&gt;dispatcher&lt;\/servlet-name&gt;\r\n\t\t&lt;url-pattern&gt;\/&lt;\/url-pattern&gt;\r\n\t&lt;\/servlet-mapping&gt;\r\n&lt;\/web-app&gt;\r\n<\/pre>\n<h2 class=\"title\"><span id=\"7-mapping-requests\">7. Mapping Requests<\/span><\/h2>\n<p>Create an xml file <code>dispatcher-servlet.xml<\/code> under the same directory of <code>web.xml<\/code>.<\/p>\n<h5>dispatcher-servlet.xml<\/h5>\n<pre class=\"prettyprint lang-java\">&lt;beans xmlns=\"http:\/\/www.springframework.org\/schema\/beans\"\r\n\txmlns:context=\"http:\/\/www.springframework.org\/schema\/context\"\r\n\txmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"\r\nhttp:\/\/www.springframework.org\/schema\/beans\r\nhttp:\/\/www.springframework.org\/schema\/beans\/spring-beans.xsd\r\nhttp:\/\/www.springframework.org\/schema\/context\r\nhttp:\/\/www.springframework.org\/schema\/context\/spring-context.xsd\"&gt;\r\n\r\n\t&lt;context:component-scan base-package=\"com.javatechig.controller\" \/&gt;\r\n\r\n\t&lt;bean\t\tclass=\"org.springframework.web.servlet.view.InternalResourceViewResolver\"&gt;\r\n\t\t&lt;property name=\"prefix\"&gt;\r\n\t\t\t&lt;value&gt;\/WEB-INF\/views\/&lt;\/value&gt;\r\n\t\t&lt;\/property&gt;\r\n\t\t&lt;property name=\"suffix\"&gt;\r\n\t\t\t&lt;value&gt;.jsp&lt;\/value&gt;\r\n\t\t&lt;\/property&gt;\r\n\t&lt;\/bean&gt;\r\n&lt;\/beans&gt;\r\n<\/pre>\n<p>In the above xml file, base-package specifies the package of the controllers. prefix specifies the directory of views, and it is set to be <code>\/WEB-INF\/views\/<\/code>, which means views directory should be created under WEB-INF. suffix specifies the file extension of views. For example, given a view <code>hello<\/code>, the view will be located as <code>\/WEB-INF\/views\/hello.jsp<\/code>.<\/p>\n<h2><span id=\"8-create-controller-class\">8. Create Controller class<\/span><\/h2>\n<p>Create the HelloWorldController under src\/main\/java\/ directory.<\/p>\n<h5>HelloWorldController.java<\/h5>\n<pre class=\"prettyprint lang-java\">package com.javatechig.controller;\r\n\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestParam;\r\nimport org.springframework.web.servlet.ModelAndView;\r\n\r\n@Controller\r\npublic class HelloWorldController {\r\n\r\n\t@RequestMapping(\"\/hello\")\r\n\tpublic ModelAndView welcomeMessage(\r\n\t\t\t@RequestParam(value = \"name\", required = false) String name) {\r\n\t\t\/\/ Name of your jsp file as parameter\r\n\t\tModelAndView view = new ModelAndView(\"hello\");\r\n\t\tview.addObject(\"name\", name);\r\n\t\treturn view;\r\n\t}\r\n}\r\n<\/pre>\n<p>In the code above, @RequestMapping annotation maps web requests onto specific handler classes and\/or handler methods, in this case, welcomeMessage(). It provides a consistent style between Servlet environments, with the semantics adapting to the concrete environment.<\/p>\n<p>RequestParam indicates that a method parameter should be bound to a web request parameter. In this case, we also make it not required and give it a default value. The ModelAndView(&#8220;hello&#8221;) determines that hello is the target view.<\/p>\n<h2><span id=\"9-working-with-views\">9. Working with Views<\/span><\/h2>\n<p>Edit the default index.jsp and add the following code snippets.<\/p>\n<h5>index.jsp<\/h5>\n<pre class=\"prettyprint lang-html\">&lt;html&gt;\r\n&lt;body&gt;\r\n    &lt;h2&gt;Hello World&lt;\/h2&gt;\r\n    &lt;h3&gt;&lt;a href=\"hello?name=Sally\"&gt;Click here...&lt;\/a&gt;&lt;\/h3&gt;\r\n&lt;\/body&gt;\r\n&lt;\/html&gt;\r\n<\/pre>\n<p>Add a JSP files <code>hello.jsp<\/code> file under <code>\/WEB-INF\/views\/<\/code> directory.<\/p>\n<h5>hello.jsp<\/h5>\n<pre class=\"prettyprint lang-html\">&lt;%@ page language=\"java\" contentType=\"text\/html; charset=UTF-8\"\r\n\tpageEncoding=\"ISO-8859-1\"%&gt;\r\n&lt;!DOCTYPE html PUBLIC \"-\/\/W3C\/\/DTD HTML 4.01 Transitional\/\/EN\" \"http:\/\/www.w3.org\/TR\/html4\/loose.dtd\"&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta http-equiv=\"Content-Type\" content=\"text\/html; charset=UTF-8\"&gt;\r\n&lt;title&gt;Spring 4 MVC&lt;\/title&gt;\r\n&lt;%@ page isELIgnored=\"false\"%&gt;\r\n&lt;\/head&gt;\r\n&lt;body&gt;\r\n\t&lt;h2&gt;Hello, ${name}. Welcome to Spring MVC!&lt;\/h2&gt;\r\n&lt;\/body&gt;\r\n&lt;\/html&gt;\r\n<\/pre>\n<p>Now we are done with our first HelloWorld example. To deploy it on Tomcat application server, Right click on the project -&gt; select <strong>Run as<\/strong>. Choose <strong>Tomcat server<\/strong>, select <strong>Next<\/strong> and <strong>Finish<\/strong>. It will deploy the project and to see the output visit http:\/\/localhost:8080\/HelloMVC on your browser. you will see the following output on your browser.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven2.png\"><img class=\"alignnone size-full wp-image-9775\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven2.png\" alt=\"Spring MVC HelloWorld usign Eclipse Maven2\" width=\"600\" height=\"376\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven2.png 600w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven2-300x188.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven2-370x232.png 370w\" sizes=\"(max-width: 600px) 100vw, 600px\" \/><\/a><\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven.png\"><img class=\"alignnone size-medium wp-image-9776\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven.png\" alt=\"Spring MVC HelloWorld usign Eclipse Maven\" width=\"600\" height=\"376\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven.png 600w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven-300x188.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven-370x232.png 370w\" sizes=\"(max-width: 600px) 100vw, 600px\" \/><\/a><\/p>\n","excerpt":"<p>In the course of this tutorial, we will learn how to create your first Spring MVC application using eclipse IDE using Maven build type.<\/p>\n","date":"2015-09-24 15:00:03","modified":"2015-09-24 15:04:07","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":275,"slug":"mvc","title":"MVC","description":"","post_count":3},{"id":277,"slug":"tomcat","title":"Tomcat","description":"","post_count":1}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8241,"name":"javalschool","url":"http:\/\/www.javalschool.com\/","date":"2015-09-30 22:28:00","content":"<p>very good tutorial sir clean explanation thank u sir<\/p>\n","parent":0},{"id":8243,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-10-02 14:27:00","content":"<p>\ud83d\ude42<\/p>\n","parent":8241},{"id":8278,"name":"Patient Ba\u00efse","url":"","date":"2015-10-23 03:05:00","content":"<p>Hi, Nilanchala Panigrahy<br \/>\ncan you help me?<br \/>\nmy email is: <a href=\"mailto:patientbaise@gmail.com\">patientbaise@gmail.com<\/a><\/p>\n","parent":8243},{"id":8286,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-10-27 00:06:00","content":"<p>How can I help you ?<\/p>\n","parent":8278},{"id":8287,"name":"Patient Ba\u00efse","url":"","date":"2015-10-27 03:01:00","content":"<p>i have a projet on Rss Reader but i can&#8217;t have image with glide<\/p>\n<p>the example of my projet : <a href=\"http:\/\/android-pratap.blogspot.com\/2015\/02\/simple-rss-reader-application-in-android.html\" rel=\"nofollow\">http:\/\/android-pratap.blogspot.com\/2015\/02\/simple-rss-reader-application-in-android.html<\/a><\/p>\n","parent":8286},{"id":8403,"name":"Akshay Taru","url":"","date":"2016-02-25 13:38:00","content":"<p>Some things are missing like not getting &#8220;project -&gt; select Run as. Choose Tomcat server&#8221; option and whether to create package id, I also feel that the screen shot showing folder structure should be updated. Showing each and every file.<\/p>\n","parent":0},{"id":8491,"name":"kinsley kajiva","url":"","date":"2016-04-17 12:03:00","content":"<p>hi, please can you do a tutorial on pre-fetching images into glide cache for android in the background thread or service intent<\/p>\n","parent":0},{"id":8511,"name":"Esmirna Astorga","url":"","date":"2016-05-03 00:15:00","content":"<p>Dear,<\/p>\n<p>Can you explain me how to put an image as a logo or as a background? Because I got a mapping error with a simple call<\/p>\n<p>Regards<\/p>\n","parent":0}],"attachments":[{"id":9775,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven2.png","slug":"spring-mvc-helloworld-usign-eclipse-maven2","title":"Spring MVC HelloWorld using Eclipse Maven","description":"Spring MVC HelloWorld using Eclipse Maven2","caption":"","parent":9772,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven2.png","width":600,"height":376},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven2.png","width":600,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven2.png","width":600,"height":376},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven2.png","width":600,"height":376},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven2.png","width":600,"height":376},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven2.png","width":600,"height":376},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven2.png","width":600,"height":376}}},{"id":9776,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven.png","slug":"spring-mvc-helloworld-usign-eclipse-maven","title":"Spring MVC HelloWorld usign Eclipse Maven","description":"","caption":"","parent":9772,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven.png","width":600,"height":376},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven.png","width":600,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven.png","width":600,"height":376},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven.png","width":600,"height":376},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven.png","width":600,"height":376},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven.png","width":600,"height":376},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-HelloWorld-usign-Eclipse-Maven.png","width":600,"height":376}}},{"id":9777,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Add-Tomcat-Server-Eclipse.png","slug":"add-tomcat-server-eclipse","title":"Add Tomcat Server Eclipse","description":"Add Tomcat Server Eclipse","caption":"","parent":9772,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Add-Tomcat-Server-Eclipse.png","width":524,"height":634},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Add-Tomcat-Server-Eclipse.png","width":524,"height":634},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Add-Tomcat-Server-Eclipse.png","width":524,"height":634},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Add-Tomcat-Server-Eclipse.png","width":524,"height":634},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Add-Tomcat-Server-Eclipse.png","width":524,"height":634},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Add-Tomcat-Server-Eclipse.png","width":524,"height":634}}},{"id":9778,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-Maven-Spring-project.png","slug":"create-maven-spring-project","title":"Create Maven Spring project","description":"Create Maven Spring project","caption":"","parent":9772,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-Maven-Spring-project.png","width":524,"height":500},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-Maven-Spring-project.png","width":524,"height":500},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-Maven-Spring-project.png","width":524,"height":500},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-Maven-Spring-project.png","width":524,"height":500},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-Maven-Spring-project.png","width":524,"height":500},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-Maven-Spring-project.png","width":524,"height":500},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-Maven-Spring-project.png","width":524,"height":500}}},{"id":9779,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-new-eclipse-maven-project.png","slug":"create-new-eclipse-maven-project","title":"Create new eclipse maven project","description":"Create new eclipse maven project","caption":"","parent":9772,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-new-eclipse-maven-project.png","width":617,"height":539},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-new-eclipse-maven-project.png","width":617,"height":539},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-new-eclipse-maven-project.png","width":617,"height":539},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-new-eclipse-maven-project.png","width":617,"height":539},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-new-eclipse-maven-project.png","width":617,"height":539},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Create-new-eclipse-maven-project.png","width":617,"height":539}}},{"id":9780,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-Eclipse-Maven-Project-Structure.png","slug":"spring-mvc-eclipse-maven-project-structure","title":"Spring MVC Eclipse Maven Project Structure","description":"Spring MVC Eclipse Maven Project Structure","caption":"","parent":9772,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-Eclipse-Maven-Project-Structure.png","width":356,"height":550},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-Eclipse-Maven-Project-Structure.png","width":356,"height":550},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-Eclipse-Maven-Project-Structure.png","width":356,"height":550},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-Eclipse-Maven-Project-Structure.png","width":356,"height":550},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-Eclipse-Maven-Project-Structure.png","width":356,"height":550},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-MVC-Eclipse-Maven-Project-Structure.png","width":356,"height":550}}}],"comment_count":8,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["4468"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"16721e3c409f0c6cdc986f255077e227\";s:5:\"pDate\";s:19:\"2015-09-24 09:30:56\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"637405302\";s:5:\"pDate\";s:19:\"2015-09-24 09:30:55\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"646980131618054144\";s:5:\"pDate\";s:19:\"2015-09-24 09:30:57\";}}\";"],"dsq_thread_id":["4160489864"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":9765,"type":"post","slug":"introduction-to-spring-mvc-and-dispatcher-servlet","url":"http:\/\/stacktips.com\/tutorials\/java\/spring\/introduction-to-spring-mvc-and-dispatcher-servlet","status":"publish","title":"Introduction to Spring MVC and Dispatcher Servlet","title_plain":"Introduction to Spring MVC and Dispatcher Servlet","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Introduction to Spring MVC and Dispatcher Servlet' data-link='http:\/\/stacktips.com\/tutorials\/java\/spring\/introduction-to-spring-mvc-and-dispatcher-servlet' data-summary='Spring is a model-view-controller (MVC) framework for Java web application. Spring is build on the powerful Spring IoC container and makes extensive use of the container features to simplify the project configuration.'><\/div>\n<p>Spring is a <strong>model-view-controller<\/strong> (MVC) framework for Java web application. Spring is build on the powerful Spring IoC container and makes extensive use of the container features to simplify the project configuration.<\/p>\n<h2>Model View Controller<\/h2>\n<p>The Model-view-controller (MVC) is a common design pattern used to decouple business logic from UIs. Models are responsible for encapsulating application data for views. Views should only be responsible to present data, without any business logic.<\/p>\n<p>Controllers are responsible for receiving requests from users and invoking back-end services for business processing. After processing, back-end services may return some data for views to present.<\/p>\n<p>Controllers collect this data and prepare models for views to present. The core idea of the MVC pattern is to separate business logic from UIs to allow them to change independently without affecting each other.<\/p>\n<p>In a Spring MVC application, models usually consist of domain objects that are processed by the service layer and persisted by the persistence layer. Views are usually JSP templates written with Java Standard Tag Library (JSTL).<\/p>\n<h2>Why use Spring MVC?<\/h2>\n<p>Following are some of the distinct advantages of Spring MVC architecture.<\/p>\n<ul>\n<li>Spring is capable of convention over configuration. For most purposes you only have to define one Servlet in <code>web.xml<\/code><\/li>\n<li>Similar to Ruby on Rails or other popular web frameworks that work with dynamic languages<\/li>\n<li>Normal business objects can be used to back to front end view forms<\/li>\n<li>No need to duplicate objects just to implement an MVC&#8217;s command object interface<\/li>\n<li>Can by used to map .json, .xml, .atom, etc to the same business logic code in one controller and simply output the type of data requested<\/li>\n<li>Enforces good software engineering principles<\/li>\n<\/ul>\n<h2>How it works?<\/h2>\n<p>The central component of Spring MVC is a Spring controller. A controller is the only servlet you need to configure in a Java web deployment descriptor <code>web.xml<\/code> file.<\/p>\n<p>A Spring MVC controller is otherwise called as front controller generally referred to a single servlet called Dispatcher Servlet. The front controller manages the entire request handling process and every web request must go through it.<\/p>\n<p>When a web request is sent to a Spring MVC application, a controller first receives the request. Then it organizes the different components configured in Spring\u2019s web application context or annotations present in the controller itself, all needed to handle the request.<\/p>\n<p>The following images depicts the Spring MVC architecture and flow of request handling in Spring MVC.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Introduction-to-Spring-MVC-and-Dispatcher-Servlet.png\"><img class=\"alignnone size-medium wp-image-9767\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Introduction-to-Spring-MVC-and-Dispatcher-Servlet-620x398.png\" alt=\"Introduction to Spring MVC and Dispatcher Servlet\" width=\"620\" height=\"398\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Introduction-to-Spring-MVC-and-Dispatcher-Servlet-620x398.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Introduction-to-Spring-MVC-and-Dispatcher-Servlet-300x192.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Introduction-to-Spring-MVC-and-Dispatcher-Servlet.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Introduction-to-Spring-MVC-and-Dispatcher-Servlet-370x237.png 370w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<h2>Role of a \ufffcDispatcher Servlet<\/h2>\n<ul>\n<li>Dispatcher Servlet is used to handle all incoming requests and route them through Spring<\/li>\n<li>Uses customizable logic to determine which controllers should handle which incoming requests<\/li>\n<li>Forwards all responses to through view handlers to determine the correct views to route responses to<\/li>\n<li>Exposes all beans defined in Spring to controllers for dependency injection<\/li>\n<\/ul>\n<p>A controller class in Spring 4.0 should be marked with the <code>@Controller<\/code> annotation. A Spring controller class need shouldn&#8217;t extend framework-specific base class or implement a framework-specific interface.<\/p>\n<p>A Controller class defines a specific handler method to handle each request. When a Controller class receives a request, it looks for the appropriate handler mapping methods. The mapping is defined using the <code>@RequestMapping<\/code> annotation.<\/p>\n<p>For example in the following code syntax, the <code>showMessage()<\/code> handler will handle the request comes form <code>\/hello<\/code> endpoint.<\/p>\n<pre class=\"prettyprint lang-java\">@RequestMapping(\"\/hello\")\r\npublic ModelAndView showMessage(\r\n\t\t@RequestParam(value = \"name\", required = false, defaultValue = \"World\") String name) {\r\n\r\n\tModelAndView modelView = new ModelAndView(\"helloworld\");\r\n\tmodelView.addObject(\"message\", \"Welcome to Spring MVC\");\r\n\tmodelView.addObject(\"name\", name);\r\n\treturn modelView;\r\n}\r\n<\/pre>\n<p>When controller class picks the appropriate handler method, it then invokes the handler method\u2019s backend logic with the request. After a handler method has finish processing the request, it returns the instance of ModelAndView class. The ModelAndView instance represents a view.<\/p>\n<p>In the course of this tutorial, we have explained the basic flow of how Spring MVC works and the role of Dispatcher Servlet.<\/p>\n","excerpt":"<p>Spring is a model-view-controller (MVC) framework for Java web application. Spring is build on the powerful Spring IoC container and makes extensive use of the container features to simplify the project configuration.<\/p>\n","date":"2015-09-22 23:36:01","modified":"2015-09-24 14:46:48","categories":[{"id":274,"slug":"spring","title":"Spring","description":"","parent":91,"post_count":16}],"tags":[{"id":276,"slug":"dispatcher-servlet","title":"Dispatcher Servlet","description":"","post_count":1},{"id":275,"slug":"mvc","title":"MVC","description":"","post_count":3}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":9767,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Introduction-to-Spring-MVC-and-Dispatcher-Servlet.png","slug":"introduction-to-spring-mvc-and-dispatcher-servlet","title":"Introduction to Spring MVC and Dispatcher Servlet","description":"Introduction to Spring MVC and Dispatcher Servlet","caption":"","parent":9765,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Introduction-to-Spring-MVC-and-Dispatcher-Servlet.png","width":800,"height":513},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Introduction-to-Spring-MVC-and-Dispatcher-Servlet-620x398.png","width":620,"height":398},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Introduction-to-Spring-MVC-and-Dispatcher-Servlet.png","width":800,"height":513},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Introduction-to-Spring-MVC-and-Dispatcher-Servlet.png","width":800,"height":513},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Introduction-to-Spring-MVC-and-Dispatcher-Servlet.png","width":800,"height":513},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Introduction-to-Spring-MVC-and-Dispatcher-Servlet.png","width":800,"height":513}}},{"id":9768,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-Tutorials.png","slug":"spring-tutorials-2","title":"Spring Tutorials","description":"Spring Tutorials","caption":"","parent":9765,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-Tutorials.png","width":896,"height":504},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-Tutorials-620x349.png","width":620,"height":349},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-Tutorials.png","width":896,"height":504},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Spring-Tutorials.png","width":896,"height":504}}},{"id":9801,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","slug":"java-spring-tutorials","title":"java-spring-tutorials","description":"Java Spring Tutorials and Examples","caption":"","parent":9765,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1779"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4155150607"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"b973c4334b23cb7cf4aa1da0addd931e\";s:5:\"pDate\";s:19:\"2015-09-22 18:06:23\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"636766378\";s:5:\"pDate\";s:19:\"2015-09-22 18:06:36\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"646385119096213504\";s:5:\"pDate\";s:19:\"2015-09-22 18:06:34\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials-620x388.png","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/java-spring-tutorials.png","width":640,"height":400}}},{"id":9753,"type":"post","slug":"how-to-create-bitmap-blur-effect-in-android-using-renderscript","url":"http:\/\/stacktips.com\/tutorials\/android\/how-to-create-bitmap-blur-effect-in-android-using-renderscript","status":"publish","title":"How to create Bitmap blur effect in Android using RenderScript","title_plain":"How to create Bitmap blur effect in Android using RenderScript","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to create Bitmap blur effect in Android using RenderScript' data-link='http:\/\/stacktips.com\/tutorials\/android\/how-to-create-bitmap-blur-effect-in-android-using-renderscript' data-summary='Android RenderScript framework API can be used for performing computationally intensive tasks at high performance. In this tutorial we will take a look into how to create Bitmap blur effect in using Android RenderScript.'><\/div>\n<p>Android\u00a0<code>RenderScript<\/code> framework API can be used for performing\u00a0computationally intensive tasks at high performance.\u00a0RenderScript was\u00a0primarily developed to use\u00a0with data-parallel computation, although serial computationally intensive workloads can benefit as well. The RenderScript runtime will parallelize work across all processors available on a device, such as multi-core CPUs, GPUs, or DSPs, allowing you to focus on expressing algorithms rather than scheduling work or load balancing.<\/p>\n<p>RenderScript is especially useful for applications performing image processing, computational photography, or computer vision. There are two ways we can access the\u00a0Android RenderScript framework APIs:<\/p>\n<ul>\n<li>Directly using <code>android.renderscript<\/code>\u00a0API classes. These classes are available from Android 3.0 (API level 11) and higher.<\/li>\n<li>Alternatively, you can use\u00a0<code>android.support.v8.renderscript<\/code>\u00a0support package classes. The support library classes are available for\u00a0devices running Android 2.2 (API level 8) and higher.<\/li>\n<\/ul>\n<h2>How to use\u00a0RenderScript<\/h2>\n<p>In order to use the Support Library RenderScript APIs, you must have\u00a0Android SDK Tools revision 22.2 or higher and\u00a0SDK Build-tools revision 18.1.0 or higher.<\/p>\n<p>After you have the above two minimum\u00a0development tools, you need to update the settings for the Android build process to include the RenderScript APIs. In Android Studio project add the following configurations to project\u00a0<code>build.gradle<\/code> file.<\/p>\n<pre class=\"prettyprint lang-java\">defaultConfig {\r\n    applicationId \"com.javatechig\"\r\n    minSdkVersion 14\r\n    targetSdkVersion 23\r\n    versionCode 1\r\n    versionName \"1.0\"\r\n\r\n    \/\/ Add the following two lines\r\n   <strong> renderscriptTargetApi 18\r\n    renderscriptSupportModeEnabled true<\/strong>\r\n}\r\n<\/pre>\n<p>The following code snippets can be used\u00a0create a bitmap blur effect in Android using RenderScript API.<\/p>\n<pre class=\"prettyprint lang-java\">\/\/Set the radius of the Blur. Supported range 0 &lt; radius &lt;= 25\r\nprivate static final float BLUR_RADIUS = 25f;\r\n\r\npublic Bitmap blur(Bitmap image) {\r\n    if (null == image) return null;\r\n\r\n    Bitmap outputBitmap = Bitmap.createBitmap(image);\r\n    final RenderScript renderScript = RenderScript.create(this);\r\n    Allocation tmpIn = Allocation.createFromBitmap(renderScript, image);\r\n    Allocation tmpOut = Allocation.createFromBitmap(renderScript, outputBitmap);\r\n\r\n    \/\/Intrinsic Gausian blur filter\r\n    ScriptIntrinsicBlur theIntrinsic = ScriptIntrinsicBlur.create(renderScript, Element.U8_4(renderScript));\r\n    theIntrinsic.setRadius(BLUR_RADIUS);\r\n    theIntrinsic.setInput(tmpIn);\r\n    theIntrinsic.forEach(tmpOut);\r\n    tmpOut.copyTo(outputBitmap);\r\n    return outputBitmap;\r\n}\r\n<\/pre>\n<p>You can use the above code snippet to blur an ImageView as follows.<\/p>\n<pre class=\"prettyprint lang-java\">ImageView imageView = (ImageView) findViewById(R.id.imageView);\r\nBitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.nature);\r\nBitmap blurredBitmap = blur(bitmap);\r\nimageView.setImageBitmap(blurredBitmap);\r\n<\/pre>\n<h4>Result:<\/h4>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Bitmap-Blur-Effect-In-Android-Using-RenderScript.png\"><img class=\"alignnone wp-image-9759\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Bitmap-Blur-Effect-In-Android-Using-RenderScript-620x930.png\" alt=\"Bitmap Blur Effect In Android Using RenderScript\" width=\"400\" height=\"600\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Bitmap-Blur-Effect-In-Android-Using-RenderScript-620x930.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Bitmap-Blur-Effect-In-Android-Using-RenderScript-300x450.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Bitmap-Blur-Effect-In-Android-Using-RenderScript-370x555.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Bitmap-Blur-Effect-In-Android-Using-RenderScript.png 767w\" sizes=\"(max-width: 400px) 100vw, 400px\" \/><\/a><\/p>\n","excerpt":"<p>Android RenderScript framework API can be used for performing computationally intensive tasks at high performance. In this tutorial we will take a look into how to create Bitmap blur effect in using Android RenderScript.<\/p>\n","date":"2015-09-21 23:43:03","modified":"2016-06-11 00:50:39","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8531,"name":"Amit Singh","url":"","date":"2016-05-31 19:03:00","content":"<p>sir how can i get pop dilog like true caller during incoming call.<\/p>\n","parent":0}],"attachments":[{"id":9759,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Bitmap-Blur-Effect-In-Android-Using-RenderScript.png","slug":"bitmap-blur-effect-in-android-using-renderscript","title":"Bitmap Blur Effect In Android Using RenderScript","description":"Bitmap Blur Effect In Android Using RenderScript","caption":"","parent":9753,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Bitmap-Blur-Effect-In-Android-Using-RenderScript.png","width":767,"height":1151},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Bitmap-Blur-Effect-In-Android-Using-RenderScript-620x930.png","width":620,"height":930},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Bitmap-Blur-Effect-In-Android-Using-RenderScript.png","width":767,"height":1151},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Bitmap-Blur-Effect-In-Android-Using-RenderScript.png","width":767,"height":1151},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Bitmap-Blur-Effect-In-Android-Using-RenderScript.png","width":767,"height":1151},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Bitmap-Blur-Effect-In-Android-Using-RenderScript.png","width":767,"height":1151}}}],"comment_count":1,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["4450"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4151749259"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"06cc16f52e698d1a1259277c7daed6d0\";s:5:\"pDate\";s:19:\"2015-09-21 18:13:39\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"636348084\";s:5:\"pDate\";s:19:\"2015-09-21 18:13:37\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"646024483870932993\";s:5:\"pDate\";s:19:\"2015-09-21 18:13:32\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":9685,"type":"post","slug":"best-mobile-app-frameworks-that-use-javascript-html-css","url":"http:\/\/stacktips.com\/blog\/best-mobile-app-frameworks-that-use-javascript-html-css","status":"publish","title":"Best Mobile App Frameworks That Use JavaScript, HTML &#038; CSS","title_plain":"Best Mobile App Frameworks That Use JavaScript, HTML &#038; CSS","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Best Mobile App Frameworks That Use JavaScript, HTML &amp; CSS' data-link='http:\/\/stacktips.com\/blog\/best-mobile-app-frameworks-that-use-javascript-html-css' data-summary='A broad range of frameworks make all these requisites possible and this post consisting some top-graded frameworks is a perfect way to choose the best &amp; cross-platform mobile framework in the fastest manner.'><\/div>\n<p>The elevating appetite of consumers for the mobile applications plays a substantial role and compels the developers to build cutting-edge apps incorporated with interactive &amp; unique features. On an average, a mobile user employs mobile apps for 2 hours 42 minutes that is about 86% usage of the mobile devices. According to the <strong>comScore<\/strong> research report, 47% Internet traffic out of total 55% usage came via these apps last year in the U.S and rest 8% came through the mobile browsers. This is why, the use of frameworks for experimenting came in the limelight amidst developers to develop multifarious unique, power-packed, and feature-rich apps.<\/p>\n<p>The massive numbers of consumers are switching swiftly towards mobile devices to accomplish manifold requisites that generate far-reaching scope of standard web languages such as HTML, JavaScript, and CSS. These sought-after languages diminish the curb related to the native app development by letting you play with their exemplary attributes freely. The frameworks based on these prominent languages have unveiled gigantic ways for the professional developers to create foremost mobile apps precisely loaded with a plethora of significant libraries.<\/p>\n<p>One lucrative advantage to use these helpful web frameworks is cross-platform portability using tools such as PhoneGap. PhoneGap is an ideal package compiler to achieve this need effectively. Installation and port of applications on the vast array of platforms is quite simpler via PhoneGap.<\/p>\n<p>A broad range of frameworks make all these requisites possible and this post consisting some top-graded frameworks is a perfect way to choose the best &amp; cross-platform mobile framework in the fastest manner. Let\u2019s delve into them with thorough detail.<\/p>\n<h2>1. Ionic<\/h2>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework.png\"><img class=\"alignnone wp-image-9698 size-large\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework-940x537.png\" alt=\"Iconic Framework\" width=\"660\" height=\"377\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework-940x537.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework-300x171.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework-620x354.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework-800x457.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework-1000x571.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework-900x514.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework-370x211.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework.png 1050w\" sizes=\"(max-width: 660px) 100vw, 660px\" \/><\/a><\/p>\n<p>Ionic, a dependable framework is a perfect choice for those, who are highly concerned with the overall performance of app. Built with SAS, this dependable HTML5 powered mobile framework is integrated with a myriad of UI components to create user-friendly apps in an effective manner. Focusing on performance, it never demands third-party JS library and works seamlessly with Angular.js to give breath to the interactive apps. Having a well-crafted set of font icons and reusable HTML classes, it is popularly used to build the outstanding mobile UI.<\/p>\n<h2>2. Ratchet<\/h2>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework.png\"><img class=\"alignnone size-large wp-image-9699\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework-940x532.png\" alt=\"Ratchet HTML Framework\" width=\"660\" height=\"374\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework-940x532.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework-300x170.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework-620x351.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework-800x453.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework-1000x566.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework-900x509.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework-370x209.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework.png 1060w\" sizes=\"(max-width: 660px) 100vw, 660px\" \/><\/a><\/p>\n<p>Being a prominent framework, Ratchet comprises the bundle of UI components, reusable HTML classes and JS plugins to get the developers started working for simple mobile application creation. It came into highlight by Twitter to develop engaging app prototype. Initially used like an internal tool, Ratchet was publicly released in the form of open source project. The version 2.0 of this framework is packed with proprietary collection of font icon named Ratcheticon as well as 2 pre-defined UI themes suitable for Android and iOS platforms.<\/p>\n<h2>3. jQuery Mobile<\/h2>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework.png\"><img class=\"alignnone size-large wp-image-9700\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework-940x537.png\" alt=\"jQueery Framework\" width=\"660\" height=\"377\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework-940x537.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework-300x171.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework-620x354.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework-800x457.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework-1000x571.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework-900x514.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework-370x211.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework.png 1050w\" sizes=\"(max-width: 660px) 100vw, 660px\" \/><\/a><\/p>\n<p>It is a robust and touch-optimized framework built with HTML5 to create cross-platform mobile apps. This exclusively reliable source caters incredible experience with stunning support for almost all the platforms. It owns a handy assortment of remarkable user interfaces optimized acutely to fulfill varied needs regarding mobile devices.<\/p>\n<h2>4. Lungo<\/h2>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework.png\"><img class=\"alignnone size-large wp-image-9701\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework-940x537.png\" alt=\"Lungo Framework\" width=\"660\" height=\"377\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework-940x537.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework-300x171.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework-620x354.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework-800x457.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework-1000x571.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework-900x514.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework-370x211.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework.png 1051w\" sizes=\"(max-width: 660px) 100vw, 660px\" \/><\/a><\/p>\n<p>This lightweight framework is quite robust and aesthetically crafted with default styles. Based on programming languages called HTML, CSS, &amp; JavaScript, Lungo supports Blackberry, iOS, Firefox OS, and Android platforms. It brings with exceptional events such as double-tap, swipe &amp; tap. Beside this, you can take advantage from its numerous JavaScript API that are helpful to control app functioning.<\/p>\n<h2>5. Sencha Touch<\/h2>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Sencha-Touch-Framework.png\"><img class=\"alignnone size-large wp-image-9705\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Sencha-Touch-Framework-940x491.png\" alt=\"Sencha Touch Framework\" width=\"660\" height=\"345\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Sencha-Touch-Framework-940x491.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Sencha-Touch-Framework-300x157.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Sencha-Touch-Framework-620x324.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Sencha-Touch-Framework-800x418.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Sencha-Touch-Framework-900x470.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Sencha-Touch-Framework-370x193.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Sencha-Touch-Framework.png 969w\" sizes=\"(max-width: 660px) 100vw, 660px\" \/><\/a><\/p>\n<p>Another well-noted framework, Sencha Touch is powered by CSS3 &amp; HTML5 that makes it the exceptionally reliable framework to develop feature-rich mobile apps. Surrounded with a broad range of animations, components and APIs, this framework provides an ability to perform it on multiple popular mobile platforms and browsers without any obstacle. In addition, it is compatible with PhoneGap &amp; Cordova that allow you to compile the desired application and then submit successfully to the App Stores of respective platform. Gaining strength to build hybrid apps, this framework is easy-to-use packed with multifarious components for eye-catching app creation. It also offers a wide number of themes that have the ability to render look and feel of your app just like native.<\/p>\n","excerpt":"<p>A broad range of frameworks make all these requisites possible and this post consisting some top-graded frameworks is a perfect way to choose the best &#038; cross-platform mobile framework in the fastest manner.<\/p>\n","date":"2015-09-17 17:06:48","modified":"2016-06-11 00:50:44","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[{"id":36,"slug":"javascript","title":"JavaScript","description":"","post_count":5},{"id":263,"slug":"phonegap","title":"PhoneGap","description":"","post_count":4},{"id":261,"slug":"sencha-touch","title":"Sencha Touch","description":"","post_count":15}],"author":{"id":854,"slug":"guest","name":"Guest","first_name":"Guest","last_name":"Blogger","nickname":"guest","url":"","description":""},"comments":[{"id":8207,"name":"Mothusi","url":"http:\/\/twitter.com\/2getherMothusi","date":"2015-09-17 18:59:53","content":"<p>\u201c: Best Mobile App Frameworks That Use JavaScript, HTML &amp; CSS -#Blog<br \/>\n<a href=\"http:\/\/t.co\/cyd86HgwYB\" rel=\"nofollow\">http:\/\/t.co\/cyd86HgwYB<\/a> <a href=\"http:\/\/t.co\/S1TMkBglgt\u201d\" rel=\"nofollow\">http:\/\/t.co\/S1TMkBglgt\u201d<\/a><\/p>\n","parent":0},{"id":8232,"name":"An0nym0usC0ward","url":"","date":"2015-09-25 21:32:00","content":"<p>You can&#8217;t put sencha and jqueryui in the same category and expect to be taken seriously.<\/p>\n","parent":0},{"id":8238,"name":"Robert Woods","url":"","date":"2015-09-29 15:15:00","content":"<p>I have a few ideas for apps but I didn&#8217;t know what software, rather frameworks are<br \/>\navailable for app development. This is really helpful. Now I need to figure out how to learn building apps with one of these frameworks. Cheers!<\/p>\n","parent":0},{"id":8338,"name":"David Meyer","url":"http:\/\/www.csschopper.com\/","date":"2015-12-18 14:19:00","content":"<p>Thanks robert<\/p>\n","parent":8238},{"id":8486,"name":"www.Reegan.in","url":"http:\/\/www.reegan.in","date":"2016-04-14 16:43:00","content":"<p>thanks sharing article with us  <a href=\"http:\/\/www.reegan.in\" rel=\"nofollow\">http:\/\/www.reegan.in<\/a><\/p>\n","parent":0}],"attachments":[{"id":9689,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Mobile-Frameworks-HTML-CSS.jpeg","slug":"mobile-frameworks-html-css","title":"Mobile Frameworks HTML, CSS","description":"Mobile Frameworks HTML, CSS","caption":"","parent":9685,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Mobile-Frameworks-HTML-CSS.jpeg","width":1050,"height":557},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Mobile-Frameworks-HTML-CSS-620x329.jpeg","width":620,"height":329},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Mobile-Frameworks-HTML-CSS.jpeg","width":1050,"height":557},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Mobile-Frameworks-HTML-CSS.jpeg","width":1050,"height":557}}},{"id":9697,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQT-HTML-Framework.png","slug":"jqt-html-framework","title":"jQT HTML Framework","description":"jQT HTML Framework","caption":"","parent":9685,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQT-HTML-Framework.png","width":1050,"height":600},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQT-HTML-Framework-620x354.png","width":620,"height":354},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQT-HTML-Framework.png","width":1050,"height":600},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQT-HTML-Framework.png","width":1050,"height":600}}},{"id":9698,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework.png","slug":"iconic-framework","title":"Iconic Framework","description":"Iconic Framework","caption":"","parent":9685,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework.png","width":1050,"height":600},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework-620x354.png","width":620,"height":354},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework.png","width":1050,"height":600},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Iconic-Framework.png","width":1050,"height":600}}},{"id":9699,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework.png","slug":"ratchet-html-framework","title":"Ratchet HTML Framework","description":"Ratchet HTML Framework","caption":"","parent":9685,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework.png","width":1060,"height":600},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework-620x351.png","width":620,"height":351},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework.png","width":1060,"height":600},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Ratchet-HTML-Framework.png","width":1060,"height":600}}},{"id":9700,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework.png","slug":"jqueery-framework","title":"jQueery Framework","description":"jQueery Framework","caption":"","parent":9685,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework.png","width":1050,"height":600},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework-620x354.png","width":620,"height":354},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework.png","width":1050,"height":600},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/jQueery-Framework.png","width":1050,"height":600}}},{"id":9701,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework.png","slug":"lungo-framework","title":"Lungo Framework","description":"Lungo Framework","caption":"","parent":9685,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework.png","width":1051,"height":600},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework-620x354.png","width":620,"height":354},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework.png","width":1051,"height":600},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Lungo-Framework.png","width":1051,"height":600}}},{"id":9702,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/JO-Mobile-HTML5-Framework.png","slug":"jo-mobile-html5-framework","title":"JO Mobile HTML5 Framework","description":"JO Mobile HTML5 Framework","caption":"","parent":9685,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/JO-Mobile-HTML5-Framework.png","width":896,"height":600},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/JO-Mobile-HTML5-Framework-620x415.png","width":620,"height":415},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/JO-Mobile-HTML5-Framework.png","width":896,"height":600},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/JO-Mobile-HTML5-Framework.png","width":896,"height":600}}},{"id":9703,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/KendoUI-HTML5-Framework.png","slug":"kendoui-html5-framework","title":"KendoUI HTML5 Framework","description":"KendoUI HTML5 Framework","caption":"","parent":9685,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/KendoUI-HTML5-Framework.png","width":1052,"height":600},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/KendoUI-HTML5-Framework-620x354.png","width":620,"height":354},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/KendoUI-HTML5-Framework.png","width":1052,"height":600},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/KendoUI-HTML5-Framework.png","width":1052,"height":600}}},{"id":9704,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Apache-Codova-Famework.png","slug":"apache-codova-famework","title":"Apache Codova Famework","description":"Apache Codova Famework","caption":"","parent":9685,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Apache-Codova-Famework.png","width":1053,"height":600},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Apache-Codova-Famework-620x353.png","width":620,"height":353},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Apache-Codova-Famework.png","width":1053,"height":600},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Apache-Codova-Famework.png","width":1053,"height":600}}},{"id":9705,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Sencha-Touch-Framework.png","slug":"sencha-touch-framework","title":"Sencha Touch Framework","description":"Sencha Touch Framework","caption":"","parent":9685,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Sencha-Touch-Framework.png","width":969,"height":506},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Sencha-Touch-Framework-620x324.png","width":620,"height":324},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Sencha-Touch-Framework.png","width":969,"height":506},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Sencha-Touch-Framework.png","width":969,"height":506}}},{"id":9706,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Famous-JavaScript-Engine.png","slug":"famous-javascript-engine","title":"Famous JavaScript Engine","description":"Famous JavaScript Engine","caption":"","parent":9685,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Famous-JavaScript-Engine.png","width":1047,"height":600},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Famous-JavaScript-Engine-620x355.png","width":620,"height":355},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Famous-JavaScript-Engine.png","width":1047,"height":600},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Famous-JavaScript-Engine.png","width":1047,"height":600}}}],"comment_count":5,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1868"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4137927154"],"snapImportedComments":["a:1:{i:0;s:23:\"twxcw644503543681056769\";}"],"slide_template":["default"],"md_bone_gallery_slider_opts":["a:1:{s:18:\"gallery_transition\";s:5:\"slide\";}"],"md_bone_post-layout":["standard-top"],"md_bone_post_featured":["0"],"md_bone_hide_featured_img":["0"],"md_bone_review_switch":["0"],"md_bone_review_score":["a:1:{i:0;a:2:{s:13:\"criteria_name\";s:0:\"\";s:14:\"criteria_score\";s:1:\"0\";}}"],"md_bone_review_pros":["a:0:{}"],"md_bone_review_cons":["a:0:{}"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"41a6cb56d1cf21196bd8e2a2212af6eb\";s:5:\"pDate\";s:19:\"2015-09-17 11:37:10\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"634741809\";s:5:\"pDate\";s:19:\"2015-09-17 11:37:08\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"644475185811161088\";s:5:\"pDate\";s:19:\"2015-09-17 11:37:11\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Mobile-Frameworks-HTML-CSS.jpeg","width":1050,"height":557},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Mobile-Frameworks-HTML-CSS-620x329.jpeg","width":620,"height":329},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Mobile-Frameworks-HTML-CSS.jpeg","width":1050,"height":557},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Mobile-Frameworks-HTML-CSS.jpeg","width":1050,"height":557}}},{"id":9630,"type":"post","slug":"custom-calendar-view-library-in-android","url":"http:\/\/stacktips.com\/tutorials\/android\/custom-calendar-view-library-in-android","status":"publish","title":"Custom Calendar View Library in Android","title_plain":"Custom Calendar View Library in Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Custom Calendar View Library in Android' data-link='http:\/\/stacktips.com\/tutorials\/android\/custom-calendar-view-library-in-android' data-summary='The CustomCalendarView provides an easy and customizable option to create a Calendar. It displays the days of a month in a grid layout and allows navigating between months.'><\/div>\n<p>The <strong>CustomCalendarView<\/strong> provides an easy and customizable option to create a Calendar. It displays the days of a month in a grid layout and allows navigating between months.<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-features\">1. Features<\/a><\/li><li><a href=\"#2-compatibility\">2. Compatibility<\/a><\/li><li><a href=\"#3-addcustomcalendarview-library\">3. Add\u00a0CustomCalendarView Library<\/a><\/li><li><a href=\"#4-usingcustomcalendarview-library\">4. Using\u00a0CustomCalendarView Library<\/a><\/li><li><a href=\"#5-using-custom-typeface\">5. Using Custom TypeFace<\/a><\/li><li><a href=\"#6-using-day-decorators\">6. Using Day Decorators<\/a><\/li><\/ul><\/div>\n<\/p>\n<h2><span id=\"1-features\">1. Features<\/span><\/h2>\n<p>Currently it allows the following features:<\/p>\n<ul>\n<li>Next and previous month navigation<\/li>\n<li>Allow various customization including background color for day, week and title<\/li>\n<li>Set custom typeface using setCustomTypeFace() method.<\/li>\n<li>Show hide next previous month overflow days<\/li>\n<li>Set custom day options for start day of week. By default it is set to <code>Calendar.SUNDAY<\/code><\/li>\n<li>Unlimited customizations for day of the month using custom Decorators.<\/li>\n<li>Allow you to handle event when user changes month and day selection.<\/li>\n<\/ul>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Android.png\"><img class=\"alignnone size-full wp-image-9664\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Android.png\" alt=\"Custom Calendar View Android\" width=\"963\" height=\"514\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Android.png 963w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Android-300x160.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Android-620x331.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Android-940x502.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Android-800x427.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Android-900x480.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Android-370x197.png 370w\" sizes=\"(max-width: 963px) 100vw, 963px\" \/><\/a><\/p>\n<h2><span id=\"2-compatibility\">2. Compatibility<\/span><\/h2>\n<p>This library is compatible from API 14.<\/p>\n<h2><span id=\"3-addcustomcalendarview-library\">3. Add\u00a0CustomCalendarView Library<\/span><\/h2>\n<p>To use the <strong>CustomCalendarView <\/strong>in your application, you first need to add the library to your application. You can do this by either from Gradle, Maven or by directly downloading the source code form <a href=\"https:\/\/github.com\/npanigrahy\/Custom-Calendar-View\" target=\"_blank\">GitHub<\/a>.<\/p>\n<h4>Gradle<\/h4>\n<p class=\"p1\"><span class=\"s1\"><b>Step 1.<\/b> Add the JitPack repository to your build file<\/span><\/p>\n<p>Step-1 Add it in your build.gradle at the end of repositories:<\/p>\n<pre class=\"prettyprint lang-java\">repositories {\r\n    maven { url \"https:\/\/jitpack.io\" }\r\n}<\/pre>\n<p>Step-2 Add the dependency in the form<\/p>\n<pre class=\"prettyprint lang-java\">dependencies {\r\n    compile 'com.github.npanigrahy:Custom-Calendar-View:v1.0'\r\n}<\/pre>\n<h4>Maven<\/h4>\n<pre class=\"prettyprint lang-xml\">&lt;repository&gt;\r\n     &lt;id&gt;jitpack.io&lt;\/id&gt;\r\n     &lt;url&gt;https:\/\/jitpack.io&lt;\/url&gt;\r\n&lt;\/repository&gt;\r\n<\/pre>\n<p>Step 2. Add the dependency in the form<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;dependency&gt;\r\n     &lt;groupId&gt;com.github.npanigrahy&lt;\/groupId&gt;\r\n     &lt;artifactId&gt;Custom-Calendar-View&lt;\/artifactId&gt;\r\n     &lt;version&gt;v1.0&lt;\/version&gt;\r\n&lt;\/dependency&gt;\r\n<\/pre>\n<h4>Sbt<\/h4>\n<p>Step-1 Add it in your build.sbt at the end of resolvers:<\/p>\n<pre class=\"prettyprint lang-java\">resolvers += \"jitpack\" at \"https:\/\/jitpack.io\"<\/pre>\n<p>Step-2 Add the dependency in the form<\/p>\n<pre class=\"prettyprint lang-java\">libraryDependencies += \"com.github.npanigrahy\" % \"Custom-Calendar-View\" % \"v1.0\"<\/pre>\n<h2><span id=\"4-usingcustomcalendarview-library\">4. Using\u00a0CustomCalendarView Library<\/span><\/h2>\n<p>The GitHub project source includes a sample application, that is used for demonstrating the various features currently supported by this library.\u00a0Once the library is added to your project, you can include the CustomCalendarView into your activity\/fragment layout using the following code snippets.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;com.imanoweb.calendarview.CustomCalendarView\r\n\tandroid:id=\"@+id\/calendar_view\"\r\n\tandroid:layout_width=\"match_parent\"\r\n\tandroid:layout_height=\"wrap_content\"\r\n\tandroid:background=\"#ffffff\"&gt;\r\n&lt;\/com.imanoweb.calendarview.CustomCalendarView&gt;\r\n<\/pre>\n<p>The above code snippet will show the simple Calendar View with default design. Now, you can use the following attributes, to customize the appearance of calendar.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;com.imanoweb.calendarview.CustomCalendarView\r\n        android:id=\"@+id\/calendar_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"@color\/off_white\"\r\n        app:calendarBackgroundColor=\"@color\/off_white\"\r\n        app:calendarTitleTextColor=\"@color\/black\"\r\n        app:currentDayOfMonthColor=\"@color\/blue\"\r\n        app:dayOfMonthTextColor=\"@color\/black\"\r\n        app:dayOfWeekTextColor=\"@color\/black\"\r\n        app:disabledDayBackgroundColor=\"@color\/off_white\"\r\n        app:disabledDayTextColor=\"@color\/grey\"\r\n        app:selectedDayBackgroundColor=\"@color\/blue\"\r\n        app:titleLayoutBackgroundColor=\"@color\/white\"\r\n        app:weekLayoutBackgroundColor=\"@color\/white\"&gt;\r\n&lt;\/com.imanoweb.calendarview.CustomCalendarView&gt;\r\n<\/pre>\n<p>Let us now, initialize the calendar view to control the various other appearance and behavior of calendar using the following methods.<\/p>\n<pre class=\"prettyprint lang-java\">\/\/Initialize CustomCalendarView from layout\r\ncalendarView = (CustomCalendarView) findViewById(R.id.calendar_view);\r\n\r\n\/\/Initialize calendar with date\r\nCalendar currentCalendar = Calendar.getInstance(Locale.getDefault());\r\n\r\n\/\/Show Monday as first date of week\r\ncalendarView.setFirstDayOfWeek(Calendar.MONDAY);\r\n\r\n\/\/Show\/hide overflow days of a month\r\ncalendarView.setShowOverflowDate(false);\r\n\r\n\/\/call refreshCalendar to update calendar the view\r\ncalendarView.refreshCalendar(currentCalendar);\r\n\r\n\/\/Handling custom calendar events\r\ncalendarView.setCalendarListener(new CalendarListener() {\r\n    @Override\r\n    public void onDateSelected(Date date) {\r\n        SimpleDateFormat df = new SimpleDateFormat(\"dd-MM-yyyy\");\r\n        Toast.makeText(MainActivity.this, df.format(date), Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    @Override\r\n    public void onMonthChanged(Date date) {\r\n        SimpleDateFormat df = new SimpleDateFormat(\"MM-yyyy\");\r\n        Toast.makeText(MainActivity.this, df.format(date), Toast.LENGTH_SHORT).show();\r\n    }\r\n});\r\n<\/pre>\n<h2><span id=\"5-using-custom-typeface\">5. Using Custom TypeFace<\/span><\/h2>\n<pre class=\"prettyprint lang-java\">\/\/Setting custom font\r\nfinal Typeface typeface = Typeface.createFromAsset(getAssets(), \"fonts\/Arch_Rival_Bold.ttf\");\r\nif (null != typeface) {\r\n    calendarView.setCustomTypeface(typeface);\r\n    calendarView.refreshCalendar(currentCalendar);\r\n}\r\n<\/pre>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Custom-Font.png\"><img class=\"alignnone size-thumbnail wp-image-9652\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Custom-Font-300x507.png\" alt=\"Custom Calendar View Library in Android Custom Font\" width=\"300\" height=\"507\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Custom-Font-300x507.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Custom-Font-620x1048.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Custom-Font-940x1589.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Custom-Font-800x1352.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Custom-Font-1000x1691.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Custom-Font-900x1521.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Custom-Font-370x625.png 370w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2><span id=\"6-using-day-decorators\">6. Using Day Decorators<\/span><\/h2>\n<pre class=\"prettyprint lang-java\">\/\/adding calendar day decorators\r\nList decorators = new ArrayList&lt;&gt;();\r\ndecorators.add(new ColorDecorator());\r\ncalendarView.setDecorators(decorators);\r\ncalendarView.refreshCalendar(currentCalendar);\r\n<\/pre>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Decorator.png\"><img class=\"alignnone wp-image-9653 size-thumbnail\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Decorator-300x507.png\" alt=\"Custom Calendar View Library in Android Decorator\" width=\"300\" height=\"507\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Decorator-300x507.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Decorator-620x1048.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Decorator-940x1589.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Decorator-800x1352.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Decorator-1000x1691.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Decorator-900x1521.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Decorator-370x625.png 370w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p>\n<p>If you enjoy this library, don\u2019t forget to follow us on our twitter handle <a href=\"http:\/\/twitter.com\/javatechig\" target=\"_blank\">@javatechig<\/a>.<\/p>\n","excerpt":"<p>The CustomCalendarView provides an easy and customizable option to create a Calendar. It displays the days of a month in a grid layout and allows navigating between months.<\/p>\n","date":"2015-09-15 07:01:06","modified":"2015-09-15 07:13:37","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":130,"slug":"android-library","title":"Android Library","description":"","post_count":2},{"id":271,"slug":"open-source","title":"Open Source","description":"","post_count":1}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8288,"name":"Nabeel Hafeez","url":"","date":"2015-10-29 11:33:00","content":"<p>ArrayList error occured &#8220;Diamond types are not supported at this language level&#8221; and ColorDecorator() class can not resolved.<\/p>\n","parent":0},{"id":8292,"name":"Kamal Sampath upasena","url":"","date":"2015-11-02 12:48:00","content":"<p>This a awesome lib thank you for  creating such a awesome one, But how to use decorator for specific date ? can you please post a example on that , if i want colour a specific date on calendar (Like Public Holiday) how can i achieve this ?<\/p>\n","parent":0},{"id":8293,"name":"maheshTs","url":"http:\/\/www.Thoughtspheres.com\/","date":"2015-11-02 17:41:00","content":"<p>i want to change the color of current week.how it?<\/p>\n","parent":0},{"id":8325,"name":"Prashanth","url":"","date":"2015-11-29 14:55:00","content":"<p>Awesome library. I need to set the max and min date, please help me how can i achieve this by using your library<\/p>\n","parent":0},{"id":8326,"name":"Marek Mo\u0161a\u0165","url":"","date":"2015-11-29 21:16:00","content":"<p>Is it possible add small text to Dates in calendar. I have database with 2 columns: date and name. How add this columns (arrays) to calendar?<\/p>\n","parent":0},{"id":8331,"name":"SANdeep Tengale","url":"","date":"2015-12-01 10:32:00","content":"<p>Is is possible to show only months of the year and days of the week in this library??<\/p>\n","parent":0},{"id":8347,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-12-23 18:13:00","content":"<p>You need to use the DaysDecorator to achieve this. Here is the sample code that might help you..<\/p>\n<p>private class DaysDecorator implements DayDecorator {<br \/>\n    @Override<br \/>\n    public void decorate(DayView dayView) {<br \/>\n        if(!isPastDay(dayView.getDate())){<br \/>\n            dayView.setBackgroundColor(getResources().getColor(R.color.disable_color));<br \/>\n        }<br \/>\n    }<br \/>\n}<\/p>\n<p>private boolean isPastDay(Date date) {<br \/>\n    Calendar c = Calendar.getInstance();<\/p>\n<p>    \/\/ set the calendar to start of today<br \/>\n    c.set(Calendar.HOUR_OF_DAY, 0);<br \/>\n    c.set(Calendar.MINUTE, 0);<br \/>\n    c.set(Calendar.SECOND, 0);<br \/>\n    c.set(Calendar.MILLISECOND, 0);<\/p>\n<p>    \/\/ and get that as a Date<br \/>\n    Date today = c.getTime();<\/p>\n<p>    \/\/ test your condition, if Date specified is before today<br \/>\n    if (date.before(today)) {<br \/>\n        return true;<br \/>\n    }<br \/>\n    return false;<br \/>\n}<\/p>\n","parent":0},{"id":8348,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-12-23 18:16:00","content":"<p>currently not supported. You need to extend the library.<\/p>\n","parent":8331},{"id":8349,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-12-23 18:16:00","content":"<p>Check your java version.<\/p>\n","parent":8288},{"id":8350,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-12-23 18:16:00","content":"<p>check the example and comments in this post<\/p>\n","parent":8292},{"id":8351,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-12-23 18:17:00","content":"<p>check the example in this library and previous comments.<\/p>\n","parent":8293},{"id":8352,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-12-23 18:17:00","content":"<p>Unfortunately the library is limited with this feature. you need to extend yourself<\/p>\n","parent":8325},{"id":8353,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-12-23 18:18:00","content":"<p>yes. You can add it using <a href=\"http:\/\/developer.android.com\/reference\/android\/text\/SpannableString.html\" rel=\"nofollow\">SpanableString<\/a><\/p>\n","parent":8326},{"id":8356,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2016-01-04 16:54:00","content":"<p>Can you do a pull request and modify. Once you done, I can merge it back to trunk.<\/p>\n","parent":0},{"id":8360,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2016-01-18 15:22:00","content":"<p>You need to implement DayDecorator. See the example in the comments above.<\/p>\n","parent":0},{"id":8367,"name":"Naveen hoovinahalli","url":"","date":"2016-01-19 17:21:00","content":"<p>Hi<br \/>\nAs requested by girish singh, Even I want to set the background color of some days of month in different color, And I saw that day decor example but i dint get the solution , Can you please explain how can we do that<\/p>\n","parent":0},{"id":8369,"name":"Naveen hoovinahalli","url":"","date":"2016-01-19 20:39:00","content":"<p>use this it will work<\/p>\n<p>List decorators = new ArrayList();<\/p>\n","parent":8288},{"id":8380,"name":"Dhananjay tiwari","url":"","date":"2016-02-14 10:42:00","content":"<p>i need to implement background icons instead of colors in decoraters.Can you help me?<\/p>\n","parent":8349},{"id":8415,"name":"MAHAPRASAD CHAND","url":"","date":"2016-02-28 18:50:00","content":"<p>i want  to add an event to your calendar when clicked a particular date . can you do that<\/p>\n","parent":8349},{"id":8422,"name":"Mahesh Lad","url":"","date":"2016-03-03 15:35:00","content":"<p>is it possible to show month like 26 feb to 26 march ?<\/p>\n","parent":0},{"id":8433,"name":"Akeshwar Jha","url":"","date":"2016-03-09 11:58:00","content":"<p>Hi Nilanchala, thanks for the library. I have a simple question: How do I retrieve a particular DayView corresponding to a date in my activity class?<\/p>\n","parent":0},{"id":8445,"name":"Vinay","url":"","date":"2016-03-14 17:12:00","content":"<p>Hi , i want to display round background with color to the particular day.<\/p>\n","parent":0},{"id":8451,"name":"Nageswararao CH","url":"","date":"2016-03-17 00:02:00","content":"<p>I need to customize sun,Mon,tue&#8230; Sat ,like some special text (Ex: 1,2,..7),how I need to replace ?please guid me,your response will appriceated.<\/p>\n","parent":0},{"id":8495,"name":"Ameen Maheen","url":"","date":"2016-04-20 12:36:00","content":"<p>hey can you tell me how to mark days with different color for a set of dates on the calandar<\/p>\n","parent":0},{"id":8500,"name":"neil","url":"","date":"2016-04-23 12:47:00","content":"<p>Its Possible to hide previous day for current day in same month<\/p>\n","parent":0},{"id":8533,"name":"Neha Sharma","url":"","date":"2016-06-03 09:45:00","content":"<p>Can I change the month by scrolling down in this calendar?<\/p>\n","parent":0},{"id":8534,"name":"Neha Sharma","url":"","date":"2016-06-03 09:46:00","content":"<p>Please help me because currently I am making an app and I want this function in your calendar<\/p>\n","parent":0},{"id":8535,"name":"Neha Sharma","url":"","date":"2016-06-03 09:49:00","content":"<p>Its very urgent &#8230;.<\/p>\n","parent":0}],"attachments":[{"id":9652,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Custom-Font.png","slug":"custom-calendar-view-library-in-android-custom-font","title":"Custom Calendar View Library in Android Custom Font","description":"","caption":"","parent":9630,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Custom-Font.png","width":1690,"height":2857},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Custom-Font-620x1048.png","width":620,"height":1048},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Custom-Font.png","width":1690,"height":2857}}},{"id":9653,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Decorator.png","slug":"custom-calendar-view-library-in-android-decorator","title":"Custom Calendar View Library in Android Decorator","description":"","caption":"","parent":9630,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Decorator.png","width":1690,"height":2857},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Decorator-620x1048.png","width":620,"height":1048},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-Decorator.png","width":1690,"height":2857}}},{"id":9654,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android.png","slug":"custom-calendar-view-library-in-android-2","title":"Custom Calendar View Library in Android","description":"","caption":"","parent":9630,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android.png","width":1690,"height":2857},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android-620x1048.png","width":620,"height":1048},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Library-in-Android.png","width":1690,"height":2857}}},{"id":9655,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/CustomCalendarView-in-Android.png","slug":"customcalendarview-in-android","title":"CustomCalendarView in Android","description":"","caption":"","parent":9630,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/CustomCalendarView-in-Android.png","width":1690,"height":2857},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/CustomCalendarView-in-Android-620x1048.png","width":620,"height":1048},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/CustomCalendarView-in-Android.png","width":1690,"height":2857}}},{"id":9664,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Android.png","slug":"custom-calendar-view-android","title":"Custom Calendar View Android","description":"","caption":"","parent":9630,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Android.png","width":963,"height":514},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Android-620x331.png","width":620,"height":331},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Android.png","width":963,"height":514},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/09\/Custom-Calendar-View-Android.png","width":963,"height":514}}}],"comment_count":28,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["5925"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4130318282"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"b8a8cbe43e6c74b9ffe0120779839ec1\";s:5:\"pDate\";s:19:\"2015-09-15 01:31:24\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"633681746\";s:5:\"pDate\";s:19:\"2015-09-15 01:31:25\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"643597970571677696\";s:5:\"pDate\";s:19:\"2015-09-15 01:31:26\";}}\";"],"snapImportedComments":["a:0:{}"],"minimaldog_user_IP":["a:1:{s:17:\"ip-80.169.158.130\";s:14:\"80.169.158.130\";}"],"minimaldog_post_like_count":["1"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_facebook":["0"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":10260,"type":"post","slug":"android-wear-now-officially-adds-support-to-iphone-devices","url":"http:\/\/stacktips.com\/news\/android-wear-now-officially-adds-support-to-iphone-devices","status":"publish","title":"Android Wear Now Officially Adds Support to iPhone Devices","title_plain":"Android Wear Now Officially Adds Support to iPhone Devices","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android Wear Now Officially Adds Support to iPhone Devices' data-link='http:\/\/stacktips.com\/news\/android-wear-now-officially-adds-support-to-iphone-devices' data-summary='Google has officially announced that Android Wear devices will soon be compatible with iOS devices..'><\/div>\n<p>For most iPhone users it was never been affordable to buy a Apple Watch. For those users, Google brings a good news. Google has officially announced that Android Wear devices will soon be compatible with iOS devices.<\/p>\n<p>Android Wear can now work with the iPhone 5, 5s, 6, or 6 Plus running iOS 8.2 or higher. With a compatible Android Wear watch, iOS device users can receive notifications and access to Google Now cards, use the Google fit to track fitness and more.<\/p>\n<p>Currently the Android wear for iOS works with LG Urbane watch. However, Google announced that all future Android Wear watches, such as the upcoming Huawei Watch, second-generation Motorola Moto 360 and the ASUS ZenWatch 2 will come with iOS support out of the box.<\/p>\n","excerpt":"<p>Google has officially announced that Android Wear devices will soon be compatible with iOS devices..<\/p>\n","date":"2015-08-31 20:44:16","modified":"2016-06-11 00:50:49","categories":[{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":10261,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416.jpg","slug":"android-wear-640x416","title":"Android-Wear-640x416","description":"","caption":"","parent":10260,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416.jpg","width":640,"height":416},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416-620x403.jpg","width":620,"height":403},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416.jpg","width":640,"height":416},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416.jpg","width":640,"height":416},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416.jpg","width":640,"height":416},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416.jpg","width":640,"height":416},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416.jpg","width":640,"height":416}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"snap_isAutoPosted":["1"],"slide_template":["default"],"dsq_thread_id":["4867051858"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:392:\"a:1:{i:0;a:13:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1226864033992515\";s:5:\"pDate\";s:19:\"2016-05-29 15:16:57\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"729948259\";s:5:\"pDate\";s:19:\"2016-05-29 15:16:59\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"736939401897353217\";s:5:\"pDate\";s:19:\"2016-05-29 15:17:00\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416.jpg","width":640,"height":416},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416-620x403.jpg","width":620,"height":403},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416.jpg","width":640,"height":416},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416.jpg","width":640,"height":416},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416.jpg","width":640,"height":416},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416.jpg","width":640,"height":416},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Android-Wear-640x416.jpg","width":640,"height":416}}},{"id":10263,"type":"post","slug":"google-play-services-8-1-update-brings-support-for-android-pay","url":"http:\/\/stacktips.com\/news\/google-play-services-8-1-update-brings-support-for-android-pay","status":"publish","title":"Google Play Services 8.1 Update Brings Support for Android Pay","title_plain":"Google Play Services 8.1 Update Brings Support for Android Pay","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Google Play Services 8.1 Update Brings Support for Android Pay' data-link='http:\/\/stacktips.com\/news\/google-play-services-8-1-update-brings-support-for-android-pay' data-summary=''><\/div>\n<p>The Google Play Services version 8.1 update brings the Android Pay support for Android Pay. Those who have updated the application noticed that there is a new option under the \u201cTap and pay\u201d option, which allow the users to choose between the Android Pay and Google Wallet. According to some recent rumors, many people think using Android pay they can use the contact-less payment service, which is true.<\/p>\n<p>However, this feature has not been enabled by Google, which means that you can\u2019t use the Android Pay yet. In case you\u2019ve selected the Android Pay option for payment, then you\u2019ve noticed that there is no application for this service and when you\u2019ve returned to the Settings app, the Android Pay was gone.<\/p>\n<h2>Android Pay: What Is This?<\/h2>\n<p>In case you didn\u2019t hear yet about Google\u2019s upcoming Android Pay yet, then you\u2019re a bit behind with the news. The Android Pay feature is the new NFC payments solution that Google will come with. It was firstly announced during the Google I\/O 2015 event and according to Google, it will allow you to pay for everything by simply tapping your phone on the POS system.<\/p>\n<h2>Google Wallet<\/h2>\n<p>Google Wallet allows you to do this, but it was a bit different. For example, Android Pay is not another application and instead its functionality was built into the Android OS. The Android Pay feature supports fingerprint readers and other security measures.<\/p>\n<h2>Android Pay<\/h2>\n<p>Android pay is Google\u2019s answer to Apple Pay, which is live and kicking for a few months already. The Android Pay feature is going to be released soon for Android devices and once it will be available, we\u2019re pretty sure that the mobile device owners that have the NFC feature, will ditch the Google Wallet for the new payment service.<\/p>\n","excerpt":"<p>The Google Play Services version 8.1 update brings the Android Pay support for Android Pay. Those who have updated the application noticed that there is a new option under the \u201cTap and pay\u201d option, which allow the users to choose between the Android Pay and Google Wallet. According to some recent rumors, many people think [&hellip;]<\/p>\n","date":"2015-08-29 20:48:53","modified":"2016-06-11 00:50:45","categories":[{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":10264,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services.jpg","slug":"google-play-services-2","title":"Google Play Services","description":"","caption":"","parent":10263,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services.jpg","width":640,"height":420},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services-620x407.jpg","width":620,"height":407},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services.jpg","width":640,"height":420},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services.jpg","width":640,"height":420},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services.jpg","width":640,"height":420},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services.jpg","width":640,"height":420},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services.jpg","width":640,"height":420}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"snap_isAutoPosted":["1"],"slide_template":["default"],"dsq_thread_id":["4867150913"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:392:\"a:1:{i:0;a:13:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1226866753992243\";s:5:\"pDate\";s:19:\"2016-05-29 15:22:38\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"729949549\";s:5:\"pDate\";s:19:\"2016-05-29 15:22:35\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"736940825658023937\";s:5:\"pDate\";s:19:\"2016-05-29 15:22:39\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services.jpg","width":640,"height":420},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services-620x407.jpg","width":620,"height":407},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services.jpg","width":640,"height":420},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services.jpg","width":640,"height":420},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services.jpg","width":640,"height":420},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services.jpg","width":640,"height":420},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Google-Play-Services.jpg","width":640,"height":420}}},{"id":10266,"type":"post","slug":"samsung-devices-that-will-receive-android-6-0-marshmallow-update","url":"http:\/\/stacktips.com\/news\/samsung-devices-that-will-receive-android-6-0-marshmallow-update","status":"publish","title":"Samsung Devices That Will Receive Android 6.0 Marshmallow Update","title_plain":"Samsung Devices That Will Receive Android 6.0 Marshmallow Update","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Samsung Devices That Will Receive Android 6.0 Marshmallow Update' data-link='http:\/\/stacktips.com\/news\/samsung-devices-that-will-receive-android-6-0-marshmallow-update' data-summary=''><\/div>\n<p>Android 6.0 Marshmallow developer version is released and the official version for user is expected during mid September 2015. As usual it will first be released to the Google Nexus devices and later the update will be available to other flagship devices over OTA.<\/p>\n<p>Samsung is committed to improve the update time to keep is as short as possible. Last Android update was delivered 3 months after the Android 5.0 Lollipop official release. This time we hope it will even come down and users will get the taste of Marshmallow sooner.<\/p>\n<p>Now, a list has been leaked which shows all possible Samsung Galaxy devices that will be getting a taste of Android 6.0 Marshmallow, of course with Samsung\u2019s TouchWiz skin on top. The first Samsung phones that will be updated to Android 6.0 are obviously the Samsung Galaxy S6 and S6 Edge, Note 5 and S6 Edge+ since they are all Samsung\u2019s current flagship phones.<\/p>\n<p>Other devices that make the list include the Galaxy Note 4, Note 4 Duos, Note Edge, S6 Duos, Galaxy Alpha and Galaxy Tab A. The Samsung Galaxy S5 does not make the list, but there is a high chance that the old flagship will also get Android 6.0, since there is no reason from Samsung not to do so. It has the capable hardware to run Android 6.0 Marshmallow, since the difference from Android 5.0 is small.<\/p>\n","excerpt":"<p>Android 6.0 Marshmallow developer version is released and the official version for user is expected during mid September 2015. As usual it will first be released to the Google Nexus devices and later the update will be available to other flagship devices over OTA. Samsung is committed to improve the update time to keep is [&hellip;]<\/p>\n","date":"2015-08-26 20:53:35","modified":"2016-06-11 00:50:50","categories":[{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":10267,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update.jpg","slug":"samsung-devices-that-will-receive-android-6-0-marshmallow-update","title":"Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update","description":"","caption":"","parent":10266,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update.jpg","width":640,"height":412},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update-620x399.jpg","width":620,"height":399},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update.jpg","width":640,"height":412},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update.jpg","width":640,"height":412},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update.jpg","width":640,"height":412},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update.jpg","width":640,"height":412},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update.jpg","width":640,"height":412}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"snap_isAutoPosted":["1"],"slide_template":["default"],"dsq_thread_id":["4867154781"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:392:\"a:1:{i:0;a:13:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1226868383992080\";s:5:\"pDate\";s:19:\"2016-05-29 15:27:05\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"729950707\";s:5:\"pDate\";s:19:\"2016-05-29 15:27:06\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"736941947927953409\";s:5:\"pDate\";s:19:\"2016-05-29 15:27:07\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update.jpg","width":640,"height":412},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update-620x399.jpg","width":620,"height":399},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update.jpg","width":640,"height":412},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update.jpg","width":640,"height":412},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update.jpg","width":640,"height":412},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update.jpg","width":640,"height":412},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Samsung-Devices-That-Will-Receive-Android-6.0-Marshmallow-Update.jpg","width":640,"height":412}}},{"id":9587,"type":"post","slug":"android-keyboard-hacks-hide-keyboard-and-customize-actions","url":"http:\/\/stacktips.com\/tutorials\/android\/android-keyboard-hacks-hide-keyboard-and-customize-actions","status":"publish","title":"How to customize Android keyboard actions and other hacks","title_plain":"How to customize Android keyboard actions and other hacks","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to customize Android keyboard actions and other hacks' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-keyboard-hacks-hide-keyboard-and-customize-actions' data-summary='This post explains the various code hacks used for controlling the appearance and behavior of the Android keyboard. Hacks include hide Keyboard, customize keyboard actions and setting input type.'><\/div>\n<p>Most of the form-based applications often need to customize the default behavior of Android soft keyboard. \u00a0Often it is required to control the type of keyboard you want to present user for data input, or customize the appearance of keyboard <strong>&#8220;Enter&#8221;<\/strong> key action.<\/p>\n<p>Over the course of this tutorial we will explain the\u00a0various code hacks used to control the appearance and behavior of Android soft keyboard. This tutorial covers the following topics:<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#set-textview-input-type\">Set TextView input type<\/a><\/li><li><a href=\"#hide-the-soft-keyboard\">Hide the soft keyboard<\/a><\/li><li><a href=\"#customize-the-input-method\">Customize the input method<\/a><\/li><li><a href=\"#adding-custom-action\">Adding Custom Action<\/a><\/li><\/ul><\/div>\n<\/p>\n<p>Let us first began with controlling the type\u00a0keyboard to display while editing the form data.<\/p>\n<h2><span id=\"set-textview-input-type\">Set TextView input type<\/span><\/h2>\n<p>There are different types of keyboard designed for user convenience. For example, if for entering a number you must display the numerical keyboard. This can be controlled by <code>InputType<\/code> property of <code>TextView<\/code>. The InputType controls aspects such as the type of data allowed to enter\u00a0in a text field. Generally you can select a single value, though some can be combined together as indicated.<\/p>\n<p>It is important to note that, setting <code>InputType<\/code>\u00a0property attribute to anything besides <code>none<\/code>\u00a0implies that the text is editable.<\/p>\n<p>Some of the most used input type constants includes, <code>none<\/code>, <code>text<\/code>, <code>textCapCharacters<\/code>, <code>textCapWords<\/code>, <code>textCapSentences<\/code>, <code>textAutoCorrect<\/code>, <code>textAutoComplete<\/code>, <code>textMultiLine<\/code>, <code>textImeMultiLine<\/code>, <code>textUri<\/code>, <code>textEmailAddress<\/code>, <code>textPassword<\/code>, <code>textWebEditText<\/code>, <code>textPhonetic<\/code>, <code>textWebEmailAddress<\/code>, <code>number<\/code>, <code>phone<\/code>, <code>datetime<\/code>, <code>date<\/code>, and <code>time<\/code>.<\/p>\n<p>You can set the inputType property in the layout declaration as follows:<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;EditText\r\n   android:id=\"@+id\/text1\"\r\n   android:layout_width=\"fill_parent\"\r\n   android:layout_height=\"wrap_content\"\r\n   android:imeOptions=\"actionSearch\"\r\n   android:singleLine=\"true\"\r\n   android:inputType=\"number\" \/&gt;\r\n<\/pre>\n<h2><span id=\"hide-the-soft-keyboard\">Hide the soft keyboard<\/span><\/h2>\n<p>The following code snippet will help you to hide or dismiss the soft keyboard from the screen and take the input focus out form the editable view.<\/p>\n<pre class=\"prettyprint lang-java\">InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);\r\nimm.hideSoftInputFromWindow(view.getWindowToken(), 0);\r\n<\/pre>\n<p>The\u00a0<code>hideSoftInputFromWindow()<\/code> takes an <code>IBinder<\/code> \u00a0window token as a parameter. This can be retrieved from any View\u00a0object currently attached to the window via <code>View.getWindowToken()<\/code>.<\/p>\n<h2><span id=\"customize-the-input-method\">Customize the input method<\/span><\/h2>\n<p>Now that we understand the different keyboard types based on the TextView <code>inputType<\/code> property let us customize the appearance of keyboard <strong>&#8220;Enter&#8221;<\/strong> action.<\/p>\n<p>When the keyboard is visible on screen, the text on the Enter key typically indicates its action based on the order of focusable items in the view. While unspecified, the keyboard by default\u00a0display a <strong>\u201cNext\u201d<\/strong> action if there are more focusable views to move to, otherwise it shows\u00a0<strong>\u201cDone\u201d<\/strong> action if the last item is currently focused on. In the case of a multiline field, this action is a line return.<\/p>\n<p>This can be customized using <code>android:imeOptions<\/code> value in the TextView XML declaration. The <code>android:imeOptions<\/code> attribute access the following possible values:<\/p>\n<ul>\n<li><strong>actionUnspecified: <\/strong>This property displays action of the device\u2019s choice \u00a0Action event is IME_NULL. This is the default keyboard action.<\/li>\n<li><strong>actionGo:<\/strong> This displays Go as the Enter key. \u00a0Action event is <strong>IME_ACTION_GO<\/strong><\/li>\n<li><strong>actionSearch:<\/strong> Displays a search icon as the Enter key \u00a0Action event is <strong>IME_ACTION_SEARCH<\/strong><\/li>\n<li><strong>actionSend:<\/strong> Displays Send as the Enter key. Action event is <strong>IME_ACTION_SEND<\/strong><\/li>\n<li><strong>actionNext:<\/strong> Displays Next as the Enter key. Action event is <strong>IME_ACTION_NEXT<\/strong><\/li>\n<li><strong>actionDone:<\/strong> Displays Done as the Enter key. Action event is <strong>IME_ACTION_DONE<\/strong><\/li>\n<\/ul>\n<p>All the above set of action event constants are defined in <code>EditorInfo<\/code> class.<\/p>\n<p>Let us look at the following example\u00a0layout with two editable text fields. The first EditText will display the search icon for the Enter key, and the second will display Go.\u00a0The resulting output may very depending on current keyboard installed on device.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"fill_parent\"\r\n    android:layout_height=\"fill_parent\"\r\n    android:orientation=\"vertical\"&gt;\r\n\r\n    &lt;EditText\r\n        android:id=\"@+id\/text1\"\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:imeOptions=\"actionSearch\"\r\n        android:singleLine=\"true\" \/&gt;\r\n\r\n    &lt;EditText\r\n        android:id=\"@+id\/text2\"\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:imeOptions=\"actionGo\"\r\n        android:singleLine=\"true\" \/&gt;\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<p>Note that, the custom editor options apply only to the appearance of soft input methods. Changing this value will not affect the events that get generated when the user presses on a physical hardware keyboard button.<\/p>\n<h2><span id=\"adding-custom-action\">Adding Custom Action<\/span><\/h2>\n<p>Customizing what happens when the user presses the <strong>Enter<\/strong> key can be just as important as adjusting its appearance. For overriding the default behavior we need to attach an <code>OnEditorActionListener<\/code> to <code>EditText<\/code> instance.<\/p>\n<p>The following code snippet shows how to create a custom action for EditTexts.<\/p>\n<pre class=\"prettyprint lang-java\">public class MainActivity extends Activity implements OnEditorActionListener {\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        \/\/Add the listener to the views\r\n        EditText editText1 = (EditText) findViewById(R.id.text1);\r\n        editText1.setOnEditorActionListener(this);\r\n\r\n        EditText editText2 = (EditText) findViewById(R.id.text2);\r\n        editText2.setOnEditorActionListener(this);\r\n    }\r\n\r\n    @Override\r\n    public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {\r\n        if (actionId == EditorInfo.IME_ACTION_SEARCH) {\r\n            \/\/Handle search key click\r\n            return true;\r\n        }\r\n        if (actionId == EditorInfo.IME_ACTION_GO) {\r\n            \/\/Handle go key click\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n<\/pre>\n<p>The boolean return value of <code>onEditorAction()<\/code>\u00a0tells the system whether you are consuming\u00a0the event or it should be passed on to the next possible responder, if any.\u00a0It is important for you to return true\u00a0when you handles the event yourself, so no other processing occurs. You can return\u00a0false when you are not handling the event so your application does not steal key events from the rest of the system.<\/p>\n","excerpt":"<p>This post explains the various code hacks used for controlling the appearance and behavior of the Android keyboard. Hacks include hide Keyboard, customize keyboard actions and setting input type.<\/p>\n","date":"2015-08-05 02:59:30","modified":"2016-06-11 00:50:53","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":9589,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Android-Keyboard-Hacks.png","slug":"android-keyboard-hacks","title":"Android Keyboard Hacks","description":"Android Keyboard Hacks","caption":"","parent":9587,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Android-Keyboard-Hacks.png","width":617,"height":423},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Android-Keyboard-Hacks.png","width":617,"height":423},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Android-Keyboard-Hacks.png","width":617,"height":423},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Android-Keyboard-Hacks.png","width":617,"height":423},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Android-Keyboard-Hacks.png","width":617,"height":423},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Android-Keyboard-Hacks.png","width":617,"height":423},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Android-Keyboard-Hacks.png","width":617,"height":423}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["4611"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4003555467"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"d3dca5620dc672b2c0c6dae2007f82e4\";s:5:\"pDate\";s:19:\"2015-08-04 21:29:52\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"618756371\";s:5:\"pDate\";s:19:\"2015-08-04 21:29:53\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"628679277609746433\";s:5:\"pDate\";s:19:\"2015-08-04 21:29:54\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":9550,"type":"post","slug":"how-to-create-custom-layout-in-android-by-extending-viewgroup-class","url":"http:\/\/stacktips.com\/tutorials\/android\/how-to-create-custom-layout-in-android-by-extending-viewgroup-class","status":"publish","title":"How to Create Custom Layout in Android by Extending ViewGroup Class","title_plain":"How to Create Custom Layout in Android by Extending ViewGroup Class","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Create Custom Layout in Android by Extending ViewGroup Class' data-link='http:\/\/stacktips.com\/tutorials\/android\/how-to-create-custom-layout-in-android-by-extending-viewgroup-class' data-summary='A ViewGroup in Android a special view that can contain other Views. A ViewGroup can contain one or multiple child.This post will help you to deal with creating a custom Layout manager class TagLayout that will be used to display the list of tags as shown in the following screenshot.'><\/div>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-introduction-to-viewgroup\">1. Introduction to ViewGroup<\/a><\/li><li><a href=\"#2-creating-custom-viewgroup\">2. Creating Custom ViewGroup<\/a><\/li><li><a href=\"#3-add-custom-viewgroup-on-activity-layout\">3. Add Custom ViewGroup on Activity Layout<\/a><\/li><li><a href=\"#4-define-child-view-layout\">4. Define Child View Layout<\/a><\/li><li><a href=\"#5-adding-child-view-to-custom-viewgroup\">5. Adding Child View to Custom ViewGroup<\/a><\/li><\/ul><\/div>\n<\/p>\n<h1><span id=\"1-introduction-to-viewgroup\">1. Introduction to ViewGroup<\/span><\/h1>\n<p>A <code>ViewGroup<\/code> in Android a special view that can contain other Views. A ViewGroup can contain one or multiple child. All other standard layout managers such as <a href=\"http:\/\/stacktips.com\/android\/android-linearlayout-example\">LinearLayout<\/a>, <a href=\"http:\/\/stacktips.com\/android\/android-framelayout-example\">FrameLayout<\/a>, <a href=\"http:\/\/stacktips.com\/android\/android-relativelayout-example\">RelativeLayout<\/a> are specialized sub classes of ViewGroup class that layout their child in specific format. For example, LinearLayout layout its child one adjacent to other either vertically or horizontally.<\/p>\n<p>Sometimes, due to specific nature of requirement, the standard layout managers are not enough. You need to extend the ViewGroup class to create your own custom layout manager.<\/p>\n<p>This post will help you to deal with creating a custom Layout manager class TagLayout that will be used to display the list of tags as shown in the following screenshot.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Create-Custom-Layout-in-Android-by-Extending-ViewGroup-Class.png\"><img class=\"alignnone wp-image-9552 size-thumbnail\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Create-Custom-Layout-in-Android-by-Extending-ViewGroup-Class-300x533.png\" alt=\"Create Custom Layout in Android by Extending ViewGroup Class\" width=\"300\" height=\"533\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Create-Custom-Layout-in-Android-by-Extending-ViewGroup-Class-300x533.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Create-Custom-Layout-in-Android-by-Extending-ViewGroup-Class-620x1102.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Create-Custom-Layout-in-Android-by-Extending-ViewGroup-Class-370x658.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Create-Custom-Layout-in-Android-by-Extending-ViewGroup-Class.png 720w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p>\n<p>You have to perform the following steps while creating custom Layout manager.<\/p>\n<ol>\n<li>Extend your class from <code>ViewGroup<\/code> class.<\/li>\n<li>You must override the <code>onLayout()<\/code> method. This method is used to place child views.<\/li>\n<li>Override <code>onMeasure()<\/code> method. The onMeasure() method will be used to for parent to determine the size of the view group based on calculating the child view size.<\/li>\n<li>The onMeasure() and onLayout() method, will contain the logic to organize the child views with in parent layout.<\/li>\n<\/ol>\n<p>You can measure each of the child view height and width by calling <code>getMeasuredWidth()<\/code> and <code>getMeasuredHeight()<\/code> methods.<\/p>\n<h1><span id=\"2-creating-custom-viewgroup\">2. Creating Custom ViewGroup<\/span><\/h1>\n<pre class=\"prettyprint lang-java\">public class TagLayout extends ViewGroup {\r\n    int deviceWidth;\r\n\r\n    public TagLayout(Context context) {\r\n        this(context, null, 0);\r\n    }\r\n\r\n    public TagLayout(Context context, AttributeSet attrs) {\r\n        this(context, attrs, 0);\r\n    }\r\n\r\n    public TagLayout(Context context, AttributeSet attrs, int defStyleAttr) {\r\n        super(context, attrs, defStyleAttr);\r\n        init(context);\r\n    }\r\n\r\n    private void init(Context context) {\r\n        final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();\r\n        Point deviceDisplay = new Point();\r\n        display.getSize(deviceDisplay);\r\n        deviceWidth = deviceDisplay.x;\r\n    }\r\n\r\n    @Override\r\n    protected void onLayout(boolean changed, int l, int t, int r, int b) {\r\n        final int count = getChildCount();\r\n        int curWidth, curHeight, curLeft, curTop, maxHeight;\r\n\r\n        \/\/get the available size of child view\r\n        final int childLeft = this.getPaddingLeft();\r\n        final int childTop = this.getPaddingTop();\r\n        final int childRight = this.getMeasuredWidth() - this.getPaddingRight();\r\n        final int childBottom = this.getMeasuredHeight() - this.getPaddingBottom();\r\n        final int childWidth = childRight - childLeft;\r\n        final int childHeight = childBottom - childTop;\r\n\r\n        maxHeight = 0;\r\n        curLeft = childLeft;\r\n        curTop = childTop;\r\n\r\n        for (int i = 0; i &lt; count; i++) {\r\n            View child = getChildAt(i);\r\n\r\n            if (child.getVisibility() == GONE)\r\n                return;\r\n\r\n            \/\/Get the maximum size of the child\r\n            child.measure(MeasureSpec.makeMeasureSpec(childWidth, MeasureSpec.AT_MOST), MeasureSpec.makeMeasureSpec(childHeight, MeasureSpec.AT_MOST));\r\n            curWidth = child.getMeasuredWidth();\r\n            curHeight = child.getMeasuredHeight();\r\n            \/\/wrap is reach to the end\r\n            if (curLeft + curWidth &gt;= childRight) {\r\n                curLeft = childLeft;\r\n                curTop += maxHeight;\r\n                maxHeight = 0;\r\n            }\r\n            \/\/do the layout\r\n            child.layout(curLeft, curTop, curLeft + curWidth, curTop + curHeight);\r\n            \/\/store the max height\r\n            if (maxHeight &lt; curHeight)\r\n                maxHeight = curHeight;\r\n            curLeft += curWidth;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\r\n        int count = getChildCount();\r\n        \/\/ Measurement will ultimately be computing these values.\r\n        int maxHeight = 0;\r\n        int maxWidth = 0;\r\n        int childState = 0;\r\n        int mLeftWidth = 0;\r\n        int rowCount = 0;\r\n\r\n        \/\/ Iterate through all children, measuring them and computing our dimensions\r\n        \/\/ from their size.\r\n        for (int i = 0; i &lt; count; i++) {\r\n            final View child = getChildAt(i);\r\n\r\n            if (child.getVisibility() == GONE)\r\n                continue;\r\n\r\n            \/\/ Measure the child.\r\n            measureChild(child, widthMeasureSpec, heightMeasureSpec);\r\n            maxWidth += Math.max(maxWidth, child.getMeasuredWidth());\r\n            mLeftWidth += child.getMeasuredWidth();\r\n\r\n            if ((mLeftWidth \/ deviceWidth) &gt; rowCount) {\r\n                maxHeight += child.getMeasuredHeight();\r\n                rowCount++;\r\n            } else {\r\n                maxHeight = Math.max(maxHeight, child.getMeasuredHeight());\r\n            }\r\n            childState = combineMeasuredStates(childState, child.getMeasuredState());\r\n        }\r\n\r\n        \/\/ Check against our minimum height and width\r\n        maxHeight = Math.max(maxHeight, getSuggestedMinimumHeight());\r\n        maxWidth = Math.max(maxWidth, getSuggestedMinimumWidth());\r\n\r\n        \/\/ Report our final dimensions.\r\n        setMeasuredDimension(resolveSizeAndState(maxWidth, widthMeasureSpec, childState),\r\n                resolveSizeAndState(maxHeight, heightMeasureSpec, childState &lt;&lt; MEASURED_HEIGHT_STATE_SHIFT));\r\n    }\r\n}\r\n<\/pre>\n<h1><span id=\"3-add-custom-viewgroup-on-activity-layout\">3. Add Custom ViewGroup on Activity Layout<\/span><\/h1>\n<p>Now that we are ready with the view group, let us add it to the activity layout.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;RelativeLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"&gt;\r\n\r\n    &lt;com.javatechig.taglayout.TagLayout\r\n        android:id=\"@+id\/tagLayout\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"#ffff00\"\/&gt;\r\n\r\n&lt;\/RelativeLayout&gt;\r\n<\/pre>\n<h1><span id=\"4-define-child-view-layout\">4. Define Child View Layout<\/span><\/h1>\n<p>You may have notice from the layout above, we will create custom layout for view group child. In this case the tag item.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"wrap_content\"\r\n    android:layout_height=\"wrap_content\"&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id\/tagTextView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"5dp\"\r\n        android:background=\"#a000\"\r\n        android:padding=\"10dp\"\r\n        android:textColor=\"#fff\" \/&gt;\r\n\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<h1><span id=\"5-adding-child-view-to-custom-viewgroup\">5. Adding Child View to Custom ViewGroup<\/span><\/h1>\n<p>Here is what it goes in my activity. For the sake of simplicity, I am inflating 20 child views from inside for loop. You may have some complex logic to get the data from some other source.<\/p>\n<pre class=\"prettyprint lang-java\">import android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        TagLayout tagLayout = (TagLayout) findViewById(R.id.tagLayout);\r\n        LayoutInflater layoutInflater = getLayoutInflater();\r\n        String tag;\r\n        for (int i = 0; i &lt;= 20; i++) {\r\n            tag = \"#tag\" + i;\r\n            View tagView = layoutInflater.inflate(R.layout.tag_layout, null, false);\r\n\r\n            TextView tagTextView = (TextView) tagView.findViewById(R.id.tagTextView);\r\n            tagTextView.setText(tag);\r\n            tagLayout.addView(tagView);\r\n        }\r\n    }\r\n}\r\n<\/pre>\n<p><a class = 'ss-button dowload-button' href='https:\/\/github.com\/javatechig\/TagLayout-ViewGroup' target='_blank'>Download from GitHub.<\/a><\/p>\n","excerpt":"<p>A ViewGroup in Android a special view that can contain other Views. A ViewGroup can contain one or multiple child.This post will help you to deal with creating a custom Layout manager class TagLayout that will be used to display the list of tags as shown in the following screenshot.<\/p>\n","date":"2015-08-03 22:10:57","modified":"2016-06-11 00:50:55","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":252,"slug":"custom-view","title":"Custom View","description":"","post_count":1},{"id":253,"slug":"viewgroup","title":"ViewGroup","description":"","post_count":1}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8209,"name":"\u0639\u0628\u062f\u0627\u0644\u0645\u0624\u0645\u0646 \u0643\u0627\u0638\u0645","url":"http:\/\/about.me\/bluemix","date":"2015-09-19 14:30:00","content":"<p>one thing to be noted in the onMeasure with the line<br \/>\nmaxWidth += Math.max(maxWidth, child.getMeasuredWidth());<\/p>\n<p>which will make the ViewGroup to have its width doubled with each child inserted. For me, if I have number of Tags (or child views in this view group) greater that 23, it won&#8217;t be shown. For me, I solved this issue by having <\/p>\n<p>            maxWidth = child.getMeasuredWidth();<\/p>\n<p>besides, this ViewGroup didn&#8217;t take into account if the layout direction was from right-to-left (RTL), e.g. Arabic, Hebrew, etc&#8230;<\/p>\n<p>And finally, thanks a lot for this tutorial.<\/p>\n","parent":0},{"id":8216,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-09-21 14:33:00","content":"<p>Thanks for your comments.  Will update the tutorial accordingly. <\/p>\n","parent":8209}],"attachments":[{"id":9552,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Create-Custom-Layout-in-Android-by-Extending-ViewGroup-Class.png","slug":"create-custom-layout-in-android-by-extending-viewgroup-class","title":"Create Custom Layout in Android by Extending ViewGroup Class","description":"Create Custom Layout in Android by Extending ViewGroup Class","caption":"","parent":9550,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Create-Custom-Layout-in-Android-by-Extending-ViewGroup-Class.png","width":720,"height":1280},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Create-Custom-Layout-in-Android-by-Extending-ViewGroup-Class-620x1102.png","width":620,"height":1102},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Create-Custom-Layout-in-Android-by-Extending-ViewGroup-Class.png","width":720,"height":1280},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Create-Custom-Layout-in-Android-by-Extending-ViewGroup-Class.png","width":720,"height":1280},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Create-Custom-Layout-in-Android-by-Extending-ViewGroup-Class.png","width":720,"height":1280},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/08\/Create-Custom-Layout-in-Android-by-Extending-ViewGroup-Class.png","width":720,"height":1280}}}],"comment_count":2,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["6209"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3999481938"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"396d054805ade3f272be84afe3e22131\";s:5:\"pDate\";s:19:\"2015-08-03 16:41:35\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"618269572\";s:5:\"pDate\";s:19:\"2015-08-03 16:41:33\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"628244334354108416\";s:5:\"pDate\";s:19:\"2015-08-03 16:41:36\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":9543,"type":"post","slug":"how-to-monitor-textview-changes-in-android","url":"http:\/\/stacktips.com\/tutorials\/android\/how-to-monitor-textview-changes-in-android","status":"publish","title":"How to Monitor TextView Changes in Android","title_plain":"How to Monitor TextView Changes in Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Monitor TextView Changes in Android' data-link='http:\/\/stacktips.com\/tutorials\/android\/how-to-monitor-textview-changes-in-android' data-summary='In this tutorial we will see how to monitor the text changes in Android TextView or EditText. Some form based applications needs to continuously monitor for the text changes to perform the front end form validations. This can be achieved by implementing the android.text.TextWatcher interface.'><\/div>\n<p>In this tutorial we will see how to monitor the text changes in Android TextView or EditText.<\/p>\n<p>Some form based applications needs to continuously monitor for the text changes to perform the front end form validations. This can be achieved by implementing the <code>android.text.TextWatcher<\/code> interface.\u00a0The TextWatcher interface provides the following three callback methods, that are called while the textview is being updated.<\/p>\n<pre class=\"prettyprint lang-java\">public void beforeTextChanged(CharSequence s, int start, int count, int after);\r\npublic void onTextChanged(CharSequence s, int start, int before, int count);\r\npublic void afterTextChanged(Editable s);\r\n<\/pre>\n<p>The <code>beforeTextChanged()<\/code> and <code>onTextChanged()<\/code> methods are provided mainly as notifications, as shouldn&#8217;t make changes to the CharSequence in either of these methods. If you are attempting to intercept the text entered into the view, changes may be made when <code>afterTextChanged()<\/code> is called.<\/p>\n<p>First, you need to register a TextWatcher instance with a TextView, call the <code>textView.addTextChangedListener()<\/code> method. Notice from the syntax that more than one TextWatcher can be registered with a TextView. Now that we understand the methods to be used, let us examine the sample for the usage.<\/p>\n<h5>Count Characters on TextView Changes<\/h5>\n<p>A simple use of TextWatcher is to create a live character counter that follows an EditText as the user types or deletes information.<\/p>\n<pre class=\"prettyprint lang-java\">public class MyActivity extends Activity implements TextWatcher {\r\n\tprivate EditText text;\r\n\tprivate int textCount;\r\n\tprivate static final String TAG = \"MyActivity\";\r\n\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\t\/\/Create an EditText widget and add the watcher\r\n\t\teditText = new EditText(this);\r\n\t\teditText.addTextChangedListener(this);\r\n\t\tsetContentView(editText);\r\n\t}\r\n\r\n\t\/* TextWatcher Implementation Methods *\/\r\n\t@Override\r\n\tpublic void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\t    \r\n\t}\r\n\r\n\t@Override\r\n\tpublic void onTextChanged(CharSequence s, int start, int before, int count) {\r\n\t\ttextCount = editText.getText().length();\r\n\t\tsetTitle(String.valueOf(textCount));\r\n\t\tLog.e(TAG, String.valueOf(textCount))\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void afterTextChanged(Editable s) {\r\n\t    \r\n\t}\r\n}\r\n<\/pre>\n<p>Because our needs do not include modifying the text being inserted, we can read the count from <code>onTextChanged()<\/code>, which happens as soon as the text change occurs. The other methods are unused and left empty.<\/p>\n","excerpt":"<p>In this tutorial we will see how to monitor the text changes in Android TextView or EditText. Some form based applications needs to continuously monitor for the text changes to perform the front end form validations. This can be achieved by implementing the android.text.TextWatcher interface.<\/p>\n","date":"2015-07-31 15:44:36","modified":"2016-06-11 00:50:57","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":21,"slug":"android-ui","title":"Android UI","description":"","post_count":28},{"id":251,"slug":"edittext","title":"EditText","description":"","post_count":2},{"id":250,"slug":"textview","title":"TextView","description":"","post_count":1}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["2497"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3989514569"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"a96d8a6bc814032a88c99b78ab80baa4\";s:5:\"pDate\";s:19:\"2015-07-31 10:15:00\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"617218279\";s:5:\"pDate\";s:19:\"2015-07-31 10:15:00\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"627059894206631936\";s:5:\"pDate\";s:19:\"2015-07-31 10:15:03\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":9489,"type":"post","slug":"mac-os-x-window-screenshot-hacks","url":"http:\/\/stacktips.com\/how-to\/mac-os-x-window-screenshot-hacks","status":"publish","title":"Mac OS X Window Screenshot Hacks","title_plain":"Mac OS X Window Screenshot Hacks","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Mac OS X Window Screenshot Hacks' data-link='http:\/\/stacktips.com\/how-to\/mac-os-x-window-screenshot-hacks' data-summary='Mac OS provides an handy way of taking any window screenshot by using two commands; Command + Shift + 4 or Command + Shift + 4 + Spacebar. The following section in this post will guide you througn some of the tricks you can use for your convinience while capturing the window screenshot in Mac.'><\/div>\n<p>Mac OS provides an handy way of taking any window screenshot by using two commands; <strong>Command + Shift + 4<\/strong> or <strong>Command + Shift + 4 + Spacebar<\/strong>. The fist command allows you to drag the portion of screen you willing to capture the screenshot. The Command + Shift + 4 in combination of Spacebar, captures the screenshot of complete selected window.<\/p>\n<p>This post will guide you througn some of the tricks you can use for your convinience while capturing the window screenshot in Mac.<\/p>\n<h2>Change Screenshot Save Location<\/h2>\n<p>By defaly all the screenshots captured in Mac are saved as a transparent PNG file on Desktop. You can change the location to your desired folder using the following commands.<\/p>\n<pre>$ defaults write com.apple.screencapture location \/Users\/Neel\/Pictures\/screenshots<\/pre>\n<p>In the above command, I have selected screenshots folder inside Pictures directory. You can replace with your own desired location. For this command to take the immediately effect you need to restart the system UI by using the following commands.<\/p>\n<pre>$ killall SystemUIServer<\/pre>\n<h2>Remove Window Drop Shadow<\/h2>\n<p>The Command + Shift + 4 in combination of Spacebar, captures the screenshot of complete selected window. By defauly all the window screenshots includes drop shadow beneath the window. The following screenshot depicts a screenshow taken with shadow.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-With-Shadow.png\"><img class=\"aligncenter size-full wp-image-9491\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-With-Shadow.png\" alt=\"Mac OS X Screenshot With Shadow\" width=\"777\" height=\"549\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-With-Shadow.png 777w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-With-Shadow-300x212.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-With-Shadow-620x438.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-With-Shadow-370x261.png 370w\" sizes=\"(max-width: 777px) 100vw, 777px\" \/><\/a><\/p>\n<p>Shadow may be usesful at times but sometimes it causes real inconvenience. You can remove the window shadow by calling the following commands.<\/p>\n<pre>$ defaults write com.apple.screencapture disable-shadow -bool true<\/pre>\n<p>For this command to take the immediately effect you need to restart the system UI by using the following commands.<\/p>\n<pre>$ killall SystemUIServer<\/pre>\n<p>Now your window screenshot will not have any shadow.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-No-Shadow.png\"><img class=\"aligncenter size-full wp-image-9490\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-No-Shadow.png\" alt=\"Mac OS X Screenshot No Shadow\" width=\"665\" height=\"437\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-No-Shadow.png 665w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-No-Shadow-300x197.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-No-Shadow-620x407.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-No-Shadow-370x243.png 370w\" sizes=\"(max-width: 665px) 100vw, 665px\" \/><\/a><\/p>\n<p>If you willing to revert back the shadow background for window screenshot, you can use the following command.<\/p>\n<pre>$ defaults write com.apple.screencapture disable-shadow -bool false<\/pre>\n","excerpt":"<p>Mac OS provides an handy way of taking any window screenshot by using two commands; Command + Shift + 4 or Command + Shift + 4 + Spacebar. The following section in this post will guide you througn some of the tricks you can use for your convinience while capturing the window screenshot in Mac.<\/p>\n","date":"2015-07-24 16:19:45","modified":"2016-05-29 19:13:01","categories":[{"id":299,"slug":"how-to","title":"How-Tos","description":"","parent":0,"post_count":14}],"tags":[],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":9490,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-No-Shadow.png","slug":"mac-os-x-screenshot-no-shadow","title":"Mac OS X Screenshot No Shadow","description":"Mac OS X Screenshot No Shadow","caption":"","parent":9489,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-No-Shadow.png","width":665,"height":437},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-No-Shadow-620x407.png","width":620,"height":407},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-No-Shadow.png","width":665,"height":437},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-No-Shadow.png","width":665,"height":437},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-No-Shadow.png","width":665,"height":437},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-No-Shadow.png","width":665,"height":437},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-No-Shadow.png","width":665,"height":437}}},{"id":9491,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-With-Shadow.png","slug":"mac-os-x-screenshot-with-shadow","title":"Mac OS X Screenshot With Shadow","description":"Mac OS X Screenshot With Shadow","caption":"","parent":9489,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-With-Shadow.png","width":777,"height":549},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-With-Shadow-620x438.png","width":620,"height":438},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-With-Shadow.png","width":777,"height":549},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-With-Shadow.png","width":777,"height":549},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-With-Shadow.png","width":777,"height":549},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Mac-OS-X-Screenshot-With-Shadow.png","width":777,"height":549}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1750"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3966008164"],"snapImportedComments":["a:0:{}"],"minimaldog_user_IP":["a:1:{s:15:\"ip-82.41.97.126\";s:12:\"82.41.97.126\";}"],"minimaldog_post_like_count":["1"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"cccc2242c537015ea0edc65497ddfc0e\";s:5:\"pDate\";s:19:\"2015-07-24 10:50:06\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"614641643\";s:5:\"pDate\";s:19:\"2015-07-24 10:50:07\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"624531998569140224\";s:5:\"pDate\";s:19:\"2015-07-24 10:50:05\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/06\/Mac-OSX-Tutorials.png","width":541,"height":298},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/06\/Mac-OSX-Tutorials.png","width":541,"height":298},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/06\/Mac-OSX-Tutorials.png","width":541,"height":298},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/06\/Mac-OSX-Tutorials.png","width":541,"height":298},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/06\/Mac-OSX-Tutorials.png","width":541,"height":298},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/06\/Mac-OSX-Tutorials.png","width":541,"height":298},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/06\/Mac-OSX-Tutorials.png","width":541,"height":298}}},{"id":9478,"type":"post","slug":"performing-stress-test-in-android-using-monkey-application-exerciser","url":"http:\/\/stacktips.com\/tutorials\/android\/performing-stress-test-in-android-using-monkey-application-exerciser","status":"publish","title":"Performing Stress Test in Android Using  Monkey Application Exerciser","title_plain":"Performing Stress Test in Android Using  Monkey Application Exerciser","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Performing Stress Test in Android Using Monkey Application Exerciser' data-link='http:\/\/stacktips.com\/tutorials\/android\/performing-stress-test-in-android-using-monkey-application-exerciser' data-summary='The Monkey is a tool you run on your device to generate a random system level userr events. It generates the specified number of events without any user interaction. This is generally helpful for performing stress test. This tool generates the random events from set of commands and collect the crashes or memory reports.'><\/div>\n<p>The Monkey is a tool you run on your device to generate a random system level userr events. It generates the specified number of events without any user interaction. This is generally helpful for performing stress test. This tool generates the random events from set of commands and collect the crashes or memory reports.<\/p>\n<p>Note that this tool is not used for automation testing. This only helps to find the crashes that may not appear during regular use of application.<\/p>\n<p>This tool uses Android Device Bridge ADB toolkit. To run this command you need to provide the application package name and total number of random events that you want to generate. The following command shows how to start monkey tool.<\/p>\n<pre>$  adb shell monkey -p com.javatechig.myapp 5000<\/pre>\n<p>When you run this test, you can watch your device or emulator. You will notice random events on UI elements are being generated. When the application crashes, it will stop the exerciser and prints the report on terminal window. The following screenshot depicts a crash report while testing my application.<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Performing-Stress-Test-in-Android-Using-Monkey-Application-Exerciser.png\"><img class=\"aligncenter size-full wp-image-9480\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Performing-Stress-Test-in-Android-Using-Monkey-Application-Exerciser.png\" alt=\"Performing Stress Test in Android Using  Monkey Application Exerciser\" width=\"820\" height=\"455\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Performing-Stress-Test-in-Android-Using-Monkey-Application-Exerciser.png 820w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Performing-Stress-Test-in-Android-Using-Monkey-Application-Exerciser-300x166.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Performing-Stress-Test-in-Android-Using-Monkey-Application-Exerciser-620x344.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Performing-Stress-Test-in-Android-Using-Monkey-Application-Exerciser-800x444.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Performing-Stress-Test-in-Android-Using-Monkey-Application-Exerciser-370x205.png 370w\" sizes=\"(max-width: 820px) 100vw, 820px\" \/><\/a><\/p>\n<p>There are a variety of ways to control the behavior of Monkey tool by passing different arguments. Let us go through some of the important ones.<\/p>\n<p>You can see a complete list of all options by typing:<\/p>\n<pre>$  adb shell monkey --help<\/pre>\n<p>You must have noticed in the previous command, when the Monkey starts, it always starts the default application of the package specified. However in some cases your application may depend on some other third party apps such as device native camera to capture photo or integrating with Google Maps. For such cases, any event that launches something external will be dropped by default by Monkey tool.<\/p>\n<p>This behavior can be controlled by providing an additional package -p argument to the Monkey command.<\/p>\n<pre>$  adb shell monkey -p com.javatechig.myapp -p com.google.map 5000<\/pre>\n<p>Now let us run the Monkey tool more intelligently by controlling the type of events that are triggered. For example if you want to ensure that 30 percent of the events are touch events, ypou need to specify the &#8211;pct-touch argument as follows.<\/p>\n<pre>$  adb shell monkey --pct-touch 30 -p com.javatechig.myapp 5000<\/pre>\n","excerpt":"<p>The Monkey is a tool you run on your device to generate a random system level userr events. It generates the specified number of events without any user interaction. This is generally helpful for performing stress test. This tool generates the random events from set of commands and collect the crashes or memory reports.<\/p>\n","date":"2015-07-24 14:58:00","modified":"2015-07-24 15:19:16","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":242,"slug":"monkey","title":"Monkey","description":"","post_count":1},{"id":241,"slug":"testing","title":"Testing","description":"","post_count":4}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":9480,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Performing-Stress-Test-in-Android-Using-Monkey-Application-Exerciser.png","slug":"performing-stress-test-in-android-using-monkey-application-exerciser-2","title":"Performing Stress Test in Android Using  Monkey Application Exerciser","description":"Performing Stress Test in Android Using  Monkey Application Exerciser","caption":"","parent":9478,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Performing-Stress-Test-in-Android-Using-Monkey-Application-Exerciser.png","width":820,"height":455},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Performing-Stress-Test-in-Android-Using-Monkey-Application-Exerciser-620x344.png","width":620,"height":344},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Performing-Stress-Test-in-Android-Using-Monkey-Application-Exerciser.png","width":820,"height":455},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Performing-Stress-Test-in-Android-Using-Monkey-Application-Exerciser.png","width":820,"height":455},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Performing-Stress-Test-in-Android-Using-Monkey-Application-Exerciser.png","width":820,"height":455}}},{"id":9481,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","slug":"android-monkey-application-exerciser-thumbnail","title":"Android Monkey Application Exerciser Thumbnail","description":"","caption":"","parent":9478,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","width":500,"height":277},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","width":500,"height":277},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","width":500,"height":277},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","width":500,"height":277},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","width":500,"height":277},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","width":500,"height":277},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","width":500,"height":277}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["3750"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3965837950"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"63a8377a0601c688e6dba667db9e83da\";s:5:\"pDate\";s:19:\"2015-07-24 09:28:33\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"614621758\";s:5:\"pDate\";s:19:\"2015-07-24 09:28:36\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"624511487994802177\";s:5:\"pDate\";s:19:\"2015-07-24 09:28:35\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","width":500,"height":277},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","width":500,"height":277},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","width":500,"height":277},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","width":500,"height":277},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","width":500,"height":277},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","width":500,"height":277},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Monkey-Application-Exerciser-Thumbnail.png","width":500,"height":277}}},{"id":9436,"type":"post","slug":"installing-google-play-services-in-genymotion-emulator","url":"http:\/\/stacktips.com\/how-to\/installing-google-play-services-in-genymotion-emulator","status":"publish","title":"Installing Google Play Services in Genymotion Emulator","title_plain":"Installing Google Play Services in Genymotion Emulator","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Installing Google Play Services in Genymotion Emulator' data-link='http:\/\/stacktips.com\/how-to\/installing-google-play-services-in-genymotion-emulator' data-summary='The Genymotion for Android is considered to be an fastest Android emulator alternative for testing Android applications. By default Genymotion doesnt directly include the Google Play Services. This post explains the instructions for installing Google Play Services in the Genymotion emulator.'><\/div>\n<p>The Genymotion for Android is considered to be an fastest Android emulator alternative for testing Android applications. By default Genymotion doesnt directly include the Google Play Services. This means that some of the Android features\u00a0such as Google Map, require Google play service cannot be tested on the Genymotion emulator.<\/p>\n<p>However, it allows you to install the required Google Play Services by yourself. This post explains the instructions for installing Google Play Services in the Genymotion emulator.<\/p>\n<ol>\n<li>It is assumed you already have the Genymotion emulator installed and have download one or more of the supported device images.<\/li>\n<li>Start the Genymotion Virtual device you have configured. In this post, I have configured Google Nexus6 Android version 5.0.<\/li>\n<\/ol>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Genymotion-Emulator-Manager.png\"><img class=\"aligncenter size-full wp-image-9446\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Genymotion-Emulator-Manager.png\" alt=\"Genymotion Emulator Manager\" width=\"802\" height=\"624\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Genymotion-Emulator-Manager.png 802w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Genymotion-Emulator-Manager-300x233.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Genymotion-Emulator-Manager-620x482.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Genymotion-Emulator-Manager-800x622.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Genymotion-Emulator-Manager-370x288.png 370w\" sizes=\"(max-width: 802px) 100vw, 802px\" \/><\/a><\/p>\n<ol start=\"3\">\n<li>Download the appropriate version of Google Play Services .zip file from <a href=\"http:\/\/www.teamandroid.com\/gapps\/\" target=\"_blank\">www.teamandroid.com\/gapps\/<\/a>. Make sure to download the Google Play Services version same as your virtual device Android version.<\/li>\n<li>Drag the .zip file onto the running virtual device and drop it to install the component, here we show it on Mac OS X, but the same mechanism is used in Windows. Notice that, a dialog will appear and show as file transfer in progress, then another dialog will appear and ask that do you want to flash it on the emulator.<\/li>\n<\/ol>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Installing-Google-Play-Services-in-Genymotion-Emulator.png\"><img class=\"aligncenter size-full wp-image-9448\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Installing-Google-Play-Services-in-Genymotion-Emulator.png\" alt=\"Installing Google Play Services in Genymotion Emulator\" width=\"422\" height=\"175\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Installing-Google-Play-Services-in-Genymotion-Emulator.png 422w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Installing-Google-Play-Services-in-Genymotion-Emulator-300x124.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Installing-Google-Play-Services-in-Genymotion-Emulator-370x153.png 370w\" sizes=\"(max-width: 422px) 100vw, 422px\" \/><\/a><\/p>\n<ol start=\"3\">\n<li>Click OK and reboot the virtual device.<\/li>\n<li>Reboot the virtual device and notice that Google Apps will be in the emulator.\u00a0Now you can run applications that depend on Google Play Service API.<\/li>\n<\/ol>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Google-Play-Services-installed-in-Genymotion-Emulator.png\"><img class=\"aligncenter wp-image-9447 size-thumbnail\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Google-Play-Services-installed-in-Genymotion-Emulator-300x502.png\" alt=\"Google Play Services installed in Genymotion Emulator\" width=\"300\" height=\"502\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Google-Play-Services-installed-in-Genymotion-Emulator-300x502.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Google-Play-Services-installed-in-Genymotion-Emulator-370x619.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Google-Play-Services-installed-in-Genymotion-Emulator.png 582w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p>\n<p><strong>Note: <\/strong>Google Apps Services may crash frequently and stopped working. This means you may need to upgrade al required Google Apos from Play Store.<\/p>\n","excerpt":"<p>The Genymotion for Android is considered to be an fastest Android emulator alternative for testing Android applications. By default Genymotion doesnt directly include the Google Play Services. This post explains the instructions for installing Google Play Services in the Genymotion emulator.<\/p>\n","date":"2015-07-23 21:44:22","modified":"2016-05-29 19:15:57","categories":[{"id":299,"slug":"how-to","title":"How-Tos","description":"","parent":0,"post_count":14}],"tags":[{"id":238,"slug":"emulator","title":"Emulator","description":"","post_count":2},{"id":239,"slug":"genymotion","title":"Genymotion","description":"","post_count":2}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":9445,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services.png","slug":"google-play-services","title":"google-play-services","description":"","caption":"","parent":9436,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services.png","width":705,"height":345},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services-620x303.png","width":620,"height":303},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services.png","width":705,"height":345},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services.png","width":705,"height":345},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services.png","width":705,"height":345},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services.png","width":705,"height":345},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services.png","width":705,"height":345}}},{"id":9446,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Genymotion-Emulator-Manager.png","slug":"genymotion-emulator-manager","title":"Genymotion Emulator Manager","description":"Genymotion Emulator Manager","caption":"","parent":9436,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Genymotion-Emulator-Manager.png","width":802,"height":624},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Genymotion-Emulator-Manager-620x482.png","width":620,"height":482},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Genymotion-Emulator-Manager.png","width":802,"height":624},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Genymotion-Emulator-Manager.png","width":802,"height":624},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Genymotion-Emulator-Manager.png","width":802,"height":624},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Genymotion-Emulator-Manager.png","width":802,"height":624}}},{"id":9447,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Google-Play-Services-installed-in-Genymotion-Emulator.png","slug":"google-play-services-installed-in-genymotion-emulator","title":"Google Play Services installed in Genymotion Emulator","description":"Google Play Services installed in Genymotion Emulator","caption":"","parent":9436,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Google-Play-Services-installed-in-Genymotion-Emulator.png","width":582,"height":974},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Google-Play-Services-installed-in-Genymotion-Emulator.png","width":582,"height":974},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Google-Play-Services-installed-in-Genymotion-Emulator.png","width":582,"height":974},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Google-Play-Services-installed-in-Genymotion-Emulator.png","width":582,"height":974},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Google-Play-Services-installed-in-Genymotion-Emulator.png","width":582,"height":974},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Google-Play-Services-installed-in-Genymotion-Emulator.png","width":582,"height":974}}},{"id":9448,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Installing-Google-Play-Services-in-Genymotion-Emulator.png","slug":"installing-google-play-services-in-genymotion-emulator","title":"Installing Google Play Services in Genymotion Emulator","description":"Installing Google Play Services in Genymotion Emulator","caption":"","parent":9436,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Installing-Google-Play-Services-in-Genymotion-Emulator.png","width":422,"height":175},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Installing-Google-Play-Services-in-Genymotion-Emulator.png","width":422,"height":175},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Installing-Google-Play-Services-in-Genymotion-Emulator.png","width":422,"height":175},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Installing-Google-Play-Services-in-Genymotion-Emulator.png","width":422,"height":175},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Installing-Google-Play-Services-in-Genymotion-Emulator.png","width":422,"height":175},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Installing-Google-Play-Services-in-Genymotion-Emulator.png","width":422,"height":175},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Installing-Google-Play-Services-in-Genymotion-Emulator.png","width":422,"height":175}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:6:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:10:\"show_image\";s:4:\"true\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["6877"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3963419517"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"54545ee43c1c7ad4448962551709bff8\";s:5:\"pDate\";s:19:\"2015-07-23 16:14:54\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"614357174\";s:5:\"pDate\";s:19:\"2015-07-23 16:14:56\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"624251340638699520\";s:5:\"pDate\";s:19:\"2015-07-23 16:14:51\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services.png","width":705,"height":345},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services-620x303.png","width":620,"height":303},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services.png","width":705,"height":345},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services.png","width":705,"height":345},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services.png","width":705,"height":345},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services.png","width":705,"height":345},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/google-play-services.png","width":705,"height":345}}},{"id":9415,"type":"post","slug":"alertdialog-and-dialogfragment-example-in-xamarin-android","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/alertdialog-and-dialogfragment-example-in-xamarin-android","status":"publish","title":"AlertDialog and DialogFragment Example  in Xamarin Android","title_plain":"AlertDialog and DialogFragment Example  in Xamarin Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='AlertDialog and DialogFragment Example in Xamarin Android' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/alertdialog-and-dialogfragment-example-in-xamarin-android' data-summary='This example explains how to create AlertDialog and DialogFragment in Xamarin Android. Android supports several different ways to create a dialog such as AlertDialog and FragmentDialog.'><\/div>\n<p>Dialog is like any other window that pops up in front of current window, used to show some short message, taking user input or to ask user decisions. Unlike <code>Toast<\/code>, a dialog is generally used where user attention is mandate. Android supports several different ways to create a dialog such as <code>AlertDialog<\/code> and <code>FragmentDialog<\/code>. In this example we will cover all the aspect of AlertDialog and DialogFragment.<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-using-alertdialog-in-xamarinandroid\">1. Using AlertDialog in Xamarin.Android<\/a><\/li><li><a href=\"#2-using-dialogfragment-in-xamarinandroid\">2. Using DialogFragment in Xamarin.Android<\/a><\/li><li><a href=\"#3dialog-fragment-using-oncreatedialog\">3.\u00a0Dialog fragment using OnCreateDialog()<\/a><\/li><li><a href=\"#4dialog-fragment-using-oncreateview\">4.\u00a0Dialog fragment using OnCreateView()<\/a><\/li><li><a href=\"#5-adding-dialogfragment\">5. Adding DialogFragment<\/a><\/li><\/ul><\/div>\n<\/p>\n<h2><span id=\"1-using-alertdialog-in-xamarinandroid\">1. Using AlertDialog in Xamarin.Android<\/span><\/h2>\n<p><code>AlertDialog<\/code> is the subclass of <code>Dialog<\/code> that can display one, two or three buttons. If you only want to display a String in this dialog box, use the <code>SetMessage()<\/code> method.<\/p>\n<p>The following code snippet can be used to create a simple AlertDialog with two buttons Delete and Cancel.<\/p>\n<pre class=\"prettyprint lang-cs\">\/\/set alert for executing the task\r\nAlertDialog.Builder alert = new AlertDialog.Builder (this);\r\nalert.SetTitle (\"Confirm delete\");\r\nalert.SetMessage (\"Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\");\r\nalert.SetPositiveButton (\"Delete\", (senderAlert, args) =&gt; {\r\n\tToast.MakeText(this ,\"Deleted!\" , ToastLength.Short).Show();\r\n});\r\n\r\nalert.SetNegativeButton (\"Cancel\", (senderAlert, args) =&gt; {\r\n\tToast.MakeText(this ,\"Cancelled!\" , ToastLength.Short).Show();\r\n});\r\n\r\nDialog dialog = alert.Create();\r\ndialog.Show();\r\n<\/pre>\n<p>The above code snippet will produce the output as shown in the following screenshot.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android.png\"><img class=\" wp-image-9420 size-thumbnail aligncenter\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android-300x533.png\" alt=\"AlertDialog in Xamarin Android\" width=\"300\" height=\"533\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android-300x533.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android-620x1102.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android-370x658.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android.png 720w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p>\n<h2><span id=\"2-using-dialogfragment-in-xamarinandroid\">2. Using DialogFragment in Xamarin.Android<\/span><\/h2>\n<p>Since the release of <strong>Android 3.0 (API level 11)<\/strong>, fragment can show as a dialog and called as <code>DialogFragment<\/code>. If you\u2019re supporting older android versions, you can make use of fragment-compatibility support library.<\/p>\n<p>To create a dialog fragment, we will be using DialogFragment class. This class is derived from the Fragment and behaves much like a fragment with all available fragment life cycle methods. Android recemends to use DialogFragment over AlerDialog.<\/p>\n<p>You need to perfrom the following steps to create a DialogFragment<\/p>\n<ul>\n<li>Create a new class that extends from DialogFragment class.<\/li>\n<li>Like regular Fragments, override <code>OnCreateView()<\/code> callback to attach the dialog layout.<\/li>\n<li>Alternatively, you can override <code>OnCreateDialog()<\/code> method and return a Dialog instance. This method is used to port your old AlertDialog code without much of modification.<\/li>\n<\/ul>\n<p>In this example, we will see both OnCreateView() and OnCreateDialog() callback.<\/p>\n<h2><span id=\"3dialog-fragment-using-oncreatedialog\">3.\u00a0Dialog fragment using OnCreateDialog()<\/span><\/h2>\n<p>The following code snipept shows how to create dialog by overriding OnCreateDialog() method.<\/p>\n<pre class=\"prettyprint lang-cs\">using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing Android.App;\r\nusing Android.Content;\r\nusing Android.OS;\r\nusing Android.Runtime;\r\nusing Android.Util;\r\nusing Android.Views;\r\nusing Android.Widget;\r\n\r\nnamespace DialogExample\r\n{\r\n\tpublic class DialogFragment2 : DialogFragment\r\n\t{\r\n\t\tpublic static DialogFragment2 NewInstance(Bundle bundle){\r\n\t\t\tDialogFragment2 fragment = new DialogFragment2 ();\r\n\t\t\tfragment.Arguments = bundle;\r\n\t\t\treturn fragment;\r\n\t\t}\r\n\r\n\t\tpublic override Dialog OnCreateDialog (Bundle savedInstanceState)\r\n\t\t{\r\n\t\t\tAlertDialog.Builder alert = new AlertDialog.Builder (Activity);\r\n\t\t\talert.SetTitle (\"Confirm delete\");\r\n\t\t\talert.SetMessage (\"Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\");\r\n\t\t\talert.SetPositiveButton (\"Delete\", (senderAlert, args) =&gt; {\r\n\t\t\t\tToast.MakeText(Activity ,\"Deleted!\" , ToastLength.Short).Show();\r\n\t\t\t});\r\n\r\n\t\t\talert.SetNegativeButton (\"Cancel\", (senderAlert, args) =&gt; {\r\n\t\t\t\tToast.MakeText(Activity ,\"Cancelled!\" , ToastLength.Short).Show();\r\n\t\t\t});\r\n\r\n\t\t\treturn alert.Create();\r\n\t\t}\r\n\t}\r\n}\r\n<\/pre>\n<h2><span id=\"4dialog-fragment-using-oncreateview\">4.\u00a0Dialog fragment using OnCreateView()<\/span><\/h2>\n<p>DialogFragment is like any other fragment, the same lifecycle rules are applied. Now we have to override onCreateView method to attach the layout to view hierarchy and construct the dialog fragment.<\/p>\n<p>Let us first define the layout for your fragment. In this example, I have used two TextViews and Button. My layout looks as follows:<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:orientation=\"vertical\"\r\n    android:layout_width=\"fill_parent\"\r\n    android:layout_height=\"fill_parent\"\r\n    android:padding=\"10dp\"&gt;\r\n    &lt;TextView\r\n        android:text=\"Lorem ipsum\"\r\n        android:textAppearance=\"?android:attr\/textAppearanceLarge\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id\/textView1\" \/&gt;\r\n    &lt;TextView\r\n        android:text=\"Lorem ipsum dolor sit amet, consectetuer adipiscing elit....\"\r\n        android:textAppearance=\"?android:attr\/textAppearanceSmall\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id\/textView2\"\r\n        android:layout_marginTop=\"10dp\" \/&gt;\r\n    &lt;Button\r\n        android:text=\"Close\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id\/CloseButton\"\r\n        android:layout_marginTop=\"10dp\" \/&gt;\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<p>Now let us inflate the layout from OnCreateView() method. My DialogFragment class looks as follows:<\/p>\n<pre class=\"prettyprint lang-cs\">using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing Android.App;\r\nusing Android.Content;\r\nusing Android.OS;\r\nusing Android.Runtime;\r\nusing Android.Util;\r\nusing Android.Views;\r\nusing Android.Widget;\r\n\r\nnamespace DialogExample\r\n{\r\n\tpublic class DialogFragment1 : DialogFragment\r\n\t{\r\n\t\tpublic static DialogFragment1 NewInstance(Bundle bundle){\r\n\t\t\tDialogFragment1 fragment = new DialogFragment1 ();\r\n\t\t\tfragment.Arguments = bundle;\r\n\t\t\treturn fragment;\r\n\t\t}\r\n\r\n\t\tpublic override View OnCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)\r\n\t\t{\r\n\t\t\t\/\/ Use this to return your custom view for this Fragment\r\n\t\t\tView view =  inflater.Inflate(Resource.Layout.DialogFragment1Layout, container, false);\r\n\t\t\tButton button = view.FindViewById&lt;Button&gt; (Resource.Id.CloseButton);\r\n\t\t\tbutton.Click += delegate {\r\n\t\t\t\tDismiss();\r\n\t\t\t\tToast.MakeText(Activity ,\"Dialog fragment dismissed!\" , ToastLength.Short).Show();\r\n\t\t\t};\r\n\r\n\t\t\treturn view;\r\n\t\t}\r\n\t}\r\n}\r\n<\/pre>\n<p>The above code snippet will produce the output as shown in the following screenshot.<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/DialogFragment-in-Xamarin-Android.png\"><img class=\" size-thumbnail wp-image-9421 aligncenter\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/DialogFragment-in-Xamarin-Android-300x533.png\" alt=\"DialogFragment in Xamarin Android\" width=\"300\" height=\"533\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/DialogFragment-in-Xamarin-Android-300x533.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/DialogFragment-in-Xamarin-Android-620x1102.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/DialogFragment-in-Xamarin-Android-370x658.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/DialogFragment-in-Xamarin-Android.png 720w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p>\n<h2><span id=\"5-adding-dialogfragment\">5. Adding DialogFragment<\/span><\/h2>\n<p>We are pretty much done!. Add the following code snippet in your Activity to instantiate and display the dialog;<\/p>\n<pre class=\"prettyprint lang-cs\">FragmentTransaction ft = FragmentManager.BeginTransaction();\r\n\/\/Remove fragment else it will crash as it is already added to backstack\r\nFragment prev = FragmentManager.FindFragmentByTag(\"dialog\");\r\nif (prev != null) {\r\n\tft.Remove(prev);\r\n}\r\n\r\nft.AddToBackStack(null);\r\n\r\n\/\/ Create and show the dialog.\r\nDialogFragment1 newFragment = DialogFragment1.NewInstance(null);\r\n\r\n\/\/Add fragment\r\nnewFragment.Show(ft, \"dialog\");\r\n<\/pre>\n<p>The above code snippet will produce the output as shown in the following screenshot.<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android.png\"><img class=\"aligncenter size-thumbnail wp-image-9420\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android-300x533.png\" alt=\"AlertDialog in Xamarin Android\" width=\"300\" height=\"533\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android-300x533.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android-620x1102.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android-370x658.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android.png 720w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p>\n","excerpt":"<p>This example explains how to create AlertDialog and DialogFragment  in Xamarin Android. Android supports several different ways to create a dialog such as AlertDialog and FragmentDialog.<\/p>\n","date":"2015-07-13 22:23:55","modified":"2015-07-28 22:33:41","categories":[{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":9420,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android.png","slug":"alertdialog-in-xamarin-android","title":"AlertDialog in Xamarin Android","description":"AlertDialog in Xamarin Android","caption":"","parent":9415,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android.png","width":720,"height":1280},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android-620x1102.png","width":620,"height":1102},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android.png","width":720,"height":1280},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android.png","width":720,"height":1280},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android.png","width":720,"height":1280},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/AlertDialog-in-Xamarin-Android.png","width":720,"height":1280}}},{"id":9421,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/DialogFragment-in-Xamarin-Android.png","slug":"dialogfragment-in-xamarin-android","title":"DialogFragment in Xamarin Android","description":"DialogFragment in Xamarin Android","caption":"","parent":9415,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/DialogFragment-in-Xamarin-Android.png","width":720,"height":1280},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/DialogFragment-in-Xamarin-Android-620x1102.png","width":620,"height":1102},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/DialogFragment-in-Xamarin-Android.png","width":720,"height":1280},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/DialogFragment-in-Xamarin-Android.png","width":720,"height":1280},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/DialogFragment-in-Xamarin-Android.png","width":720,"height":1280},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/DialogFragment-in-Xamarin-Android.png","width":720,"height":1280}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["5000"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3930759134"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"46e02efc84f73c4bc90eba03ed7876bd\";s:5:\"pDate\";s:19:\"2015-07-13 16:54:09\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"610605741\";s:5:\"pDate\";s:19:\"2015-07-13 16:54:10\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"620637335806324737\";s:5:\"pDate\";s:19:\"2015-07-13 16:54:08\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}},{"id":9339,"type":"post","slug":"android-cardview-example","url":"http:\/\/stacktips.com\/tutorials\/android\/android-cardview-example","status":"publish","title":"Android CardView Example","title_plain":"Android CardView Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android CardView Example' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-cardview-example' data-summary=''><\/div>\n<p>The recent release of Android support library <code>(v7:21.0.+)<\/code> has introduced two new user interface widget: <code>RecyclerView<\/code> and <code>CardView<\/code> that helps in building rich Android apps.<\/p>\n<p>The <code>RecyclerView<\/code> is more advanced and flexible and efficient version of ListView. RecyclerView ViewGroup is an container for larger data set of views that can be recycled and scrolled very efficiently. RecyclerView can be used for larger datasets to be rendered on the UI like a list. RecyclerView provides maximum flexibility to design different kind of views. Click here to read more about <a href=\"http:\/\/stacktips.com\/android\/android-recyclerview-example\">Android RecyclerView<\/a> example.<\/p>\n<p>In the other hand the <code>CardView<\/code> widget, is an extension of existing FrameLayout class. This helps to wrap other UI elements as Google style cards. CardView widgets can have shadows and rounded corners. The following image shows example Google card design used Google Now application.<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Googe-Now-Cards.jpg\"><img class=\"aligncenter size-full wp-image-9343\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Googe-Now-Cards.jpg\" alt=\"Google Now Cards\" width=\"635\" height=\"375\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Googe-Now-Cards.jpg 635w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Googe-Now-Cards-300x177.jpg 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Googe-Now-Cards-620x366.jpg 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Googe-Now-Cards-370x219.jpg 370w\" sizes=\"(max-width: 635px) 100vw, 635px\" \/><\/a><\/p>\n<h2>Add CardView Support Library<\/h2>\n<p>Android SDK doesn\u2019t includes the CardView class, and hence for using CardView in your project you first need to add the card view support library to your project. Android Studio users can add the following graddle dependency in your <code>build.graddle<\/code> file to add CardView to project.<\/p>\n<pre class=\"prettyprint lang-java\">dependencies {\r\n       compile 'com.android.support:cardview-v7:21.0.+'\r\n}\r\n<\/pre>\n<h2>Declare CardView Layout<\/h2>\n<p>Now that we have added the build dependencies to project, let us go ahead to declare the CardView layout. In this example, we will add an ImageView and two TextViews as shown in the following screenshot.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;android.support.v7.widget.CardView xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:id=\"@+id\/card_view\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"380dp\"\r\n    android:layout_margin=\"8dp\"&gt;\r\n\r\n    &lt;RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"&gt;\r\n\r\n        &lt;ImageView\r\n            android:id=\"@+id\/thumbnail\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"250dp\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:scaleType=\"centerCrop\"\r\n            android:src=\"@drawable\/wallpaper\" \/&gt;\r\n\r\n        &lt;TextView\r\n            android:id=\"@+id\/title\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id\/thumbnail\"\r\n            android:maxLines=\"3\"\r\n            android:padding=\"8dp\"\r\n            android:text=\"@string\/title\"\r\n            android:textColor=\"#222\"\r\n            android:textStyle=\"bold\"\r\n            android:textSize=\"22dp\" \/&gt;\r\n\r\n        &lt;TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id\/title\"\r\n            android:maxLines=\"3\"\r\n            android:padding=\"8dp\"\r\n            android:text=\"@string\/description\"\r\n            android:textColor=\"#666\"\r\n            android:textSize=\"14dp\" \/&gt;\r\n\r\n    &lt;\/RelativeLayout&gt;\r\n&lt;\/android.support.v7.widget.CardView&gt;<\/pre>\n<p>The output of the above code is as follows<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-CardVeiw-Example.png\"><img class=\"aligncenter wp-image-9340 size-thumbnail\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-CardVeiw-Example-e1435760917628-300x329.png\" alt=\"Android CardVeiw Example\" width=\"300\" height=\"329\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-CardVeiw-Example-e1435760917628-300x329.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-CardVeiw-Example-e1435760917628-370x406.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-CardVeiw-Example-e1435760917628.png 409w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p>\n<h2>Customize CardView Appearance<\/h2>\n<p>The CardView layout declaration is pretty straight forward. Let us now take a look into using some of the specific CardView attributes for customization. CardView widget allows you to control the background color, shadow, corner radius etc.\u00a0For using the custom attributes in XML, you need to add the following namespace declaration to your layout parent.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;android.support.v7.widget.CardView \r\n    xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    xmlns:tools=\"http:\/\/schemas.android.com\/tools\"\r\n    xmlns:cardView=\"http:\/\/schemas.android.com\/apk\/res-auto\"\r\n\t... &gt;\r\n\r\n\t\t... \r\n\t\t....\r\n&lt;\/android.support.v7.widget.CardView&gt;\r\n<\/pre>\n<p>Now let us use the following <code>CardView<\/code> properties to customize the appearance of the CardView<\/p>\n<ul>\n<li>To set the corner radius in your layouts, use the <code>cardView:cardCornerRadius<\/code> attribute. To set the corner radius in your code, use the <code>cardView.setRadius<\/code> method.<\/li>\n<li>To set the background color of a card, use the <code>cardView:cardBackgroundColor<\/code> attribute.<\/li>\n<\/ul>\n","excerpt":"<p>The recent release of Android support library (v7:21.0.+) has introduced two new user interface widget: RecyclerView and CardView that helps in building rich Android apps. The RecyclerView is more advanced and flexible and efficient version of ListView. RecyclerView ViewGroup is an container for larger data set of views that can be recycled and scrolled very [&hellip;]<\/p>\n","date":"2015-07-01 20:00:50","modified":"2015-07-28 22:30:03","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":148,"slug":"androidl","title":"AndroidL","description":"","post_count":2},{"id":165,"slug":"material-design","title":"Material Design","description":"","post_count":3}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8266,"name":"Macharia","url":"","date":"2015-10-15 15:52:00","content":"<p>How about integrating it with recycler view&#8230;,<\/p>\n","parent":0},{"id":8480,"name":"Mohamed","url":"","date":"2016-04-12 20:24:00","content":"<p>we use &#8220;sp&#8221; with text size, don&#8217;t we?<\/p>\n","parent":0}],"attachments":[{"id":9340,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-CardVeiw-Example.png","slug":"android-cardveiw-example","title":"Android CardVeiw Example","description":"Android CardVeiw Example","caption":"","parent":9339,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-CardVeiw-Example-e1435760917628.png","width":409,"height":449},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-CardVeiw-Example-620x514.png","width":620,"height":514},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-CardVeiw-Example-e1435760917628.png","width":409,"height":449},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-CardVeiw-Example-e1435760917628.png","width":409,"height":449},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-CardVeiw-Example-e1435760917628.png","width":409,"height":449},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-CardVeiw-Example-e1435760917628.png","width":409,"height":449},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-CardVeiw-Example-e1435760917628.png","width":409,"height":449}}},{"id":9343,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Googe-Now-Cards.jpg","slug":"googe-now-cards","title":"Googe Now Cards","description":"Googe Now Cards","caption":"","parent":9339,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Googe-Now-Cards.jpg","width":635,"height":375},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Googe-Now-Cards-620x366.jpg","width":620,"height":366},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Googe-Now-Cards.jpg","width":635,"height":375},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Googe-Now-Cards.jpg","width":635,"height":375},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Googe-Now-Cards.jpg","width":635,"height":375},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Googe-Now-Cards.jpg","width":635,"height":375},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Googe-Now-Cards.jpg","width":635,"height":375}}}],"comment_count":2,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["9655"],"fsb_social_facebook":["7"],"fsb_social_twitter":["4"],"fsb_social_google":["2"],"fsb_social_linkedin":["0"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3895254088"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-07-01 14:31:21\";}}\";"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"531d962e5192182f1267f28288859bb2\";s:5:\"pDate\";s:19:\"2015-07-01 14:31:23\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"606333226\";s:5:\"pDate\";s:19:\"2015-07-01 14:31:22\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"616252766067929088\";s:5:\"pDate\";s:19:\"2015-07-01 14:31:24\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":9305,"type":"post","slug":"using-custom-activity-transition-in-gridview-image-gallery","url":"http:\/\/stacktips.com\/tutorials\/android\/using-custom-activity-transition-in-gridview-image-gallery","status":"publish","title":"Using Custom Activity Transition in GridView Image Gallery","title_plain":"Using Custom Activity Transition in GridView Image Gallery","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Using Custom Activity Transition in GridView Image Gallery' data-link='http:\/\/stacktips.com\/tutorials\/android\/using-custom-activity-transition-in-gridview-image-gallery' data-summary='In this example, we will see how to create custom window animation that makes sense to user. We will extend our previous GridView example, to create custom bitmap scale animation when user clicks on a thumbnail in GridView.'><\/div>\n<p>In this example, we will see how to create custom window animation that makes sense to user. We will extend our previous <a href=\"http:\/\/stacktips.com\/android\/download-and-display-image-in-android-gridview\">GridView example,<\/a> to create custom bitmap scale animation when user clicks on a thumbnail in GridView.<\/p>\n<p>Let us now take a look at the following demo. Notice that when we click on the thumbnail on GridView, it opens\u00a0the sub activity that displays an <code>ImageView<\/code> and <code>TextView<\/code>. The thumbnail image gets zoomed up and scales to\u00a0full view in details activity. When user clicks back button to return to <code>GridView<\/code>, it again scales down to the original position.<\/p>\n<div class=\"embed\"><iframe width=\"810\" height=\"608\" src=\"https:\/\/www.youtube.com\/embed\/smIWHeXZmFU?feature=oembed\" frameborder=\"0\" allowfullscreen><\/iframe><\/div>\n<p>To achieve this kind animation, we need to follow the the following steps<\/p>\n<ul>\n<li>Override the default window animation with our own custom animation for both enter and exit transitions.<\/li>\n<li>When user clicks on a GridView item, capture the details of thumbnail such as top and left distance, width, height, title and the url of the image to display. Package all the details and pass the extra information to <code>DetailsActivity<\/code>.<\/li>\n<li>Launch activity transparently so that we see the thumbnail gets zoomed. We can control the background alpha animation to set the image background.<\/li>\n<li>Write your own enter and exit transition on DetailsActivity.<\/li>\n<\/ul>\n<h2>1. Capture and send the thumbnail details<\/h2>\n<p>Let us implement\u00a0mGridView.setOnItemClickListener to handle click event on GridView. When user clicks on any grid items, get the image thumbnail at that position. Extract the information such as position, width and height and pass to DetailsActivity <code>intent<\/code> bundle.<\/p>\n<pre class=\"prettyprint lang-java\">mGridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n    public void onItemClick(AdapterView&lt;?&gt; parent, View v, int position, long id) {\r\n        GridItem item = (GridItem) parent.getItemAtPosition(position);\r\n        ImageView imageView = (ImageView) v.findViewById(R.id.grid_item_image);\r\n\r\n        Intent intent = new Intent(GridViewActivity.this, DetailsActivity.class);\r\n        int[] screenLocation = new int[2];\r\n        imageView.getLocationOnScreen(screenLocation);\r\n\r\n        \/\/Pass the image title and url to DetailsActivity\r\n        intent.putExtra(\"left\", screenLocation[0]).\r\n                putExtra(\"top\", screenLocation[1]).\r\n                putExtra(\"width\", imageView.getWidth()).\r\n                putExtra(\"height\", imageView.getHeight()).\r\n                putExtra(\"title\", item.getTitle()).\r\n                putExtra(\"image\", item.getImage());\r\n\r\n        startActivity(intent);\r\n    }\r\n});\r\n<\/pre>\n<h2>2. Read bundle data passed form intent<\/h2>\n<p>This is straight forward. Just read all the bundle data passed form GridView activity.<\/p>\n<pre class=\"prettyprint lang-java\">\/\/retrieves the thumbnail data\r\nBundle bundle = getIntent().getExtras();\r\nthumbnailTop = bundle.getInt(\"top\");\r\nthumbnailLeft = bundle.getInt(\"left\");\r\nthumbnailWidth = bundle.getInt(\"width\");\r\nthumbnailHeight = bundle.getInt(\"height\");\r\n\r\nString title = bundle.getString(\"title\");\r\nString image = bundle.getString(\"image\");\r\n<\/pre>\n<h2>3. Make DetailsActivity window transparent<\/h2>\n<p>Make the DetailsActivity\u00a0background as transparent by adding the <code>android:windowBackground<\/code> color as transparent. This can be done using custom themes to your activity.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;style name=\"Transparent\" parent=\"AppTheme\"&gt;\r\n        &lt;item name=\"android:windowNoTitle\"&gt;true&lt;\/item&gt;\r\n        &lt;item name=\"android:windowIsTranslucent\"&gt;true&lt;\/item&gt;\r\n        &lt;item name=\"android:windowBackground\"&gt;@android:color\/transparent&lt;\/item&gt;\r\n&lt;\/style&gt;\r\n<\/pre>\n<p>Now, set the above theme to your activity in AndroidManifest.xml file.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;activity android:name=\".DetailsActivity\"\r\n            android:theme=\"@style\/Transparent\" \/&gt;\r\n<\/pre>\n<h2>4. Set color drawable to main background<\/h2>\n<p>We have made the activity default background as transparent. Now let us set the main parent view background as follows.<\/p>\n<pre class=\"prettyprint lang-java\">\/\/Set the background color to black\r\n frameLayout = (FrameLayout) findViewById(R.id.main_background);\r\ncolorDrawable = new ColorDrawable(Color.BLACK);\r\nframeLayout.setBackground(colorDrawable);\r\n<\/pre>\n<h2>5. Implement .addOnPreDrawListener<\/h2>\n<p>Register <code>ViewTreeObserver.addOnPreDrawListener<\/code>\u00a0callback in DetailsActivity. This callback will be invoked when the view tree is about to be drawn. This is the best place to run our window enter animation.<\/p>\n<pre class=\"prettyprint lang-java\">\/\/ Only run the animation if we're coming from the parent activity, not if\r\n\/\/ we're recreated automatically by the window manager (e.g., device rotation)\r\nif (savedInstanceState == null) {\r\n    ViewTreeObserver observer = imageView.getViewTreeObserver();\r\n    observer.addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {\r\n\r\n        @Override\r\n        public boolean onPreDraw() {\r\n            imageView.getViewTreeObserver().removeOnPreDrawListener(this);\r\n\r\n            int[] screenLocation = new int[2];\r\n            imageView.getLocationOnScreen(screenLocation);\r\n            mLeftDelta = thumbnailLeft - screenLocation[0];\r\n            mTopDelta = thumbnailTop - screenLocation[1];\r\n\r\n            \/\/ Scale factors to make the large version the same size as the thumbnail\r\n            mWidthScale = (float) thumbnailWidth \/ imageView.getWidth();\r\n            mHeightScale = (float) thumbnailHeight \/ imageView.getHeight();\r\n\r\n            enterAnimation();\r\n            return true;\r\n        }\r\n    });\r\n}\r\n<\/pre>\n<h2>6. Create custom enter and exit animation<\/h2>\n<p>The enter animation scales the picture in from its previous thumbnail\u00a0size\/location. In parallel, the background of the\u00a0activity is fading in.<\/p>\n<pre class=\"prettyprint lang-java\">public void enterAnimation() {\r\n    imageView.setPivotX(0);\r\n    imageView.setPivotY(0);\r\n    imageView.setScaleX(mWidthScale);\r\n    imageView.setScaleY(mHeightScale);\r\n    imageView.setTranslationX(mLeftDelta);\r\n    imageView.setTranslationY(mTopDelta);\r\n\r\n    \/\/ interpolator where the rate of change starts out quickly and then decelerates.\r\n    TimeInterpolator sDecelerator = new DecelerateInterpolator();\r\n\r\n    \/\/ Animate scale and translation to go from thumbnail to full size\r\n    imageView.animate().setDuration(ANIM_DURATION).scaleX(1).scaleY(1).\r\n            translationX(0).translationY(0).setInterpolator(sDecelerator);\r\n\r\n    \/\/ Fade in the black background\r\n    ObjectAnimator bgAnim = ObjectAnimator.ofInt(colorDrawable, \"alpha\", 0, 255);\r\n    bgAnim.setDuration(ANIM_DURATION);\r\n    bgAnim.start();\r\n}\r\n<\/pre>\n<p>The exit animation is basically a reverse of the enter animation.\u00a0This Animate image back to thumbnail size\/location as relieved from bundle.\u00a0The endAction param, indicates the\u00a0action gets run after the animation completes.<\/p>\n<pre class=\"prettyprint lang-java\">public void exitAnimation(final Runnable endAction) {\r\n    TimeInterpolator sInterpolator = new AccelerateInterpolator();\r\n    imageView.animate().setDuration(ANIM_DURATION).scaleX(mWidthScale).scaleY(mHeightScale).\r\n        translationX(mLeftDelta).translationY(mTopDelta)\r\n        .setInterpolator(sInterpolator).withEndAction(endAction);\r\n\r\n    \/\/ Fade out background\r\n    ObjectAnimator bgAnim = ObjectAnimator.ofInt(colorDrawable, \"alpha\", 0);\r\n    bgAnim.setDuration(ANIM_DURATION);\r\n    bgAnim.start();\r\n}\r\n<\/pre>\n<h2>7. Override onBackPressed() method<\/h2>\n<p>Override <code>onBackPressed()<\/code> method to run our exit animation first, then exiting\u00a0the activity when it is complete.<\/p>\n<pre class=\"prettyprint lang-java\">@Override\r\npublic void onBackPressed() {\r\n    exitAnimation(new Runnable() {\r\n        public void run() {\r\n            finish();\r\n        }\r\n    });\r\n}\r\n<\/pre>\n<h2>8. Download Complete Source<\/h2>\n<p><a class = 'ss-button dowload-button' href='https:\/\/github.com\/javatechig\/Android-GridView-Advance-Tutorial' target='_blank'>Download from GitHub.<\/a><\/p>\n","excerpt":"<p>In this example, we will see how to create custom window animation that makes sense to user. We will extend our previous GridView example, to create custom bitmap scale animation when user clicks on a thumbnail in GridView.<\/p>\n","date":"2015-06-27 16:04:15","modified":"2016-06-11 00:51:00","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":225,"slug":"animation","title":"animation","description":"","post_count":3},{"id":143,"slug":"gridview","title":"GridView","description":"","post_count":3}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8072,"name":"Anoop S S","url":"","date":"2015-07-08 18:06:00","content":"<p>from API21 there is an activity transition method, through which it can be achieved much more easier way.<\/p>\n","parent":0},{"id":8073,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-07-08 20:46:00","content":"<p>@Anup, Thanks for pointing it out.. The solution provided above is for devices below API level 21. <\/p>\n","parent":8072},{"id":8078,"name":"\uc720\uc2dc\ub9cc","url":"","date":"2015-07-09 07:30:00","content":"<p>As I see, your service must be good for android<br \/>\nstudio app beginner.<\/p>\n","parent":0},{"id":8084,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-07-13 14:41:00","content":"<p>Thank you.<\/p>\n","parent":8078},{"id":8090,"name":"developer","url":"","date":"2015-07-15 13:45:00","content":"<p>hello and thanks for best tutorials, i&#8217;m really enjoy it.but, can i ask you how this link generated? <a href=\"http:\/\/stacktips.com\/?json=get_recent_posts&#038;count=45\" rel=\"nofollow\">http:\/\/stacktips.com\/?json=get_recent_posts&#038;count=45<\/a> it&#8217;s use plugin for wordpress or it&#8217;s generated manually?<br \/>\nthanks a lot<\/p>\n","parent":0}],"attachments":[],"comment_count":5,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["5841"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["3"],"fsb_social_linkedin":["0"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3883881759"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-06-27 10:34:43\";}}\";"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"884b68b359de856b5bc7b4f1d1b18ac4\";s:5:\"pDate\";s:19:\"2015-06-27 10:34:43\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"604800286\";s:5:\"pDate\";s:19:\"2015-06-27 10:34:39\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"614743647527931904\";s:5:\"pDate\";s:19:\"2015-06-27 10:34:42\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":9289,"type":"post","slug":"download-and-display-image-in-android-gridview","url":"http:\/\/stacktips.com\/tutorials\/android\/download-and-display-image-in-android-gridview","status":"publish","title":"Download and Display Image in Android GridView","title_plain":"Download and Display Image in Android GridView","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Download and Display Image in Android GridView' data-link='http:\/\/stacktips.com\/tutorials\/android\/download-and-display-image-in-android-gridview' data-summary=''><\/div>\n<p>This example is an improved version of my previous example\u00a0<a href=\"http:\/\/stacktips.com\/android\/android-gridview-example-building-image-gallery-in-android\">Android GridView Example<\/a>. Instead of using static images to display the grid items, lets make this example more realistic by downloading the data in realtime from server and render the grid items. The following video depicts the output of this example.<\/p>\n<div class=\"embed\"><iframe width=\"810\" height=\"608\" src=\"https:\/\/www.youtube.com\/embed\/fIX4SnBLaZg?feature=oembed\" frameborder=\"0\" allowfullscreen><\/iframe><\/div>\n<p>Without wasting much time, let us jump straight into what it takes to build this kind of GridView. You need to follow the following steps to complete this example.<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-addgridview-in-activity-layout\">1. Add\u00a0GridView in Activity Layout<\/a><\/li><li><a href=\"#2-declare-gridview-item-layout\">2. Declare GridView Item Layout<\/a><\/li><li><a href=\"#3-adding-internet-permission\">3. Adding Internet Permission<\/a><\/li><li><a href=\"#4-adding-picasso-image-downloading-library\">4. Adding Picasso Image Downloading Library<\/a><\/li><li><a href=\"#5-create-a-gridview-custom-adapter\">5. Create a GridView Custom Adapter<\/a><\/li><li><a href=\"#6-download-data-and-hook-it-to-activity\">6. Download Data and Hook it to Activity<\/a><\/li><li><a href=\"#7-handle-gridview-click-event\">7. Handle GridView Click Event<\/a><\/li><li><a href=\"#8-create-details-activity-layout\">8. Create Details Activity Layout<\/a><\/li><li><a href=\"#9-completing-the-details-activity\">9. Completing the Details Activity<\/a><\/li><li><a href=\"#10-download-complete-example\">10. Download Complete Example<\/a><\/li><li><a href=\"#11custom-activity-transition-in-gridview\">11.\u00a0Custom Activity Transition in GridView<\/a><\/li><\/ul><\/div>\n<\/p>\n<h2><span id=\"1-addgridview-in-activity-layout\">1. Add\u00a0GridView in Activity Layout<\/span><\/h2>\n<p>First, create a new android project. For this example, I prefer to use <strong>Android Studio<\/strong>.\u00a0Create a new layout file to your project <code>res\/layout<\/code> folder and name it as <code>activity_grid_view.xml<\/code>. And add the following code blocks.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;RelativeLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"#f0f0f0\"&gt;\r\n\r\n    &lt;GridView\r\n        android:id=\"@+id\/gridView\"\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"5dp\"\r\n        android:columnWidth=\"100dp\"\r\n        android:drawSelectorOnTop=\"true\"\r\n        android:gravity=\"center\"\r\n        android:numColumns=\"auto_fit\"\r\n        android:stretchMode=\"columnWidth\"\r\n        android:verticalSpacing=\"5dp\"\r\n        android:focusable=\"true\"\r\n        android:clickable=\"true\"\/&gt;\r\n\r\n    &lt;ProgressBar\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id\/progressBar\"\r\n        android:layout_centerInParent=\"true\"\r\n        android:visibility=\"gone\"\/&gt;\r\n&lt;\/RelativeLayout&gt;\r\n<\/pre>\n<p>The above layout is pretty straight forward. We have declared an <code>GridView<\/code> and a <code>ProgressBar<\/code> in activity layout. The progress bar will be displayed when\u00a0the data is being downloaded.<\/p>\n<h2><span id=\"2-declare-gridview-item-layout\">2. Declare GridView Item Layout<\/span><\/h2>\n<p>Let us now add another file named <code>grid_item_layout.xml<\/code> to <code>res\/layout<\/code> folder. This layout will be used by custom grid adapter for laying out individual grid item. For the sake of simplicity, we are adding an <code>ImageView<\/code> and a <code>TextView<\/code>.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"wrap_content\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_marginTop=\"5dp\"\r\n    android:background=\"@drawable\/grid_color_selector\"\r\n    android:orientation=\"vertical\"\r\n    android:padding=\"5dp\"&gt;\r\n\r\n    &lt;ImageView\r\n        android:id=\"@+id\/grid_item_image\"\r\n        android:layout_width=\"100dp\"\r\n        android:layout_height=\"100dp\"\r\n        android:scaleType=\"centerCrop\"\/&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id\/grid_item_title\"\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"5dp\"\r\n        android:gravity=\"center\"\r\n        android:maxLines=\"2\"\r\n        android:ellipsize=\"marquee\"\r\n        android:textSize=\"12sp\" \/&gt;\r\n\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<h2><span id=\"3-adding-internet-permission\">3. Adding Internet Permission<\/span><\/h2>\n<p>You might be aware that, Android application must\u00a0declare all the permissions that are required\u00a0for\u00a0application. As we need to download the data form server, we need to add the <code>INTERNET<\/code> permission. Add the following line to <code>AndroidManifest.xml<\/code> file.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;manifest xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    package=\"com.javatechig.gridviewexample\"&gt;\r\n\r\n    <strong>&lt;uses-permission android:name=\"android.permission.INTERNET\" \/&gt;<\/strong>\r\n\r\n    &lt;application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap\/ic_launcher\"\r\n        android:label=\"@string\/app_name\"\r\n        android:theme=\"@style\/AppTheme\"&gt;\r\n        &lt;activity\r\n            android:name=\".GridViewActivity\"\r\n            android:label=\"@string\/app_name\"&gt;\r\n            &lt;intent-filter&gt;\r\n                &lt;action android:name=\"android.intent.action.MAIN\" \/&gt;\r\n\r\n                &lt;category android:name=\"android.intent.category.LAUNCHER\" \/&gt;\r\n            &lt;\/intent-filter&gt;\r\n        &lt;\/activity&gt;\r\n\r\n        &lt;activity android:name=\".DetailsActivity\" \/&gt;\r\n    &lt;\/application&gt;\r\n\r\n&lt;\/manifest&gt;\r\n<\/pre>\n<p>Notice that we have also declared all the activities used in the application.<\/p>\n<h2><span id=\"4-adding-picasso-image-downloading-library\">4. Adding Picasso Image Downloading Library<\/span><\/h2>\n<p>Android open source developer community brings some of the interesting libraries that can be integrated easily to Android\u00a0applications. They serves a great deal of purpose and saves lot of time. Here in this example, I am talking about\u00a0<strong><code>Picasso<\/code><\/strong> image loading library.\u00a0We will add Picasso library for downloading and caching of images. Visit here to learn more about how to use Picasso library in Android.<\/p>\n<p>You can add the Picasso library by adding the following dependency to the build.gradle file.<\/p>\n<pre class=\"prettyprint lang-java\">dependencies {\r\n    compile fileTree(dir: 'libs', include: ['*.jar'])\r\n    compile 'com.android.support:appcompat-v7:21.0.3'\r\n    <strong>compile 'com.squareup.picasso:picasso:2.5.2'<\/strong>\r\n}\r\n<\/pre>\n<h2><span id=\"5-create-a-gridview-custom-adapter\">5. Create a GridView Custom Adapter<\/span><\/h2>\n<p>A grid view is an\u00a0adapter view. It requires an adapter to render the collection of data items. Add a new class named <code>GridViewAdapter.java<\/code> to your project and add the following code snippets.<\/p>\n<pre class=\"prettyprint lang-java\">package com.javatechig.gridviewexample;\r\n\r\nimport java.util.ArrayList;\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.text.Html;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport com.squareup.picasso.Picasso;\r\n\r\npublic class GridViewAdapter extends ArrayAdapter&lt;GridItem&gt; {\r\n\r\n    private Context mContext;\r\n    private int layoutResourceId;\r\n    private ArrayList&lt;GridItem&gt; mGridData = new ArrayList&lt;GridItem&gt;();\r\n\r\n    public GridViewAdapter(Context mContext, int layoutResourceId, ArrayList&lt;GridItem&gt; mGridData) {\r\n        super(mContext, layoutResourceId, mGridData);\r\n        this.layoutResourceId = layoutResourceId;\r\n        this.mContext = mContext;\r\n        this.mGridData = mGridData;\r\n    }\r\n\r\n\r\n    \/**\r\n     * Updates grid data and refresh grid items.\r\n     * @param mGridData\r\n     *\/\r\n    public void setGridData(ArrayList&lt;GridItem&gt; mGridData) {\r\n        this.mGridData = mGridData;\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n    @Override\r\n    public View getView(int position, View convertView, ViewGroup parent) {\r\n        View row = convertView;\r\n        ViewHolder holder;\r\n\r\n        if (row == null) {\r\n            LayoutInflater inflater = ((Activity) mContext).getLayoutInflater();\r\n            row = inflater.inflate(layoutResourceId, parent, false);\r\n            holder = new ViewHolder();\r\n            holder.titleTextView = (TextView) row.findViewById(R.id.grid_item_title);\r\n            holder.imageView = (ImageView) row.findViewById(R.id.grid_item_image);\r\n            row.setTag(holder);\r\n        } else {\r\n            holder = (ViewHolder) row.getTag();\r\n        }\r\n\r\n        GridItem item = mGridData.get(position);\r\n        holder.titleTextView.setText(Html.fromHtml(item.getTitle()));\r\n\r\n        <strong>Picasso.with(mContext).load(item.getImage()).into(holder.imageView);<\/strong>\r\n        return row;\r\n    }\r\n\r\n    static class ViewHolder {\r\n        TextView titleTextView;\r\n        ImageView imageView;\r\n    }\r\n}\r\n<\/pre>\n<p>Notice the following in the above code snippets,<\/p>\n<ul>\n<li>The <code>setGridData()<\/code> method updates the data display on GridView.<\/li>\n<li>The <code>Picasso.with().load()<\/code> method is used to download the image from url and display on image view.<\/li>\n<li>The GridViewAdapter class constructor requires the id of the grid item layout and the list of data to operate on.<\/li>\n<li>You might be surprised, where is the <code>GridItem<\/code> class came from. Its not a magic, we need to add\u00a0<code>GridItem.java<\/code> class to our project. \u00a0The GridItem class looks as follows.<\/li>\n<\/ul>\n<h2><span id=\"6-download-data-and-hook-it-to-activity\">6. Download Data and Hook it to Activity<\/span><\/h2>\n<p>Now we will be heading towards hooking the adapter to GridView and make it functional. Create a new Java class and name it as <code>GridViewActivity.java<\/code> and perform the following steps.<\/p>\n<ul>\n<li>Override the <code>onCreate()<\/code> method and set the layout by calling <code>setContentView()<\/code> method<\/li>\n<li>Initialize the GridView and ProgressBar component by using their declared layout id.<\/li>\n<li>Initialize the <code>CustomGridView<\/code> adapter by passing the grid row layout id and the list of <code>GridItem<\/code> objects.<\/li>\n<li>Use AsyncTask to download data from server, once download is successful read the stream JSON response.<\/li>\n<li>Parse the JSON string into the list of GridItem objects. Once downloading and parsing is completed, in <code>onPostExecute()<\/code> callback update the UI elements.<\/li>\n<\/ul>\n<p>The following code does all the above steps as described. Add the following code to GridViewActivity class.<\/p>\n<pre class=\"prettyprint lang-java\">import java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.util.ArrayList;\r\nimport android.content.Intent;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.support.v7.app.ActionBarActivity;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.GridView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Toast;\r\nimport org.apache.http.HttpResponse;\r\nimport org.apache.http.client.HttpClient;\r\nimport org.apache.http.client.methods.HttpGet;\r\nimport org.apache.http.impl.client.DefaultHttpClient;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\npublic class GridViewActivity extends ActionBarActivity {\r\n    private static final String TAG = GridViewActivity.class.getSimpleName();\r\n    private GridView mGridView;\r\n    private ProgressBar mProgressBar;\r\n    private GridViewAdapter mGridAdapter;\r\n    private ArrayList&lt;GridItem&gt; mGridData;\r\n    private String FEED_URL = \"http:\/\/stacktips.com\/?json=get_recent_posts&amp;count=45\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_gridview);\r\n\r\n        mGridView = (GridView) findViewById(R.id.gridView);\r\n        mProgressBar = (ProgressBar) findViewById(R.id.progressBar);\r\n\r\n        \/\/Initialize with empty data\r\n        mGridData = new ArrayList&lt;&gt;();\r\n        mGridAdapter = new GridViewAdapter(this, R.layout.grid_item_layout, mGridData);\r\n        mGridView.setAdapter(mGridAdapter);\r\n\r\n        \/\/Start download\r\n        new AsyncHttpTask().execute(FEED_URL);\r\n        mProgressBar.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    \/\/Downloading data asynchronously\r\n    public class AsyncHttpTask extends AsyncTask&lt;String, Void, Integer&gt; {\r\n\r\n        @Override\r\n        protected Integer doInBackground(String... params) {\r\n            Integer result = 0;\r\n            try {\r\n                \/\/ Create Apache HttpClient\r\n                HttpClient httpclient = new DefaultHttpClient();\r\n                HttpResponse httpResponse = httpclient.execute(new HttpGet(params[0]));\r\n                int statusCode = httpResponse.getStatusLine().getStatusCode();\r\n\r\n                \/\/ 200 represents HTTP OK\r\n                if (statusCode == 200) {\r\n                    String response = streamToString(httpResponse.getEntity().getContent());\r\n                    parseResult(response);\r\n                    result = 1; \/\/ Successful\r\n                } else {\r\n                    result = 0; \/\/\"Failed\r\n                }\r\n            } catch (Exception e) {\r\n                Log.d(TAG, e.getLocalizedMessage());\r\n            }\r\n            return result;\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(Integer result) {\r\n            \/\/ Download complete. Let us update UI\r\n            if (result == 1) {\r\n                mGridAdapter.setGridData(mGridData);\r\n            } else {\r\n                Toast.makeText(GridViewActivity.this, \"Failed to fetch data!\", Toast.LENGTH_SHORT).show();\r\n            }\r\n            mProgressBar.setVisibility(View.GONE);\r\n        }\r\n    }\r\n\r\n    String streamToString(InputStream stream) throws IOException {\r\n        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(stream));\r\n        String line;\r\n        String result = \"\";\r\n        while ((line = bufferedReader.readLine()) != null) {\r\n            result += line;\r\n        }\r\n\r\n        \/\/ Close stream\r\n        if (null != stream) {\r\n            stream.close();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    \/**\r\n     * Parsing the feed results and get the list\r\n     * @param result\r\n     *\/\r\n    private void parseResult(String result) {\r\n        try {\r\n            JSONObject response = new JSONObject(result);\r\n            JSONArray posts = response.optJSONArray(\"posts\");\r\n            GridItem item;\r\n            for (int i = 0; i &lt; posts.length(); i++) {\r\n                JSONObject post = posts.optJSONObject(i);\r\n                String title = post.optString(\"title\");\r\n                item = new GridItem();\r\n                item.setTitle(title);\r\n                JSONArray attachments = post.getJSONArray(\"attachments\");\r\n                if (null != attachments &amp;&amp; attachments.length() &gt; 0) {\r\n                    JSONObject attachment = attachments.getJSONObject(0);\r\n                    if (attachment != null)\r\n                        item.setImage(attachment.getString(\"url\"));\r\n                }\r\n                mGridData.add(item);\r\n            }\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n<\/pre>\n<p>At this point you will be able to run the app\u00a0and\u00a0notice that the app will download the data from the server and display on GridView.<\/p>\n<h2><span id=\"7-handle-gridview-click-event\">7. Handle GridView Click Event<\/span><\/h2>\n<p>Right now GridView is\u00a0not responding to user clicks. Let us make it more functional\u00a0by adding\u00a0the following code.<\/p>\n<pre class=\"prettyprint lang-java\">mGridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\npublic void onItemClick(AdapterView&lt;?&gt; parent, View v, int position, long id) {\r\n\r\n\t\t\/\/Get item at position\r\n\t\tGridItem item = (GridItem) parent.getItemAtPosition(position);\r\n\r\n\t\t\/\/Pass the image title and url to DetailsActivity\r\n                Intent intent = new Intent(GridViewActivity.this, DetailsActivity.class);\r\n                intent.putExtra(\"title\", item.getTitle());\r\n                intent.putExtra(\"image\", item.getImage());\r\n\r\n\t\t\/\/Start details activity\r\n\t\tstartActivity(intent);\r\n\t}\r\n});\r\n<\/pre>\n<p>When user clicks on a\u00a0grid item, we will start another activity that displays the full screen image.\u00a0You can start one activity form another by calling <code>startActivity()<\/code> method.<\/p>\n<p>We need to pass the details of the item such as title, and image url for displaying it on <code>DetailsActivity<\/code>.<\/p>\n<h2><span id=\"8-create-details-activity-layout\">8. Create Details Activity Layout<\/span><\/h2>\n<p>Add a new layout file to res\/layout directory, name it as\u00a0<code>activity_details_view.xml<\/code> and add the following code snippets.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;FrameLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"#000\"\r\n    android:orientation=\"vertical\"&gt;\r\n\r\n    &lt;ImageView\r\n        android:id=\"@+id\/grid_item_image\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_gravity=\"center\"\r\n        android:scaleType=\"fitCenter\" \/&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id\/title\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"bottom\"\r\n        android:background=\"#00000c\"\r\n        android:padding=\"10dp\"\r\n        android:textColor=\"#fff\"\r\n        android:textSize=\"20dp\" \/&gt;\r\n&lt;\/FrameLayout&gt;\r\n<\/pre>\n<h2><span id=\"9-completing-the-details-activity\">9. Completing the Details Activity<\/span><\/h2>\n<p>The\u00a0<code>DetailsActivity<\/code> retrieves the details passed from <code>GridViewActivity<\/code> and renders\u00a0the details on screen.\u00a0Create a new class named DetailsActivity and add the following code snippets.<\/p>\n<pre class=\"prettyprint lang-java\">package com.javatechig.gridviewexample;\r\n\r\nimport android.os.Bundle;\r\nimport android.support.v7.app.ActionBar;\r\nimport android.support.v7.app.ActionBarActivity;\r\nimport android.text.Html;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport com.squareup.picasso.Picasso;\r\n\r\npublic class DetailsActivity extends ActionBarActivity {\r\n    private TextView titleTextView;\r\n    private ImageView imageView;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_details_view);\r\n\r\n        ActionBar actionBar = getSupportActionBar();\r\n        actionBar.hide();\r\n\r\n        String title = getIntent().getStringExtra(\"title\");\r\n        String image = getIntent().getStringExtra(\"image\");\r\n        titleTextView = (TextView) findViewById(R.id.title);\r\n        imageView = (ImageView) findViewById(R.id.grid_item_image);\r\n        titleTextView.setText(Html.fromHtml(title));\r\n\r\n        Picasso.with(this).load(image).into(imageView);\r\n    }\r\n}\r\n<\/pre>\n<h2><span id=\"10-download-complete-example\">10. Download Complete Example<\/span><\/h2>\n<p><a class = 'ss-button dowload-button' href='https:\/\/github.com\/javatechig\/Android-GridView-Advance-Tutorial' target='_blank'>Download from GitHub.<\/a><\/p>\n<h2><span id=\"11custom-activity-transition-in-gridview\">11.\u00a0Custom Activity Transition in GridView<\/span><\/h2>\n<p>Continue reading in our <a href=\"http:\/\/stacktips.com\/android\/using-custom-activity-transition-in-gridview-image-gallery\">next tutorial.<\/a><\/p>\n","excerpt":"<p>This example is an improved version of my previous example\u00a0Android GridView Example. Instead of using static images to display the grid items, lets make this example more realistic by downloading the data in realtime from server and render the grid items. The following video depicts the output of this example. Without wasting much time, let [&hellip;]<\/p>\n","date":"2015-06-27 03:03:19","modified":"2016-06-11 00:51:05","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":233,"slug":"adapter","title":"Adapter","description":"","post_count":1},{"id":48,"slug":"android-advanced","title":"Android Advanced","description":"","post_count":23},{"id":143,"slug":"gridview","title":"GridView","description":"","post_count":3}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8095,"name":"MK","url":"","date":"2015-07-17 04:23:00","content":"<p>Where is the GridItem class? You mention that you&#8217;re going to make it, but there&#8217;s no code for it.<\/p>\n<p>EDIT: oh, found it in your Github.<\/p>\n","parent":0},{"id":8103,"name":"Vikhyath Maiya","url":"","date":"2015-07-21 16:06:00","content":"<p>great tutorial&#8230;can u please post d server side codes for this???<\/p>\n","parent":0},{"id":8104,"name":"Vikhyath Maiya","url":"","date":"2015-07-21 16:20:00","content":"<p>great tutorial&#8230;can u please post d server side codes for this???<\/p>\n","parent":0},{"id":8108,"name":"sunder","url":"","date":"2015-07-22 20:45:00","content":"<p>Does this work with google spreadsheet ??If we take input from spreadsheet online &#8230;any idea ??please can u help me with the code<\/p>\n","parent":0},{"id":8164,"name":"Patient Ba\u00efse","url":"","date":"2015-09-01 12:06:00","content":"<p>cache load offline is not available<\/p>\n","parent":0},{"id":8168,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-09-01 15:42:00","content":"<p>Are you using any image caching library?<\/p>\n","parent":8164},{"id":8177,"name":"Patient Ba\u00efse","url":"","date":"2015-09-01 16:02:00","content":"<p>Do you use a library that loads pictures as fast? Suggest me some one  that I should put him offline cache on my application?<\/p>\n","parent":8168},{"id":8178,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-09-01 21:03:00","content":"<p>You can use any of the following libs <\/p>\n<p><a href=\"http:\/\/stacktips.com\/android\/opensource\/how-to-use-picasso-library-in-android\" rel=\"nofollow\">How to Use Picasso Image Loader Library in Android<\/a><br \/>\nor<br \/>\n<a href=\"http:\/\/stacktips.com\/android\/universal-image-loader-library-in-android\" rel=\"nofollow\">Universal Image Loader Library in Android<\/a><\/p>\n","parent":8177},{"id":8182,"name":"Ummi Azahar","url":"","date":"2015-09-04 09:46:00","content":"<p>Hello, can you send me your php file for this tutorial ? Thank you<\/p>\n","parent":0},{"id":8183,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-09-04 15:03:00","content":"<p>This is a native Android code. What is php file to do with this?<\/p>\n","parent":8182},{"id":8184,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-09-04 15:48:00","content":"<p>By default android collection view&#8217;s are recycled for better performance. This includes GridView, ListView, RecyclerView, etc. Only view&#8217;s that are currently shown  are held in memory others get freed to make more space for app to run comfortably.  So that is a standard behavior and recommended if you have more grid items.<\/p>\n<p>You may have to work with making the view to load faster when scrolled, instead of removing the recycling feature. Look into a better image caching library, I recommend Volley, Picasso, or Universal image loader.  Also use view holder design pattern for smooth scrolling.<\/p>\n","parent":0},{"id":8195,"name":"Ummi Azahar","url":"","date":"2015-09-08 06:46:00","content":"<p>I&#8217;m sorry because i&#8217;m a beginner to android. Perhaps, can you explain me how to fetch an images into gridview from the folder stored in the server ? And what is the &#8220;posts&#8221;, &#8220;attachment&#8221; and &#8220;url&#8221; stand for to fetch the image ? Thank you for helping<\/p>\n","parent":8183},{"id":8273,"name":"renji","url":"","date":"2015-10-21 16:50:00","content":"<p>how to add swiping feature<\/p>\n","parent":0},{"id":8281,"name":"Madson Gr","url":"","date":"2015-10-24 05:57:00","content":"<p>could you please post your php file? I have some problems with &#8220;Value posts of type java.lang.String cannot be converted to JSONObject&#8221; because I don\u00b4t want the title. Just made json print images url<\/p>\n","parent":0},{"id":8304,"name":"Madson Gr","url":"","date":"2015-11-11 05:21:00","content":"<p>When I open some images from de gridview they get stuck at the top of the layout. I am using PhotoviewAttacher to zoom them on double tap. Only when I double tap the image it goes to its right position in the middle of the layout. What is this?<\/p>\n","parent":0},{"id":8315,"name":"Ammar","url":"","date":"2015-11-25 15:44:00","content":"<p>could you please share your server side code as well. i want to see how can we get the images and text from our database?<\/p>\n","parent":0},{"id":8323,"name":"Patient Ba\u00efse","url":"","date":"2015-11-28 06:06:00","content":"<p>Hi, <\/p>\n<p>Nilanchala<\/p>\n<p>I use the code but in some items I can not get the images.<br \/>\nCan I know why?<br \/>\nThis is a problem of size jpg or png format?<br \/>\nAnd also I can not have more than 10 items. What should I do?<br \/>\nThank you<\/p>\n","parent":0},{"id":8389,"name":"akhil","url":"","date":"2016-02-19 14:00:00","content":"<p>Dear Nil<br \/>\nI need Json Script Code can you share it with me .I shall be very obliged to u.<\/p>\n","parent":0},{"id":8398,"name":"A - Kay Qureshi","url":"","date":"2016-02-24 17:16:00","content":"<p>how to fix this error &#8230;. plz tell me&#8230;&#8230;!<\/p>\n","parent":0},{"id":8465,"name":"David Pilco","url":"","date":"2016-03-30 20:03:00","content":"<p>same thing bro<\/p>\n","parent":8398},{"id":8475,"name":"Roberto Tom\u00e1s","url":"","date":"2016-04-05 05:38:00","content":"<p>nice toot&#8230; how do you scroll to a specific item in that?<\/p>\n","parent":0},{"id":8505,"name":"Zeesha","url":"","date":"2016-04-28 13:45:00","content":"<p>These are deprecated. So in android studio you can add below line in build.gradle file (just below the buildToolsVersion) to solve this issue.<\/p>\n<p>useLibrary &#8216;org.apache.http.legacy&#8217;<\/p>\n","parent":8465},{"id":8506,"name":"Zeesha","url":"","date":"2016-04-28 14:05:00","content":"<p>it&#8217;s just a model class <\/p>\n<p>public class GridItem {<\/p>\n<p>    String title,image;<\/p>\n<p>    public String getTitle() {<\/p>\n<p>        return title;<\/p>\n<p>    }<\/p>\n<p>    public void setTitle(String title) {<\/p>\n<p>        this.title = title;<\/p>\n<p>    }<\/p>\n<p>    public String getImage() {<\/p>\n<p>        return image;<\/p>\n<p>    }<\/p>\n<p>    public void setImage(String image) {<\/p>\n<p>        this.image = image;<\/p>\n<p>    }<\/p>\n<p>}<\/p>\n","parent":0},{"id":8514,"name":"Shyam Zawar","url":"","date":"2016-05-05 20:28:00","content":"<p>can you please send the php code for this<\/p>\n","parent":0},{"id":8540,"name":"Phan V\u0103n Ti\u1ebfn","url":"","date":"2016-06-16 07:44:00","content":"<p>You can do what you are asking for export json php files do not ?<\/p>\n","parent":8178},{"id":8541,"name":"Stack Tips","url":"http:\/\/stacktips.com\/","date":"2016-06-16 23:02:00","content":"<p>We use WordPress JSON plugin.<\/p>\n","parent":8514}],"attachments":[],"comment_count":26,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["11800"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3882685863"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-06-26 21:33:54\";}}\";"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"b419c30e0def1ea3db7270eb56a01cc3\";s:5:\"pDate\";s:19:\"2015-06-26 21:33:59\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"604646833\";s:5:\"pDate\";s:19:\"2015-06-26 21:33:56\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"614547162504925184\";s:5:\"pDate\";s:19:\"2015-06-26 21:33:57\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":9259,"type":"post","slug":"listview-header-parallax-with-sticky-view-in-android","url":"http:\/\/stacktips.com\/tutorials\/android\/listview-header-parallax-with-sticky-view-in-android","status":"publish","title":"ListView Header Parallax with Sticky View in Android","title_plain":"ListView Header Parallax with Sticky View in Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='ListView Header Parallax with Sticky View in Android' data-link='http:\/\/stacktips.com\/tutorials\/android\/listview-header-parallax-with-sticky-view-in-android' data-summary='A quick Android example with code snippet to demonstrate ListView parallax effect with sticky header. In our previous tutorial, we saw Creating ListView Header Parallax Animation, now in this example we will go little further and make the list header parallax animation with an view stick to top when list is scrolled.'><\/div>\n<p>A quick Android example with\u00a0code snippet to demonstrate\u00a0<code><a href=\"http:\/\/stacktips.com\/android\/android-listview-tutorial\">ListView<\/a><\/code>\u00a0parallax effect with sticky header. In our previous tutorial, we saw<a href=\"http:\/\/stacktips.com\/android\/how-to-create-listview-header-with-parallax-effect-in-android\">\u00a0Creating ListView Header Parallax Animation<\/a>, now in this example we will go little further and make the list header parallax animation with an view stick to top when list is scrolled.<br \/>\nYou need to follow the following steps\u00a0as described below to create the list view parallax effect.<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-declare-activity-layout\">1. Declare Activity Layout<\/a><\/li><li><a href=\"#2-declare-list-header-layout\">2. Declare List Header Layout<\/a><\/li><li><a href=\"#3-declare-list-row-layout\">3. Declare List Row Layout<\/a><\/li><li><a href=\"#4-handle-listview-scroll-events\">4. Handle ListView Scroll Events<\/a><\/li><li><a href=\"#5-download-complete-source-code\">5. Download Complete Source Code<\/a><\/li><\/ul><\/div>\n<\/p>\n<p>The output of this example in the following attached video.<\/p>\n<div class=\"embed\"><iframe width=\"810\" height=\"608\" src=\"https:\/\/www.youtube.com\/embed\/eyWDkwVnYxo?feature=oembed\" frameborder=\"0\" allowfullscreen><\/iframe><\/div>\n<h2><span id=\"1-declare-activity-layout\">1. Declare Activity Layout<\/span><\/h2>\n<p>To begin with let us start declaring your activity layout. It is a bit tricky. Let us take an frame layout that hosts the hero image, sticky view and a ListView.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;FrameLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"&gt;\r\n\r\n    &lt;ImageView\r\n        android:id=\"@+id\/heroImageView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"250dp\"\r\n        android:background=\"@drawable\/wallpaper\"\r\n        android:scaleType=\"fitCenter\" \/&gt;\r\n\r\n    &lt;ListView\r\n        android:id=\"@+id\/listView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:divider=\"#9E9E9E\"\r\n        android:dividerHeight=\"1dp\"\r\n        android:scrollbars=\"none\"&gt;&lt;\/ListView&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id\/stickyView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"50dp\"\r\n        android:background=\"#222\"\r\n        android:gravity=\"center_vertical\"\r\n        android:paddingLeft=\"10dp\"\r\n        android:text=\"Heading1\"\r\n        android:textColor=\"#fff\"\r\n        android:textSize=\"20sp\"\r\n        android:textStyle=\"bold\" \/&gt;\r\n&lt;\/FrameLayout&gt;\r\n<\/pre>\n<p>The following screenshot depicts how out activity layout is defined.<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android.png\"><img class=\"aligncenter wp-image-9261 size-full\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android.png\" alt=\"How to Create ListView Parallax Effect with Sticky Header in Android\" width=\"1041\" height=\"528\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android.png 1041w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android-300x152.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android-620x314.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android-940x477.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android-800x406.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android-1000x507.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android-900x456.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android-370x188.png 370w\" sizes=\"(max-width: 1041px) 100vw, 1041px\" \/><\/a><\/p>\n<h2><span id=\"2-declare-list-header-layout\">2. Declare List Header Layout<\/span><\/h2>\n<p>Now declare the layout for list header. In this example, I have declared an <a href=\"http:\/\/stacktips.com\/android\/android-imageview-example\">ImageView<\/a> inside <a href=\"http:\/\/stacktips.com\/android\/android-framelayout-example\">FrameLayout<\/a>. The header view is declared as follows.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"&gt;\r\n\r\n    &lt;Space\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"250dp\" \/&gt;\r\n\r\n    &lt;Space\r\n        android:id=\"@+id\/stickyViewPlaceholder\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"50dp\" \/&gt;\r\n\r\n&lt;\/LinearLayout&gt;<\/pre>\n<p>Notice\u00a0that in the above header layout,<\/p>\n<ul>\n<li>We have declared <code>Space<\/code> objects. Android Space widget is subclass of View, used to occupy invisible, transparent space on the screen. You cannot apply any style, such as color, background etc.<\/li>\n<li>The height of both Space objects are same as the height of hero image and sticky widget as declared in your activity layout.<\/li>\n<li>These two invisible views will be useful to calculate the view position and will help to create the parallel effect.<\/li>\n<\/ul>\n<h2><span id=\"3-declare-list-row-layout\">3. Declare List Row Layout<\/span><\/h2>\n<p>Declare another\u00a0layout for your list view row. In this example, for sake of simplicity I have declared a simple <code>TextView<\/code>. You may design fancy list of your choice by declaring your own custom adapter.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;TextView xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:background=\"#FAFAFA\"\r\n    android:gravity=\"center_vertical\"\r\n    android:text=\"List Item\"\r\n    android:padding=\"8dp\"\r\n    android:minHeight=\"40dp\"\r\n    android:textColor=\"#222\"\/&gt;\r\n<\/pre>\n<h2><span id=\"4-handle-listview-scroll-events\">4. Handle ListView Scroll Events<\/span><\/h2>\n<p>Following step will guide you with the necessary things required in your activity to create list view, add list header and implement parallax effect.<\/p>\n<ul>\n<li>Implement <code>setOnScrollListener<\/code> for your list view to handle the user scroll event.<\/li>\n<li>Calculate the position of the sticky header view according to the position of the first item in the ListView.<\/li>\n<li>When the first item is already reached to top, you don&#8217;t need to re-position the sticky header view.<\/li>\n<li>Set the hero image to scroll half of the amount that of ListView<\/li>\n<\/ul>\n<pre class=\"prettyprint lang-java\">import android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.support.v7.app.ActionBarActivity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.AbsListView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n\/**\r\n * &lt;p\/&gt;\r\n * Calculate the position of the sticky header view according to the\r\n * position of the first item in the ListView. When the first item is already\r\n * reached to top, you don't need to position the sticky header view.\r\n *\r\n * @author Nilanchala\r\n *\/\r\npublic class MainActivity extends ActionBarActivity {\r\n\r\n    private TextView stickyView;\r\n    private ListView listView;\r\n    private View heroImageView;\r\n\r\n    private View stickyViewSpacer;\r\n\r\n    private int MAX_ROWS = 20;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        \/* Initialise list view, hero image, and sticky view *\/\r\n        listView = (ListView) findViewById(R.id.listView);\r\n        heroImageView = findViewById(R.id.heroImageView);\r\n        stickyView = (TextView) findViewById(R.id.stickyView);\r\n\r\n        \/* Inflate list header layout *\/\r\n        LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        View listHeader = inflater.inflate(R.layout.list_header, null);\r\n        stickyViewSpacer = listHeader.findViewById(R.id.stickyViewPlaceholder);\r\n\r\n        \/* Add list view header *\/\r\n        listView.addHeaderView(listHeader);\r\n\r\n        \/* Handle list View scroll events *\/\r\n        listView.setOnScrollListener(new AbsListView.OnScrollListener() {\r\n\r\n            @Override\r\n            public void onScrollStateChanged(AbsListView view, int scrollState) {\r\n            }\r\n\r\n            @Override\r\n            public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {\r\n\r\n                \/* Check if the first item is already reached to top.*\/\r\n                if (listView.getFirstVisiblePosition() == 0) {\r\n                    View firstChild = listView.getChildAt(0);\r\n                    int topY = 0;\r\n                    if (firstChild != null) {\r\n                        topY = firstChild.getTop();\r\n                    }\r\n\r\n                    int heroTopY = stickyViewSpacer.getTop();\r\n                    stickyView.setY(Math.max(0, heroTopY + topY));\r\n\r\n                    \/* Set the image to scroll half of the amount that of ListView *\/\r\n                    heroImageView.setY(topY * 0.5f);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        \/* Populate the ListView with sample data *\/\r\n        List&lt;String&gt; modelList = new ArrayList&lt;&gt;();\r\n        for (int i = 0; i &lt; MAX_ROWS; i++) {\r\n            modelList.add(\"List item \" + i);\r\n        }\r\n\r\n        ArrayAdapter adapter = new ArrayAdapter(this, R.layout.list_row, modelList);\r\n        listView.setAdapter(adapter);\r\n    }\r\n}\r\n<\/pre>\n<h2><span id=\"5-download-complete-source-code\">5. Download Complete Source Code<\/span><\/h2>\n<p><a class = 'ss-button dowload-button' href='https:\/\/github.com\/javatechig\/Android-Parallax-ListView-Sticky' target='_blank'>Download from GitHub.<\/a><\/p>\n","excerpt":"<p>A quick Android example with code snippet to demonstrate ListView parallax effect with sticky header. In our previous tutorial, we saw Creating ListView Header Parallax Animation, now in this example we will go little further and make the list header parallax animation with an view stick to top when list is scrolled.<\/p>\n","date":"2015-06-24 04:55:58","modified":"2016-06-11 00:51:07","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":225,"slug":"animation","title":"animation","description":"","post_count":3},{"id":141,"slug":"listview","title":"ListView","description":"","post_count":6},{"id":231,"slug":"parallax","title":"Parallax","description":"","post_count":1}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8148,"name":"Pratik Udawant","url":"","date":"2015-08-06 07:52:00","content":"<p>declare this on the root layout (Linear Layout)<br \/>\nandroid:clickable=&#8221;false&#8221;<br \/>\nandroid:focusable=&#8221;false&#8221;<\/p>\n","parent":0},{"id":8175,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-09-01 15:48:00","content":"<p>checkout this example<\/p>\n<p><a href=\"http:\/\/stacktips.com\/android\/listview-with-section-header-in-android\" rel=\"nofollow\">http:\/\/stacktips.com\/android\/listview-with-section-header-in-android<\/a><\/p>\n","parent":0},{"id":8230,"name":"tim","url":"","date":"2015-09-23 10:47:00","content":"<p>how do u add more headers with contentious items?<\/p>\n","parent":0},{"id":8357,"name":"cleidimarviana","url":"","date":"2016-01-17 23:34:00","content":"<p>Very good! Tank&#8217;s.<\/p>\n","parent":0},{"id":8470,"name":"Lean","url":"","date":"2016-04-02 18:48:00","content":"<p>HI<br \/>\nGood Tutorial.<br \/>\ncan the image view be clickable? how to achieve that<\/p>\n","parent":0},{"id":8476,"name":"Anupam Maurya","url":"","date":"2016-04-05 16:51:00","content":"<p>Thanks for it, Please suggest how to enable click on Imageview on top?<\/p>\n","parent":0}],"attachments":[{"id":9261,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android.png","slug":"how-to-create-listview-parallax-effect-with-sticky-header-in-android","title":"How to Create ListView Parallax Effect with Sticky Header in Android","description":"How to Create ListView Parallax Effect with Sticky Header in Android","caption":"","parent":9259,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android.png","width":1041,"height":528},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android-620x314.png","width":620,"height":314},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android.png","width":1041,"height":528},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/How-to-Create-ListView-Parallax-Effect-with-Sticky-Header-in-Android.png","width":1041,"height":528}}}],"comment_count":6,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["7317"],"fsb_social_facebook":["2"],"fsb_social_twitter":["1"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3873366160"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-06-23 23:26:36\";}}\";"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"f4c6b55ad6de64f412664cfed4db327d\";s:5:\"pDate\";s:19:\"2015-06-23 23:26:40\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"603463027\";s:5:\"pDate\";s:19:\"2015-06-23 23:26:38\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"613488362695999488\";s:5:\"pDate\";s:19:\"2015-06-23 23:26:39\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":9228,"type":"post","slug":"listview-header-parallax-in-android","url":"http:\/\/stacktips.com\/tutorials\/android\/listview-header-parallax-in-android","status":"publish","title":"ListView Header Parallax in Android","title_plain":"ListView Header Parallax in Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='ListView Header Parallax in Android' data-link='http:\/\/stacktips.com\/tutorials\/android\/listview-header-parallax-in-android' data-summary=''><\/div>\n<p>A quick Android example with\u00a0code snippet to demonstrate\u00a0<code><a href=\"http:\/\/stacktips.com\/android\/android-listview-tutorial\">ListView<\/a><\/code> header with parallax effect. You need to follow few steps\u00a0as described below to create the list view parallax effect.<br \/>\n<div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-declare-activity-layout\">1. Declare Activity Layout<\/a><\/li><li><a href=\"#2-declare-list-header-layout\">2. Declare List Header Layout<\/a><\/li><li><a href=\"#3-declare-list-row-layout\">3. Declare List Row Layout<\/a><\/li><li><a href=\"#4-handle-listview-scroll-events\">4. Handle ListView Scroll Events<\/a><\/li><li><a href=\"#5-download-complete-source-code\">5. Download Complete Source Code<\/a><\/li><\/ul><\/div>\n<\/p>\n<p>The output of this example in the following attached video.<\/p>\n<div class=\"embed\"><iframe width=\"810\" height=\"608\" src=\"https:\/\/www.youtube.com\/embed\/rcDWjRdYaSM?feature=oembed\" frameborder=\"0\" allowfullscreen><\/iframe><\/div>\n<h2><span id=\"1-declare-activity-layout\">1. Declare Activity Layout<\/span><\/h2>\n<p>To begin with let us start declaring a simple layout for our example activity. We are adding just a simple ListView that covers the total width of screen.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;ListView xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:id=\"@+id\/list\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:dividerHeight=\"1dp\"\r\n    android:divider=\"#9E9E9E\"\/&gt;\r\n<\/pre>\n<h2><span id=\"2-declare-list-header-layout\">2. Declare List Header Layout<\/span><\/h2>\n<p>Now declare the layout for list header. In this example, I have declared an <a href=\"http:\/\/stacktips.com\/android\/android-imageview-example\">ImageView<\/a> inside <a href=\"http:\/\/stacktips.com\/android\/android-framelayout-example\">FrameLayout<\/a>.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;FrameLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"250dp\"\r\n    android:orientation=\"vertical\"&gt;\r\n\r\n    &lt;ImageView\r\n        android:id=\"@+id\/listHeaderImage\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:scaleType=\"centerCrop\"\r\n        android:src=\"@drawable\/wallpaper\" \/&gt;\r\n&lt;\/FrameLayout&gt;\r\n<\/pre>\n<h2><span id=\"3-declare-list-row-layout\">3. Declare List Row Layout<\/span><\/h2>\n<p>Declare another\u00a0layout for your list view row. In this example, for sake of simplicity I have declared a simple <code>TextView<\/code>. You may design fancy list of your choice by declaring your own custom adapter.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;TextView xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:background=\"#FAFAFA\"\r\n    android:gravity=\"center_vertical\"\r\n    android:text=\"List Item\"\r\n    android:padding=\"8dp\"\r\n    android:minHeight=\"40dp\"\r\n    android:textColor=\"#222\"\/&gt;\r\n<\/pre>\n<h2><span id=\"4-handle-listview-scroll-events\">4. Handle ListView Scroll Events<\/span><\/h2>\n<p>Following step will guide you with the necessary things required in your activity to create list view, add list header and implement parallax effect.<\/p>\n<ol>\n<li>Let us now create an activity and set the layout by calling <code>setContentView()<\/code> method inside <code>onCreate()<\/code> lifecycle callback.<\/li>\n<li>Initialize list view and create an array adapter, which will be used for the list view.<\/li>\n<li>Inflate list header layout and set to list view by calling <code>listView.addHeaderView()<\/code> method.<\/li>\n<li>Handle user scroll events for list view and change the position Y of list header.<\/li>\n<li>For handling the user scroll event, you need to implement <code>AbsListView.OnScrollListener<\/code> interface to your activity or fragment class and override the <code>onScrollStateChanged<\/code> and <code>onScroll<\/code> method. The onScroll method will be called when user scrolls the list view up or downwards.<\/li>\n<\/ol>\n<pre class=\"prettyprint lang-java\">package com.javatechig.parallaxlistview;\r\n\r\nimport android.graphics.Rect;\r\nimport android.os.Bundle;\r\nimport android.support.v7.app.ActionBarActivity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AbsListView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageView;\r\nimport android.widget.ListView;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MainActivity extends ActionBarActivity implements AbsListView.OnScrollListener {\r\n\r\n    private static final int MAX_ROWS = 50;\r\n    private int lastTopValue = 0;\r\n\r\n    private List&lt;String&gt; modelList = new ArrayList&lt;&gt;();\r\n    private ListView listView;\r\n    private ImageView backgroundImage;\r\n    private ArrayAdapter adapter;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        listView = (ListView) findViewById(R.id.list);\r\n\r\n        for (int i = 0; i &lt; MAX_ROWS; i++) {\r\n            modelList.add(\"List item \" + i);\r\n        }\r\n\r\n        adapter = new ArrayAdapter(this, R.layout.list_row, modelList);\r\n        listView.setAdapter(adapter);\r\n\r\n        \/\/ inflate custom header and attach it to the list\r\n        LayoutInflater inflater = getLayoutInflater();\r\n        ViewGroup header = (ViewGroup) inflater.inflate(R.layout.custom_header, listView, false);\r\n        listView.addHeaderView(header, null, false);\r\n\r\n        \/\/ we take the background image and button reference from the header\r\n        backgroundImage = (ImageView) header.findViewById(R.id.listHeaderImage);\r\n        listView.setOnScrollListener(this);\r\n    }\r\n\r\n    @Override\r\n    public void onScrollStateChanged(AbsListView view, int scrollState) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {\r\n        Rect rect = new Rect();\r\n        backgroundImage.getLocalVisibleRect(rect);\r\n        if (lastTopValue != rect.top) {\r\n            lastTopValue = rect.top;\r\n            backgroundImage.setY((float) (rect.top \/ 2.0));\r\n        }\r\n    }\r\n}\r\n<\/pre>\n<h2><span id=\"5-download-complete-source-code\">5. Download Complete Source Code<\/span><\/h2>\n<p><a class = 'ss-button dowload-button' href='https:\/\/github.com\/javatechig\/Parallax-List-View-Header' target='_blank'>Download from GitHub.<\/a><\/p>\n","excerpt":"<p>A quick Android example with\u00a0code snippet to demonstrate\u00a0ListView header with parallax effect. You need to follow few steps\u00a0as described below to create the list view parallax effect. The output of this example in the following attached video. 1. Declare Activity Layout To begin with let us start declaring a simple layout for our example activity. [&hellip;]<\/p>\n","date":"2015-06-18 00:12:32","modified":"2016-06-11 00:51:10","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":44,"slug":"android-basics","title":"Android Basics","description":"","post_count":23},{"id":40,"slug":"how-tos","title":"How To's","description":"","post_count":7},{"id":141,"slug":"listview","title":"ListView","description":"","post_count":6}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8046,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-06-24 17:38:00","content":"<p>use the following code<\/p>\n<p>listView.setOnItemClickListener(new OnItemClickListener() {<\/p>\n<p>\t\t\t@Override<br \/>\n\t\t\tpublic void onItemClick(AdapterView a, View v, int position, long id) {<br \/>\n\t\t\t\t\/\/ Write your logic here<br \/>\n\t\t\t}<br \/>\n\t\t});<\/p>\n","parent":0},{"id":8166,"name":"deepak","url":"","date":"2015-09-01 12:47:00","content":"<p>I integrated your code with viewpager.<br \/>\nImages parallaxed position is not  retained when returned from new page.<br \/>\nI have tried pager.setoffscreenlimit<\/p>\n","parent":0},{"id":8172,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-09-01 15:46:00","content":"<p>Hard to guess the problem without looking into the implementation. <\/p>\n","parent":8166},{"id":8313,"name":"saurabh joshi","url":"","date":"2015-11-24 03:50:00","content":"<p>How to make the image clickable ?<\/p>\n","parent":8046},{"id":8382,"name":"Mustafa Mustafa","url":"","date":"2016-02-16 02:32:00","content":"<p>How would you add an image to the list view?<\/p>\n","parent":0},{"id":8385,"name":"Mustafa Mustafa","url":"","date":"2016-02-17 03:46:00","content":"<p>Can this work with a GridView? I&#8217;m trying to implement it however getting errors all over the place<\/p>\n","parent":0},{"id":8504,"name":"Jignesh Brahmkhatri","url":"","date":"2016-04-25 14:32:00","content":"<p>When scroll fast make gap on top.<\/p>\n","parent":0}],"attachments":[{"id":9229,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/device-2015-06-17-192827.mp4","slug":"device-2015-06-17-192827","title":"How to Create ListView Header with Parallax Effect in Android","description":"How to Create ListView Header with Parallax Effect in Android","caption":"","parent":9228,"mime_type":"video\/mp4"}],"comment_count":7,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["7407"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["2"],"fsb_social_linkedin":["0"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3856688583"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-06-17 18:43:17\";}}\";"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"1003d39dc3fd24f22c39a7ed400985f7\";s:5:\"pDate\";s:19:\"2015-06-17 18:43:18\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"601043808\";s:5:\"pDate\";s:19:\"2015-06-17 18:43:17\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"611242737472385025\";s:5:\"pDate\";s:19:\"2015-06-17 18:43:20\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":9181,"type":"post","slug":"how-to-include-wordpress-custom-post-types-to-your-site-rss-feed","url":"http:\/\/stacktips.com\/tutorials\/wordpress\/how-to-include-wordpress-custom-post-types-to-your-site-rss-feed","status":"publish","title":"How to Include WordPress Custom Post Types to Your Site RSS Feed","title_plain":"How to Include WordPress Custom Post Types to Your Site RSS Feed","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Include WordPress Custom Post Types to Your Site RSS Feed' data-link='http:\/\/stacktips.com\/tutorials\/wordpress\/how-to-include-wordpress-custom-post-types-to-your-site-rss-feed' data-summary=''><\/div>\n<p>The default WordPress RSS feed includes only the default post types but\u00a0the custom post types are not included. The following quick WordPress code snippet will help you to include WordPress custom post types to your web site RSS feed.<\/p>\n<p>Add the following snippets to your WordPress theme <code>functions.php<\/code> file:<\/p>\n<pre class=\"prettyprint lang-php\">\/\/ Add links to rss feed \r\nfunction add_to_custom_feed($qv) {\r\n\tif (isset($qv['feed']) &amp;&amp; !isset($qv['post_type']))\r\n\t\t$qv['post_type'] = array('post', 'books', 'events');\r\n\treturn $qv;\r\n}\r\nadd_filter('request', 'add_to_custom_feed');\r\n<\/pre>\n<p>Save the changed <code>functions.php<\/code> and visit your your WordPress site RSS feed url. For example my site URL is http:\/\/feeds.feedburner.com\/javatechig. Notice that now your RSS Feed will include the posts from custom post types.<\/p>\n","excerpt":"<p>The default WordPress RSS feed includes only the default post types but\u00a0the custom post types are not included. The following quick WordPress code snippet will help you to include WordPress custom post types to your web site RSS feed. Add the following snippets to your WordPress theme functions.php file: \/\/ Add links to rss feed [&hellip;]<\/p>\n","date":"2015-06-16 06:14:39","modified":"2016-06-07 03:52:11","categories":[{"id":299,"slug":"how-to","title":"How-Tos","description":"","parent":0,"post_count":14},{"id":181,"slug":"wordpress","title":"Wordpress","description":"","parent":297,"post_count":6}],"tags":[{"id":229,"slug":"rss","title":"RSS","description":"","post_count":1},{"id":228,"slug":"wordpress","title":"Wordpress","description":"","post_count":1}],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":9508,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","slug":"wordpress-tutorials-3","title":"Wordpress Tutorials","description":"Wordpress Tutorials","caption":"","parent":9181,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"snap_isAutoPosted":["1"],"post_views_count":["1573"],"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_social_facebook":["1"],"fsb_social_twitter":["4"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"dsq_thread_id":["3851655470"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-06-16 00:45:06\";}}\";"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"2d3a550c73961da185b204effae46058\";s:5:\"pDate\";s:19:\"2015-06-16 00:45:06\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"600259192\";s:5:\"pDate\";s:19:\"2015-06-16 00:45:07\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"610608995745705984\";s:5:\"pDate\";s:19:\"2015-06-16 00:45:04\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338}}},{"id":9174,"type":"post","slug":"show-posts-from-specific-categories-to-appear-on-wordpress-homepage","url":"http:\/\/stacktips.com\/tutorials\/wordpress\/show-posts-from-specific-categories-to-appear-on-wordpress-homepage","status":"publish","title":"Show Posts from Specific Categories to Appear on WordPress HomePage","title_plain":"Show Posts from Specific Categories to Appear on WordPress HomePage","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Show Posts from Specific Categories to Appear on WordPress HomePage' data-link='http:\/\/stacktips.com\/tutorials\/wordpress\/show-posts-from-specific-categories-to-appear-on-wordpress-homepage' data-summary=''><\/div>\n<p>Quick WordPress code snippet to show only the the posts from specific categories to appear on home page recent posts.<\/p>\n<p>The landing page of most of the news or personal blogging sites usually display the recent posts achieve of the blog unless the front page is set to a static html page.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/WordPress-front-page-settings-e1434414693650.png\"><img class=\"aligncenter size-medium wp-image-9175\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/WordPress-front-page-settings-620x374.png\" alt=\"WordPress front page settings\" width=\"620\" height=\"374\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p>Your blog might have many different categories, but could be annoying to users who just want to show the recent posts from specific categories to appear on home page recent posts. The following code snippet will help you to do that.<\/p>\n<p>Add the following snippets to your WordPress theme <code>functions.php<\/code> file:<\/p>\n<pre class=\"prettyprint lang-php\">function filter_home_post_categories($query) {\r\n    if ($query-&gt;is_main_query() &amp;&amp; is_home()) {\r\n        $query-&gt;set('category_name','cat_slug1, cat_slug2, cat_slug3');\r\n    }\r\n}\r\nadd_action('pre_get_posts', 'filter_home_post_categories');\r\n<\/pre>\n<p>Save the changed <code>functions.php<\/code> and make visit your your WordPress site home page. Notice that you will see only the posts from the categories as specified in the above function.<\/p>\n","excerpt":"<p>The landing page of most of the news or personal blogging sites usually display the recent posts achieve of the blog unless the front page is set to a static html page. &nbsp; Your blog might have many different categories, but could be annoying to users who just want to show the recent posts from [&hellip;]<\/p>\n","date":"2015-06-16 06:04:53","modified":"2015-07-29 15:26:55","categories":[{"id":181,"slug":"wordpress","title":"Wordpress","description":"","parent":297,"post_count":6}],"tags":[],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":9175,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/WordPress-front-page-settings.png","slug":"wordpress-front-page-settings","title":"WordPress front page settings","description":"WordPress front page settings","caption":"","parent":9174,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/WordPress-front-page-settings-e1434414693650.png","width":344,"height":198},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/WordPress-front-page-settings-620x374.png","width":620,"height":374},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/WordPress-front-page-settings-e1434414693650.png","width":344,"height":198},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/WordPress-front-page-settings-e1434414693650.png","width":344,"height":198},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/WordPress-front-page-settings-e1434414693650.png","width":344,"height":198},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/WordPress-front-page-settings-e1434414693650.png","width":344,"height":198},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/WordPress-front-page-settings-e1434414693650.png","width":344,"height":198},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/WordPress-front-page-settings-e1434414693650.png","width":344,"height":198}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1585"],"fsb_social_facebook":["0"],"fsb_social_twitter":["2"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3851662597"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-06-16 00:35:21\";}}\";"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"e911363cceded8dc0cb6d93b06e268d0\";s:5:\"pDate\";s:19:\"2015-06-16 00:35:23\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"600257050\";s:5:\"pDate\";s:19:\"2015-06-16 00:35:24\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"610606554287476737\";s:5:\"pDate\";s:19:\"2015-06-16 00:35:22\";}}\";"],"snapImportedComments":["a:0:{}"],"minimaldog_user_IP":["a:1:{s:15:\"ip-82.41.97.126\";s:12:\"82.41.97.126\";}"],"minimaldog_post_like_count":["1"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338}}},{"id":9160,"type":"post","slug":"key-features-of-angularjs-that-makes-it-the-future-of-web-development","url":"http:\/\/stacktips.com\/blog\/key-features-of-angularjs-that-makes-it-the-future-of-web-development","status":"publish","title":"Key Features of AngularJS That Makes The Future of Web Development","title_plain":"Key Features of AngularJS That Makes The Future of Web Development","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Key Features of AngularJS That Makes The Future of Web Development' data-link='http:\/\/stacktips.com\/blog\/key-features-of-angularjs-that-makes-it-the-future-of-web-development' data-summary='AngularJS is the high-end open-source web application framework that offers a route of fulfilling influential things. This innovative web software is providing some of the very attractive features not only to web developers, but also to designers. It is becoming one of the integral parts of the industry for scribbling responsive, dignified and productive web software.'><\/div>\n<p>In today\u2019s technological scenario, all scales of businesses are looking to expand their dimensions by using cutting-edge technologies. Web application development is among them which have offered an effective and influential route to uplift the business sector. The main purpose of the web application is to impart the potential knowledge and information within minutes to the web users.<\/p>\n<p>AngularJS is the high-end open-source web application framework that offers a route of fulfilling influential things. This innovative web software is providing some of the very attractive features not only to web developers, but also to designers. It is becoming one of the integral parts of the industry for scribbling responsive, dignified and productive web software.<\/p>\n<p>A new-age web software was introduced with an aim to create Single Page Application that can provide elegant and swift user experience to the web users and potential customers.<\/p>\n<h2>When was AngularJS developed?<\/h2>\n<p>AngularJS is a JavaScript framework, which is maintained by Google. It was developed in the year of 2009 by Google engineers Misko Hevery and Adam Aborns. But in 2012, AngularJS has established its significant place among the developers, who have integrated to create a large society of potential users. And today, this web application framework is considered as the future of web development.<\/p>\n<p>Through this blog, we will highlight some of major reasons that why AnjularJS has the potential to become one of the adaptive web development toolkits in the next coming years.<\/p>\n<h3>1. Offers Extensibility<\/h3>\n<p>AngularJS is quickly startup as it don\u2019t have determined conclusion about conversions. In fact, it is considered as a web application development toolbox rather than a framework. This web software is designed to create single page applications with flexibility. It accepts and uses HTML to cater user-centric quality content through two-way data binding. As a developer, you can easily get started in and connect to other technologies. This makes Angular the most extensible tool for the businesses.<\/p>\n<h3>2. Scalable and Dynamic<\/h3>\n<p>Developed to serve the developers and designers by providing them the platform where they can put user integrated aspects on a page first and then allowing engineers to add the logic. This web software has the potential to easily detach the processes of website design and development into well-classified elements. In addition, it allows you to manage swift changes during the development of a single page application. Angular is most suitable for cross-platform distribution. It means that it develops scalable applications that can be used in various devices.<\/p>\n<h3>3. Provides Proficiency<\/h3>\n<p>AngularJS is one of the most exemplary web application tools that have the ability to develop the new-age applications and user experiences such as single-page applications. As the browsers and Smartphone devices are becoming more powerful and thus, it becomes necessary to develop more proficient applications.<\/p>\n<h3>4. Develops Next Generation Applications<\/h3>\n<p>With AngularJS, a developer can develop highly-efficient and sophisticated applications that can compete in the coming future. The desktop browsers like Chrome, Opera, and Firefox are getting more advanced while, on the other side, Chrome on Android, Windows Phone, and IOS6+ are becoming more and more powerful. But, with the support of AngularJS, you can build standard and flexible applications specifically for them.<\/p>\n<h3>5. Offers Long-lasting Feature<\/h3>\n<p>This web application tool is new into the industry but, has the potential to address problems and hurdles during the development of single page applications. AngularJS tool has rooted its place in the industry and still looking to introduce more advanced versions on TypeScript and JavaScript extensions. In fact, many of the popular brands are adopting the AngularJS. It is not only benefitting to YouTube and DoubleClick, but also enhancing the world reckoned companies like HBO, NASA, Sony, Nike, MSNBC and many more.<\/p>\n<p>And\u00a0more..<\/p>\n<div class=\"embed\"><iframe width=\"810\" height=\"456\" src=\"https:\/\/www.youtube.com\/embed\/u2okVLCrqgE?feature=oembed\" frameborder=\"0\" allowfullscreen><\/iframe><\/div>\n<h2>Conclusion<\/h2>\n<p>AngularJS has emerged as one of the powerful web application tools that have boosted web design and development solutions. It develops the single page application to deliver excellent user experiences. AngularJS\u2019s flexibility, proficiency, and dynamism make it unique and standard from other web development tools. In fact, in the coming years, this framework will attain robust platform in the industry. This blog has given you the significant reasons that why AngularJS is the future of web development.<\/p>\n<p><strong>Written by:<\/strong> Lucy Barret<br \/>\nLucy Barret is a Sr. WordPress Developer at WPGeeks Ltd, a company that provides <a href=\"http:\/\/www.hirewpgeeks.com\/services\/custom-wordpress-development\/\" target=\"_blank\">WordPress customization<\/a> services in a convenient manner. She is a passionate writer and loves to share wordpress relates tutorials.<\/p>\n","excerpt":"<p>AngularJS is the high-end open-source web application framework that offers a route of fulfilling influential things. This innovative web software is providing some of the very attractive features not only to web developers, but also to designers. It is becoming one of the integral parts of the industry for scribbling responsive, dignified and productive web software.<\/p>\n","date":"2015-06-15 14:43:45","modified":"2016-06-03 01:12:48","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[{"id":230,"slug":"angularjs","title":"AngularJS","description":"","post_count":1},{"id":36,"slug":"javascript","title":"JavaScript","description":"","post_count":5}],"author":{"id":854,"slug":"guest","name":"Guest","first_name":"Guest","last_name":"Blogger","nickname":"guest","url":"","description":""},"comments":[],"attachments":[{"id":9163,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Angular-JS-Features.jpg","slug":"angular-js-features","title":"Angular JS Features","description":"Angular JS Features","caption":"","parent":9160,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Angular-JS-Features.jpg","width":960,"height":540},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Angular-JS-Features-620x349.jpg","width":620,"height":349},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Angular-JS-Features.jpg","width":960,"height":540},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Angular-JS-Features.jpg","width":960,"height":540}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:6:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:10:\"show_image\";s:4:\"true\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["2223"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"dsq_thread_id":["3849601856"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:237:\"a:1:{i:0;a:8:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:243:\"a:1:{i:0;a:9:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:111:\"a:1:{i:0;a:4:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:162:\"a:1:{i:0;a:6:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Angular-JS-Features.jpg","width":960,"height":540},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Angular-JS-Features-620x349.jpg","width":620,"height":349},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Angular-JS-Features.jpg","width":960,"height":540},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Angular-JS-Features.jpg","width":960,"height":540}}},{"id":9092,"type":"post","slug":"linearlayout-manager-tutorial-in-xamarin-android","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/linearlayout-manager-tutorial-in-xamarin-android","status":"publish","title":"LinearLayout Manager Tutorial in Xamarin Android","title_plain":"LinearLayout Manager Tutorial in Xamarin Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='LinearLayout Manager Tutorial in Xamarin Android' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/linearlayout-manager-tutorial-in-xamarin-android' data-summary=''><\/div>\n<p>A <code>LinearLayout<\/code> manager is a most basic type of layout manager, that organizes its child views either\u00a0<code>horizontally<\/code> or <code>vertically<\/code> based on the value provided in android:orientation property.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\" \r\n\tandroid:orientation=\"horizontal\"\u2028\r\n\tandroid:layout_width=\"fill_parent\" \r\n\tandroid:layout_height=\"wrap_content\"&gt; \r\n\t&lt;!-- add children here--&gt; \r\n&lt;\/LinearLayout&gt; \r\n<\/pre>\n<p>Notice in the above code snippet, the orientation property access two possible values such as <code>vertical<\/code> or <code>horizontal<\/code>. This defines the whether the views to be organized vertically or horizontally. We had enough talk about linear layouts; let us move a bit towards the practical implementation of it. To began with let us design a login page layout as shown in the screenshot below. <a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Linear-Layout-Manager-Android.png\"><img class=\"aligncenter size-full wp-image-9093\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Linear-Layout-Manager-Android.png\" alt=\"Linear Layout Manager Android\" width=\"286\" height=\"335\" \/><\/a> We would add two edit text for the user to enter the username and password and two buttons for Login and Register action. <strong>ActivityMain.axml<\/strong><\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:orientation=\"vertical\"\r\n    android:layout_width=\"fill_parent\"\r\n    android:layout_height=\"fill_parent\"&gt;\r\n\r\n    &lt;EditText\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id\/password\"\r\n        android:padding=\"10dp\"\r\n        android:hint=\"@string\/username_hint\" \/&gt;\r\n    \r\n    &lt;EditText\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id\/password\"\r\n        android:padding=\"10dp\"\r\n        android:hint=\"@string\/password_hint\" \/&gt;\r\n    &lt;Button\r\n        android:id=\"@+id\/submit\"\r\n        android:layout_width=\"200dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:padding=\"10dp\"\r\n        android:text=\"@string\/login\" \/&gt;\r\n    &lt;Button\r\n        android:id=\"@+id\/register\"\r\n        android:layout_width=\"200dp \"\r\n        android:layout_height=\"wrap_content\"\r\n        android:padding=\"10dp\"\r\n        android:text=\"@string\/register\" \/&gt;\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<p>As you see in the above layout XML;<\/p>\n<ol>\n<li>Linear Layout has two properties as <code>layout_height<\/code> and <code>layout_width<\/code>. In android each layout manager\/view must supply these two properties to define the height and width of the view in view hierarchy.<\/li>\n<li><code>wrap_ontent<\/code> \u2013 Wraps with the maximum allowed (Parent\u2019s) width or height<\/li>\n<li><code>fill_parent<\/code> or match_parent \u2013fits the view size to the available size of its parent<\/li>\n<li>If you want to specify a static height or width for any view you can supply values in dp. For example in the above snippet, both the submit and register button has a static width of 200dp.<\/li>\n<li><code>DP<\/code> \u2013 Density independent Pixels, based on physical density of the screen.<\/li>\n<\/ol>\n<h1>Understanding the weight and gravity<\/h1>\n<p>Apart from the orientation attribute, the <code>weight<\/code> and gravity attribute can affect size and position of child views in a LinearLayout manager.<\/p>\n<h2>android:weight<\/h2>\n<p>You use weight to assign size importance to a control relative to the other controls in the container. Suppose a container has three controls: one has a weight of 1, whereas the others have a weight of 0. In this case, the control whose weight equals 1 will consume the empty space in the container.<\/p>\n<h2>android:gravity<\/h2>\n<p>Gravity is used to specify the alignment of view. For example, if you want to align a TextView\u2019s text to the right, you would set its gravity to right. There are quite a few possible values for gravity, including left, center, right, top, bottom, center_vertical, clip_horizontal, and others.<\/p>\n<p>The above screenshot shows that the Login and Register button is aligned one below other. It would be nicer, if we can align both the buttons horizontally and distribute equal space to each (as shown in the following screenshot).<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/LinearLayout-Manager-Gravity-Weight-Xamarin.png\"><img class=\"aligncenter size-full wp-image-9094\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/LinearLayout-Manager-Gravity-Weight-Xamarin.png\" alt=\"LinearLayout Manager Gravity Weight Xamarin\" width=\"290\" height=\"290\" \/><\/a><\/p>\n<p>To do so, we have to add another LinearLayout with horizontal orientation and add both the buttons to it. The following code blocks can be used to achieve the result as shown in the above screenshot.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:orientation=\"vertical\"\r\n    android:layout_width=\"fill_parent\"\r\n    android:layout_height=\"fill_parent\"&gt;\r\n    &lt;EditText\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id\/password\"\r\n        android:hint=\"@string\/username_hint\" \/&gt;\r\n    &lt;EditText\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id\/password\"\r\n        android:hint=\"@string\/password_hint\" \/&gt;\r\n    &lt;LinearLayout\r\n        android:orientation=\"horizontal\"\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"fill_parent\"&gt;\r\n        &lt;Button\r\n            android:id=\"@+id\/submit\"\r\n            android:layout_width=\"200dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:padding=\"10dp\"\r\n            android:text=\"@string\/login\" \/&gt;\r\n        &lt;Button\r\n            android:id=\"@+id\/register\"\r\n            android:layout_width=\"200dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:padding=\"10dp\"\r\n            android:text=\"@string\/register\"\r\n            android:layout_weight=\"1\" \/&gt;\r\n    &lt;\/LinearLayout&gt;\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<h2>android:gravity vs. android:layout_gravity<\/h2>\n<p>Note that Android defines two similar gravity attributes: <code>android:gravity<\/code> and <code>android:layout_gravity<\/code>. Here\u2019s the difference: android:gravity is a setting used by the view, whereas android:layout_gravity is used by the container.<\/p>\n","excerpt":"<p>A LinearLayout manager is a most basic type of layout manager, that organizes its child views either\u00a0horizontally or vertically based on the value provided in android:orientation property. &lt;LinearLayout xmlns:android=&#8221;http:\/\/schemas.android.com\/apk\/res\/android&#8221; android:orientation=&#8221;horizontal&#8221;\u2028 android:layout_width=&#8221;fill_parent&#8221; android:layout_height=&#8221;wrap_content&#8221;&gt; &lt;!&#8211; add children here&#8211;&gt; &lt;\/LinearLayout&gt; Notice in the above code snippet, the orientation property access two possible values such as vertical or horizontal. [&hellip;]<\/p>\n","date":"2015-06-09 04:37:36","modified":"2015-07-31 20:59:58","categories":[{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":9093,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Linear-Layout-Manager-Android.png","slug":"linear-layout-manager-android","title":"Linear Layout Manager Android","description":"Linear Layout Manager Android","caption":"","parent":9092,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Linear-Layout-Manager-Android.png","width":286,"height":335},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Linear-Layout-Manager-Android.png","width":286,"height":335},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Linear-Layout-Manager-Android.png","width":286,"height":335},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Linear-Layout-Manager-Android.png","width":286,"height":335},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Linear-Layout-Manager-Android.png","width":286,"height":335},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Linear-Layout-Manager-Android.png","width":286,"height":335},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Linear-Layout-Manager-Android.png","width":286,"height":335},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Linear-Layout-Manager-Android.png","width":286,"height":335}}},{"id":9094,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/LinearLayout-Manager-Gravity-Weight-Xamarin.png","slug":"linearlayout-manager-gravity-weight-xamarin","title":"LinearLayout Manager Gravity Weight Xamarin","description":"LinearLayout Manager Gravity Weight Xamarin","caption":"","parent":9092,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/LinearLayout-Manager-Gravity-Weight-Xamarin.png","width":290,"height":290},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/LinearLayout-Manager-Gravity-Weight-Xamarin.png","width":290,"height":290},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/LinearLayout-Manager-Gravity-Weight-Xamarin.png","width":290,"height":290},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/LinearLayout-Manager-Gravity-Weight-Xamarin.png","width":290,"height":290},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/LinearLayout-Manager-Gravity-Weight-Xamarin.png","width":290,"height":290},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/LinearLayout-Manager-Gravity-Weight-Xamarin.png","width":290,"height":290},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/LinearLayout-Manager-Gravity-Weight-Xamarin.png","width":290,"height":290},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/LinearLayout-Manager-Gravity-Weight-Xamarin.png","width":290,"height":290}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["2318"],"fsb_social_facebook":["1"],"fsb_social_twitter":["3"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3833471480"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-06-08 23:08:02\";}}\";"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"5b37edf1d3fd610b60181f354d403b65\";s:5:\"pDate\";s:19:\"2015-06-08 23:08:01\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"597589898\";s:5:\"pDate\";s:19:\"2015-06-08 23:08:02\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"608047852942729217\";s:5:\"pDate\";s:19:\"2015-06-08 23:08:00\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}},{"id":9084,"type":"post","slug":"a-quick-introduction-to-view-viewgroups-and-layout-managers-in-xamarin-android","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/a-quick-introduction-to-view-viewgroups-and-layout-managers-in-xamarin-android","status":"publish","title":"A Quick Introduction to View, ViewGroups and Layout Managers in Xamarin Android","title_plain":"A Quick Introduction to View, ViewGroups and Layout Managers in Xamarin Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='A Quick Introduction to View, ViewGroups and Layout Managers in Xamarin Android' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/a-quick-introduction-to-view-viewgroups-and-layout-managers-in-xamarin-android' data-summary=''><\/div>\n<h1>Views and ViewGroups<\/h1>\n<p>Everything that you see in an Android app is a View; buttons, labels, text boxes, and radio buttons are all examples of Views. Views are organized in a hierarchy using various types of ViewGroups. A ViewGroup is a special kind of View which is used to arrange (layout) other Views on the screen.<\/p>\n<h2>User Interface Widgets<\/h2>\n<p>Android provides a comprehensive set of user interface widgets that can be used to build a rich user experience. All of these widgets are subtypes of \u00a0View and can be organized into sophisticated layouts using various types of ViewGroups. All of the user interface widgets can be found in the \u00a0android.widget package within the Application Framework.<\/p>\n<p>Some of the common UI widgets includes;<\/p>\n<ul>\n<li>TextView<\/li>\n<li>EditText<\/li>\n<li>Radio Buttons and Radio button group<\/li>\n<li>CheckBox<\/li>\n<li>Adapter views such as <a href=\"http:\/\/stacktips.com\/xamarin\/listview-example-in-xamarin-android\">List View<\/a>, GridView<\/li>\n<li><a href=\"http:\/\/stacktips.com\/xamarin\/xamarin-android-webview-tutorial\">WebView<\/a><\/li>\n<li>Spinners, etc.<\/li>\n<\/ul>\n<h1>Declarative Versus Programmatic View Creation<\/h1>\n<p>Views and ViewGroups can be created using two different methods, programmatically or declaratively. When using a programmatic approach, \u00a0a developer makes API calls to create and position each individual View on screen. When using a declarative approach, a developer creates XML layout files that specify how Views should be arranged. Visual layout designer embedded to Xamarin Studio and Visual Studio IDE provides extensive support for creating the layout using drag and drop approach. In case of XML declaration, you need to remember each element and property to control the view\/layout behavior.<\/p>\n<p>The declarative method enjoys several advantages stated as follows:<\/p>\n<ul>\n<li>Provides better separation of the visual design of an application from the processing logic<\/li>\n<li>Allows multiple layouts to be created to support multiple devices or device configurations with a single code base<\/li>\n<li>Development tools, such as Android Studio, Android plugin for Eclipse and Xamarin Studio Android designer, allow you to view the user interface as you build it, without needing to compile and execute your application after each change<\/li>\n<\/ul>\n<p>While most developers prefer the declarative method of view creation, in practice, some combination of programmatic and declarative methods are often required.<\/p>\n<h1>Xamarin Android Layout Managers<\/h1>\n<p>Xamarin.Android offers a collection of view group classes that acts as container for views. These containers are refereed as layout managers. Each of the layout managers can contain one more child views and provides a specific strategy to manage the size and position of its children. For example, the Linear Layout class places its children either horizontally or vertically, one view adjacent to the other.<\/p>\n<p>Following table lists the different types of layout managers available in Xamarin android.<\/p>\n<table class=\"reference\">\n<tbody>\n<tr>\n<th><strong>Layout Manager<\/strong><\/th>\n<th><strong>Description<\/strong><\/th>\n<\/tr>\n<tr>\n<td><a href=\"http:\/\/stacktips.com\/xamarin\/linearlayout-manager-tutorial-in-xamarin-android\">Linear Layout<\/a><\/td>\n<td>Position its child views either horizontally or vertically<\/td>\n<\/tr>\n<tr>\n<td>Relative Layout<\/td>\n<td>Position its child view relative to others child or parent.<\/td>\n<\/tr>\n<tr>\n<td>Table Layout<\/td>\n<td>Position its child on tabular form<\/td>\n<\/tr>\n<tr>\n<td>Frame Layout<\/td>\n<td>Allows to change content dynamically<\/td>\n<\/tr>\n<tr>\n<td>Grid Layout<\/td>\n<td>Position child views in a grid format<\/td>\n<\/tr>\n<tr>\n<td>Absolute Layout (Deprecated)<\/td>\n<td>Allows absolute positioning of child. This layout manager is deprecated and strictly not recommended to use for your app.<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>All the above layout managers are derived from the View class; therefore all the layout managers can be nested one inside of one another. You can also create a custom layout by extending ViewGroup classes for specific requirements for your project.<\/p>\n","excerpt":"<p>Views and ViewGroups Everything that you see in an Android app is a View; buttons, labels, text boxes, and radio buttons are all examples of Views. Views are organized in a hierarchy using various types of ViewGroups. A ViewGroup is a special kind of View which is used to arrange (layout) other Views on the [&hellip;]<\/p>\n","date":"2015-06-09 04:22:51","modified":"2015-12-01 18:57:05","categories":[{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1960"],"fsb_social_facebook":["0"],"fsb_social_twitter":["1"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3832692030"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-06-08 22:53:14\";}}\";"],"snapImportedComments":["a:0:{}"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"34d903bb02a3d25458c3b739cc55b774\";s:5:\"pDate\";s:19:\"2015-06-08 22:53:15\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"597585955\";s:5:\"pDate\";s:19:\"2015-06-08 22:53:17\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"608044145228156928\";s:5:\"pDate\";s:19:\"2015-06-08 22:53:16\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}},{"id":8985,"type":"post","slug":"xamarin-mobile-application-development-for-android-second-edition-announced","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/xamarin-mobile-application-development-for-android-second-edition-announced","status":"publish","title":"Xamarin Mobile Application Development for Android &#8211; Second Edition Announced","title_plain":"Xamarin Mobile Application Development for Android &#8211; Second Edition Announced","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Xamarin Mobile Application Development for Android - Second Edition Announced' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/xamarin-mobile-application-development-for-android-second-edition-announced' data-summary=''><\/div>\n<p>Book titled <strong>&#8220;Xamarin Mobile Application Development for Android&#8221;<\/strong>\u00a0&#8211; Second Edition is announced\u00a0and\u00a0is available to pre-order. This book is expected\u00a0to be published in\u00a0<time datetime=\"2015-09-30\">September 2015.<\/time><\/p>\n<p>If you are a C# developer who wants to develop Android apps and enhance your existing skill set, then this book is ideal for you. Good working knowledge of C#, .NET, and object-oriented software development is assumed.<\/p>\n<p>For preorder visit <a href=\"https:\/\/www.packtpub.com\/application-development\/xamarin-mobile-application-development-android-second-edition\" target=\"_blank\">packtpub.com<\/a><\/p>\n<p>Technology trends come and go, but few have generated the excitement, momentum, or long-term impact that mobile computing has. Mobile computing impacts people\u2019s lives at work and at home on a daily basis. Many companies and individual developers are looking to become a part of the movement but are unsure how to best utilize their existing skills and assets. The Xamarin suite of products provides new opportunities to those who already have a significant investment in C# development skills and .NET code bases, and would like to enter into this new, exciting world.<\/p>\n<p>This example-oriented guide provides a practical approach to quickly learn the fundamentals of Android app development using C# and Xamarin.Android. It will lead you through building an Android app step-by-step with steadily increasing complexity.<\/p>\n<p>Beginning with an overview of the Android and Xamarin platforms to provide you with a solid understanding of the underlying platform, we gradually walk through building and testing a Points of Interest Android app using C# and the Xamarin.Android product. You will learn to create ListView and add detail view to your Android application. You will handle application behaviors on orientation changes, before learning the different techniques to manage resources and layouts to support multiple screen sizes. You will then access a SQLite database in a cross-platform way and add location features to your application. Finally, you will add camera integration to your application and deploy your app to the various Android app stores.<br \/>\n<a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\" target=\"_blank\"><img class=\"alignright wp-image-10328\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition.jpg\" alt=\"Xamarin Mobile Application Development for Android - Second Edition\" width=\"203\" height=\"250\" \/><\/a><\/p>\n<h2>About This Book<\/h2>\n<div class=\"book-info-about-text\">\n<ul>\n<li>Build and test multi-view Android applications using Xamarin.Android<\/li>\n<li>Work with device capabilities such as location sensors and the camera<\/li>\n<li>A progressive, hands-on guide to develop stunning Android applications using Xamarin<\/li>\n<\/ul>\n<\/div>\n<h2>What You Will Learn<\/h2>\n<div class=\"book-info-will-learn-text\">\n<ul>\n<li>Build a multi-view, orientation-aware Android application with navigation<\/li>\n<li>Lay out content using the LinearLayout, RelativeLayout, and TableLayout layout managers<\/li>\n<li>Use a ListView (AdapterView) and Adapter to build a view that is populated from server data<\/li>\n<li>Consume REST web service to perform GET, UPDATE, DELETE operation<\/li>\n<li>Use Android SQLite for data persistence and caching<\/li>\n<li>Capture the current location of a device, determine the street address, and integrate with the map app<\/li>\n<li>Test, debug, and deploy an Android app<\/li>\n<\/ul>\n<\/div>\n","excerpt":"<p>Book titled &#8220;Xamarin Mobile Application Development for Android&#8221;\u00a0&#8211; Second Edition is announced\u00a0and\u00a0is available to pre-order. This book is expected\u00a0to be published in\u00a0September 2015. If you are a C# developer who wants to develop Android apps and enhance your existing skill set, then this book is ideal for you. Good working knowledge of C#, .NET, and [&hellip;]<\/p>\n","date":"2015-06-02 23:16:50","modified":"2016-06-05 23:34:51","categories":[{"id":166,"slug":"books","title":"Books","description":"","parent":0,"post_count":3},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32},{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[{"id":269,"slug":"books","title":"Books","description":"","post_count":2}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":9018,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition-Announced.png","slug":"xamarin-mobile-application-development-for-android-second-edition-announced-2","title":"Xamarin Mobile Application Development for Android - Second Edition Announced","description":"Xamarin Mobile Application Development for Android - Second Edition Announced","caption":"","parent":8985,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition-Announced.png","width":1050,"height":411},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition-Announced-620x243.png","width":620,"height":243},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition-Announced.png","width":1050,"height":411},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition-Announced.png","width":1050,"height":411},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition-Announced.png","width":1050,"height":411}}},{"id":10328,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition.jpg","slug":"xamarin-mobile-application-development-for-android-second-edition","title":"Xamarin Mobile Application Development for Android - Second Edition","description":"","caption":"","parent":8985,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition.jpg","width":500,"height":617},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition-292x194.jpg","width":292,"height":194},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition.jpg","width":500,"height":617},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition.jpg","width":500,"height":617},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition.jpg","width":500,"height":617},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition.jpg","width":500,"height":617},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition.jpg","width":500,"height":617},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition-375x195.jpg","width":375,"height":195},"vce-lay-d":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition-145x100.jpg","width":145,"height":100},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition-500x500.jpg","width":500,"height":500},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Xamarin-Mobile-Application-Development-for-Android-Second-Edition-380x260.jpg","width":380,"height":260}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["2137"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3815522698"],"fsb_social_facebook":["0"],"fsb_social_twitter":["2"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-06-02 17:47:16\";}}\";"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"f6e9dd78a2f79fd4991e400d2539d7ae\";s:5:\"pDate\";s:19:\"2015-06-02 17:47:15\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:271:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"595131620\";s:5:\"pDate\";s:19:\"2015-06-02 17:47:22\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"605792800848769025\";s:5:\"pDate\";s:19:\"2015-06-02 17:47:13\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}},{"id":8949,"type":"post","slug":"7-tips-for-mobile-app-project-management","url":"http:\/\/stacktips.com\/blog\/7-tips-for-mobile-app-project-management","status":"publish","title":"7 Tips for Mobile App Project Management","title_plain":"7 Tips for Mobile App Project Management","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='7 Tips for Mobile App Project Management' data-link='http:\/\/stacktips.com\/blog\/7-tips-for-mobile-app-project-management' data-summary=''><\/div>\n<p><span class=\"drop-cap\">I<\/span>t&#8217;s safe to say that mobile app development is just as complex a process as any other IT project. That&#8217;s why strategies used in projects aimed at developing mobile apps are to a large extent similar to those used by managers in other fields. Here are practical tips for making sure you pass the 7 following steps of app development smoothly and efficiently.<\/p>\n<h3>1. Define your objectives<\/h3>\n<p>Every project requires a vision \u2013 your role as manger is to define it and communicate it to your team. It&#8217;s important that you have a deep understanding of your objectives \u2013 only then will you be able to organize and manage the project to match specified requirements. Once you set key details, you&#8217;ll be able to start developing your project timeline and establish a provisional budget.<\/p>\n<h3>2. Make a plan<\/h3>\n<p>As a manger, you&#8217;ll be the one responsible for the execution of the project. Create a thorough plan and stick to it. Assign roles to developers on the basis of their expertise. Your overall plan should suggest your chosen devices, interaction points, number of screens, typical usage patterns and many other characteristics of your mobile app.<\/p>\n<h3>3. Go visual<\/h3>\n<p>Before you set out to the development process itself, it&#8217;s important to know what you&#8217;re aiming for. That&#8217;s the moment for the UI experts to step in and design the visual style of your app. They&#8217;ll make sure that your app offers an engaging user experience and incorporates intuitive call-to-action items to help the app make profit.<\/p>\n<p>Expect a selection of storyboards and mockups to make it your way. They&#8217;ll give you an idea about an interface design together with screen wire frames to show you how the app will look like and function.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/storyboard02.png\"><img class=\"aligncenter wp-image-8969 size-large\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/storyboard02-e1433239564359-940x587.png\" alt=\"storyboard02\" width=\"660\" height=\"412\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/storyboard02-e1433239564359-940x587.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/storyboard02-e1433239564359-300x187.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/storyboard02-e1433239564359-620x387.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/storyboard02-e1433239564359-800x500.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/storyboard02-e1433239564359-1000x625.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/storyboard02-e1433239564359-900x562.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/storyboard02-e1433239564359-370x231.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/storyboard02-e1433239564359.png 1565w\" sizes=\"(max-width: 660px) 100vw, 660px\" \/><\/a><\/p>\n<p style=\"text-align: left;\"><small>Photo credit : ewelinawoloszyn[dot]com<\/small><\/p>\n<h2>4. The development phase<\/h2>\n<p>This is the key moment in making your app come to life \u2013 all the features and functions modeled in previous stages will now become real. Keep tabs on the work of developers as they launch into iterative coding sessions and choose the best algorithms to ensure the app&#8217;s great performance. It&#8217;s a good idea to have a general developer overlooking the process and reporting directly to you \u2013 he&#8217;ll make sure that the coding is clean, robust and efficient.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/The-development-phase.png\"><img class=\"aligncenter size-full wp-image-8972\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/The-development-phase.png\" alt=\"The development phase\" width=\"618\" height=\"248\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/The-development-phase.png 618w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/The-development-phase-300x120.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/The-development-phase-370x148.png 370w\" sizes=\"(max-width: 618px) 100vw, 618px\" \/><\/a><\/p>\n<h3>5. Testing<\/h3>\n<p>Once the app is ready, it&#8217;s time to test it. Even if it takes additional time on your schedule, don&#8217;t complain about it. Testing is that crucial moment when the app is ran on various devices, browsers and platforms to check whether it works smoothly, doesn&#8217;t contain any glitches and looks just like you planned.<\/p>\n<h3>6. Deploying the app<\/h3>\n<p>Once you&#8217;re done testing your app, you&#8217;re ready to deploy it. Choose your marketplace carefully \u2013 perhaps you&#8217;ll need to redefine your marketing strategy once the app is ready and running. Remember that there are many options for deployment apart from iTunes or Google Play store.<\/p>\n<h3>7. Don&#8217;t forget about maintenance<\/h3>\n<p>Once the app is out there and gaining popularity, make sure not to lose sight of it. Read reviews carefully and see whether users point to particular features of the app that negatively impact their experience.<\/p>\n<p>After the first round of user testing, you&#8217;ll be able to make valuable corrections and release the app once more in a new version. That&#8217;s something your marketing team will appreciate as well, as they can build momentum until the very launch of the updated app and leverage the interest for their purposes.<\/p>\n<p>Project management for building mobile apps is much clearer if you approach it in this step by step manner. Follow tips included above and you&#8217;ll be on your way to developing great apps in effective time frames.<\/p>\n<p><strong>Post by<\/strong>: Monique Rivers<\/p>\n<p><em>Monique Rivers is a tech blogger at <a href=\"https:\/\/ninefold.com\/\" target=\"_blank\">Ninefold<\/a>. She\u2019s also interested in digital marketing and photography. Ninefold offers powerful and easy to use cloud hosting infrastructure.<\/em><\/p>\n","excerpt":"<p>It&#8217;s safe to say that mobile app development is just as complex a process as any other IT project. That&#8217;s why strategies used in projects aimed at developing mobile apps are to a large extent similar to those used by managers in other fields. Here are practical tips for making sure you pass the 7 [&hellip;]<\/p>\n","date":"2015-06-02 15:59:41","modified":"2016-05-29 19:22:45","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[],"author":{"id":854,"slug":"guest","name":"Guest","first_name":"Guest","last_name":"Blogger","nickname":"guest","url":"","description":""},"comments":[],"attachments":[{"id":8969,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/storyboard02.png","slug":"storyboard02","title":"storyboard02","description":"","caption":"","parent":8949,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/storyboard02-e1433239564359.png","width":1565,"height":978},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/storyboard02-e1433239564359-620x387.png","width":620,"height":387},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/storyboard02-e1433239564359.png","width":1565,"height":978}}},{"id":8972,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/The-development-phase.png","slug":"the-development-phase","title":"The development phase","description":"","caption":"","parent":8949,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/The-development-phase.png","width":618,"height":248},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/The-development-phase.png","width":618,"height":248},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/The-development-phase.png","width":618,"height":248},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/The-development-phase.png","width":618,"height":248},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/The-development-phase.png","width":618,"height":248},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/The-development-phase.png","width":618,"height":248},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/The-development-phase.png","width":618,"height":248}}},{"id":8973,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management.png","slug":"7-tips-for-mobile-app-project-management","title":"7 Tips for Mobile App Project Management","description":"7 Tips for Mobile App Project Management","caption":"","parent":8949,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management.png","width":680,"height":364},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management-620x332.png","width":620,"height":332},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management.png","width":680,"height":364},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management.png","width":680,"height":364},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management.png","width":680,"height":364},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management.png","width":680,"height":364},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management.png","width":680,"height":364}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:6:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:10:\"show_image\";s:4:\"true\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1965"],"dsq_thread_id":["3814459214"],"fsb_social_facebook":["2"],"fsb_social_twitter":["5"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapDL":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:234:\"a:1:{i:0;a:8:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:153:\"a:1:{i:0;a:5:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management.png","width":680,"height":364},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management-620x332.png","width":620,"height":332},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management.png","width":680,"height":364},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management.png","width":680,"height":364},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management.png","width":680,"height":364},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management.png","width":680,"height":364},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/7-Tips-for-Mobile-App-Project-Management.png","width":680,"height":364}}},{"id":9279,"type":"post","slug":"android-m-feature-highlights-in-the-next-major-android-release","url":"http:\/\/stacktips.com\/blog\/android-m-feature-highlights-in-the-next-major-android-release","status":"publish","title":"Android M &#8211; Feature Highlights in the Next Major Android Release","title_plain":"Android M &#8211; Feature Highlights in the Next Major Android Release","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android M - Feature Highlights in the Next Major Android Release' data-link='http:\/\/stacktips.com\/blog\/android-m-feature-highlights-in-the-next-major-android-release' data-summary=''><\/div>\n<p>Welcome Android M! Android M is the upcoming android version announced that adds up to the count of Android operating system. It is not so long ago, Android Lollipop was released, its successor Android M developer preview is revealed in Google I\/O 2015. Whether it\u2019s related to designing an app\u2019s layout or an entire user interface; Android versions have always been released with innovative trends that have been well embraced by the Android app development community.<\/p>\n<p>[box style=&#8221;0&#8243;]<\/p>\n<p><strong>Release date :<\/strong> \u00a0Android M Developer Preview available today for Nexus 5, 6, 7, 9 and Player. Final version is due to launch in Q3, 2015.<\/p>\n<p>[\/box]<\/p>\n<p>While some of the features were being asked for a while are improved and some of them are completely new. Here are the features highlight of the Android M preview release.<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-improved-app-permissions\">1. Improved App permissions<\/a><\/li><li><a href=\"#2-seamless-web-experience\">2. Seamless Web Experience<\/a><\/li><li><a href=\"#3-deep-app-linking\">3. Deep App Linking<\/a><\/li><li><a href=\"#4-android-pay\">4. Android Pay<\/a><\/li><li><a href=\"#5-inbuilt-fingerprint-support\">5. Inbuilt Fingerprint Support<\/a><\/li><li><a href=\"#6-power-and-charging\">6. Power and Charging<\/a><\/li><li><a href=\"#7-other-features-and-highlights\">7. Other Features and Highlights<\/a><\/li><\/ul><\/div>\n<\/p>\n<p>Let us have a look into each of the features in details and what it means to developers.<\/p>\n<h2><span id=\"1-improved-app-permissions\">1. Improved App permissions<\/span><\/h2>\n<p>So far all of the Android operating system asks user to accept or reject all permission used by application before app is being installed. User was forced to access each of the permissions for installing the app. For example, lets say an application is accessing both contacts and GPS features, but I would like to allow permission for GPS only and decided not to allow contact to be accessed. This was not possible.<\/p>\n<p>Android M finally simplifies app permissions by a great extent! You don\u2019t have to agree to permissions you don\u2019t need anymore. Android M allows you to selectively turn off permissions for specific features, restricting apps from using them. You can choose your permissions and see which apps have access to it.<\/p>\n<p>This is good news for app developers as well as its faster to get users up and running compared to the previous permission model and allow a seamless app install process.<\/p>\n<h2><span id=\"2-seamless-web-experience\">2. Seamless Web Experience<\/span><\/h2>\n<p>Web today is pushing its priority towards mobile as more and more users prefer to browse that way. Android M keeps their experience in mind and provides a better way to improve that very experience.<\/p>\n<p>Custom chrome tabs is one of the recent announcement from Android M. This allows you to open links from within your app into a \u2018Custom Chrome Tab\u2019 that overlays your app screen seamlessly with a transition. The Custom Chrome Tab, adapts to match the look and feel of your app so that you can comfortably browse its content.<\/p>\n<h2><span id=\"3-deep-app-linking\">3. Deep App Linking<\/span><\/h2>\n<p>verify linksApp linking is now made possible with Android M. Links can now be provided in the app via Intents in the Manifest file.<\/p>\n<p>This allows content to be more trusted and verifiable making the user aware of the content before actually tapping on it!<\/p>\n<h2><span id=\"4-android-pay\">4. Android Pay<\/span><\/h2>\n<p>Android Pay Say goodbye to your wallet!\u00a0Your phone\u2019s going to take care of your payments from now on thanks to Android M! Android Pay was made with three things in mind: simplicity, security and choice.\u00a0The payment method is very easy to use and can instantly help you make payments from your phone. This means lesser digging your wallet for those notes, and more of paying quick (like a boss).<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Android-pay.png\"><img class=\"alignright wp-image-9865\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Android-pay.png\" alt=\"Android pay\" width=\"250\" height=\"250\" \/><\/a><\/p>\n<p>The payment process itself is entirely secure in Android M. Being an open source platform, security is one of the highest concerns and Google hasn\u2019t forgotten this.<\/p>\n<p>Virtual Account Number : \u00a0A virtual account number is used the entire time to process the payment. This means that your actual card number is not known or used in the transaction itself.<\/p>\n<p>Android Pay provides users the flexibility and choice in choosing their payment methods. You can hook up any supportive banking app to Android Pay, existing credit or debit cards as well. They\u2019re even working with mobile carries such as Sprint, Verizon and T-Mobile. It works with any devices having NFC support.<\/p>\n<h2><span id=\"5-inbuilt-fingerprint-support\">5. Inbuilt Fingerprint Support<\/span><\/h2>\n<p><img class=\"alignright wp-image-9867\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Fingerpring-scan.png\" alt=\"Fingerpring scan\" width=\"250\" height=\"250\" \/>Honestly, I would\u2019ve flipped, hadn\u2019t Google announced this. We\u2019ve already seen Apple do this on their iPhones putting it to creative uses and its about time Google did with Android too.<\/p>\n<p>Your fingerprint can now be used to process payments, make purchases on the Play Store and even unlock your device!<\/p>\n<p>Any developer could use it within their apps to authenticate either a payment or process using the fingerprint APIs.<\/p>\n<h2><span id=\"6-power-and-charging\">6. Power and Charging<\/span><\/h2>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Faster-charging.png\"><img class=\"alignright wp-image-9868\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Faster-charging.png\" alt=\"Faster charging\" width=\"250\" height=\"222\" \/><\/a><\/p>\n<p>Smartphones always faced the problem of not holding enough charge, and if you\u2019re a mobile data user, you\u2019d probably be tagging along a power brick all the time!<\/p>\n<p>With more features being added in, the gravity of power management went higher. Android M kept this in mind and came up with a solution for it.<\/p>\n<p><strong>Say hello to Doze!<\/strong><\/p>\n<p>Doze is your smart(er) power management solution in Android M. While the device is asleep it manages power smartly, putting the device on a standby mode, while still handling the high priority messages and notifications you receive.<\/p>\n<p>During a test, Android M Developer Preview was capable of lasting x2 times longer than the same device running Android Lollipop.<\/p>\n<h2><span id=\"7-other-features-and-highlights\">7. Other Features and Highlights<\/span><\/h2>\n<p>So thats M.\u00a0While those were definitely the highlights, Android M Developer Preview still had a few aces up its sleeve for the reveal. Smaller, yet significant.<\/p>\n<h4>New USB Type-C Standard<\/h4>\n<p>We\u2019ve seen this in Apple\u2019s new MacBook and we\u2019ve all talked a lot about how not many support it. Google is really pushing this forward with Android M for it to be the new standard.<\/p>\n<p>The new USB type allows for much faster charging of devices. Almost 3-5 times faster! You could either charge using the port, or use the phone itself as a charger for other supporting devices.\u00a0Here comes my favourite feature: The USB pin is finally flippable!<\/p>\n<h4>Improved Word Selection<\/h4>\n<p>Android M finally understood our need to copy paste certain text by letting us do just that, easier, faster and above all, more intuitively. Copying and selecting parts of texts is no longer frustrating and it also provides a hovering Tooltip letting us to select actions such as copy and paste.<\/p>\n<h4>Easier Sharing<\/h4>\n<p>While Android did promote sharing of content\/ media across apps, it really was downright annoying to do so. For instance, I often share on WhatsApp to my circle of friends. Me having to scroll all the way down to choose WhatsApp, isn\u2019t always the easiest thing to do.<\/p>\n<p>Android M gives users easier sharing by providing options to share from apps which you use the most and with which you share more. It now shows you app suggestions accordingly. Neat!<\/p>\n<h4>Simplified Volume Controls<\/h4>\n<p>I don\u2019t know what\u2019s up with Android Lollipop\u2019s volume controls. I mean Material Design was great, I loved it. Was a delight to use, but man those volume controls.<\/p>\n<p>Cheers to the fact that Android M got that straight with simplified volume controls that are easier to use and actually make more sense compared to Lollipop!<\/p>\n","excerpt":"<p>Welcome Android M! Android M is the upcoming android version announced that adds up to the count of Android operating system. It is not so long ago, Android Lollipop was released, its successor Android M developer preview is revealed in Google I\/O 2015. Whether it\u2019s related to designing an app\u2019s layout or an entire user [&hellip;]<\/p>\n","date":"2015-05-29 21:51:46","modified":"2016-05-29 19:22:46","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[{"id":235,"slug":"android-m","title":"Android M","description":"","post_count":1},{"id":234,"slug":"google-io","title":"Google IO","description":"","post_count":1}],"author":{"id":9,"slug":"bibhudatta","name":"Bibhudatta","first_name":"Bibhudatta","last_name":"Panigrahy","nickname":"Bibhudatta","url":"http:\/\/stacktips.com\/author\/bibhudatta\/","description":"She loves coding for web and working with Microsoft Technologies. She has developed enterprise applications with B2B and B2C business models for worlds leading Financial and Retail chain market."},"comments":[],"attachments":[{"id":9318,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","slug":"google-io2015","title":"Google IO2015","description":"Google IO2015","caption":"","parent":9279,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","width":600,"height":339},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","width":600,"height":339},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","width":600,"height":339},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","width":600,"height":339},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","width":600,"height":339},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","width":600,"height":339},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","width":600,"height":339}}},{"id":9865,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Android-pay.png","slug":"android-pay","title":"Android pay","description":"Android pay","caption":"","parent":9279,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Android-pay-e1444229959433.png","width":200,"height":200},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Android-pay-e1444229959433.png","width":200,"height":200},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Android-pay-e1444229959433.png","width":200,"height":200},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Android-pay-e1444229959433.png","width":200,"height":200},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Android-pay-e1444229959433.png","width":200,"height":200},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Android-pay-e1444229959433.png","width":200,"height":200},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Android-pay-e1444229959433.png","width":200,"height":200},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Android-pay-e1444229959433.png","width":200,"height":200},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Android-pay-e1444229959433.png","width":200,"height":200}}},{"id":9867,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Fingerpring-scan.png","slug":"fingerpring-scan","title":"Fingerpring scan","description":"","caption":"","parent":9279,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Fingerpring-scan-e1444229982725.png","width":200,"height":200},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Fingerpring-scan-e1444229982725.png","width":200,"height":200},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Fingerpring-scan-e1444229982725.png","width":200,"height":200},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Fingerpring-scan-e1444229982725.png","width":200,"height":200},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Fingerpring-scan-e1444229982725.png","width":200,"height":200},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Fingerpring-scan-e1444229982725.png","width":200,"height":200},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Fingerpring-scan-e1444229982725.png","width":200,"height":200},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Fingerpring-scan-e1444229982725.png","width":200,"height":200},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Fingerpring-scan-e1444229982725.png","width":200,"height":200}}},{"id":9868,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Faster-charging.png","slug":"faster-charging","title":"Faster charging","description":"","caption":"","parent":9279,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Faster-charging-e1444230002807.png","width":200,"height":178},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Faster-charging-e1444230002807.png","width":200,"height":178},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Faster-charging-e1444230002807.png","width":200,"height":178},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Faster-charging-e1444230002807.png","width":200,"height":178},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Faster-charging-e1444230002807.png","width":200,"height":178},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Faster-charging-e1444230002807.png","width":200,"height":178},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Faster-charging-e1444230002807.png","width":200,"height":178},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Faster-charging-e1444230002807.png","width":200,"height":178},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Faster-charging-e1444230002807.png","width":200,"height":178},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Faster-charging-e1444230002807.png","width":200,"height":178}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:28:\"https:\/\/youtu.be\/7V-fIGMDsmE\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["1325"],"fsb_social_facebook":["0"],"fsb_social_twitter":["2"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3884585313"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-06-27 16:52:04\";}}\";"],"snapImportedComments":["a:0:{}"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"30e3d15cec7a91018027df61d9f9ef3e\";s:5:\"pDate\";s:19:\"2015-06-27 16:52:06\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"604901344\";s:5:\"pDate\";s:19:\"2015-06-27 16:52:07\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"614838618499100672\";s:5:\"pDate\";s:19:\"2015-06-27 16:52:05\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","width":600,"height":339},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","width":600,"height":339},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","width":600,"height":339},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","width":600,"height":339},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","width":600,"height":339},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","width":600,"height":339},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Google-IO2015.png","width":600,"height":339}}},{"id":8944,"type":"post","slug":"sharedpreferences-example-in-xamarin-android","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/sharedpreferences-example-in-xamarin-android","status":"publish","title":"SharedPreferences Example in Xamarin Android","title_plain":"SharedPreferences Example in Xamarin Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='SharedPreferences Example in Xamarin Android' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/sharedpreferences-example-in-xamarin-android' data-summary='Shared preferences are persistence key\/value data pairs, used to store primitive data pairs such as bool, float, int, string and long. The data saved into android preference are persisted across different user sessions and is private to the application it is created. Any other application cannot access to it.'><\/div>\n<p>Shared preferences are persistence key\/value data pairs, used to store primitive data pairs such as bool, float, int, string and long. The data saved into android preference are persisted across different user sessions and is private to the application it is created. Any other application cannot access to it.<\/p>\n<p>For using shared preference to saving data pairs, you need first get an instance of <code>ISharedPreferences<\/code> interface. A shared preference can be specific to an activity or made global to all activities in the application. If you want to create a single preference file specific to an activity you can use <code>Activity.GetPreferences<\/code> to initialize ISharedPreferences interface. For getting the application level preference, you can call <code>GetSharedPreferences<\/code> method passing the preference name and mode of operation.<\/p>\n<pre class=\"prettyprint lang-cs\">ISharedPreferences prefs = Application.Context.GetSharedPreferences (\"PREF_NAME\", FileCreationMode.Private);<\/pre>\n<p>Now let us call <code>Edit()<\/code> to get an instance of <code>ISharedPreferencesEditor<\/code>. This batches all of the changes made to value in shred preferences and saves only when there is a call to <code>Commit()<\/code> or <code>Apply()<\/code> is made.<\/p>\n<pre class=\"prettyprint lang-cs\">ISharedPreferencesEditor editor = prefs.Edit();\r\neditor.PutInt(\"your_key1\" ,10);\r\neditor.PutString(\"your_key2\", \"Xamarin Example\");\r\neditor.Apply();\r\n<\/pre>\n<p>To read values from shared preferences, we can use methods such as <code>GetString()<\/code>, <code>GetInt()<\/code>, <code>GetFloat()<\/code> etc. by providing proper key. The following snippets retrieves the values stored in the above step.<\/p>\n<pre class=\"prettyprint lang-cs\">var value1 = prefs.GetInt (\"your_key1\", 0);\r\nvar value2 = prefs.GetString (\"your_key2\", null);\r\n<\/pre>\n","excerpt":"<p>Shared preferences are persistence key\/value data pairs, used to store primitive data pairs such as bool, float, int, string and long. The data saved into android preference are persisted across different user sessions and is private to the application it is created. Any other application cannot access to it.<\/p>\n","date":"2015-05-29 06:41:14","modified":"2015-12-01 18:57:28","categories":[{"id":211,"slug":"net","title":".NET","description":"","parent":297,"post_count":3},{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8423,"name":"Kunal Prajapati","url":"","date":"2016-03-03 17:15:00","content":"<p>how to change the background color of the entire app through settings activity<\/p>\n","parent":0},{"id":8424,"name":"Kunal Prajapati","url":"","date":"2016-03-03 20:20:00","content":"<p>how to change the background color of the entire app through settings activity<\/p>\n","parent":0}],"attachments":[{"id":8966,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","slug":"xamarin-tutorials-2","title":"Xamarin Tutorials","description":"","caption":"","parent":8944,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}}],"comment_count":2,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["3091"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4876445122"],"fsb_social_facebook":["0"],"fsb_social_twitter":["1"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-05-29 01:11:39\";}}\";"],"snapImportedComments":["a:0:{}"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"f4abce192cdc849c38cd7ae19545e545\";s:5:\"pDate\";s:19:\"2015-05-29 01:11:40\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"593493394\";s:5:\"pDate\";s:19:\"2015-05-29 01:11:38\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"604092717396676608\";s:5:\"pDate\";s:19:\"2015-05-29 01:11:42\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}},{"id":10269,"type":"post","slug":"google-has-recently-released-beta-version-of-a-publisher-plugin-for-wordpress","url":"http:\/\/stacktips.com\/news\/google-has-recently-released-beta-version-of-a-publisher-plugin-for-wordpress","status":"publish","title":"Google has Recently Released Beta Version of a Publisher Plugin for WordPress","title_plain":"Google has Recently Released Beta Version of a Publisher Plugin for WordPress","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Google has Recently Released Beta Version of a Publisher Plugin for WordPress' data-link='http:\/\/stacktips.com\/news\/google-has-recently-released-beta-version-of-a-publisher-plugin-for-wordpress' data-summary=''><\/div>\n<p>Google publisher plugin connects your self hosted WordPress website with Google AdSense publisher console. This gives direct access to monazite your website property without leaving your WordPress admin console.<\/p>\n<p>What you can do with the Google Publisher plugin?<\/p>\n<ul>\n<li>The plugin integrates with your Google AdSense account. This means now you don\u2019t need to worry about any other third party plugin for manual code placemat into your website. It is now made handy to place code and monetise your ad space efficiently.<\/li>\n<li>It also supports Google webmaster tools. The webmaster\u00a0tool provides the\u00a0detailed report about your page visibility on Google. The plugin allows you to verify your site on Webmaster Tools with just one click.<\/li>\n<\/ul>\n<p>To install and use this plugin into your WordPress installation, you need to have the following minimum configurations<\/p>\n<p>PHP version: minimum 5.2.0<\/p>\n<p>WordPress: minimum 3.0<\/p>\n","excerpt":"<p>Google publisher plugin connects your self hosted WordPress website with Google AdSense publisher console. This gives direct access to monazite your website property without leaving your WordPress admin console. What you can do with the Google Publisher plugin? The plugin integrates with your Google AdSense account. This means now you don\u2019t need to worry about [&hellip;]<\/p>\n","date":"2015-05-01 20:57:59","modified":"2016-05-29 21:01:03","categories":[{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":10270,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress.png","slug":"publisher-plugin-for-wordpress","title":"Publisher-plugin-for-WordPress","description":"","caption":"","parent":10269,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress.png","width":641,"height":412},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress-620x399.png","width":620,"height":399},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress.png","width":641,"height":412},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress.png","width":641,"height":412},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress.png","width":641,"height":412},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress.png","width":641,"height":412},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress.png","width":641,"height":412}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"snap_isAutoPosted":["1"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:166:\"a:1:{i:0;a:6:{s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doDL\";s:1:\"1\";}}\";"],"snapFB":["s:392:\"a:1:{i:0;a:13:{s:2:\"do\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doFB\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"228850867127175_1226869907325261\";s:5:\"pDate\";s:19:\"2016-05-29 15:31:28\";}}\";"],"snapTW":["s:297:\"a:1:{i:0;a:10:{s:2:\"do\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:4:\"doTW\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"736943050941812738\";s:5:\"pDate\";s:19:\"2016-05-29 15:31:30\";}}\";"],"snapIP":["s:235:\"a:1:{i:0;a:8:{s:2:\"do\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:4:\"doIP\";s:1:\"1\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"729951829\";s:5:\"pDate\";s:19:\"2016-05-29 15:31:33\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress.png","width":641,"height":412},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress-620x399.png","width":620,"height":399},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress.png","width":641,"height":412},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress.png","width":641,"height":412},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress.png","width":641,"height":412},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress.png","width":641,"height":412},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2016\/05\/Publisher-plugin-for-WordPress.png","width":641,"height":412}}},{"id":8842,"type":"post","slug":"our-apologies-for-server-downtime-this-evening","url":"http:\/\/stacktips.com\/blog\/our-apologies-for-server-downtime-this-evening","status":"publish","title":"Our Apologies for Server Downtime This Evening","title_plain":"Our Apologies for Server Downtime This Evening","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Our Apologies for Server Downtime This Evening' data-link='http:\/\/stacktips.com\/blog\/our-apologies-for-server-downtime-this-evening' data-summary=''><\/div>\n<p>Dear Readers,<\/p>\n<p>Some of you may have noticed that out site JavaTechig experienced an extended downtime this evening for about two hours. It stopped our reader to access the site or saw a little weird error notice. Unfortunately, we had a key server crash during our routine maintenance, and it took much longer for us to restore the services back in action. The good news is that everything on the site is back in action and working properly now.  If you are still experiencing any issues, please let us know and we&#8217;ll look into them ASAP. <\/p>\n<p>We sincerely apologize for any inconvenience caused during the downtime. We will be more cautioned and will do the required infrastructure modifications to avoid such undesirable downtime in the future, or to minimize to very least. <\/p>\n<p>So sorry again for the inconvenience.  We hope you&#8217;re all enjoying the site otherwise.<\/p>\n<p>Thank you!<\/p>\n","excerpt":"<p>Dear Readers, Some of you may have noticed that out site JavaTechig experienced an extended downtime this evening for about two hours. It stopped our reader to access the site or saw a little weird error notice. Unfortunately, we had a key server crash during our routine maintenance, and it took much longer for us [&hellip;]<\/p>\n","date":"2015-04-01 20:32:14","modified":"2016-05-29 19:22:48","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[],"author":{"id":855,"slug":"javatechig","name":"JAVATECHIG","first_name":"Javatechig","last_name":"","nickname":"JAVATECHIG","url":"http:\/\/stacktips.com","description":"Provides tutorials, tips, examples and source code on leading Java, Android, Blackberry, PhoneGap and related mobile technologies."},"comments":[],"attachments":[{"id":8843,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","slug":"website-maintenance","title":"Website Maintenance","description":"Website Maintenance","caption":"","parent":8842,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3646195690"],"post_views_count":["1421"],"fsb_social_facebook":["1"],"fsb_social_twitter":["2"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-04-01 15:02:39\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"75b043818a4ca859af5e8610027580d6\";s:5:\"pDate\";s:19:\"2015-04-01 15:02:39\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"571281004\";s:5:\"pDate\";s:19:\"2015-04-01 15:02:41\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"583283344470757377\";s:5:\"pDate\";s:19:\"2015-04-01 15:02:40\";}}\";"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/04\/Website-Maintenance.jpg","width":370,"height":220}}},{"id":8808,"type":"post","slug":"android-dialog-fragment-example","url":"http:\/\/stacktips.com\/tutorials\/android\/android-dialog-fragment-example","status":"publish","title":"Android Dialog Fragment Example","title_plain":"Android Dialog Fragment Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android Dialog Fragment Example' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-dialog-fragment-example' data-summary='Dialog is like any other window that pops up in front of current window, used to show some short message, taking user input or to accept users decision. Unlike Toast, a dialog is generally used where user attention is mandate.'><\/div>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-introduction\">1. Introduction<\/a><\/li><li><a href=\"#2-creating-dialog-fragment\">2. Creating dialog fragment<\/a><\/li><li><a href=\"#3-defining-dialog-fragment-layout\">3. Defining dialog fragment layout<\/a><\/li><li><a href=\"#4-displaying-dialog-fragment\">4. Displaying dialog fragment<\/a><\/li><li><a href=\"#5-dismiss-dialog-fragment\">5. Dismiss dialog fragment<\/a><\/li><li><a href=\"#6-dialog-fragment-using-oncreatedialog\">6. Dialog Fragment using onCreateDialog()<\/a><\/li><\/ul><\/div>\n<\/p>\n<h1><span id=\"1-introduction\">1. Introduction<\/span><\/h1>\n<p>Dialog is like any other window that pops up in front of current window, used to show some short message, taking user input or to accept users decision. Unlike Toast, a dialog is generally used where user attention is mandate. Android supports several different ways to create a dialog such as <code>AlertDialog<\/code> and <code>FragmentDialog<\/code>. This example will widely cover all the aspect of DialogFragment.<\/p>\n<p>Since the release of Android 3.0 (API level 11), fragment can show as a dialog and called as <code>DialogFragment<\/code>. If you&#8217;re supporting older android versions, you can make use of fragment-compatibility support library.<\/p>\n<p>To create a dialog fragment, we will be using <code>android.app.DialogFragment<\/code> class. This class is derived from the Fragment and behaves much like a fragment with all available fragment life cycle methods.<\/p>\n<p>In the following sections, you learn how to use dialog fragment to show a simple alert dialog from activity.<\/p>\n<h1><span id=\"2-creating-dialog-fragment\">2. Creating dialog fragment<\/span><\/h1>\n<p>First step towards creating dialog fragment is to create a new class and extend it from DialogFragment. In the following code snippet, I am creating a new class named <code>MyDialogFragment<\/code>.<\/p>\n<pre class=\"prettyprint lang-java\">public class MyDialogFragment extends DialogFragment {\r\n\r\n}<\/pre>\n<p>As a DialogFragment is much like any other fragment, the same lifecycle rules are applied. Now we have to override <code>onCreateView<\/code> or <code>onCreateDialog<\/code> method to provide the view hierarchy and construct the dialog fragment.<\/p>\n<pre class=\"prettyprint lang-java\">public class MyDialogFragment extends DialogFragment {\r\n    \r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        View rootView = inflater.inflate(R.layout.fragment_sample_dialog, container, false);\r\n        getDialog().setTitle(\"Simple Dialog\");\r\n        return rootView;\r\n    }\r\n}<\/pre>\n<p>In the above code, the <code>onCreateView()<\/code> method is expected to return the instance of view that represent the view hierarchy for your dialog. The instance of layout inflater can be used to inflate the layout for the fragment. ViewGroup represents the parent view where the fragment to be attached, and the Bundle param is the saved bundle data if available to restore the fragment to previous state.<\/p>\n<h1><span id=\"3-defining-dialog-fragment-layout\">3. Defining dialog fragment layout<\/span><\/h1>\n<p>Notice that, we are using <code>fragment_sample_dialog<\/code> layout form <code>onCreateView()<\/code> method, which is not declared anywhere. Let us create a simple layout that displays an ImageView and TextView as shown in the following screenshot.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:gravity=\"center\"\r\n    android:padding=\"10dp\"\r\n    android:orientation=\"vertical\"&gt;\r\n\r\n    &lt;ImageView\r\n        android:id=\"@+id\/image\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:src=\"@drawable\/image\" \/&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id\/title\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Lorem ipsum dolor sit amet...\"\r\n        android:textSize=\"20dp\" \/&gt;\r\n\r\n    &lt;Button\r\n        android:id=\"@+id\/dismiss\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Dismiss\" \/&gt;\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<h1><span id=\"4-displaying-dialog-fragment\">4. Displaying dialog fragment<\/span><\/h1>\n<p>We are pretty much done with creating dialog fragment. Put the following code snippet in Activity to show the dialog when user clicks on the button.<\/p>\n<pre class=\"prettyprint lang-java\">FragmentManager fm = getFragmentManager();\r\nMyDialogFragment dialogFragment = new MyDialogFragment ();\r\ndialogFragment.show(fm, \"Sample Fragment\");\r\n<\/pre>\n<p>At this point we can run the application and it will produce the output as shown in the following screenshot.<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-DialogFragment-Example.png\"><img class=\"aligncenter size-full wp-image-8811\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-DialogFragment-Example.png\" alt=\"Android DialogFragment Example\" width=\"800\" height=\"465\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-DialogFragment-Example.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-DialogFragment-Example-300x174.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-DialogFragment-Example-620x360.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-DialogFragment-Example-370x215.png 370w\" sizes=\"(max-width: 800px) 100vw, 800px\" \/><\/a><\/p>\n<h1><span id=\"5-dismiss-dialog-fragment\">5. Dismiss dialog fragment<\/span><\/h1>\n<p>Dialog fragment can be dismissed by calling <code>dismiss()<\/code> method from <code>MyDialogFragment<\/code> class. Place the following code snippet in MyDialogFragment <code>onCreateView()<\/code> method before return statement to dismiss the dialog when user clicks on Dismiss button.<\/p>\n<pre class=\"prettyprint lang-java\">Button dismiss = (Button) rootView.findViewById(R.id.dismiss);\r\ndismiss.setOnClickListener(new View.OnClickListener() {\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n          dismiss();\r\n    }\r\n});\r\n<\/pre>\n<p>The fragment dialog dismiss() method dismiss the dialog by removes the fragment from fragment manager, and then commit the fragment transaction.<\/p>\n<h1><span id=\"6-dialog-fragment-using-oncreatedialog\">6. Dialog Fragment using onCreateDialog()<\/span><\/h1>\n<p>There are two approaches to attach view group hierarchy to a dialog. Either we can override <code>onCreateView()<\/code> method and inflate layout as we have done in the step, or alternatively we can override <code>onCreateDialog()<\/code> method and supply a dialog instance. The following code hows how to create dialog fragment using onCreateDialog method.<\/p>\n<pre class=\"prettyprint lang-java\">@Override\r\npublic Dialog onCreateDialog(Bundle savedInstanceState) {\r\n    AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n    builder.setTitle(\"Simple Dialog\");\r\n    builder.setMessage(\"Some message here\");\r\n\r\n    builder.setPositiveButton(\"Ok\", new DialogInterface.OnClickListener() {\r\n        @Override\r\n        public void onClick(DialogInterface dialog, int which) {\r\n            dismiss();\r\n        }\r\n    });\r\n\r\n    builder.setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n        @Override\r\n        public void onClick(DialogInterface dialog, int which) {\r\n            dismiss();\r\n        }\r\n    });\r\n\r\n    return builder.create();\r\n}<\/pre>\n","excerpt":"<p>Dialog is like any other window that pops up in front of current window, used to show some short message, taking user input or to accept users decision. Unlike Toast, a dialog is generally used where user attention is mandate.<\/p>\n","date":"2015-03-28 05:10:03","modified":"2015-07-29 14:14:32","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":44,"slug":"android-basics","title":"Android Basics","description":"","post_count":23},{"id":45,"slug":"android-how-tos","title":"Android How To's","description":"","post_count":13},{"id":30,"slug":"code-sample","title":"Code Sample","description":"","post_count":26}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8388,"name":"Iskas","url":"","date":"2016-02-19 03:21:00","content":"<p>Good tutorial but its not detailed written . On wich button opet this dialog ?<\/p>\n","parent":0}],"attachments":[{"id":8811,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-DialogFragment-Example.png","slug":"android-dialogfragment-example","title":"Android DialogFragment Example","description":"Android DialogFragment Example","caption":"","parent":8808,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-DialogFragment-Example.png","width":800,"height":465},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-DialogFragment-Example-620x360.png","width":620,"height":360},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-DialogFragment-Example.png","width":800,"height":465},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-DialogFragment-Example.png","width":800,"height":465},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-DialogFragment-Example.png","width":800,"height":465},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-DialogFragment-Example.png","width":800,"height":465},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-DialogFragment-Example.png","width":800,"height":465}}}],"comment_count":1,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3782192513"],"post_views_count":["9617"],"fsb_social_facebook":["3"],"fsb_social_twitter":["1"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-03-27 23:40:42\";}}\";"],"snapImportedComments":["a:0:{}"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"f7d281f2d1d2fea7722423190f9d6d21\";s:5:\"pDate\";s:19:\"2015-03-27 23:40:43\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"569582331\";s:5:\"pDate\";s:19:\"2015-03-27 23:40:42\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"581601782641483776\";s:5:\"pDate\";s:19:\"2015-03-27 23:40:44\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":8753,"type":"post","slug":"android-developer-days-2015-waits-you","url":"http:\/\/stacktips.com\/blog\/android-developer-days-2015-waits-you","status":"publish","title":"Android Developer Days 2015 Waits You","title_plain":"Android Developer Days 2015 Waits You","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android Developer Days 2015 Waits You' data-link='http:\/\/stacktips.com\/blog\/android-developer-days-2015-waits-you' data-summary='Preparations for Android Developer Days 2015 continue. In addition to talks made by experts on their fields, there will be many workshops like Android 101, Cardboard, Android Wear. There will also be a hackathon that will last 24 hours.'><\/div>\n<p>Preparations for Android Developer Days 2015 continue. In addition to talks made by experts on their fields, there will be many workshops like Android 101, Cardboard, Android Wear. There will also be a hackathon that will last 24 hours.<\/p>\n<p>Android Developer Days is going to take place in <strong>METU Cultural and Convention Center, Ankara, Turkey on May 11\/12 2015<\/strong>. It is again free and open to everyone. We are again open to add new organizers to conference. Let\u2019s be together and grow this community event together. Please keep in mind, a retweet is also a support for this event and community.<\/p>\n<p>Here is the <a href=\"http:\/\/www.androiddeveloperday.com\/2015\/register\/\" target=\"_blank\">registration page<\/a> of ADD 2015, you can register for free.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days.jpg\"><img class=\"aligncenter size-full wp-image-8754\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days.jpg\" alt=\"Android Developer Days\" width=\"920\" height=\"518\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days.jpg 920w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-300x169.jpg 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-620x349.jpg 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-800x450.jpg 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-900x507.jpg 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-370x208.jpg 370w\" sizes=\"(max-width: 920px) 100vw, 920px\" \/><\/a><\/p>\n<h2>Share Your Knowledge and Experience in ADD<\/h2>\n<p>Developer events are great places for meeting other developers. You can learn many things from other developers. And also you can share your knowledge and experience with other developers. You can inspire many people with your talk. If you don\u2019t want to miss this opportunity, you can apply and become a speaker at Android Developer Days. Here is the <a href=\"http:\/\/goo.gl\/forms\/QLDW6s9gzn\" target=\"_blank\">Android Developer Days Call For Papers Form <\/a>. You can submit any subject including the subjects <a href=\"http:\/\/www.androiddeveloperdays.com\/2015\/blog\/share-your-knowledge-and-experience-in-add\/\" target=\"_blank\">here<\/a>. Deadline for Call For Papers is <strong>1st April 2015<\/strong>. Don\u2019t be late, For attendees, register for free on <a href=\"http:\/\/www.androiddeveloperdays.com\/2015\/blog\/share-your-knowledge-and-experience-in-add\/\" target=\"_blank\">Registration Web Page <\/a>.<\/p>\n<h2>Featured Speakers are Announced<\/h2>\n<p>You can listen and ask questions to the experts directly. It is will be a great opportunity to contact them directly.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADD-Featured-Speakers.png\"><img class=\"aligncenter size-full wp-image-8755\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADD-Featured-Speakers.png\" alt=\"ADD Featured Speakers\" width=\"938\" height=\"246\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADD-Featured-Speakers.png 938w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADD-Featured-Speakers-300x79.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADD-Featured-Speakers-620x163.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADD-Featured-Speakers-800x210.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADD-Featured-Speakers-900x236.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADD-Featured-Speakers-370x97.png 370w\" sizes=\"(max-width: 938px) 100vw, 938px\" \/><\/a><\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADW-Speakers.png\"><img class=\"aligncenter size-full wp-image-8756\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADW-Speakers.png\" alt=\"ADD Speakers\" width=\"893\" height=\"550\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADW-Speakers.png 893w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADW-Speakers-300x185.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADW-Speakers-620x382.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADW-Speakers-800x493.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADW-Speakers-370x228.png 370w\" sizes=\"(max-width: 893px) 100vw, 893px\" \/><\/a><\/p>\n","excerpt":"<p>Preparations for Android Developer Days 2015 continue. In addition to talks made by experts on their fields, there will be many workshops like Android 101, Cardboard, Android Wear. There will also be a hackathon that will last 24 hours.<\/p>\n","date":"2015-03-25 13:50:51","modified":"2016-05-29 19:22:49","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[],"author":{"id":854,"slug":"guest","name":"Guest","first_name":"Guest","last_name":"Blogger","nickname":"guest","url":"","description":""},"comments":[],"attachments":[{"id":8754,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days.jpg","slug":"android-developer-days","title":"Android Developer Days","description":"Android Developer Days","caption":"","parent":8753,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days.jpg","width":920,"height":518},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-620x349.jpg","width":620,"height":349},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days.jpg","width":920,"height":518},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days.jpg","width":920,"height":518}}},{"id":8755,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADD-Featured-Speakers.png","slug":"add-featured-speakers","title":"ADD Featured Speakers","description":"ADD Featured Speakers","caption":"","parent":8753,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADD-Featured-Speakers.png","width":938,"height":246},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADD-Featured-Speakers-620x163.png","width":620,"height":163},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADD-Featured-Speakers.png","width":938,"height":246},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADD-Featured-Speakers.png","width":938,"height":246},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADD-Featured-Speakers.png","width":938,"height":246}}},{"id":8756,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADW-Speakers.png","slug":"adw-speakers","title":"ADD Speakers","description":"ADD Speakers","caption":"","parent":8753,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADW-Speakers.png","width":893,"height":550},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADW-Speakers-620x382.png","width":620,"height":382},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADW-Speakers.png","width":893,"height":550},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ADW-Speakers.png","width":893,"height":550}}},{"id":8759,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015.png","slug":"android-developer-days-2015","title":"Android Developer Days 2015","description":"Android Developer Days 2015","caption":"","parent":8753,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015.png","width":800,"height":485},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015.png","width":800,"height":485},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015.png","width":800,"height":485},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015.png","width":800,"height":485},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015.png","width":800,"height":485},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015.png","width":800,"height":485}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:6:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:10:\"show_image\";s:4:\"true\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3624742774"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapDL":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:234:\"a:1:{i:0;a:8:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:153:\"a:1:{i:0;a:5:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"post_views_count":["1365"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015.png","width":800,"height":485},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015-620x376.png","width":620,"height":376},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015.png","width":800,"height":485},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015.png","width":800,"height":485},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015.png","width":800,"height":485},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015.png","width":800,"height":485},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Android-Developer-Days-2015.png","width":800,"height":485}}},{"id":8743,"type":"post","slug":"how-to-add-event-to-calendar-in-android","url":"http:\/\/stacktips.com\/tutorials\/android\/how-to-add-event-to-calendar-in-android","status":"publish","title":"How to Add an Event to Device Calendar in Android","title_plain":"How to Add an Event to Device Calendar in Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Add an Event to Device Calendar in Android' data-link='http:\/\/stacktips.com\/tutorials\/android\/how-to-add-event-to-calendar-in-android' data-summary='In this post, we will learn how to add an event to your device calendar. Android allows us to invoke activities from other application using intent. Here in this example, we will be using the appropriate intent to invoke the default calendar application, and pre-filled with event details. User must must confirm to add the event, or can change, edit any of the details associated with a particular events.'><\/div>\n<p>In this post, we will learn how to add an event to your device calendar in android.<\/p>\n<p>Android allows us to invoke activities from other application using intent. Here in this example, we will be using the appropriate intent to invoke the default calendar application, and pre-filled with event details. User must must confirm to add the event, or can change, edit any of the details associated with a particular events.<\/p>\n<p>Use the following code snippet to invoke the default calendar event.<\/p>\n<pre class=\"prettyprint lang-java\">Intent intent = new Intent(Intent.ACTION_INSERT_OR_EDIT);\r\nintent.setType(\"vnd.android.cursor.item\/event\");\r\nstartActivity(intent);\r\n<\/pre>\n<p>The above snippet will invoke the calendar application with empty fields and allow user to enter the event details before adding. However, you can pre-fill the event details by passing the details in the form of intent extras. The Extras values describes the event details, such as event start time, event end time, event title, event description, etc.<\/p>\n<p>The following two class are important to understand for adding the events.<\/p>\n<ol>\n<li><code>CalendarContract<\/code> : Defines the data model of calendar and event related information. This data is stored in a number of tables, listed below.<\/li>\n<li><code>CalendarContract.Events<\/code>: This table holds the event-specific information. Each row in this table has the information for a single event\u2014for example, event title, location, start time, end time, and so on. The event can occur one-time or can recur multiple times. Attendees, reminders, and extended properties are stored in separate tables. They each have an EVENT_ID that references the _ID in the Events table.<\/li>\n<\/ol>\n<p>The following code bundle can be used to pass the information to calendar intent.<\/p>\n<pre class=\"prettyprint lang-cs\">intent.putExtra(CalendarContract.EXTRA_EVENT_BEGIN_TIME, startTime);\r\nintent.putExtra(CalendarContract.EXTRA_EVENT_END_TIME,endTime);\r\nintent.putExtra(CalendarContract.EXTRA_EVENT_ALL_DAY, true);\r\nintent.putExtra(Events.TITLE, \"Neel Birthday\");\r\nintent.putExtra(Events.DESCRIPTION, \"This is a sample description\");\r\nintent.putExtra(Events.EVENT_LOCATION, \"My Guest House\");\r\nintent.putExtra(Events.RRULE, \"FREQ=YEARLY\");\r\n<\/pre>\n<p>Most of the statements except the RRULE are self explanatory. The RRULE defines the repeat frequency for the events and follows the standard iCalendar recurrence rule format (see <a href=\"http:\/\/www.kanzaki.com\/docs\/ical\/rrule.html\" target=\"_blank\">RFC 5544<\/a> for details).<\/p>\n<p>Output of the above code is as follows.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/How-to-add-event-to-calendar-in-Android.png\"><img class=\"aligncenter size-full wp-image-8749\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/How-to-add-event-to-calendar-in-Android.png\" alt=\"How to add event to calendar in Android\" width=\"920\" height=\"650\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/How-to-add-event-to-calendar-in-Android.png 920w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/How-to-add-event-to-calendar-in-Android-300x212.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/How-to-add-event-to-calendar-in-Android-620x438.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/How-to-add-event-to-calendar-in-Android-800x565.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/How-to-add-event-to-calendar-in-Android-900x636.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/How-to-add-event-to-calendar-in-Android-370x261.png 370w\" sizes=\"(max-width: 920px) 100vw, 920px\" \/><\/a><\/p>\n<p><a class = 'ss-button dowload-button' href='https:\/\/github.com\/javatechig\/Add-Calendar-Event-Android' target='_blank'>Download from GitHub.<\/a><\/p>\n","excerpt":"<p>In this post, we will learn how to add an event to your device calendar. Android allows us to invoke activities from other application using intent. Here in this example, we will be using the appropriate intent to invoke the default calendar application, and pre-filled with event details. User must must confirm to add the event, or can change, edit any of the details associated with a particular events.<\/p>\n","date":"2015-03-25 04:45:31","modified":"2015-07-29 14:14:59","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":30,"slug":"code-sample","title":"Code Sample","description":"","post_count":26},{"id":40,"slug":"how-tos","title":"How To's","description":"","post_count":7},{"id":147,"slug":"qa","title":"Q&amp;A","description":"","post_count":4}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8006,"name":"m","url":"","date":"2015-05-16 21:30:00","content":"<p>hello<\/p>\n","parent":0},{"id":8383,"name":"agnana","url":"","date":"2016-02-16 14:27:00","content":"<p>hello<\/p>\n","parent":8006}],"attachments":[{"id":8749,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/How-to-add-event-to-calendar-in-Android.png","slug":"how-to-add-event-to-calendar-in-android","title":"How to add event to calendar in Android","description":"","caption":"","parent":8743,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/How-to-add-event-to-calendar-in-Android.png","width":920,"height":650},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/How-to-add-event-to-calendar-in-Android-620x438.png","width":620,"height":438},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/How-to-add-event-to-calendar-in-Android.png","width":920,"height":650},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/How-to-add-event-to-calendar-in-Android.png","width":920,"height":650}}}],"comment_count":2,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3623887509"],"post_views_count":["7131"],"fsb_social_facebook":["2"],"fsb_social_twitter":["4"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snapImportedComments":["a:0:{}"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-03-24 23:16:02\";}}\";"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"b7e3dfb45b4f3ecdc2320dfa914ad90f\";s:5:\"pDate\";s:19:\"2015-03-24 23:16:01\";}}\";"],"snapFB":["s:261:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"568322952\";s:5:\"pDate\";s:19:\"2015-03-24 23:16:00\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"580508403665149952\";s:5:\"pDate\";s:19:\"2015-03-24 23:16:03\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials-620x388.jpg","width":620,"height":388},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/07\/Android-Development-Tutorials.jpg","width":640,"height":400}}},{"id":8562,"type":"post","slug":"8-surefire-tips-for-your-mobile-app-success","url":"http:\/\/stacktips.com\/blog\/8-surefire-tips-for-your-mobile-app-success","status":"publish","title":"8 Surefire Tips For Your Mobile App Success","title_plain":"8 Surefire Tips For Your Mobile App Success","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='8 Surefire Tips For Your Mobile App Success' data-link='http:\/\/stacktips.com\/blog\/8-surefire-tips-for-your-mobile-app-success' data-summary=''><\/div>\n<p>Be it Java or any other platform, Android or other OS\u2019s,mobile app development is everywhere and a popular revenue source for developers. Yet, only a fraction of them taste success. Whether it\u2019s an app for commercial use or an enterprise rollout,the goal of any app is to get user acceptance and adoption.Irrespective of the platform, there are a few basic pointers that are common. With that in mind, we\u2019ve put together some tips to make your app concept as fool proof as possible because it is just too easy to go unnoticed.<\/p>\n<h2>Get Your ResearchHatOn!<\/h2>\n<p>You think your app idea is awesome. It could truly be, yet, double-checking the app storeand a simple Google search will save you a lot of time (and money). Knowing what\u2019s out there only helps refine and avoid pitfalls or failure.<\/p>\n<p>From our experience, the \u201cresearch phase\u201d of your app plan should be your first priority. You should conduct thorough research of the mobile app landscape, in particular, looking to seeif your app idea is unique or not. Also, if your idea already has been developed and is in the market. If it does exist, don\u2019t be discouraged. This may actually be a positive. Look at existing apps and see how your idea could build features that help your app stand apart. At times, a few little enhancements or integrations can do wonders and rocket your app to unexpected levels. The bottom line: Research, research, research!<\/p>\n<h2>Take The Platform Quiz Early<\/h2>\n<p>This is probably the easiest one: Which platform should you develop on? Well, there are only two platforms to compare \u2013 Apple &amp; Android. Currently, there are more Android phones being sold than Apple. But, stats aren\u2019t everything. For your app, think about the user type\/the market and then what device that user is most likely to use. Align your solution with respect to the potential device; meaning to target one device at one given point of time. Once it clicks, you could proceed on to the other platform better prepared and more confidence.<\/p>\n<h2>Make Sure Your App AddsValue<\/h2>\n<p>By now you should have an idea of why your app is unique\/how it helps and adds value to users. It\u2019s no secret that the app market is thriving, owing to the thousands of available apps, hence it is imperative to offer something extra (a.k.a add value to the users). One of the best ways is to reward the users each time they use your app &#8211; it could be anything, such as offering discounts for in \u2013app purchase oroffering more informative content, special offers and so on.<\/p>\n<h2>Have A Great App Design<\/h2>\n<p>First impressions are extremely important for apps \u2013 in order for your app to succeed, it has to look\/feel great. The look and the feel of your app is going to influence adoption of your app and if will be successful. Make sure the images, graphics and the pictures are high resolution and the color definitions are crystal clear irrespective of the OS and the device.<\/p>\n<h2>Make Sure The FunctionalityIs Pretty Perfect<\/h2>\n<p>If a user downloads your app, it should work. Period. It should work effortlessly across devices. Make sure yourigorously test all the functionalities, ensuring that everything works perfectly on all possible devices. Leave no functionality untested, as one error may lead to another and a slight delay or malfunction makes the app crash.<\/p>\n<h2>Make Sure It\u2019s User Friendly<\/h2>\n<p>Never forget: Appsaremade for the user and haveto beeasy\/intuitiveto use.Keep the interface grounded and simple as not all users willbe tech-savvy or have the patience to explore your app. No clutter, no distortion, no irrelevant content, no delays or unnecessary add-ons for your app.<\/p>\n<h2>Give The User APart To Play<\/h2>\n<p>Yes, personalization is loved by all! It is undoubtedly the clear winner. If your app can do that, you\u2019ll get user adoption much quicker.The personalization touches don\u2019t have to be big ones. The personalization can be in the form of changing colors, backgrounds and much more. But remember to draw the line at the right user-levels and abilities &#8211; you don&#8217;t want users to have too much control of the app. Too much control can be overwhelming and, well, bad to maintain control.<\/p>\n<h2>Cater To The New Age Audience<\/h2>\n<p>Keeping up with the user\u2019s pace of adapting to technology may seem tough, yet it definitely is an essential in order to remain relevant. Deliver off-line capabilities to lend resourcefulness and reliability and your user will keep coming back to you. Non-dependence from network connectivity is a huge liberation.<\/p>\n<p>This is an age of social networking, if your app can help connect your user to the social networks, that\u2019s great. This is a boon as integrating on social networks increases app-sharing and increases visibility to amazing levels.<\/p>\n<p>These are just a few tips and with the app industry still growing, the possibilities are endless.<\/p>\n<p>Happy App-ing!<\/p>\n<p><strong>Post by<\/strong>: Mathumunisamy<\/p>\n<p><em>Mathumunisamy is the\u00a0Digital Marketing Lead at <a href=\"http:\/\/innoppl.com\/\">Innoppl.<\/a> He is passionate about digital marketing trends, tools and techniques, mobile app and the web development industry.<\/em><\/p>\n","excerpt":"<p>Be it Java or any other platform, Android or other OS\u2019s,mobile app development is everywhere and a popular revenue source for developers. Yet, only a fraction of them taste success. Whether it\u2019s an app for commercial use or an enterprise rollout,the goal of any app is to get user acceptance and adoption.Irrespective of the platform, [&hellip;]<\/p>\n","date":"2015-03-18 16:47:59","modified":"2016-05-29 19:22:50","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[{"id":218,"slug":"guidelines","title":"Guidelines","description":"","post_count":1},{"id":217,"slug":"mobile-apps","title":"Mobile Apps","description":"","post_count":2}],"author":{"id":854,"slug":"guest","name":"Guest","first_name":"Guest","last_name":"Blogger","nickname":"guest","url":"","description":""},"comments":[],"attachments":[{"id":8637,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/8-Surefire-Tips-For-Your-Mobile-App-Success.jpg","slug":"8-surefire-tips-for-your-mobile-app-success","title":"8 Surefire Tips For Your Mobile App Success","description":"8 Surefire Tips For Your Mobile App Success","caption":"","parent":8562,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/8-Surefire-Tips-For-Your-Mobile-App-Success.jpg","width":960,"height":500},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/8-Surefire-Tips-For-Your-Mobile-App-Success-620x323.jpg","width":620,"height":323},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/8-Surefire-Tips-For-Your-Mobile-App-Success.jpg","width":960,"height":500},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/8-Surefire-Tips-For-Your-Mobile-App-Success.jpg","width":960,"height":500},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/8-Surefire-Tips-For-Your-Mobile-App-Success.jpg","width":960,"height":500}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:6:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:10:\"show_image\";s:4:\"true\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3605525737"],"post_views_count":["1389"],"fsb_social_facebook":["3"],"fsb_social_twitter":["4"],"fsb_social_google":["1"],"fsb_social_linkedin":["1"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/8-Surefire-Tips-For-Your-Mobile-App-Success.jpg","width":960,"height":500},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/8-Surefire-Tips-For-Your-Mobile-App-Success-620x323.jpg","width":620,"height":323},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/8-Surefire-Tips-For-Your-Mobile-App-Success.jpg","width":960,"height":500},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/8-Surefire-Tips-For-Your-Mobile-App-Success.jpg","width":960,"height":500},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/8-Surefire-Tips-For-Your-Mobile-App-Success.jpg","width":960,"height":500}}},{"id":8526,"type":"post","slug":"serializing-net-using-json-net-and-contractresolver-example","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/serializing-net-using-json-net-and-contractresolver-example","status":"publish","title":"Serializing .NET object using JSON.NET and ContractResolver example","title_plain":"Serializing .NET object using JSON.NET and ContractResolver example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Serializing .NET object using JSON.NET and ContractResolver example' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/serializing-net-using-json-net-and-contractresolver-example' data-summary='JSON.NET is one of the popular, advanced and high-performance JSON framework for .NET. Here in this example we will look at following use cases for serializing .NET object into JSON String.'><\/div>\n<p>JSON.NET is one of the popular, advanced and high-performance JSON framework for .NET. Here in this example we will look at following use cases for serializing .NET object into JSON String.<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-declaring-entity-class\">1. Declaring entity class<\/a><\/li><li><a href=\"#2-serializing-net-object-using-jsonnet\">2. Serializing .NET object using JSON.NET<\/a><\/li><li><a href=\"#3-serialize-and-indent-json-using-jsonnet\">3. Serialize and indent JSON using JSON.NET<\/a><\/li><li><a href=\"#4-skip-attributes-using-annotation-in-jsonnet\">4. Skip attributes using annotation in JSON.NET<\/a><\/li><li><a href=\"#5-skip-attributes-using-contractresolver\">5. Skip attributes using ContractResolver<\/a><\/li><li><a href=\"#6-lowercase-all-keys-usingcontractresolver\">6. Lowercase all keys using\u00a0ContractResolver<\/a><\/li><\/ul><\/div>\n<\/p>\n<h1><span id=\"1-declaring-entity-class\">1. Declaring entity class<\/span><\/h1>\n<p>Before we begin with the example, let us take declare the entity class to be serialized. For the sake of simplicity, this example uses a simple entity class class Employee with the following attributes.<\/p>\n<pre class=\"prettyprint lang-cs\">public class Employoee\r\n{\r\n\tpublic int EmpId { get; set; }\r\n\tpublic string Name { get; set; }\r\n\tpublic double Salary { get; set; }\r\n\tpublic string Department { get; set; }\r\n\tpublic bool IsSingle { get; set; }\r\n}\r\n<\/pre>\n<h1><span id=\"2-serializing-net-object-using-jsonnet\">2. Serializing .NET object using JSON.NET<\/span><\/h1>\n<p>JSON.NET presents easy method of serializing .NET object into JSON string. All you have to do is include <code>Newtonsoft.Json<\/code> namespace and call <code>JsonConvert.SerializeObject<\/code> by passing the object for serialization.<\/p>\n<pre class=\"prettyprint lang-cs\">public static void Main (string[] args)\r\n{\r\n\t\/\/Creating a new emplyoee entity object\r\n\tEmployee e = new Employee ();\r\n\te.EmpId = 1001;\r\n\te.Name= \"Nilanchala\";\r\n\te.IsSingle = true;\r\n\te.Department=\"Engineering\";\r\n\r\n\tstring json = JsonConvert.SerializeObject(e);\r\n\tConsole.WriteLine(json);\r\n}\r\n<\/pre>\n<p>The output of the above code is depicted in the following screenshot<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serializing-.NET-object-using-JSON.NET_.png\"><img class=\" size-full wp-image-8529 aligncenter\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serializing-.NET-object-using-JSON.NET_.png\" alt=\"Serializing .NET object using JSON.NET\" width=\"702\" height=\"141\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serializing-.NET-object-using-JSON.NET_.png 702w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serializing-.NET-object-using-JSON.NET_-300x60.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serializing-.NET-object-using-JSON.NET_-620x125.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serializing-.NET-object-using-JSON.NET_-370x74.png 370w\" sizes=\"(max-width: 702px) 100vw, 702px\" \/><\/a><\/p>\n<h1><span id=\"3-serialize-and-indent-json-using-jsonnet\">3. Serialize and indent JSON using JSON.NET<\/span><\/h1>\n<p>As you can see in the screenshot above, the JSON object is not readable. It can be formatted with indent using the <code>Formatting.Indented<\/code> parameter.<\/p>\n<pre class=\"prettyprint lang-cs\">string json = JsonConvert.SerializeObject(e, Formatting.Indented);\r\nConsole.WriteLine(json);\r\n<\/pre>\n<p>Output of the above code snippet is as shown in the screenshot below<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serialize-and-Indent-using-JSON.NET_.png\"><img class=\"aligncenter wp-image-8531 size-full\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serialize-and-Indent-using-JSON.NET_.png\" alt=\"Serialize and Indent using JSON.NET\" width=\"701\" height=\"185\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serialize-and-Indent-using-JSON.NET_.png 701w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serialize-and-Indent-using-JSON.NET_-300x79.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serialize-and-Indent-using-JSON.NET_-620x164.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serialize-and-Indent-using-JSON.NET_-370x98.png 370w\" sizes=\"(max-width: 701px) 100vw, 701px\" \/><\/a><\/p>\n<h1><span id=\"4-skip-attributes-using-annotation-in-jsonnet\">4. Skip attributes using annotation in JSON.NET<\/span><\/h1>\n<p>Notice that in the above two steps, we are serializing all of the attributes of the entity class. But in realtime, you may have to skip some of the attributes while converting .NET object into JSON string. The following two sections will show you how to achieve it.<\/p>\n<p>There are two ways to achieve this. The simplest way is to do it by using annotation. All you have to do is to add some of the annotation fields to your entity class. In this method you don&#8217;t need to do any changes to the code for serialization.<\/p>\n<pre class=\"prettyprint lang-cs\">[JsonObject(MemberSerialization.OptIn)]\r\npublic class Emplyoee\r\n{\r\n\t[JsonProperty]\r\n\tpublic int EmpId { get; set; }\r\n\t[JsonProperty]\r\n\tpublic string Name { get; set; }\r\n\t[JsonProperty]\r\n\tpublic double Salary { get; set; }\r\n\t[JsonProperty]\r\n\tpublic string Department { get; set; }\r\n\r\n\t\/\/Do not serialize this\r\n\tpublic bool IsSingle { get; set; }\r\n}<\/pre>\n<p>As you can notice, we are skipping IsSingle attribute for deserializing. The following screenshot depicts the output.<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Skip-attributes-using-annotation-while-serializing-in-JSON.NET_.png\"><img class=\"aligncenter size-full wp-image-8537\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Skip-attributes-using-annotation-while-serializing-in-JSON.NET_.png\" alt=\"Skip attributes using annotation while serializing in JSON.NET\" width=\"702\" height=\"168\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Skip-attributes-using-annotation-while-serializing-in-JSON.NET_.png 702w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Skip-attributes-using-annotation-while-serializing-in-JSON.NET_-300x72.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Skip-attributes-using-annotation-while-serializing-in-JSON.NET_-620x148.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Skip-attributes-using-annotation-while-serializing-in-JSON.NET_-370x89.png 370w\" sizes=\"(max-width: 702px) 100vw, 702px\" \/><\/a><\/p>\n<h1><span id=\"5-skip-attributes-using-contractresolver\">5. Skip attributes using ContractResolver<\/span><\/h1>\n<p>The above step is sweet easy step to skip the attributes. However, you can still do the same without changing your entity class and using ContentResolver.<\/p>\n<p>Extend your DefaultContractResolver class and override <code>CreateProperties()<\/code> method. Notice that CreateProperties() method returns of <code>JsonProperty<\/code> to be serialized.<\/p>\n<pre class=\"prettyprint lang-cs\">public class SkipKeysContractResolver : DefaultContractResolver\r\n{\r\n\tprivate IList&lt;string&gt; attributesList = null;\r\n\tpublic SkipKeysContractResolver(IList&lt;string&gt; propertiesToSerialize)\r\n\t{\r\n\t\tattributesList = propertiesToSerialize;\r\n\t}\r\n\r\n\tprotected override IList&lt;JsonProperty&gt; CreateProperties(Type type, MemberSerialization memberSerialization)\r\n\t{\r\n\t\tIList&lt;JsonProperty&gt; properties = base.CreateProperties(type, memberSerialization);\r\n\t\treturn properties.Where(p =&gt; attributesList.Contains(p.PropertyName)).ToList();\r\n\t}\r\n}<\/pre>\n<p>Now use the following code<\/p>\n<pre class=\"prettyprint lang-cs\">\/\/List properties to be seriliazed \r\nList&lt;string&gt; propertiesToSerialize = new List&lt;string&gt;(new string[] {\"EmpId\", \"Name\", \"Salary\", \"Department\" });\r\n\r\n\/\/ Create a contract resolver\r\nSkipKeysContractResolver contractResolver = new SkipKeysContractResolver(propertiesToSerialize);\r\nvar settings = new JsonSerializerSettings ();\r\nsettings.ContractResolver = contractResolver;\r\nstring json = JsonConvert.SerializeObject(e, Formatting.Indented, settings);\r\nConsole.WriteLine(json);<\/pre>\n<p>The output of the above code is the same as the above screenshot.<\/p>\n<h1><span id=\"6-lowercase-all-keys-usingcontractresolver\">6. Lowercase all keys using\u00a0ContractResolver<\/span><\/h1>\n<p>JSON.NET serializes the .NET objects into JSON by maintaining the case of each attribute. The following code snippet will help you to change all the keys to upper case or lower case.<\/p>\n<pre class=\"prettyprint lang-cs\">public class LowercaseContractResolver : DefaultContractResolver\r\n{\r\n\tprotected override string ResolvePropertyName(string key)\r\n\t{\r\n\t\treturn key.ToLower();\r\n\t}\r\n}\r\n<\/pre>\n<p>Now instantiate LowercaseContractResolver and add it to JsonSerializerSettings.<\/p>\n<pre class=\"prettyprint lang-cs\">var settings = new JsonSerializerSettings();\r\nsettings.ContractResolver = new LowercaseContractResolver();\r\nstring json = JsonConvert.SerializeObject(e, Formatting.Indented, settings);\r\nConsole.WriteLine(json);<\/pre>\n<p>Output of the above code is depicted below<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Lowercase-all-keys-in-serializing-JSON.NET_.png\"><img class=\"aligncenter size-full wp-image-8540\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Lowercase-all-keys-in-serializing-JSON.NET_.png\" alt=\"Lowercase all keys in serializing JSON.NET\" width=\"708\" height=\"177\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Lowercase-all-keys-in-serializing-JSON.NET_.png 708w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Lowercase-all-keys-in-serializing-JSON.NET_-300x75.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Lowercase-all-keys-in-serializing-JSON.NET_-620x155.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Lowercase-all-keys-in-serializing-JSON.NET_-370x93.png 370w\" sizes=\"(max-width: 708px) 100vw, 708px\" \/><\/a><\/p>\n","excerpt":"<p>JSON.NET is one of the popular, advanced and high-performance JSON framework for .NET. Here in this example we will look at following use cases for serializing .NET object into JSON String.<\/p>\n","date":"2015-03-17 06:11:30","modified":"2015-12-01 18:57:49","categories":[{"id":211,"slug":"net","title":".NET","description":"","parent":297,"post_count":3},{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":7941,"name":"Manas","url":"","date":"2015-03-22 20:21:00","content":"<p>Very helpful. Exactly what I was looking for..<\/p>\n","parent":0},{"id":7979,"name":"Nilanchala Panigrahy","url":"","date":"2015-04-04 03:01:00","content":"<p>Thanks Manas..<\/p>\n","parent":7941},{"id":8463,"name":"david","url":"","date":"2016-03-30 15:27:00","content":"<p>Is it possible to cast a type to other type (exemple : ObservableCollection to List) ?<br \/>\nRegards.<\/p>\n","parent":0}],"attachments":[{"id":8529,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serializing-.NET-object-using-JSON.NET_.png","slug":"serializing-net-object-using-json-net","title":"Serializing .NET object using JSON.NET","description":"Serializing .NET object using JSON.NET","caption":"","parent":8526,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serializing-.NET-object-using-JSON.NET_.png","width":702,"height":141},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serializing-.NET-object-using-JSON.NET_-620x125.png","width":620,"height":125},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serializing-.NET-object-using-JSON.NET_.png","width":702,"height":141},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serializing-.NET-object-using-JSON.NET_.png","width":702,"height":141},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serializing-.NET-object-using-JSON.NET_.png","width":702,"height":141},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serializing-.NET-object-using-JSON.NET_.png","width":702,"height":141},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serializing-.NET-object-using-JSON.NET_.png","width":702,"height":141}}},{"id":8531,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serialize-and-Indent-using-JSON.NET_.png","slug":"serialize-and-indent-using-json-net","title":"Serialize and Indent using JSON.NET","description":"Serialize and Indent using JSON.NET","caption":"","parent":8526,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serialize-and-Indent-using-JSON.NET_.png","width":701,"height":185},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serialize-and-Indent-using-JSON.NET_-620x164.png","width":620,"height":164},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serialize-and-Indent-using-JSON.NET_.png","width":701,"height":185},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serialize-and-Indent-using-JSON.NET_.png","width":701,"height":185},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serialize-and-Indent-using-JSON.NET_.png","width":701,"height":185},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serialize-and-Indent-using-JSON.NET_.png","width":701,"height":185},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Serialize-and-Indent-using-JSON.NET_.png","width":701,"height":185}}},{"id":8537,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Skip-attributes-using-annotation-while-serializing-in-JSON.NET_.png","slug":"skip-attributes-using-annotation-while-serializing-in-json-net","title":"Skip attributes using annotation while serializing in JSON.NET","description":"Skip attributes using annotation while serializing in JSON.NET","caption":"","parent":8526,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Skip-attributes-using-annotation-while-serializing-in-JSON.NET_.png","width":702,"height":168},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Skip-attributes-using-annotation-while-serializing-in-JSON.NET_-620x148.png","width":620,"height":148},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Skip-attributes-using-annotation-while-serializing-in-JSON.NET_.png","width":702,"height":168},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Skip-attributes-using-annotation-while-serializing-in-JSON.NET_.png","width":702,"height":168},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Skip-attributes-using-annotation-while-serializing-in-JSON.NET_.png","width":702,"height":168},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Skip-attributes-using-annotation-while-serializing-in-JSON.NET_.png","width":702,"height":168},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Skip-attributes-using-annotation-while-serializing-in-JSON.NET_.png","width":702,"height":168}}},{"id":8540,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Lowercase-all-keys-in-serializing-JSON.NET_.png","slug":"lowercase-all-keys-in-serializing-json-net","title":"Lowercase all keys in serializing JSON.NET","description":"Lowercase all keys in serializing JSON.NET","caption":"","parent":8526,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Lowercase-all-keys-in-serializing-JSON.NET_.png","width":708,"height":177},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Lowercase-all-keys-in-serializing-JSON.NET_-620x155.png","width":620,"height":155},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Lowercase-all-keys-in-serializing-JSON.NET_.png","width":708,"height":177},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Lowercase-all-keys-in-serializing-JSON.NET_.png","width":708,"height":177},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Lowercase-all-keys-in-serializing-JSON.NET_.png","width":708,"height":177},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Lowercase-all-keys-in-serializing-JSON.NET_.png","width":708,"height":177},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Lowercase-all-keys-in-serializing-JSON.NET_.png","width":708,"height":177}}},{"id":8982,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Free-Xamarin.Android-Tutorials.jpg","slug":"free-xamarin-android-tutorials","title":"Free Xamarin.Android Tutorials","description":"Free Xamarin.Android Tutorials","caption":"","parent":8526,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Free-Xamarin.Android-Tutorials.jpg","width":254,"height":148},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Free-Xamarin.Android-Tutorials.jpg","width":254,"height":148},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Free-Xamarin.Android-Tutorials.jpg","width":254,"height":148},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Free-Xamarin.Android-Tutorials.jpg","width":254,"height":148},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Free-Xamarin.Android-Tutorials.jpg","width":254,"height":148},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Free-Xamarin.Android-Tutorials.jpg","width":254,"height":148},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Free-Xamarin.Android-Tutorials.jpg","width":254,"height":148},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Free-Xamarin.Android-Tutorials.jpg","width":254,"height":148},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Free-Xamarin.Android-Tutorials.jpg","width":254,"height":148},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Free-Xamarin.Android-Tutorials.jpg","width":254,"height":148},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/Free-Xamarin.Android-Tutorials.jpg","width":254,"height":148}}}],"comment_count":3,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["4885709601"],"post_views_count":["4320","4320"],"fsb_social_facebook":["2"],"fsb_social_twitter":["9"],"fsb_social_google":["3"],"fsb_social_linkedin":["2"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:234:\"a:1:{i:0;a:8:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:153:\"a:1:{i:0;a:5:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}},{"id":8466,"type":"post","slug":"consuming-rest-web-service-in-xamarin-android","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/consuming-rest-web-service-in-xamarin-android","status":"publish","title":"Consuming REST Web Service and Deserializing Response Using Json.NET in Xamarin Android","title_plain":"Consuming REST Web Service and Deserializing Response Using Json.NET in Xamarin Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Consuming REST Web Service and Deserializing Response Using Json.NET in Xamarin Android' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/consuming-rest-web-service-in-xamarin-android' data-summary='Consuming data from web services is the most common task and very integral part to most of the full-fledged mobile application. In this tutorial we will take a look into various key concepts and steps for consuming web service methods from Xamarin Android application.'><\/div>\n<p>Consuming data from web services is the most common task and very integral part to most of the full-fledged mobile application. In this tutorial we will take a look into various key concepts and steps for consuming web service methods from Xamarin Android application.\u00a0This tutorial explains the following key concepts.<\/p>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-understanding-web-service-basics\">1. Understanding web service basics<\/a><\/li><li><a href=\"#2-declare-entity-class\">2. Declare entity class<\/a><\/li><li><a href=\"#3-asynchronous-programming-withasync-await\">3. Asynchronous programming with\u00a0async await<\/a><\/li><li><a href=\"#4-deserializing-response-using-jsonnet\">4. Deserializing response using Json.NET<\/a><\/li><li><a href=\"#5-adding-internet-permission\">5. Adding INTERNET permission<\/a><\/li><\/ul><\/div>\n<\/p>\n<h1><span id=\"1-understanding-web-service-basics\">1. Understanding web service basics<\/span><\/h1>\n<p>Web services are the server side applications that are meant to serve data or logic to various client applications. REST and SOAP are the industry standard web service architecture widely used. The data shared to client can be of various media formats, it can be plain text data, XML, JSON, audio, video or other supporting formats.<\/p>\n<p>Android application doesn\u2019t care of which language the web service is developed in. All you need to know is the specification of the API Application Programming Interface). The specification includes, request method such as (GET, POST, PUT, DELETE), header metadata such as accept-type, content-type, etc.<\/p>\n<p>In this example, we will be consuming the following API to fetch list of latest posts from JavaTechig.<\/p>\n<p><strong>URL Endpoint:<\/strong> <a href=\"http:\/\/stacktips.com\/api\/get_category_posts\/?dev=1&amp;slug=android\" target=\"_blank\">http:\/\/stacktips.com\/api\/get_category_posts\/?dev=1&amp;slug=android<\/a><br \/>\n<strong>Request Method:<\/strong> GET<br \/>\n<strong>Accept-Type:<\/strong> \u201capplication\/json\u201d<br \/>\n<strong>Response:\u00a0<\/strong><br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response.png\"><img class=\"aligncenter size-large wp-image-5736\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-940x838.png\" alt=\"JSON Feed Response\" width=\"660\" height=\"588\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-940x838.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-300x267.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-620x552.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-800x713.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-1000x891.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-900x802.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-370x329.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response.png 1024w\" sizes=\"(max-width: 660px) 100vw, 660px\" \/><\/a><\/p>\n<h1><span id=\"2-declare-entity-class\">2. Declare entity class<\/span><\/h1>\n<p>Now that we have fair understanding of the structure of response, lets us go ahead with declaring an entity class that holds the repose received. Notice that the response is quite big and structure looks complex.<\/p>\n<p>From the above response, we will use only the list of recent posts from the above response and ignore the other data. Let us create an entity class \u201cPost\u201d with the following attributes.<\/p>\n<pre class=\"prettyprint lang-cs\">public class Post\r\n{\r\n     public int Id { get; set;}\r\n     public string Url { get; set; }\r\n     public string Title { get; set; }\r\n}<\/pre>\n<h1><span id=\"3-asynchronous-programming-withasync-await\">3. Asynchronous programming with\u00a0async await<\/span><\/h1>\n<p>Downloading data from server is a long running task, and hence we must create a new thread to perform such operations. We can make use of <code>System.Threading<\/code> namespace classes to create a new thread or simply use <code>async<\/code>, <code>await<\/code> keywords. The async and await are two keywords introduced since .NET 4.5 helps programmers to execute code asynchronously without writing your own thread. All you have to do is to define async keyword in your method declaration and use await keyword for any long running tasks.<\/p>\n<pre class=\"prettyprint lang-cs\">public async void DownloadDataAsync() {\r\n\tstring url = \"http:\/\/stacktips.com\/api\/get_category_posts\/?dev=1&amp;slug=android\"\r\n\t\r\n\tvar httpClient = new HttpClient();\r\n\tTask&lt;string&gt; downloadTask = httpClient.GetStringAsync(url);\r\n\tstring content = await downloadTask;\t\r\n\tConsole.Out.WriteLine(\"Response: \\r\\n {0}\", content);\r\n}<\/pre>\n<h1><span id=\"4-deserializing-response-using-jsonnet\">4. Deserializing response using Json.NET<\/span><\/h1>\n<p>So far we have downloaded data from server and printing the JSON response on console. Now let us de-serialize the JSON response into Post list collection. In this example, I am using <strong>Json.NET<\/strong> component for parsing JSON data. You can add it to your project it from Xamarin component store.<\/p>\n<p>Once you have added Json.NET component to your solution, add the following code snippet to <code>DownloadDataAsync()<\/code> method.<\/p>\n<pre class=\"prettyprint lang-cs\">\/\/ de-serializing json response into list\r\nvar posts = new List &lt;Post&gt; ();\r\nJObject jsonResponse = JObject.Parse (content);\r\nIList&lt;JToken&gt; results = jsonResponse [\"posts\"].ToList ();\r\nforeach (JToken token in results) {\r\n\tPointOfInterest poi = JsonConvert.DeserializeObject&lt;Post&gt; (token.ToString ());\r\n\tposts.Add (poi);\r\n}\r\n\r\n\/\/ Write your logic here to display posts list on ui\r\n<\/pre>\n<p>In this example, we are not writing any code to explain the user interface and hence, I have just a comment. You can follow <a title=\"ListView Example in Xamarin.Android\" href=\"http:\/\/stacktips.com\/xamarin\/listview-example-in-xamarin-android\" target=\"_blank\">Xamarin Android ListView Example<\/a> to learn more about creating list UI.<\/p>\n<h1><span id=\"5-adding-internet-permission\">5. Adding INTERNET permission<\/span><\/h1>\n<p>Downloading data from server requires special permission to be granted in <code>AndroidManifest.xml<\/code>. Open AndroidManifest.xml and add the following code before <code>&lt;application&gt;<\/code> element.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;uses-permission android:name=\"android.permission.INTERNET\"\/&gt;<\/pre>\n","excerpt":"<p>Consuming data from web services is the most common task and very integral part to most of the full-fledged mobile application. In this tutorial we will take a look into various key concepts and steps for consuming web service methods from Xamarin Android application.<\/p>\n","date":"2015-03-10 18:39:45","modified":"2015-12-01 18:58:03","categories":[{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":7942,"name":"Bastien","url":"","date":"2015-03-22 20:25:00","content":"<p>Have any example for Http POST and DELETE??<\/p>\n","parent":0}],"attachments":[],"comment_count":1,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["4880732407"],"post_views_count":["4064"],"fsb_social_facebook":["2"],"fsb_social_twitter":["3"],"fsb_social_google":["2"],"fsb_social_linkedin":["7"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:234:\"a:1:{i:0;a:8:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:153:\"a:1:{i:0;a:5:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}},{"id":8300,"type":"post","slug":"android-textwatcher-example","url":"http:\/\/stacktips.com\/tutorials\/android\/android-textwatcher-example","status":"publish","title":"Android TextWatcher Example","title_plain":"Android TextWatcher Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android TextWatcher Example' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-textwatcher-example' data-summary='In this tutorial we will show you how to use TextWatcher in Android with example. TextWatcher is used to keep watch on the EditText content while user inputs the data. It allows you to keep track on each character when entered on EditText.'><\/div>\n<p>In this tutorial we will show you how to use TextWatcher in Android with example.<\/p>\n<p><code>TextWatcher<\/code> is used to keep watch on the <a title=\"Edittext Validation in Android Example\" href=\"http:\/\/stacktips.com\/android\/edittext-validation-in-android-example\">EditText<\/a> content while user inputs the data. It allows you to keep track on each character when entered on EditText.<\/p>\n<p>A Text Watcher is really helpful for scenarios like login\/register screen validation. As an when user is entering the data, you can keep an eye on user input and notify early instead of waiting till user press submit button manually.\u00a0Another great realtime example is Google search; it shows user the realtime search suggestion while user entering data.<\/p>\n<p>Implementing Text watcher is quite easy, you have to call\u00a0<code>addTextChangedListener()<\/code> method and pass the reference to TextWatcher instance. You can override the following\u00a0TextWatcher class\u00a0method to take various actions, when the content of EditText changes.<\/p>\n<ol>\n<li><code>afterTextChanged (Editable s) -\u00a0<\/code>This method is called when the text has been changed. Because any changes you make will cause this method to be called again recursively, you have to be watchful about performing operations here, otherwise it might lead to infinite loop.<\/li>\n<li><code>beforeTextChanged (CharSequence s, int start, int count, int after) -\u00a0<\/code>This method is called to notify you that, within s, the count characters beginning at start are about to be replaced by new text with length after. It is an error to attempt to make changes to s from this callback.<\/li>\n<li><code>onTextChanged (CharSequence s, int start, int before, int count) -\u00a0<\/code>This method is called to notify you that, within s, the count characters beginning at start have just replaced old text that had length before. It is an error to attempt to make changes to s from this callback.<\/li>\n<\/ol>\n<h1>Android TextWatcher Example<\/h1>\n<p>Lets us jump straight into the TextWatcher example in android. In this tutorial, we will create a simple EditField for entering password, and the text watcher will show the same password in another TextView.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"fill_parent\"\r\n    android:layout_height=\"fill_parent\"\r\n    android:orientation=\"vertical\"\r\n    android:padding=\"10dp\"&gt;\r\n\r\n    &lt;TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:paddingBottom=\"10dp\"\r\n        android:text=\"Enter your password and see the magic!!\"\r\n        android:textAppearance=\"?android:attr\/textAppearanceLarge\"\r\n        android:textStyle=\"bold\" \/&gt;\r\n\r\n    &lt;EditText\r\n        android:id=\"@+id\/password\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:hint=\"Password\"\r\n        android:inputType=\"textPassword\"\r\n        android:padding=\"12dp\"&gt;\r\n\r\n        &lt;requestFocus \/&gt;\r\n    &lt;\/EditText&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id\/passwordHint\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id\/password\"\r\n        android:background=\"#ffd33a26\"\r\n        android:padding=\"5dp\"\r\n        android:text=\"* Not Entered\"\r\n        android:textColor=\"#fff\" \/&gt;\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<h1>Using TextWatcher in Activity<\/h1>\n<pre class=\"prettyprint lang-java\">import android.app.Activity;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\npublic class MainActivity extends Activity {\r\n    private EditText passwordEditText;\r\n    private TextView textView;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        \/* Initializing views *\/\r\n        passwordEditText = (EditText) findViewById(R.id.password);\r\n        textView = (TextView) findViewById(R.id.passwordHint);\r\n        textView.setVisibility(View.GONE);\r\n\r\n        \/* Set Text Watcher listener *\/\r\n        passwordEditText.addTextChangedListener(passwordWatcher);\r\n    }\r\n\r\n    private final TextWatcher passwordWatcher = new TextWatcher() {\r\n        public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n        }\r\n\r\n        public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n            textView.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n        public void afterTextChanged(Editable s) {\r\n            if (s.length() == 0) {\r\n                textView.setVisibility(View.GONE);\r\n            } else{\r\n                textView.setText(\"You have entered : \" + passwordEditText.getText());\r\n            }\r\n        }\r\n    };\r\n}\r\n<\/pre>\n<h1>Output<\/h1>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-TextWatcher-Example.png\"><img class=\"aligncenter size-medium wp-image-8308\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-TextWatcher-Example-620x579.png\" alt=\"Android TextWatcher Example\" width=\"620\" height=\"579\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-TextWatcher-Example-620x579.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-TextWatcher-Example-300x280.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-TextWatcher-Example-940x878.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-TextWatcher-Example-800x747.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-TextWatcher-Example-1000x934.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-TextWatcher-Example-900x840.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-TextWatcher-Example-370x346.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-TextWatcher-Example.png 1210w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n","excerpt":"<p>In this tutorial we will show you how to use TextWatcher in Android with example. TextWatcher is used to keep watch on the EditText content while user inputs the data. It allows you to keep track on each character when entered on EditText.<\/p>\n","date":"2015-02-19 07:37:14","modified":"2015-02-26 17:07:47","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8130,"name":"AR Ross","url":"","date":"2015-07-31 14:01:00","content":"<p>Awesome blog. This helped. Thanks&#8230;<\/p>\n","parent":0}],"attachments":[{"id":8308,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-TextWatcher-Example.png","slug":"android-textwatcher-example","title":"Android TextWatcher Example","description":"Android TextWatcher Example","caption":"","parent":8300,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-TextWatcher-Example.png","width":1210,"height":1130},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-TextWatcher-Example-620x579.png","width":620,"height":579},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-TextWatcher-Example.png","width":1210,"height":1130}}}],"comment_count":1,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3528267686"],"post_views_count":["8864","8864"],"fsb_social_facebook":["4"],"fsb_social_twitter":["5"],"fsb_social_google":["2"],"fsb_social_linkedin":["2"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":8347,"type":"post","slug":"introduction-to-json-basics","url":"http:\/\/stacktips.com\/tutorials\/json\/introduction-to-json-basics","status":"publish","title":"Introduction to JSON Basics","title_plain":"Introduction to JSON Basics","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Introduction to JSON Basics' data-link='http:\/\/stacktips.com\/tutorials\/json\/introduction-to-json-basics' data-summary='JSON (JavaScript Object Notation) is one of the most popular and widely accepted data exchange format originally specified by Douglas Crockford. JSON is widely accepted in the softwares that includes client-server architecture for exchanging data between client and server.'><\/div>\n<p><strong>JSON <em>(JavaScript Object Notation)<\/em><\/strong> is one of the most popular and widely accepted data exchange format originally specified by Douglas Crockford.<\/p>\n<p>It is currently described by two competing standards, RFC 7159 and ECMA-404. The ECMA standard is minimal, describing only the allowed grammar syntax, whereas the RFC also provides some semantic and security considerations.<\/p>\n<ol>\n<li>JSON is widely accepted in the softwares that includes client-server architecture for exchanging data between client and server.<\/li>\n<li>JSON is easy to use and purely text-based, lightweight, and human- readable format and people often misunderstand as replacement of XML.<\/li>\n<li>Although the abbreviation starts with JavaScript, JSON is not a language or have any language literals it just a specification for notation of data.<\/li>\n<li>It is platform and language independent and inbuilt supported by almost all of the front line languages\/frameworks like and support for the JSON data format is available in all the popular languages, some of which are C#, PHP, Java, C++, Python, and Ruby.<\/li>\n<li>The official Internet media type for JSON is <code>application\/json<\/code>.<\/li>\n<li>The JSON file name extension is <code>.json<\/code>.<\/li>\n<\/ol>\n<p><strong>Tip: <\/strong>An Internet media type is a standard identifier used on the Internet to indicate the type of data that a file contains.<\/p>\n<h1>Web Architecture Media Types<\/h1>\n<p>A typical web application transfers data between client and server. The client can be a web browser, mobile app, mobile browser and server can be application developed using Java or .NET.\u00a0Client request to server by request methods such as <strong>GET<\/strong>, <strong>POST<\/strong>, <strong>PUT<\/strong> and <strong>DELETE<\/strong>, using standard protocols such as http, https, ftp etc. Depending on the request method, client sends data to server with any of the standard media types. Some of the accepted media types are as follows.<\/p>\n<ul>\n<li>application\/json<\/li>\n<li>application\/atom+xml<\/li>\n<li>application\/vcard+xml<\/li>\n<li>text\/plain<\/li>\n<li>application\/mp4<\/li>\n<\/ul>\n<p>There are quite a many number of media types are used. Checkout the list from <a href=\"http:\/\/www.iana.org\/assignments\/media-types\/media-types.xhtml\">IANA website<\/a>.<\/p>\n<h1>Where JSON is used?<\/h1>\n<p>JSON media type widely used in web architecture for transferring data between server and client.<\/p>\n<p>Prior to JSON, XML was considered to be the chosen data interchange format for most of the cases. XML is heavy weight, it consumes more of network bandwidth in comparison to JSON. XML data is considerably complex for parsing. It requires an XML DOM implementation on the client side that would accept the XML response and convert into client program understandable format. It is often time consuming to implement in client side and it requires the complete XML DOM to be loaded into memory while parsing it.<\/p>\n<p>The following image represents an example of xml data.<\/p>\n<p><strong><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Xml-Structure-for-Emplyoees.png\"><img class=\"alignnone size-medium wp-image-8412\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Xml-Structure-for-Emplyoees-620x427.png\" alt=\"Xml Structure for Employees\" width=\"620\" height=\"427\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Xml-Structure-for-Emplyoees-620x427.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Xml-Structure-for-Emplyoees-300x206.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Xml-Structure-for-Emplyoees-370x255.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Xml-Structure-for-Emplyoees.png 760w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><br \/>\n<\/strong><\/p>\n<p>JSON answers the problem to XML. It is lightweight and plain text type syntax, makes it easy to learn and understand. Most modern browser JavaScript engines are capable of handling JSON Parsing with almost no coding.<\/p>\n<p>Let us now represent the above xml response into JSON format.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Structure-for-Emplyoees.png\"><img class=\"alignnone size-medium wp-image-8413\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Structure-for-Emplyoees-620x444.png\" alt=\"JSON Structure for Employees\" width=\"620\" height=\"444\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Structure-for-Emplyoees-620x444.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Structure-for-Emplyoees-300x215.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Structure-for-Emplyoees-370x265.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Structure-for-Emplyoees.png 760w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<p>Notice that the size of the XML document is quite large compared to its representation in JSON. This result significant impact for larger size documents when used with real time applications.<\/p>\n<p>Mobile is one of the counterpart of todays business. Which means if not today, tomorrow you will require your services to be accessible on mobile. As mobile devices are limited in memory and power, transmitting larger chunk of data is not recommended.<\/p>\n<p>Thus JSON become one of the most preferred media format for data exchange between client and server.<\/p>\n","excerpt":"<p>JSON (JavaScript Object Notation) is one of the most popular and widely accepted data exchange format originally specified by Douglas Crockford. JSON is widely accepted in the softwares that includes client-server architecture for exchanging data between client and server.<\/p>\n","date":"2015-02-19 07:27:39","modified":"2015-06-15 22:43:39","categories":[{"id":209,"slug":"json","title":"Json","description":"","parent":297,"post_count":1}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":7902,"name":"andrewdiscuss","url":"","date":"2015-03-05 01:04:00","content":"<p>Nice Blog on Introduction to JSON. Thanks @Nilanchanda.<\/p>\n","parent":0},{"id":8135,"name":"JavaCoder","url":"","date":"2015-08-02 12:59:00","content":"<p>Nice intro !!<\/p>\n","parent":0}],"attachments":[{"id":8351,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","slug":"json-tutorials","title":"JSON Tutorials","description":"JSON Tutorials","caption":"","parent":8347,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218}}},{"id":8412,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Xml-Structure-for-Emplyoees.png","slug":"xml-structure-for-emplyoees","title":"Xml Structure for Emplyoees","description":"Xml Structure for Emplyoees","caption":"","parent":8347,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Xml-Structure-for-Emplyoees.png","width":760,"height":523},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Xml-Structure-for-Emplyoees-620x427.png","width":620,"height":427},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Xml-Structure-for-Emplyoees.png","width":760,"height":523},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Xml-Structure-for-Emplyoees.png","width":760,"height":523},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Xml-Structure-for-Emplyoees.png","width":760,"height":523},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Xml-Structure-for-Emplyoees.png","width":760,"height":523}}},{"id":8413,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Structure-for-Emplyoees.png","slug":"json-structure-for-emplyoees","title":"JSON Structure for Emplyoees","description":"JSON Structure for Emplyoees","caption":"","parent":8347,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Structure-for-Emplyoees.png","width":760,"height":544},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Structure-for-Emplyoees-620x444.png","width":620,"height":444},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Structure-for-Emplyoees.png","width":760,"height":544},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Structure-for-Emplyoees.png","width":760,"height":544},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Structure-for-Emplyoees.png","width":760,"height":544},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Structure-for-Emplyoees.png","width":760,"height":544}}}],"comment_count":2,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3528247719"],"post_views_count":["1551"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapDL":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:234:\"a:1:{i:0;a:8:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:153:\"a:1:{i:0;a:5:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/JSON-Tutorials.jpg","width":370,"height":218}}},{"id":8261,"type":"post","slug":"android-scrollview-example","url":"http:\/\/stacktips.com\/tutorials\/android\/android-scrollview-example","status":"publish","title":"Android ScrollView Example","title_plain":"Android ScrollView Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android ScrollView Example' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-scrollview-example' data-summary='In this tutorial we will show you, how to use Android ScrollView component and create a simple example using various ScrollView properties. ScrollView is a special kind of layout, designed to hold view larger than its actual size. When the Views size goes beyond the ScrollView size, it automatically adds scroll bars and can be scrolled vertically.'><\/div>\n<p>In this tutorial we will show you, how to use Android ScrollView component and create a simple example using various ScrollView properties.<\/p>\n<p>Most Android application will likely to have the contents that&#8217;s doesn&#8217;t fit the screen. Think a bit about displaying the news details, the contents are dynamic and can grow beyond your screen size. If we design our screen layout using standard layout managers like <a title=\"Android LinearLayout Example\" href=\"http:\/\/stacktips.com\/android\/android-linearlayout-example\">LinearLayout<\/a>, \u00a0<a title=\"Android RelativeLayout Example\" href=\"http:\/\/stacktips.com\/android\/android-relativelayout-example\">RelativeLayout<\/a>,\u00a0<a title=\"Android FrameLayout Example\" href=\"http:\/\/stacktips.com\/android\/android-framelayout-example\">FrameLayout<\/a> or <a title=\"Android Table Layout Example\" href=\"http:\/\/stacktips.com\/android\/android-table-layout-example\">TableLayout<\/a>; when the content grows, and data goes beyond screen size, and user won&#8217;t be able scroll and \u00a0view the content.<\/p>\n<p><strong>ScrollView<\/strong> is a special kind of layout, designed to hold view larger than its actual size. When the Views size goes beyond the ScrollView size, it automatically adds scroll bars and can be scrolled vertically.<\/p>\n<ol>\n<li>ScrollView can hold only one direct child. This means that, if you have complex layout with more view controls, you must enclose them inside another standard layout like <a title=\"Android LinearLayout Example\" href=\"http:\/\/stacktips.com\/android\/android-linearlayout-example\">LinearLayout<\/a>, <a title=\"Android Table Layout Example\" href=\"http:\/\/stacktips.com\/android\/android-table-layout-example\">TableLayout<\/a> or <a title=\"Android RelativeLayout Example\" href=\"http:\/\/stacktips.com\/android\/android-relativelayout-example\">RelativeLayout<\/a>.<\/li>\n<li>You can specify <code>layout_height<\/code> and <code>layout_width<\/code> to adjust height and width of screen.<\/li>\n<li>Scrollview is ideal for screens where scrolling is required, but it is an overhead when scroll view is used to render a larger list of data. Android provides specialized adapter views like <a title=\"Android ListView Example\" href=\"http:\/\/stacktips.com\/android\/android-listview-tutorial\">ListView<\/a>, <a title=\"Android Gridview Example- Building Image Gallery in android\" href=\"http:\/\/stacktips.com\/android\/android-gridview-example-building-image-gallery-in-android\">GridView<\/a> and <a title=\"Android RecyclerView Example\" href=\"http:\/\/stacktips.com\/android\/android-recyclerview-example\">Recycler View<\/a> (Introduced in Android Lollipop) are recommended for long lists.<\/li>\n<li>You should never use a ScrollView with a ListView or GridView, because they both takes care of their own vertical scrolling.<\/li>\n<li>ScrollView only supports vertical scrolling. Use <code>HorizontalScrollView<\/code> for horizontal scrolling.<\/li>\n<li>The <code>android:fillViewport<\/code> property defines whether the scrollview should stretch its content to fill the viewport. You can set the same property by calling <code>setFillViewport(boolean)<\/code> method.<\/li>\n<\/ol>\n<h1>Android ScrollView Example<\/h1>\n<p>Let us create an example that displays the layout as shown in the below screenshot.\u00a0Notice that the blue like indicates the outline of textView2 is gone beyond the scren.<\/p>\n<p><strong><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-ScrollView-Example.png\"><img class=\"aligncenter wp-image-8262 size-full\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-ScrollView-Example.png\" alt=\"Android ScrollView Example\" width=\"969\" height=\"654\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-ScrollView-Example.png 969w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-ScrollView-Example-300x202.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-ScrollView-Example-620x418.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-ScrollView-Example-940x634.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-ScrollView-Example-800x540.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-ScrollView-Example-900x607.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-ScrollView-Example-370x250.png 370w\" sizes=\"(max-width: 969px) 100vw, 969px\" \/><\/a><\/strong><\/p>\n<h1>Scrollbar Layout<\/h1>\n<pre class=\"prettyprint lang-xml\">&lt;ScrollView xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"fill_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:orientation=\"vertical\"\r\n    android:padding=\"10dp\"\r\n    android:fillViewport=\"false\"&gt;\r\n\r\n    &lt;LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\"&gt;\r\n        &lt;ImageView\r\n            android:id=\"@+id\/imageView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"200dp\"\r\n            android:scaleType=\"centerCrop\"\r\n            android:src=\"@drawable\/image\" \/&gt;\r\n\r\n        &lt;Button\r\n            android:id=\"@+id\/button\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"KNOW MORE\" \/&gt;\r\n\r\n        &lt;TextView\r\n            android:id=\"@+id\/textView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string\/title\"\r\n            android:textAppearance=\"?android:attr\/textAppearanceLarge\" \/&gt;\r\n\r\n        &lt;TextView\r\n            android:id=\"@+id\/textView2\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string\/description\"\r\n            android:textAppearance=\"?android:attr\/textAppearanceSmall\" \/&gt;\r\n    &lt;\/LinearLayout&gt;\r\n&lt;\/ScrollView&gt;\r\n<\/pre>\n","excerpt":"<p>In this tutorial we will show you, how to use Android ScrollView component and create a simple example using various ScrollView properties. ScrollView is a special kind of layout, designed to hold view larger than its actual size. When the Views size goes beyond the ScrollView size, it automatically adds scroll bars and can be scrolled vertically.<\/p>\n","date":"2015-02-13 04:29:56","modified":"2015-02-13 04:29:56","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":7949,"name":"Mars","url":"","date":"2015-03-25 02:22:00","content":"<p>Nice&#8230; BUT what if you only want your to scroll?<br \/>\nIn my example I want a header on top of the view, and 2 buttons in the bottom of the view (a save and a cancel button). All the stuff between I want to scroll!<br \/>\nAll examples I see puts the scrollview as the root&#8230;<\/p>\n","parent":0},{"id":7950,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-25 16:17:00","content":"<p>All you have to do is to take a relative layout as parent and scroll view will be placed below title and above bottom container. Learn more about <a href=\"http:\/\/stacktips.com\/android\/android-relativelayout-example\" rel=\"nofollow\">Android relative layout here <\/a><\/p>\n<p>I have created sample layout as per your requirements.<\/p>\n<p>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br \/>\n&lt;RelativeLayout xmlns:android=&quot;<a href=\"http:\/\/schemas.android.com\/apk\/res\/android&#038;quot\" rel=\"nofollow\">http:\/\/schemas.android.com\/apk\/res\/android&#038;quot<\/a>;<br \/>\n    android:layout_width=&quot;match_parent&quot;<br \/>\n    android:layout_height=&quot;match_parent&quot;<br \/>\n    android:orientation=&quot;vertical&quot;&gt;<\/p>\n<p>    &lt;TextView<br \/>\n        android:id=&quot;@+id\/title&quot;<br \/>\n        android:layout_width=&quot;match_parent&quot;<br \/>\n        android:layout_height=&quot;48dp&quot;<br \/>\n        android:layout_alignParentTop=&quot;true&quot;<br \/>\n        android:background=&quot;#3f51b5&quot;<br \/>\n        android:gravity=&quot;center_vertical&quot;<br \/>\n        android:paddingLeft=&quot;10dp&quot;<br \/>\n        android:text=&quot;MY PAGE TITLE&quot;<br \/>\n        android:textAppearance=&quot;?android:attr\/textAppearanceLarge&quot;<br \/>\n        android:textColor=&quot;#fff&quot; \/&gt;<\/p>\n<p>    &lt;ScrollView xmlns:android=&quot;<a href=\"http:\/\/schemas.android.com\/apk\/res\/android&#038;quot\" rel=\"nofollow\">http:\/\/schemas.android.com\/apk\/res\/android&#038;quot<\/a>;<br \/>\n        android:layout_width=&quot;fill_parent&quot;<br \/>\n        android:layout_height=&quot;wrap_content&quot;<br \/>\n        android:layout_above=&quot;@+id\/bottom_container&quot;<br \/>\n        android:layout_below=&quot;@id\/title&quot;<br \/>\n        android:fillViewport=&quot;false&quot;<br \/>\n        android:orientation=&quot;vertical&quot;<br \/>\n        android:padding=&quot;10dp&quot;&gt;<\/p>\n<p>        &lt;LinearLayout<br \/>\n            android:layout_width=&quot;match_parent&quot;<br \/>\n            android:layout_height=&quot;wrap_content&quot;<br \/>\n            android:orientation=&quot;vertical&quot;&gt;<\/p>\n<p>            &lt;ImageView<br \/>\n                android:layout_width=&quot;wrap_content&quot;<br \/>\n                android:layout_height=&quot;200dp&quot;<br \/>\n                android:scaleType=&quot;centerCrop&quot;<br \/>\n                android:src=&quot;@drawable\/car_engine&quot; \/&gt;<\/p>\n<p>            &lt;TextView<br \/>\n                android:layout_width=&quot;wrap_content&quot;<br \/>\n                android:layout_height=&quot;wrap_content&quot;<br \/>\n                android:padding=&quot;10dp&quot;<br \/>\n                android:text=&quot;Some title here&quot;<br \/>\n                android:textSize=&quot;28sp&quot;<br \/>\n                android:textStyle=&quot;bold&quot; \/&gt;<\/p>\n<p>            &lt;TextView<br \/>\n                android:layout_width=&quot;wrap_content&quot;<br \/>\n                android:layout_height=&quot;wrap_content&quot;<br \/>\n                android:padding=&quot;10dp&quot;<br \/>\n                android:text=&quot;Lorem ipsum dolor sit amet&#8230;&quot;<br \/>\n                android:textSize=&quot;18sp&quot; \/&gt;<br \/>\n        &lt;\/LinearLayout&gt;<br \/>\n    &lt;\/ScrollView&gt;<br \/>\n    &lt;LinearLayout<br \/>\n        android:id=&quot;@+id\/bottom_container&quot;<br \/>\n        android:layout_width=&quot;match_parent&quot;<br \/>\n        android:layout_height=&quot;wrap_content&quot;<br \/>\n        android:layout_alignParentBottom=&quot;true&quot;<br \/>\n        android:orientation=&quot;horizontal&quot;&gt;<br \/>\n        &lt;Button<br \/>\n            android:id=&quot;@+id\/button&quot;<br \/>\n            android:layout_width=&quot;match_parent&quot;<br \/>\n            android:layout_height=&quot;wrap_content&quot;<br \/>\n            android:layout_weight=&quot;0.5&quot;<br \/>\n            android:text=&quot;New Button1&quot; \/&gt;<br \/>\n        &lt;Button<br \/>\n            android:id=&quot;@+id\/button2&quot;<br \/>\n            android:layout_width=&quot;match_parent&quot;<br \/>\n            android:layout_height=&quot;wrap_content&quot;<br \/>\n            android:layout_weight=&quot;0.5&quot;<br \/>\n            android:text=&quot;New Button2&quot; \/&gt;<br \/>\n    &lt;\/LinearLayout&gt;<br \/>\n&lt;\/RelativeLayout&gt;<\/p>\n<p>The above code will produce output as follows.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ScrollView-with-Relative-Layout-Example.png\" rel=\"nofollow\">http:\/\/stacktips.com\/wp-content\/uploads\/2015\/03\/ScrollView-with-Relative-Layout-Example.png<\/a><\/p>\n","parent":7949},{"id":8063,"name":"Abhishek","url":"","date":"2015-07-03 17:30:00","content":"<p>hello sir myself Abhishek Pandey ,<br \/>\nI need your guidance please contact me <a href=\"mailto:abhishekpandey9aug@gmail.com\">abhishekpandey9aug@gmail.com<\/a><\/p>\n","parent":0},{"id":8064,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-07-03 20:44:00","content":"<p>What guidance you looking for?<\/p>\n","parent":8063},{"id":8077,"name":"Arnold PArge","url":"","date":"2015-07-08 23:16:00","content":"<p>It was nice HELP!<\/p>\n","parent":0},{"id":8159,"name":"BharGaV KriShNa JoNnA","url":"","date":"2015-08-31 14:43:00","content":"<p>Write an android program to demonstrate scroll view and list view.  (List view should   array adapter. The adapter should use array list of companies. Each item in the list view should have company name, company address and its annual revenue.)  any body explain these example<\/p>\n","parent":0},{"id":8173,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-09-01 15:47:00","content":"<p>Checkout the following android listview tutorial <\/p>\n<p><a href=\"http:\/\/stacktips.com\/android\/android-listview-tutorial\" rel=\"nofollow\">Android ListView Tutorial <\/a><\/p>\n","parent":8159},{"id":8394,"name":"marseni ahmed","url":"","date":"2016-02-23 14:40:00","content":"<p>how it made the statement in java scrollview (activity.java)?<\/p>\n","parent":0},{"id":8449,"name":"Neeraj Soni","url":"","date":"2016-03-15 09:00:00","content":"<p>how to right content under string\/description?<\/p>\n","parent":0}],"attachments":[{"id":8262,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-ScrollView-Example.png","slug":"android-scrollview-example","title":"Android ScrollView Example","description":"","caption":"","parent":8261,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-ScrollView-Example.png","width":969,"height":654},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-ScrollView-Example-620x418.png","width":620,"height":418},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-ScrollView-Example.png","width":969,"height":654},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Android-ScrollView-Example.png","width":969,"height":654}}}],"comment_count":9,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3510836761"],"post_views_count":["12226"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":8167,"type":"post","slug":"leveraging-the-wordpress-custom-post-types-to-create-event-listings","url":"http:\/\/stacktips.com\/tutorials\/wordpress\/leveraging-the-wordpress-custom-post-types-to-create-event-listings","status":"publish","title":"Leveraging the WordPress Custom Post Types to Create Event Listings","title_plain":"Leveraging the WordPress Custom Post Types to Create Event Listings","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Leveraging the WordPress Custom Post Types to Create Event Listings' data-link='http:\/\/stacktips.com\/tutorials\/wordpress\/leveraging-the-wordpress-custom-post-types-to-create-event-listings' data-summary='In the course of this tutorial, we will take a drive into building custom event calendar post type. Having an events calendar on your website is a way to publish all event specific information. Instead of tying your events to the post or page types, It is wise to create a custom post type &quot;events&quot; for all event listings.'><\/div>\n<p>Of all the amazing virtues of WordPress, its amazing scalability stands right up there.\u00a0A standard WordPress setup can be integrated with the most versatile and powerful features that give a website&#8217;s complete rein in the hands of the webmasters. The custom post types are among such customizations that go a long way in extending a website&#8217;s inbuilt features beyond their specifications.<\/p>\n<h1>Why Custom\u00a0Post Types?<\/h1>\n<ol>\n<li>The default WordPress CMS supports two\u00a0types of post types, i.e. post or a page. Which means you are quite limited, while publishing the dynamically changing content\u00a0such as events, reviews etc.<\/li>\n<li>So, you would need custom post type when you need a content structure on your website that facilitates posting very specific information about, lets say, events, or images or for that matter, any other dynamic information.<\/li>\n<li>Let&#8217;s say your business is selling mobile phones. You would require a CMS system that enables you add new phone types, reviews, and other details specific to each phone. The default WordPress\u00a0CMS is limited to provide such customization over your data. This is quite\u00a0possible with custom post types, you can create a custom post type called \u201cPhones\u201d that allows you to include specific content type for phones, without mixing it up with posts and pages.<\/li>\n<\/ol>\n<p>In the course of this tutorial, we will take a drive into building custom event calendar post type.\u00a0Having an events calendar on your website is a way to publish all event specific\u00a0information. Instead of tying your events to the post or page types, It is wise to create a custom post type &#8220;events&#8221; for all event listings.<\/p>\n<p>Let&#8217;s first begin by creating a post type by the name of event, and this post type will occupy its own section in the admin panel:<\/p>\n<h1>Create a Custom Post Type In WordPress<\/h1>\n<p>The following code snippet is used for a typical custom post type setup in WordPress. Now paste the following code snippet in your functions.php file,\u00a0at the tail-end of the file, but before the closing PHP tag.<\/p>\n<pre class=\"prettyprint lang-php\">add_action('init', 'events_init');\r\n\r\nfunction events_init() {\r\n\t$args = array(\r\n\t'labels' =&gt; array(\r\n\t'name' =&gt; __('Events'),\r\n\t'singular_name' =&gt; __('Event'),\r\n ),\r\n\r\n\t'public' =&gt; true,\r\n\t'rewrite' =&gt; array(\"slug\" =&gt; \"events\"),\r\n\t'supports' =&gt; array('thumbnail','editor','title','custom-fields')\r\n);\r\n\r\n\tregister_post_type( 'events' , $args );\r\n}\r\n<\/pre>\n<h3>How it works:<\/h3>\n<ol>\n<li>Creating custom post type needs some alterations to the core theme files of your WordPress setup. More precisely, we need to edit the functions.php file by adding the above\u00a0code snippets.<\/li>\n<li>This code is basically instantiating certain properties and charting out rules for how URLs are managed and what are the features that the post-type is supporting.<\/li>\n<li>Once the above code is pasted in your <code>functions.php<\/code> file, you can reload the dashboard&#8217;s page and now, the event section will appear on the sidebar. The following screenshot depicts the same<\/li>\n<\/ol>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Custom-Event-Post-Type-Wordpress.png\"><img class=\"aligncenter  wp-image-8173\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Custom-Event-Post-Type-Wordpress-620x351.png\" alt=\"Custom Event Post Type WordPress\" width=\"482\" height=\"273\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Custom-Event-Post-Type-Wordpress-620x351.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Custom-Event-Post-Type-Wordpress-300x170.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Custom-Event-Post-Type-Wordpress-800x453.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Custom-Event-Post-Type-Wordpress-900x510.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Custom-Event-Post-Type-Wordpress-370x210.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Custom-Event-Post-Type-Wordpress.png 939w\" sizes=\"(max-width: 482px) 100vw, 482px\" \/><\/a><\/p>\n<h1>Create\u00a0a New\u00a0Event<\/h1>\n<p>Now, we can proceed with adding some events as example. A custom field by the name of &#8216;date&#8217; can be created.<\/p>\n<p>Let it be absolutely clear that the date we mention here should be specified through the custom fields otherwise the default date will be taken, which happens to be the date at which the post is published. Also, make the necessary changes in the permalinks section of your admin panel since your theme needs to reconstruct the Permalink structure to accommodate the new custom post type.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Create-New-Event-Type.jpg\"><img class=\"aligncenter size-full wp-image-8188\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Create-New-Event-Type.jpg\" alt=\"Create New Event Type\" width=\"580\" height=\"353\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Create-New-Event-Type.jpg 580w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Create-New-Event-Type-300x183.jpg 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Create-New-Event-Type-370x225.jpg 370w\" sizes=\"(max-width: 580px) 100vw, 580px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h1>Create\u00a0Events Listings Page<\/h1>\n<p>In previous step, we have added events to our website\u00a0and the next stop is to create a page for listing these events. For this,\u00a0we need to create a new page template that can be further added to the standard menu items of our theme.<\/p>\n<p>To begin with this, let us\u00a0copy the <code>page.php<\/code> file of our theme, and rename it to <code>custom-events-template.php<\/code>.<\/p>\n<p>Now, open this file and add the following code at the very beginning (basically, this code will intimate your WordPress setup that the template you are adding is exclusive and it will also select it from the drop down list:<\/p>\n<pre class=\"prettyprint lang-php\">&lt;?php\r\n\/**\r\n* Template Name: Events Page\r\n*\/\r\n?&gt;<\/pre>\n<p>Next, find the line that\u2019s similar to this:<\/p>\n<pre class=\"prettyprint lang-php\">&lt;?php if (have_posts()) : while (have_posts()) : the_post(); ?&gt;<\/pre>\n<p>and just before it, add this:<\/p>\n<pre class=\"prettyprint lang-php\">&lt;?php query_posts( 'post_type=events'); ?&gt;<\/pre>\n<p>We have basically created a new query, and put attributes on to it that make it our new event post type.<\/p>\n<p>In order to use this new template, we will create a new page by any preferred name and then select the template from the page attributes box. Once the post is published, it will display the events list archive .<\/p>\n<p>Now, let&#8217;s make another custom change via which the events can be displayed in the order of date they are happening on, instead of the data on which the event got published. For the same, we can get our query replaced by the following code:<\/p>\n<pre class=\"prettyprint lang-php\">&lt;?php query_posts ( ' post_type=events&amp;meta_key=date&amp;orderby=meta_value&amp;order=ASC'); ?&gt;<\/pre>\n<p>It will also serve us well if we can get the date displayed within the post itself. For this, we can add te following code after the <code>the_content();<\/code> function in our template:<\/p>\n<pre class=\"prettyprint lang-php\">&lt;?php\r\n$date = get_post_meta($post-&gt;ID, 'date', true);\r\nif ($date){\r\n  echo 'This event will be held on: '.$date;\r\n}\r\n?&gt;<\/pre>\n<p>The following screenshot shows, how the events page will look like. Notice that the events are sorted by date order<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Events-List-Wordpress.jpg\"><img class=\"aligncenter size-full wp-image-8187\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Events-List-Wordpress.jpg\" alt=\"Events List WordPress\" width=\"580\" height=\"339\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Events-List-Wordpress.jpg 580w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Events-List-Wordpress-300x175.jpg 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Events-List-Wordpress-370x216.jpg 370w\" sizes=\"(max-width: 580px) 100vw, 580px\" \/><\/a><\/p>\n<p>So, that&#8217;s how easy the whole exercise is. You can enrich your WordPress features and take them beyond their default specifications with some minor tweaks to your theme files. Hope you find the above tutorial useful and if you have anything to add, do let us know in the comments below.<\/p>\n","excerpt":"<p>In the course of this tutorial, we will take a drive into building custom event calendar post type. Having an events calendar on your website is a way to publish all event specific information. Instead of tying your events to the post or page types, It is wise to create a custom post type &#8220;events&#8221; for all event listings.<\/p>\n","date":"2015-02-02 22:46:31","modified":"2015-07-29 15:27:05","categories":[{"id":181,"slug":"wordpress","title":"Wordpress","description":"","parent":297,"post_count":6}],"tags":[],"author":{"id":255,"slug":"sarah-parker","name":"Sarah Parker","first_name":"Sarah","last_name":"Parker","nickname":"Sarah Parker","url":"","description":"Sarah Parker is an experienced <a href=\"http:\/\/www.designs2html.com\/services\/psd-to-wordpress\">PSD to WordPress<\/a> service provider, and a web designer. With this article, she is making people aware about creating event listing in Wordpress."},"comments":[],"attachments":[{"id":8173,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Custom-Event-Post-Type-Wordpress.png","slug":"custom-event-post-type-wordpress","title":"Custom Event Post Type Wordpress","description":"Custom Event Post Type Wordpress","caption":"","parent":8167,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Custom-Event-Post-Type-Wordpress.png","width":939,"height":532},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Custom-Event-Post-Type-Wordpress-620x351.png","width":620,"height":351},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Custom-Event-Post-Type-Wordpress.png","width":939,"height":532},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Custom-Event-Post-Type-Wordpress.png","width":939,"height":532}}},{"id":8188,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Create-New-Event-Type.jpg","slug":"create-new-event-type","title":"Create New Event Type","description":"Create New Event Type","caption":"","parent":8167,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Create-New-Event-Type.jpg","width":580,"height":353},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Create-New-Event-Type.jpg","width":580,"height":353},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Create-New-Event-Type.jpg","width":580,"height":353},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Create-New-Event-Type.jpg","width":580,"height":353},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Create-New-Event-Type.jpg","width":580,"height":353},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Create-New-Event-Type.jpg","width":580,"height":353},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Create-New-Event-Type.jpg","width":580,"height":353}}},{"id":8187,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Events-List-Wordpress.jpg","slug":"events-list-wordpress","title":"Events List Wordpress","description":"Events List Wordpress","caption":"","parent":8167,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Events-List-Wordpress.jpg","width":580,"height":339},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Events-List-Wordpress.jpg","width":580,"height":339},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Events-List-Wordpress.jpg","width":580,"height":339},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Events-List-Wordpress.jpg","width":580,"height":339},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Events-List-Wordpress.jpg","width":580,"height":339},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Events-List-Wordpress.jpg","width":580,"height":339},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/02\/Events-List-Wordpress.jpg","width":580,"height":339}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3480884281"],"post_views_count":["1682"],"fsb_social_facebook":["1"],"fsb_social_twitter":["3"],"fsb_social_google":["1"],"fsb_social_linkedin":["1"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:234:\"a:1:{i:0;a:8:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:153:\"a:1:{i:0;a:5:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338}}},{"id":8099,"type":"post","slug":"xamarin-android-webview-tutorial","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/xamarin-android-webview-tutorial","status":"publish","title":"Xamarin Android WebView Tutorial","title_plain":"Xamarin Android WebView Tutorial","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Xamarin Android WebView Tutorial' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/xamarin-android-webview-tutorial' data-summary='In the course of this tutorial, we will take a look into using WebView in Xamarin.Android. This tutorial loads simple webpage on WebView and using WebViewClient.WebView is an android UI component that displays webpages.'><\/div>\n<p>In the course of this tutorial, we will take a look into using WebView in Xamarin.Android. This tutorial loads simple webpage on <code>WebView<\/code> and using <code>WebViewClient<\/code>.<\/p>\n<h1>Introduction to WebView<\/h1>\n<ol>\n<li>WebView is an android UI component that displays webpages. It can either display a remote webpage or can also load static HTML data.<\/li>\n<li>This encompasses the functionality of a browser that can be integrated to application. Most of the android applications like WordPress, Flipboard, fiddly; Google Reader, etc. are integrated with WebView in order to display certain piece of online contents.<\/li>\n<li>It uses the WebKit rendering engine to display web pages and includes methods to navigate forward and backward through a history, zoom in and out, and perform text searches and more.<\/li>\n<li>The implementation of WebView is quite simple like any other views, all you have to do is declare the WebView layout on your Activity or Fragment, instantiate and load the data on WebView.<\/li>\n<\/ol>\n<p>Following section of the tutorial, will drive you with step by step approach to create a simple WebView with different configuration params and load stacktips.com home page.<\/p>\n<h1>Declare WebView Layout<\/h1>\n<p>As discussed,\u00a0let us\u00a0create a simple WebView layout that covers the full screen\u00a0space.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:orientation=\"vertical\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"&gt;\r\n\r\n    &lt;WebView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:id=\"@+id\/webView\" \/&gt;\r\n\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<h1>Load Static HTML Data on WebView<\/h1>\n<p>Following activity class snippet will show you how to initialize WebView instance and load static Html string onto it.<\/p>\n<pre class=\"prettyprint lang-cs\">[Activity (Label = \"WebViewExample\", MainLauncher = true, Icon = \"@drawable\/icon\")]\r\npublic class MainActivity : Activity\r\n{\r\n\tprotected override void OnCreate (Bundle bundle)\r\n\t{\r\n\t\tbase.OnCreate (bundle);\r\n\r\n\t\t\/\/ Set our view from the \"main\" layout resource\r\n\t\tSetContentView (Resource.Layout.Main);\r\n\r\n\t\t\/\/ Get WebView from the layout resource,\r\n\t\t\/\/ and load html text data on it\r\n\t\tWebView mWebView = FindViewById&lt;WebView&gt;(Resource.Id.webView);\r\n\r\n\t\tstring customHtml = \"&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello, WebView&lt;\/h1&gt;\" +\r\n\t\t\t\"&lt;h1&gt;Heading 1&lt;\/h1&gt;&lt;h2&gt;Heading 2&lt;\/h2&gt;&lt;h3&gt;Heading 3&lt;\/h3&gt;\" +\r\n\t\t\t\"&lt;p&gt;This is a sample paragraph.&lt;\/p&gt;\" +\r\n\t\t\t\"&lt;\/body&gt;&lt;\/html&gt;\";\r\n\t\tmWebView.LoadData(customHtml, \"text\/html\", \"UTF-8\");\r\n\t}\r\n}\r\n<\/pre>\n<h3>How it works?<\/h3>\n<ol>\n<li>Like any other view controller, let us first instantiate WebView in your Activity by calling FindViewById() method. This requires you to import <code>Android.Webkit<\/code> package.<\/li>\n<li>Call <code>LoadData() <\/code>method that accepts your static Html string, mime type and the encoding format.<\/li>\n<\/ol>\n<p>The output of the above code is below<\/p>\n<p><a href=\"#\"><img class=\"aligncenter wp-image-8106 size-thumbnail\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Static-HTML-Data-on-WebView-300x294.png\" alt=\"Load Static HTML Data on WebView\" width=\"300\" height=\"294\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Static-HTML-Data-on-WebView-300x294.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Static-HTML-Data-on-WebView-620x607.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Static-HTML-Data-on-WebView-940x921.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Static-HTML-Data-on-WebView-800x784.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Static-HTML-Data-on-WebView-1000x980.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Static-HTML-Data-on-WebView-900x882.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Static-HTML-Data-on-WebView-370x362.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Static-HTML-Data-on-WebView.png 1080w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p>\n<h1>Load Remote URL on WebView<\/h1>\n<ol>\n<li>The default behavior of Android is to open device browser, when links are clicked. But as our WebView should work like a embedded browser, we must override to always open the links in the WebView instead redirecting it to the default browser.<\/li>\n<li>We can do this using android <code>WebViewClient<\/code>. WebViewClient helps to monitor events in a WebView. We have to override the <code>shouldOverrideUrlLoading()<\/code> method. This method allows performing your own action when a particular URL is selected. Once we are ready with the WebViewClient, we can set the WebViewClient of your WebView using the <code>setWebViewClient()<\/code> method.<\/li>\n<li>The WebViewClient class has some other useful methods such as <code>OnPageStarted()<\/code>, <code>OnPageFinished()<\/code> and <code>OnReceivedError()<\/code> that helps you to show loading progress of WebView content, or handle error.<\/li>\n<\/ol>\n<p>Checkout my Android tutorial that explains <a title=\"ProgressBar while Loading WebView in Android\" href=\"http:\/\/stacktips.com\/android\/progressbar-while-loading-webview\">How to show loading progress in Android WebView<\/a>. Bear with me, this tutorial\u00a0is written in Java. You need to take the pain to make it compatible for\u00a0C#.<\/p>\n<p>Now let us go back to our example, and take a look into how our activity class looks like.<\/p>\n<pre class=\"prettyprint lang-cs\">[Activity (Label = \"WebViewExample\", MainLauncher = true, Icon = \"@drawable\/icon\")]\r\npublic class MainActivity : Activity\r\n{\r\n\tprotected override void OnCreate (Bundle bundle)\r\n\t{\r\n\t\tbase.OnCreate (bundle);\r\n\r\n\t\t\/\/ Set our view from the \"main\" layout resource\r\n\t\tSetContentView (Resource.Layout.Main);\r\n\r\n\t\tWebView mWebView = FindViewById&lt;WebView&gt;(Resource.Id.webView);\r\n\t\tmWebView.Settings.JavaScriptEnabled = true;\r\n\r\n\t\tmWebView.SetWebViewClient (new MyWebViewClient());\r\n\r\n\t\t\/\/Load url to be randered on WebView\r\n\t\tmWebView.LoadUrl(\"http:\/\/www.stacktips.com\");\r\n\t}\r\n\r\n\tpublic class MyWebViewClient : WebViewClient\r\n\t{\r\n\t  public override bool ShouldOverrideUrlLoading (WebView view, string url)\r\n\t\t{\r\n\t\t\tview.LoadUrl (url);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tpublic override void OnPageStarted (WebView view, string url, Android.Graphics.Bitmap favicon)\r\n\t\t{\r\n\t\t\tbase.OnPageStarted (view, url, favicon);\r\n\t\t}\r\n\r\n\t\tpublic override void OnPageFinished (WebView view, string url)\r\n\t\t{\r\n\t\t\tbase.OnPageFinished (view, url);\r\n\t\t}\r\n\r\n\t\tpublic override void OnReceivedError (WebView view, ClientError errorCode, string description, string failingUrl)\r\n\t\t{\r\n\t\t\tbase.OnReceivedError (view, errorCode, description, failingUrl);\r\n\t\t}\r\n\t}\r\n}\r\n<\/pre>\n<p>Output of the above code is shown below<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView.png\"><img class=\"aligncenter size-thumbnail wp-image-8111\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView-300x416.png\" alt=\"Load Remote URL on WebView\" width=\"300\" height=\"416\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView-300x416.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView-620x859.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView-940x1302.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView-800x1108.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView-1000x1385.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView-900x1247.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView-370x513.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView.png 1080w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p>\n","excerpt":"<p>In the course of this tutorial, we will take a look into using WebView in Xamarin.Android. This tutorial loads simple webpage on WebView and using WebViewClient.WebView is an android UI component that displays webpages.<\/p>\n","date":"2015-01-30 17:08:59","modified":"2015-12-01 18:58:31","categories":[{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8133,"name":"kenyee","url":"","date":"2015-07-31 19:31:00","content":"<p>Have you tried doing Javascript callbacks from the WebView into Xamarin C# code?  I haven&#8217;t been able to find any way to do this.  I&#8217;m trying to get a &#8220;has this webview rendered&#8221; event w\/o luck (the webclient and webchromeclient callbacks for progress only indicate when something has loaded).<\/p>\n","parent":0}],"attachments":[{"id":8106,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Static-HTML-Data-on-WebView.png","slug":"load-static-html-data-on-webview","title":"Load Static HTML Data on WebView","description":"Load Static HTML Data on WebView","caption":"","parent":8099,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Static-HTML-Data-on-WebView.png","width":1080,"height":1058},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Static-HTML-Data-on-WebView-620x607.png","width":620,"height":607},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Static-HTML-Data-on-WebView.png","width":1080,"height":1058},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Static-HTML-Data-on-WebView.png","width":1080,"height":1058}}},{"id":8111,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView.png","slug":"load-remote-url-on-webview","title":"Load Remote URL on WebView","description":"Load Remote URL on WebView","caption":"","parent":8099,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView.png","width":1080,"height":1496},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView-620x859.png","width":620,"height":859},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView.png","width":1080,"height":1496},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Load-Remote-URL-on-WebView.png","width":1080,"height":1496}}}],"comment_count":1,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3469306784"],"post_views_count":["3914"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"fsb_social_facebook":["1"],"fsb_social_twitter":["4"],"fsb_social_google":["1"],"fsb_social_linkedin":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:234:\"a:1:{i:0;a:8:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:153:\"a:1:{i:0;a:5:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}},{"id":8013,"type":"post","slug":"android-linearlayout-example","url":"http:\/\/stacktips.com\/tutorials\/android\/android-linearlayout-example","status":"publish","title":"Android LinearLayout Example","title_plain":"Android LinearLayout Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android LinearLayout Example' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-linearlayout-example' data-summary='The LinearLayout is the most basic layout manager provided by Android. The LinearLayout organizes the child views either horizontally or vertically based on the specified orientation property. The value for orientation property can be either horizontal or vertical.'><\/div>\n<p>The LinearLayout is the most basic layout manager provided by Android. The LinearLayout organizes the child views either horizontally or vertically based on the specified \u00a0orientation property. The value for orientation property can be either <code>horizontal<\/code> or <code>vertical<\/code>.<\/p>\n<p>Here is how the LinearLayout declaration looks like in Android layout<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"     \r\n       android:orientation=\"horizontal\"     \r\n       android:layout_width=\"fill_parent\"  \r\n       android:layout_height=\"wrap_content\"&gt;\r\n\r\n&lt;!-- add children here--&gt; \r\n\r\n&lt;\/LinearLayout&gt;\r\n\r\n<\/pre>\n<p>Notice that in the above code snippets, we have specified orientation as horizontal, this aligns all its child layout\/views horizontally.<\/p>\n<p>All of the layout managers can be nested. This means that you can put a RelativeLayout or FrameLayout as a child to LinearLayout.<\/p>\n<p>For example, if you want to create a layout as shown in the picture below, you need to construct a vertical layout manager that contained horizontal layout managers, where each row owns its own horizontal layout.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Example.png\"><img class=\"aligncenter size-full wp-image-8014\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Example.png\" alt=\"LinearLayout Example\" width=\"353\" height=\"250\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Example.png 353w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Example-300x212.png 300w\" sizes=\"(max-width: 353px) 100vw, 353px\" \/><\/a><\/p>\n<h2>Example<\/h2>\n<pre class=\"prettyprint lang-java\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"&gt;\r\n\r\n    &lt;LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        android:padding=\"5dp\"&gt;\r\n\r\n        &lt;TextView\r\n            android:id=\"@+id\/textView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Label1\"\r\n            android:textAppearance=\"?android:attr\/textAppearanceMedium\" \/&gt;\r\n\r\n        &lt;EditText\r\n            android:id=\"@+id\/editText\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Edit text1\" \/&gt;\r\n\r\n    &lt;\/LinearLayout&gt;\r\n\r\n    &lt;LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        android:padding=\"5dp\"&gt;\r\n\r\n        &lt;TextView\r\n            android:id=\"@+id\/textView1\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Label2\"\r\n            android:textAppearance=\"?android:attr\/textAppearanceMedium\" \/&gt;\r\n\r\n        &lt;EditText\r\n            android:id=\"@+id\/editText1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Edit text2\" \/&gt;\r\n\r\n    &lt;\/LinearLayout&gt;\r\n\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<h1>Understanding Weight<\/h1>\n<p>The weight property is used to assign a size importance of child views in a container. For example, if you want to place two buttons distributed horizontally by occupying each half of the screen width, you can define <code>layout_weight<\/code> as 0.5 for each of the buttons inside LinearLayout. Following screenshot depicts the views distributed<br \/>\nequally using weight property.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/android\/android-linearlayout-example\/attachment\/linearlayout-weight-property\" rel=\"attachment wp-att-8015\"><img class=\"aligncenter size-full wp-image-8015\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Weight-Property.png\" alt=\"LinearLayout Weight Property\" width=\"355\" height=\"280\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Weight-Property.png 355w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Weight-Property-300x237.png 300w\" sizes=\"(max-width: 355px) 100vw, 355px\" \/><\/a><\/p>\n<h2>Example<\/h2>\n<p>Following code snippets implements the same as shown in the above image.<\/p>\n<pre class=\"prettyprint lang-java\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:layout_marginTop=\"10dp\"\r\n    android:orientation=\"horizontal\"&gt;\r\n\r\n    &lt;Button\r\n        android:id=\"@+id\/button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"0.5\"\r\n        android:text=\"Button1\" \/&gt;\r\n\r\n    &lt;Button\r\n        android:id=\"@+id\/button2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"0.5\"\r\n        android:text=\"Button2\" \/&gt;\r\n\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<h1>Key Points<\/h1>\n<ol>\n<li>If a LinearLayout is set to vertical orientation and contains more number of views than the screen space, it will not be scrollable by default. You have to explicitly put the LinearLayout inside a <code>ScrollView<\/code>.<\/li>\n<li>you muto be careful about over-using the LinearLayout. If your application design demands nesting of multiple LinearLayouts, you may want to consider using a RelativeLayout instead.<\/li>\n<\/ol>\n","excerpt":"<p>The LinearLayout is the most basic layout manager provided by Android. The LinearLayout organizes the child views either horizontally or vertically based on the specified  orientation property. The value for orientation property can be either horizontal or vertical.<\/p>\n","date":"2015-01-28 04:20:20","modified":"2015-03-03 22:24:49","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8478,"name":"Cueto re-cabron","url":"","date":"2016-04-12 11:14:00","content":"<p>thanks<\/p>\n","parent":0}],"attachments":[{"id":8014,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Example.png","slug":"linearlayout-example","title":"LinearLayout Example","description":"LinearLayout Example","caption":"","parent":8013,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Example.png","width":353,"height":250},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Example.png","width":353,"height":250},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Example.png","width":353,"height":250},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Example.png","width":353,"height":250},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Example.png","width":353,"height":250},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Example.png","width":353,"height":250},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Example.png","width":353,"height":250},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Example.png","width":353,"height":250}}},{"id":8015,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Weight-Property.png","slug":"linearlayout-weight-property","title":"LinearLayout Weight Property","description":"","caption":"","parent":8013,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Weight-Property.png","width":355,"height":280},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Weight-Property.png","width":355,"height":280},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Weight-Property.png","width":355,"height":280},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Weight-Property.png","width":355,"height":280},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Weight-Property.png","width":355,"height":280},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Weight-Property.png","width":355,"height":280},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/LinearLayout-Weight-Property.png","width":355,"height":280}}}],"comment_count":1,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"549286230\";s:5:\"pDate\";s:19:\"2015-01-27 22:50:52\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"3e043c82888bbcc77c4778f41d931e53\";s:5:\"pDate\";s:19:\"2015-01-27 22:50:53\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"560208353243066370\";s:5:\"pDate\";s:19:\"2015-01-27 22:50:53\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-27 22:50:53\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_958667047478883\";s:5:\"pDate\";s:19:\"2015-01-27 22:50:56\";}}\";"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"dsq_thread_id":["3461456663"],"post_views_count":["5365"],"fsb_social_facebook":["1"],"fsb_social_twitter":["1"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":8025,"type":"post","slug":"android-textview-example","url":"http:\/\/stacktips.com\/tutorials\/android\/android-textview-example","status":"publish","title":"Android TextView Example","title_plain":"Android TextView Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android TextView Example' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-textview-example' data-summary='In the course of this tutorial, we will take a look into Android TextView widget and various TextView properties. TextView is one of the most fundamental Android user interface widget, which is used to display text on Android screen. TextView is like a dummy label, doesn&#039;t allow to edit text input.'><\/div>\n<p>In the course of this tutorial, we will take a look into Android TextView widget and various TextView properties.<\/p>\n<p>TextView is one of the most fundamental Android user interface widget, which is used to display text on Android screen. TextView is like a dummy label, doesn&#8217;t allow to edit text input.<\/p>\n<p>Following are some of the most used TextView properties.<\/p>\n<table style=\"font-size: 85%;\">\n<tbody>\n<tr>\n<th><b>Attribute Name<\/b><\/th>\n<th><b>Related Method<\/b><\/th>\n<th><b>Description<\/b><\/th>\n<\/tr>\n<tr>\n<td>android:autoLink<\/td>\n<td>setAutoLinkMask(int)<\/td>\n<td>Automatically convert the links such as web url or email.<\/td>\n<\/tr>\n<tr>\n<td>android:autoText<\/td>\n<td>setKeyListener(KeyListener)<\/td>\n<td>Auto spelling correction for text.<\/td>\n<\/tr>\n<tr>\n<td>android:ellipsize<\/td>\n<td>setEllipsize(TextUtils.TruncateAt)<\/td>\n<td>If the width required by text is longer than the View itself, it ellipsized text.<\/td>\n<\/tr>\n<tr>\n<td>android:ems<\/td>\n<td>setEms(int)<\/td>\n<td>Makes the TextView be exactly this many ems wide.<\/td>\n<\/tr>\n<tr>\n<td>android:gravity<\/td>\n<td>setGravity(int)<\/td>\n<td>Specifies how to align the text by the view&#8217;s x- and\/or y-axis when the text is smaller than the view.<\/td>\n<\/tr>\n<tr>\n<td>android:lineSpacingMultiplier<\/td>\n<td>setLineSpacing(float,float)<\/td>\n<\/tr>\n<tr>\n<td>android:lines<\/td>\n<td>setLines(int)<\/td>\n<td>Makes the TextView be exactly this many lines tall.<\/td>\n<\/tr>\n<tr>\n<td>android:maxLines<\/td>\n<td>setMaxLines(int)<\/td>\n<td>Makes the TextView be at most this many lines tall.<\/td>\n<\/tr>\n<tr>\n<td>android:minLines<\/td>\n<td>setMinLines(int)<\/td>\n<td>Makes the TextView be at least this many lines tall.<\/td>\n<\/tr>\n<tr>\n<td>android:minWidth<\/td>\n<td>setMinWidth(int)<\/td>\n<td>Makes the TextView be at least this many pixels wide.<\/td>\n<\/tr>\n<tr>\n<td>android:shadowColor<\/td>\n<td>setShadowLayer(float, float, float,int)<\/td>\n<td>Place a blurred shadow of text underneath the text, drawn with the specified color.<\/td>\n<\/tr>\n<tr>\n<td>android:shadowDx<\/td>\n<td>setShadowLayer(float, float, float, int)<\/td>\n<td>Horizontal offset of the text shadow.<\/td>\n<\/tr>\n<tr>\n<td>android:shadowDy<\/td>\n<td>setShadowLayer(float, float, float, int)<\/td>\n<td>Vertical offset of the text shadow.<\/td>\n<\/tr>\n<tr>\n<td>android:shadowRadius<\/td>\n<td>setShadowLayer(float, float, float, int)<\/td>\n<td>Blur radius of the text shadow.<\/td>\n<\/tr>\n<tr>\n<td>android:text<\/td>\n<td>setText(CharSequence, TextView.BufferType)<\/td>\n<td>Text to display.<\/td>\n<\/tr>\n<tr>\n<td>android:textAllCaps<\/td>\n<td>setAllCaps(boolean)<\/td>\n<td>Present the text in ALL CAPS.<\/td>\n<\/tr>\n<tr>\n<td>android:textAppearance<\/td>\n<td><\/td>\n<td>Base text color, typeface, size, and style.<\/td>\n<\/tr>\n<tr>\n<td>android:textColor<\/td>\n<td>setTextColor(int)<\/td>\n<td>Text color.<\/td>\n<\/tr>\n<tr>\n<td>android:textSize<\/td>\n<td>setTextSize(int, float)<\/td>\n<td>Size of the text.<\/td>\n<\/tr>\n<tr>\n<td>android:typeface<\/td>\n<td>setTypeface(Typeface)<\/td>\n<td>Typeface (normal, sans, serif, monospace) for the text.<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>For all TextView properties and attributes follow official <a href=\"http:\/\/developer.android.com\/reference\/android\/widget\/TextView.html\" target=\"_blank\">TextView documentation<\/a>.<\/p>\n<p>The example below using some of the most used properties and output of the following code is below<\/p>\n<p><a href=\"http:\/\/stacktips.com\/android\/android-textview-example\/attachment\/textview-example\" rel=\"attachment wp-att-8026\"><img class=\"aligncenter size-full wp-image-8026\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TextView-Example.png\" alt=\"TextView Example\" width=\"347\" height=\"339\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TextView-Example.png 347w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TextView-Example-300x293.png 300w\" sizes=\"(max-width: 347px) 100vw, 347px\" \/><\/a><\/p>\n<p>Also refer the following tutorials to learn more on Android TextView<\/p>\n<p><a href=\"http:\/\/stacktips.com\/android\/how-to-apply-shadow-effect-on-android-textview\">How to apply shadow effect on Android TextView<\/a><br \/>\n<a title=\"Using External Fonts in Android View\" href=\"http:\/\/stacktips.com\/android\/using-external-fonts-in-android-view\">How to use\u00a0external fonts in Android TextView<\/a><br \/>\n<a title=\"How to Display HTML in Android TextView\" href=\"http:\/\/stacktips.com\/android\/display-html-in-android-textview\">How to Display HTML in Android TextView<\/a><\/p>\n<h1>Example<\/h1>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:layout_marginTop=\"10dp\"\r\n    android:orientation=\"vertical\"\r\n    android:padding=\"10dp\"&gt;\r\n\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id\/textView1\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"10dp\"\r\n        android:gravity=\"center_horizontal\"\r\n        android:text=\"stacktips.com\"\r\n        android:textAllCaps=\"true\"\r\n        android:textColor=\"#86AD33\"\r\n        android:textSize=\"25dp\"\r\n        android:textStyle=\"bold\" \/&gt;\r\n\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id\/textView2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"center_horizontal\"\r\n        android:layout_marginBottom=\"20dp\"\r\n        android:ellipsize=\"end\"\r\n        android:letterSpacing=\"1.5\"\r\n        android:maxLines=\"2\"\r\n        android:text=\"Free programming tutorials on Java, Android development, Xamarin, Java Design Pattern, Data Structure Algorithm and examples on related technologies.\"\r\n        android:textAppearance=\"?android:attr\/textAppearanceMedium\" \/&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id\/textView3\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"center_horizontal\"\r\n        android:autoLink=\"email|web\"\r\n        android:lineSpacingMultiplier=\"1.5\"\r\n        android:text=\"Have questions about stacktips.com or just want to chat? Contact us at javatechig@gmail.com\" \/&gt;\r\n\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n","excerpt":"<p>In the course of this tutorial, we will take a look into Android TextView widget and various TextView properties. TextView is one of the most fundamental Android user interface widget, which is used to display text on Android screen. TextView is like a dummy label, doesn&#8217;t allow to edit text input.<\/p>\n","date":"2015-01-28 04:15:56","modified":"2015-01-29 23:14:23","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8358,"name":"Bharat Sindhav","url":"","date":"2016-01-18 14:21:00","content":"<p>Hiii&#8230;. i want the show the data in text view in 1.5 line and after the show &#8220;&#8230;..&#8221; so how<\/p>\n","parent":0},{"id":8359,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2016-01-18 15:21:00","content":"<p>I think you&#8217;re taking about line spacing. For line spacing you can use <code>android:lineSpacingMultiplier<\/code> property.<\/p>\n","parent":8358}],"attachments":[{"id":8026,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TextView-Example.png","slug":"textview-example","title":"TextView Example","description":"TextView Example","caption":"","parent":8025,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TextView-Example.png","width":347,"height":339},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TextView-Example.png","width":347,"height":339},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TextView-Example.png","width":347,"height":339},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TextView-Example.png","width":347,"height":339},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TextView-Example.png","width":347,"height":339},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TextView-Example.png","width":347,"height":339},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TextView-Example.png","width":347,"height":339}}}],"comment_count":2,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"549284999\";s:5:\"pDate\";s:19:\"2015-01-27 22:46:31\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"560207257900572672\";s:5:\"pDate\";s:19:\"2015-01-27 22:46:32\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-27 22:46:33\";}}\";"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_958666107478977\";s:5:\"pDate\";s:19:\"2015-01-27 22:46:35\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"fc5031b355bf6c6e919610fd44a3f02c\";s:5:\"pDate\";s:19:\"2015-01-27 22:46:36\";}}\";"],"dsq_thread_id":["3461672368"],"post_views_count":["3681"],"fsb_social_facebook":["0"],"fsb_social_twitter":["1"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":8057,"type":"post","slug":"android-lollipop-swipe-to-refresh-example","url":"http:\/\/stacktips.com\/tutorials\/android\/android-lollipop-swipe-to-refresh-example","status":"publish","title":"Android Lollipop Swipe to Refresh Example","title_plain":"Android Lollipop Swipe to Refresh Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android Lollipop Swipe to Refresh Example' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-lollipop-swipe-to-refresh-example' data-summary='The Swipe to refresh layout is used to indicate user while the content of a screen is being updated. It was earlier introduced in Android 4.4 Kitkat, and was named as SwipeRefreshLayout. Visually it was represented just below ActionBar.'><\/div>\n<p>In the course of this tutorial, we will take a look into the new Swipe to refresh layout introduced in material design.<\/p>\n<p>Android Lollipop is baked with some of the finests looking user interface widgets and UI design guidelines, and what they call it as Material Design. Some of the widgets are fine tuned while some new of them are added to the SDK.<\/p>\n<p>The Swipe to refresh layout is used to indicate \u00a0user while the content of a screen is being updated. The Swipe to refresh layout was earlier introduced in Android 4.4 Kitkat, and was named as <code>SwipeRefreshLayout<\/code>. Visually it was represented just below ActionBar.<\/p>\n<p>Since Android Lollipop, the visual representation of the swipe to refresh layout has been changed drastically. It appears as a circular refresh animation, horizontally centered and appears right below the <a title=\"Android Lollipop Toolbar Example\" href=\"http:\/\/stacktips.com\/android\/android-lollipop-toolbar-example\" target=\"_blank\">Toolbar<\/a>. Checkout official documentation for <a href=\"http:\/\/www.google.co.uk\/design\/spec\/patterns\/swipe-to-refresh.html\">Swipe to refresh<\/a> layout in android Lollipop.<\/p>\n<h1>Swipe to Refresh Layout\u00a0Example<\/h1>\n<p>In this example, we will create the sample application that downloads the data from a server feed, and displays on a ListView. It also allow user the ability to swipe down and request for updated data from server. <\/p>\n<p>Output of this example is as following video.<\/p>\n<div class=\"embed\"><iframe width=\"810\" height=\"456\" src=\"https:\/\/www.youtube.com\/embed\/y9RdvzelGbQ?feature=oembed\" frameborder=\"0\" allowfullscreen><\/iframe><\/div>\n<p>Now without wasting much of time, lets us move straight into its implementation.\u00a0To implement Swipe to refresh layout, you will need the v4 support library. You can include the v4 support library to your project by adding below dependency in <code>build.gradle<\/code> file.<\/p>\n<pre class=\"prettyprint lang-java\">dependencies {\r\n    compile fileTree(dir: 'libs', include: ['*.jar'])\r\n    compile \"com.android.support:appcompat-v7:21.0.+\"\r\n}\r\n<\/pre>\n<p>Secondly, let us define the swipe to refresh layout and list view to show the feed response. Create a new layout file inside res\/layout folder, name it as activity_main.xml and paste the below code snippets.<\/p>\n<h3>activity_main.xml<\/h3>\n<pre class=\"prettyprint lang-xml\">&lt;android.support.v4.widget.SwipeRefreshLayout \r\n    xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:id=\"@+id\/swipeRefreshLayout\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"&gt;\r\n\r\n    &lt;ListView\r\n        android:id=\"@+id\/listView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"&gt;&lt;\/ListView&gt;\r\n&lt;\/android.support.v4.widget.SwipeRefreshLayout&gt;\r\n<\/pre>\n<h2>How it works<\/h2>\n<ul>\n<li>The ListView is placed as a child view to SwipeRefreshLayout.<\/li>\n<li>This allows user the ability to show the loading spinner when user swipes the ListView edge. All the functionality of displaying loading bar is encapsulated inside <code>SwipeRefreshLayout<\/code> class.<\/li>\n<li>When user swipes down, the <code>OnRefreshListener<\/code> events gets fired. You can handle this event to write the logic for downloading or refreshing data.<\/li>\n<li>Note that, once data is downloaded, user has to manually call <code>setRefreshing(false)<\/code> to hide the refresh spinner.<\/li>\n<\/ul>\n<p>Let us now initialize the SwipeRefreshLayout and ListView from activity and write the logic to download data from server.<\/p>\n<p>In this example we are downloading data form server and parsing JSON response before we rendering it on the ListView. Please refer <a title=\"Android Networking Tutorial\" href=\"http:\/\/stacktips.com\/android\/android-networking-tutorial\">Android Networking Tutorial<\/a>\u00a0for understanding more on this code.<\/p>\n<h3>MainActivity.java<\/h3>\n<pre class=\"prettyprint lang-java\">public class MainActivity extends ActionBarActivity {\r\n\r\n    private ListView mListView = null;\r\n    private ArrayAdapter mAdapter = null;\r\n    private SwipeRefreshLayout mSwipeRefreshLayout = null;\r\n\r\n    private String[] feedList = null;\r\n    private String feedUrl = \"http:\/\/stacktips.com\/api\/get_category_posts\/?dev=1&amp;slug=android\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        setContentView(R.layout.activity_main);\r\n\r\n        mListView = (ListView) findViewById(R.id.listView);\r\n\r\n        \/\/Start Downloading data\r\n        new DownloadFilesTask().execute(feedUrl);\r\n\r\n        \/\/Initialize swipe to refresh view\r\n        mSwipeRefreshLayout = (SwipeRefreshLayout) findViewById(R.id.swipeRefreshLayout);\r\n        mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh() {\r\n                \/\/Refreshing data on server\r\n                new DownloadFilesTask().execute(feedUrl);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private void updateList() {\r\n        ArrayAdapter mAdapter = new ArrayAdapter(MainActivity.this, android.R.layout.simple_list_item_1, feedList);\r\n        mListView.setAdapter(mAdapter);\r\n\r\n        if (mSwipeRefreshLayout.isRefreshing()) {\r\n            mSwipeRefreshLayout.setRefreshing(false);\r\n        }\r\n    }\r\n\r\n\r\n    private class DownloadFilesTask extends AsyncTask&lt;String, Void, Void&gt; {\r\n\r\n        @Override\r\n        protected void onProgressUpdate(Void... values) {\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(Void result) {\r\n            if (null != feedList) {\r\n                updateList();\r\n            }\r\n        }\r\n\r\n        @Override\r\n        protected Void doInBackground(String... params) {\r\n            \/\/ getting JSON string from URL\r\n            JSONObject json = getJSONFromUrl(params[0]);\r\n\r\n            \/\/parsing json data\r\n            parseJson(json);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public JSONObject getJSONFromUrl(String url) {\r\n        InputStream is = null;\r\n        JSONObject jObj = null;\r\n        String json = null;\r\n\r\n        try {\r\n            DefaultHttpClient httpClient = new DefaultHttpClient();\r\n            HttpPost httpPost = new HttpPost(url);\r\n\r\n            HttpResponse httpResponse = httpClient.execute(httpPost);\r\n            HttpEntity httpEntity = httpResponse.getEntity();\r\n            is = httpEntity.getContent();\r\n\r\n            BufferedReader reader = new BufferedReader(new InputStreamReader(is, \"iso-8859-1\"), 8);\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = null;\r\n            while ((line = reader.readLine()) != null) {\r\n                sb.append(line + \"\\n\");\r\n            }\r\n            is.close();\r\n            json = sb.toString();\r\n\r\n            jObj = new JSONObject(json);\r\n\r\n        } catch (Exception e) {\r\n            Log.e(\"Error\", \"Error parsing data \" + e.toString());\r\n        }\r\n        return jObj;\r\n    }\r\n\r\n\r\n    public void parseJson(JSONObject json) {\r\n        try {\r\n            if (json.getString(\"status\").equalsIgnoreCase(\"ok\")) {\r\n                JSONArray posts = json.getJSONArray(\"posts\");\r\n\r\n                feedList = new String[posts.length()];\r\n                for (int i = 0; i &lt; posts.length(); i++) {\r\n                    JSONObject post = (JSONObject) posts.getJSONObject(i);\r\n                    feedList[i] = post.getString(\"title\");\r\n                }\r\n            }\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n<\/pre>\n<p><a class = 'ss-button dowload-button' href='https:\/\/github.com\/npanigrahy\/Android-Lollipop-Swipe-to-Refresh' target='_blank'>Download from GitHub.<\/a><\/p>\n","excerpt":"<p>The Swipe to refresh layout is used to indicate  user while the content of a screen is being updated. It was earlier introduced in Android 4.4 Kitkat, and was named as SwipeRefreshLayout. Visually it was represented just below ActionBar.<\/p>\n","date":"2015-01-27 22:57:00","modified":"2015-06-19 02:20:41","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8031,"name":"JavaTechig","url":"http:\/\/stacktips.com\/","date":"2015-06-09 12:21:00","content":"<p>You must retain the scroll position of the list. And use listView.scrollToPosition() method to scroll to the position where user left previously. <\/p>\n","parent":0},{"id":8161,"name":"Eric","url":"","date":"2015-09-01 01:59:00","content":"<p>Works fine except for the fact that when I refresh, it duplicates the already existing list items<\/p>\n","parent":0},{"id":8162,"name":"Eric","url":"","date":"2015-09-01 02:02:00","content":"<p>Works  except for the fact that when I refresh, it duplicates the already existing list items<\/p>\n","parent":0},{"id":8170,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-09-01 15:44:00","content":"<p>You have to careful check while making the request for same page. Placing a database logic is preferable. <\/p>\n","parent":8162},{"id":8222,"name":"zicaros","url":"","date":"2015-09-21 18:11:00","content":"<p>thx u sir<\/p>\n","parent":0},{"id":8249,"name":"Susheel","url":"","date":"2015-10-05 18:21:00","content":"<p>package com.impresa.labs;<\/p>\n<p>import java.io.BufferedReader;<\/p>\n<p>import java.io.ByteArrayOutputStream;<\/p>\n<p>import java.io.File;<\/p>\n<p>import java.io.InputStream;<\/p>\n<p>import java.io.InputStreamReader;<\/p>\n<p>import java.text.SimpleDateFormat;<\/p>\n<p>import java.util.Date;<\/p>\n<p>import java.util.Locale;<\/p>\n<p>import android.app.Activity;<\/p>\n<p>import android.app.ProgressDialog;<\/p>\n<p>import android.content.Intent;<\/p>\n<p>import android.content.pm.PackageManager;<\/p>\n<p>import android.graphics.Bitmap;<\/p>\n<p>import android.graphics.BitmapFactory;<\/p>\n<p>import android.graphics.Color;<\/p>\n<p>import android.graphics.drawable.BitmapDrawable;<\/p>\n<p>import android.graphics.drawable.ColorDrawable;<\/p>\n<p>import android.net.Uri;<\/p>\n<p>import android.os.AsyncTask;<\/p>\n<p>import android.os.Bundle;<\/p>\n<p>import android.os.Environment;<\/p>\n<p>import android.provider.MediaStore;<\/p>\n<p>import android.util.Log;<\/p>\n<p>import android.view.View;<\/p>\n<p>import android.widget.AdapterView;<\/p>\n<p>import android.widget.ArrayAdapter;<\/p>\n<p>import android.widget.Button;<\/p>\n<p>import android.widget.TextView;<\/p>\n<p>import android.widget.Toast;<\/p>\n<p>import android.os.Bundle;<\/p>\n<p>import android.support.v4.app.Fragment;<\/p>\n<p>import android.support.v4.app.ListFragment;<\/p>\n<p>import android.support.v4.widget.SwipeRefreshLayout;<\/p>\n<p>import android.view.LayoutInflater;<\/p>\n<p>import android.view.MenuInflater;<\/p>\n<p>import android.view.MenuItem;<\/p>\n<p>import android.view.View;<\/p>\n<p>import android.view.ViewGroup;<\/p>\n<p>import info.androidhive.listviewfeed.adapter.FeedListAdapter;<\/p>\n<p>import info.androidhive.listviewfeed.app.AppController;<\/p>\n<p>import info.androidhive.listviewfeed.data.FeedItem;<\/p>\n<p>import java.io.UnsupportedEncodingException;<\/p>\n<p>import java.util.ArrayList;<\/p>\n<p>import java.util.List;<\/p>\n<p>import org.apache.http.HttpEntity;<\/p>\n<p>import org.apache.http.HttpResponse;<\/p>\n<p>import org.apache.http.client.methods.HttpPost;<\/p>\n<p>import org.apache.http.impl.client.DefaultHttpClient;<\/p>\n<p>import org.json.JSONArray;<\/p>\n<p>import org.json.JSONException;<\/p>\n<p>import org.json.JSONObject;<\/p>\n<p>import android.annotation.SuppressLint;<\/p>\n<p>import android.app.Activity;<\/p>\n<p>import android.content.Intent;<\/p>\n<p>import android.graphics.Color;<\/p>\n<p>import android.graphics.drawable.ColorDrawable;<\/p>\n<p>import android.os.Bundle;<\/p>\n<p>import android.view.Menu;<\/p>\n<p>import android.view.View.OnClickListener;<\/p>\n<p>import android.widget.Button;<\/p>\n<p>import android.widget.ListView;<\/p>\n<p>import info.androidhive.listviewfeed.adapter.FeedListAdapter;<\/p>\n<p>import com.android.volley.Cache;<\/p>\n<p>import com.android.volley.Cache.Entry;<\/p>\n<p>import com.android.volley.Request.Method;<\/p>\n<p>import com.android.volley.Response;<\/p>\n<p>import com.android.volley.VolleyError;<\/p>\n<p>import com.android.volley.VolleyLog;<\/p>\n<p>import com.android.volley.toolbox.JsonObjectRequest;<\/p>\n<p>import com.android.volley.toolbox.NetworkImageView;<\/p>\n<p>import com.impresa.labs.MainActivity;<\/p>\n<p>import com.impresa.labs.R;<\/p>\n<p>public class Stories extends Fragment {<\/p>\n<p>\tprivate static final String TAG = Stories.class.getSimpleName();<\/p>\n<p>\tprivate ProgressDialog pDialog;<\/p>\n<p>\tprivate ListView listView;<\/p>\n<p>\tprivate FeedListAdapter listAdapter;<\/p>\n<p>\tprivate List feedItems;<\/p>\n<p>\tprivate String URL_FEED = &#8220;http:\/\/jokesnstuffs.com\/projectx\/onlystory.php&#8221;;<\/p>\n<p>\tprivate static final String TAG_NAME = &#8220;name&#8221;;<\/p>\n<p>\tprivate static final String TAG_TIMESTAMP = &#8220;timestamp&#8221;;<\/p>\n<p>\tprivate static final String TAG_STATUS = &#8220;txtStatusMsg&#8221;;<\/p>\n<p>\tprivate Button update, feedback;<\/p>\n<p>\tprivate SwipeRefreshLayout mSwipeRefreshLayout = null;<\/p>\n<p>\t@Override<\/p>\n<p>\tpublic View onCreateView(LayoutInflater inflater, ViewGroup container,<\/p>\n<p>\t\t\tBundle savedInstanceState) {<\/p>\n<p>\t\tsetHasOptionsMenu(true);<\/p>\n<p>\t\tView rootView = inflater.inflate(R.layout.fragment_top_rated,<\/p>\n<p>\t\t\t\tcontainer, false);<\/p>\n<p>\t\tlistView = (ListView) rootView.findViewById(R.id.list);<\/p>\n<p>\t\trootView.findViewById(R.id.allow);<\/p>\n<p>\t\tfeedItems = new ArrayList();<\/p>\n<p>\t\tlistAdapter = new FeedListAdapter(getActivity(), feedItems);<\/p>\n<p>\t\tlistView.setOnItemClickListener(new Click2());<\/p>\n<p>\t\tlistView.setAdapter(listAdapter);<\/p>\n<p>\t\tupdate = (Button) rootView.findViewById(R.id.deny3);<\/p>\n<p>\t\t new DownloadFilesTask().execute(URL_FEED);<\/p>\n<p>\t        \/\/Initialize swipe to refresh view<\/p>\n<p>\t        mSwipeRefreshLayout = (SwipeRefreshLayout)rootView.findViewById(R.id.swipeRefreshLayout);<\/p>\n<p>\t        mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {<\/p>\n<p>\t            @Override<\/p>\n<p>\t            public void onRefresh() {<\/p>\n<p>\t                \/\/Refreshing data on server<\/p>\n<p>\t                new DownloadFilesTask().execute(URL_FEED);<\/p>\n<p>\t            }<\/p>\n<p>\t        });<\/p>\n<p>\t\tupdate.setOnClickListener(new OnClickListener() {<\/p>\n<p>\t\t\t@Override<\/p>\n<p>\t\t\tpublic void onClick(View v) {<\/p>\n<p>\t\t\t\t\/\/ TODO Auto-generated method stub<\/p>\n<p>\t\t\t\tIntent nxt = new Intent(getActivity(), Feedback.class);<\/p>\n<p>\t\t\t\tstartActivity(nxt);<\/p>\n<p>\t\t\t}<\/p>\n<p>\t\t});<\/p>\n<p>\t\tfeedback = (Button) rootView.findViewById(R.id.deny3);<\/p>\n<p>\t\tupdate.setOnClickListener(new OnClickListener() {<\/p>\n<p>\t\t\t@Override<\/p>\n<p>\t\t\tpublic void onClick(View v) {<\/p>\n<p>\t\t\t\t\/\/ TODO Auto-generated method stub<\/p>\n<p>\t\t\t\tIntent nxt = new Intent(getActivity(), Feedback.class);<\/p>\n<p>\t\t\t\tstartActivity(nxt);<\/p>\n<p>\t\t\t}<\/p>\n<p>\t\t});<\/p>\n<p>\t\tCache cache = AppController.getInstance().getRequestQueue().getCache();<\/p>\n<p>\t\tEntry entry = cache.get(URL_FEED);<\/p>\n<p>\t\tif (entry != null) {<\/p>\n<p>\t\t\t\/\/ fetch the data from cache<\/p>\n<p>\t\t\ttry {<\/p>\n<p>\t\t\t\tString data = new String(entry.data, &#8220;UTF-8&#8221;);<\/p>\n<p>\t\t\t\ttry {<\/p>\n<p>\t\t\t\t\tparseJsonFeed(new JSONObject(data));<\/p>\n<p>\t\t\t\t} catch (JSONException e) {<\/p>\n<p>\t\t\t\t\te.printStackTrace();<\/p>\n<p>\t\t\t\t}<\/p>\n<p>\t\t\t} catch (UnsupportedEncodingException e) {<\/p>\n<p>\t\t\t\te.printStackTrace();<\/p>\n<p>\t\t\t}<\/p>\n<p>\t\t} else {<\/p>\n<p>\t\t\t\/\/ making fresh volley request and getting json<\/p>\n<p>\t\t\tJsonObjectRequest jsonReq = new JsonObjectRequest(Method.GET,<\/p>\n<p>\t\t\t\t\tURL_FEED, null, new Response.Listener() {<\/p>\n<p>\t\t\t\t\t\t@Override<\/p>\n<p>\t\t\t\t\t\tpublic void onResponse(JSONObject response) {<\/p>\n<p>\t\t\t\t\t\t\tVolleyLog.d(TAG, &#8220;Response: &#8221; + response.toString());<\/p>\n<p>\t\t\t\t\t\t\tif (response != null) {<\/p>\n<p>\t\t\t\t\t\t\t\tparseJsonFeed(response);<\/p>\n<p>\t\t\t\t\t\t\t}<\/p>\n<p>\t\t\t\t\t\t}<\/p>\n<p>\t\t\t\t\t}, new Response.ErrorListener() {<\/p>\n<p>\t\t\t\t\t\t@Override<\/p>\n<p>\t\t\t\t\t\tpublic void onErrorResponse(VolleyError error) {<\/p>\n<p>\t\t\t\t\t\t\tVolleyLog.d(TAG, &#8220;Error: &#8221; + error.getMessage());<\/p>\n<p>\t\t\t\t\t\t}<\/p>\n<p>\t\t\t\t\t});<\/p>\n<p>\t\t\t\/\/ Adding request to volley request queue<\/p>\n<p>\t\t\tAppController.getInstance().addToRequestQueue(jsonReq);<\/p>\n<p>\t\t}<\/p>\n<p>\t\treturn rootView;<\/p>\n<p>\t}<\/p>\n<p>\t private void updateList() {<\/p>\n<p>\t        ArrayAdapter mAdapter = new ArrayAdapter(getActivity(), android.R.layout.simple_list_item_1, feedItems);<\/p>\n<p>\t        listView.setAdapter(mAdapter);<\/p>\n<p>\t        if (mSwipeRefreshLayout.isRefreshing()) {<\/p>\n<p>\t            mSwipeRefreshLayout.setRefreshing(false);<\/p>\n<p>\t        }<\/p>\n<p>\t    }<\/p>\n<p>\t    private class DownloadFilesTask extends AsyncTask {<\/p>\n<p>\t        @Override<\/p>\n<p>\t        protected void onProgressUpdate(Void&#8230; values) {<\/p>\n<p>\t        }<\/p>\n<p>\t        @Override<\/p>\n<p>\t        protected void onPostExecute(Void result) {<\/p>\n<p>\t            if (null != feedItems) {<\/p>\n<p>\t                updateList();<\/p>\n<p>\t            }<\/p>\n<p>\t        }<\/p>\n<p>\t        @Override<\/p>\n<p>\t        protected Void doInBackground(String&#8230; params) {<\/p>\n<p>\t            \/\/ getting JSON string from URL<\/p>\n<p>\t            JSONObject json = getJSONFromUrl(params[0]);<\/p>\n<p>\t            \/\/parsing json data<\/p>\n<p>\t            parseJsonFeed(json);<\/p>\n<p>\t            return null;<\/p>\n<p>\t        }<\/p>\n<p>\t    }<\/p>\n<p>\t    public JSONObject getJSONFromUrl(String url) {<\/p>\n<p>\t        InputStream is = null;<\/p>\n<p>\t        JSONObject jObj = null;<\/p>\n<p>\t        String json = null;<\/p>\n<p>\t        try {<\/p>\n<p>\t            DefaultHttpClient httpClient = new DefaultHttpClient();<\/p>\n<p>\t            HttpPost httpPost = new HttpPost(url);<\/p>\n<p>\t            HttpResponse httpResponse = httpClient.execute(httpPost);<\/p>\n<p>\t            HttpEntity httpEntity = httpResponse.getEntity();<\/p>\n<p>\t            is = httpEntity.getContent();<\/p>\n<p>\t            BufferedReader reader = new BufferedReader(new InputStreamReader(is, &#8220;iso-8859-1&#8221;), 8);<\/p>\n<p>\t            StringBuilder sb = new StringBuilder();<\/p>\n<p>\t            String line = null;<\/p>\n<p>\t            while ((line = reader.readLine()) != null) {<\/p>\n<p>\t                sb.append(line + &#8220;n&#8221;);<\/p>\n<p>\t            }<\/p>\n<p>\t            is.close();<\/p>\n<p>\t            json = sb.toString();<\/p>\n<p>\t            jObj = new JSONObject(json);<\/p>\n<p>\t        } catch (Exception e) {<\/p>\n<p>\t            Log.e(&#8220;Error&#8221;, &#8220;Error parsing data &#8221; + e.toString());<\/p>\n<p>\t        }<\/p>\n<p>\t        return jObj;<\/p>\n<p>\t    }<\/p>\n<p>\tprivate void parseJsonFeed(JSONObject response) {<\/p>\n<p>\t\ttry {<\/p>\n<p>\t\t\tJSONArray feedArray = response.getJSONArray(&#8220;contacts&#8221;);<\/p>\n<p>\t\t\tfor (int i = 0; i &lt; feedArray.length(); i++) {<\/p>\n<p>\t\t\t\tJSONObject feedObj = (JSONObject) feedArray.get(i);<\/p>\n<p>\t\t\t\tFeedItem item = new FeedItem();<\/p>\n<p>\t\t\t\titem.setName(feedObj.getString(&quot;name&quot;));<\/p>\n<p>\t\t\t\titem.setStatus(feedObj.getString(&quot;status&quot;));<\/p>\n<p>\t\t\t\titem.setTimeStamp(feedObj.getString(&quot;timeStamp&quot;));<\/p>\n<p>\t\t\t\tfeedItems.add(item);<\/p>\n<p>\t\t\t}<\/p>\n<p>\t\t\t\/\/ notify data changes to list adapater<\/p>\n<p>\t\t\tlistAdapter.notifyDataSetChanged();<\/p>\n<p>\t\t} catch (JSONException e) {<\/p>\n<p>\t\t\te.printStackTrace();<\/p>\n<p>\t\t}<\/p>\n<p>\t}<\/p>\n<p>\tprivate class Click2 implements ListView.OnItemClickListener {<\/p>\n<p>\t\t@Override<\/p>\n<p>\t\tpublic void onItemClick(AdapterView parent, View view, int position,<\/p>\n<p>\t\t\t\tlong id) {<\/p>\n<p>\t\t\tString name = ((TextView) view.findViewById(R.id.name)).getText()<\/p>\n<p>\t\t\t\t\t.toString();<\/p>\n<p>\t\t\tString status = ((TextView) view.findViewById(R.id.txtStatusMsg))<\/p>\n<p>\t\t\t\t\t.getText().toString();<\/p>\n<p>\t\t\tString timestamp = ((TextView) view.findViewById(R.id.timestamp))<\/p>\n<p>\t\t\t\t\t.getText().toString();<\/p>\n<p>\t\t\t\/\/ String bitmap =<\/p>\n<p>\t\t\t\/\/ ((Movie)feedItems.get(position)).getThumbnailUrl();<\/p>\n<p>\t\t\tIntent in = new Intent(getActivity(), SingleActivity2.class);<\/p>\n<p>\t\t\tin.putExtra(TAG_NAME, name);<\/p>\n<p>\t\t\tin.putExtra(TAG_TIMESTAMP, timestamp);<\/p>\n<p>\t\t\tin.putExtra(TAG_STATUS, status);<\/p>\n<p>\t\t\t\/\/ in.putExtra(&#8220;images&#8221;, bitmap);<\/p>\n<p>\t\t\tstartActivity(in);<\/p>\n<p>\t\t}<\/p>\n<p>\t}<\/p>\n<p>\t@Override<\/p>\n<p>\tpublic void onDestroy() {<\/p>\n<p>\t\tsuper.onDestroy();<\/p>\n<p>\t\thidePDialog();<\/p>\n<p>\t}<\/p>\n<p>\tprivate void hidePDialog() {<\/p>\n<p>\t\tif (pDialog != null) {<\/p>\n<p>\t\t\tpDialog.dismiss();<\/p>\n<p>\t\t\tpDialog = null;<\/p>\n<p>\t\t}<\/p>\n<p>\t}<\/p>\n<p>}<\/p>\n","parent":0},{"id":8250,"name":"Susheel","url":"","date":"2015-10-05 18:23:00","content":"<p>can you please check its not working sir error in doing in background method<br \/>\nparseJsonFeed(json);<\/p>\n<p>package com.impresa.labs;<\/p>\n<p>import java.io.BufferedReader;<\/p>\n<p>import java.io.ByteArrayOutputStream;<\/p>\n<p>import java.io.File;<\/p>\n<p>import java.io.InputStream;<\/p>\n<p>import java.io.InputStreamReader;<\/p>\n<p>import java.text.SimpleDateFormat;<\/p>\n<p>import java.util.Date;<\/p>\n<p>import java.util.Locale;<\/p>\n<p>import android.app.Activity;<\/p>\n<p>import android.app.ProgressDialog;<\/p>\n<p>import android.content.Intent;<\/p>\n<p>import android.content.pm.PackageManager;<\/p>\n<p>import android.graphics.Bitmap;<\/p>\n<p>import android.graphics.BitmapFactory;<\/p>\n<p>import android.graphics.Color;<\/p>\n<p>import android.graphics.drawable.BitmapDrawable;<\/p>\n<p>import android.graphics.drawable.ColorDrawable;<\/p>\n<p>import android.net.Uri;<\/p>\n<p>import android.os.AsyncTask;<\/p>\n<p>import android.os.Bundle;<\/p>\n<p>import android.os.Environment;<\/p>\n<p>import android.provider.MediaStore;<\/p>\n<p>import android.util.Log;<\/p>\n<p>import android.view.View;<\/p>\n<p>import android.widget.AdapterView;<\/p>\n<p>import android.widget.ArrayAdapter;<\/p>\n<p>import android.widget.Button;<\/p>\n<p>import android.widget.TextView;<\/p>\n<p>import android.widget.Toast;<\/p>\n<p>import android.os.Bundle;<\/p>\n<p>import android.support.v4.app.Fragment;<\/p>\n<p>import android.support.v4.app.ListFragment;<\/p>\n<p>import android.support.v4.widget.SwipeRefreshLayout;<\/p>\n<p>import android.view.LayoutInflater;<\/p>\n<p>import android.view.MenuInflater;<\/p>\n<p>import android.view.MenuItem;<\/p>\n<p>import android.view.View;<\/p>\n<p>import android.view.ViewGroup;<\/p>\n<p>import info.androidhive.listviewfeed.adapter.FeedListAdapter;<\/p>\n<p>import info.androidhive.listviewfeed.app.AppController;<\/p>\n<p>import info.androidhive.listviewfeed.data.FeedItem;<\/p>\n<p>import java.io.UnsupportedEncodingException;<\/p>\n<p>import java.util.ArrayList;<\/p>\n<p>import java.util.List;<\/p>\n<p>import org.apache.http.HttpEntity;<\/p>\n<p>import org.apache.http.HttpResponse;<\/p>\n<p>import org.apache.http.client.methods.HttpPost;<\/p>\n<p>import org.apache.http.impl.client.DefaultHttpClient;<\/p>\n<p>import org.json.JSONArray;<\/p>\n<p>import org.json.JSONException;<\/p>\n<p>import org.json.JSONObject;<\/p>\n<p>import android.annotation.SuppressLint;<\/p>\n<p>import android.app.Activity;<\/p>\n<p>import android.content.Intent;<\/p>\n<p>import android.graphics.Color;<\/p>\n<p>import android.graphics.drawable.ColorDrawable;<\/p>\n<p>import android.os.Bundle;<\/p>\n<p>import android.view.Menu;<\/p>\n<p>import android.view.View.OnClickListener;<\/p>\n<p>import android.widget.Button;<\/p>\n<p>import android.widget.ListView;<\/p>\n<p>import info.androidhive.listviewfeed.adapter.FeedListAdapter;<\/p>\n<p>import com.android.volley.Cache;<\/p>\n<p>import com.android.volley.Cache.Entry;<\/p>\n<p>import com.android.volley.Request.Method;<\/p>\n<p>import com.android.volley.Response;<\/p>\n<p>import com.android.volley.VolleyError;<\/p>\n<p>import com.android.volley.VolleyLog;<\/p>\n<p>import com.android.volley.toolbox.JsonObjectRequest;<\/p>\n<p>import com.android.volley.toolbox.NetworkImageView;<\/p>\n<p>import com.impresa.labs.MainActivity;<\/p>\n<p>import com.impresa.labs.R;<\/p>\n<p>public class Stories extends Fragment {<\/p>\n<p>\tprivate static final String TAG = Stories.class.getSimpleName();<\/p>\n<p>\tprivate ProgressDialog pDialog;<\/p>\n<p>\tprivate ListView listView;<\/p>\n<p>\tprivate FeedListAdapter listAdapter;<\/p>\n<p>\tprivate List feedItems;<\/p>\n<p>\tprivate String URL_FEED = &#8220;http:\/\/jokesnstuffs.com\/projectx\/onlystory.php&#8221;;<\/p>\n<p>\tprivate static final String TAG_NAME = &#8220;name&#8221;;<\/p>\n<p>\tprivate static final String TAG_TIMESTAMP = &#8220;timestamp&#8221;;<\/p>\n<p>\tprivate static final String TAG_STATUS = &#8220;txtStatusMsg&#8221;;<\/p>\n<p>\tprivate Button update, feedback;<\/p>\n<p>\tprivate SwipeRefreshLayout mSwipeRefreshLayout = null;<\/p>\n<p>\t@Override<\/p>\n<p>\tpublic View onCreateView(LayoutInflater inflater, ViewGroup container,<\/p>\n<p>\t\t\tBundle savedInstanceState) {<\/p>\n<p>\t\tsetHasOptionsMenu(true);<\/p>\n<p>\t\tView rootView = inflater.inflate(R.layout.fragment_top_rated,<\/p>\n<p>\t\t\t\tcontainer, false);<\/p>\n<p>\t\tlistView = (ListView) rootView.findViewById(R.id.list);<\/p>\n<p>\t\trootView.findViewById(R.id.allow);<\/p>\n<p>\t\tfeedItems = new ArrayList();<\/p>\n<p>\t\tlistAdapter = new FeedListAdapter(getActivity(), feedItems);<\/p>\n<p>\t\tlistView.setOnItemClickListener(new Click2());<\/p>\n<p>\t\tlistView.setAdapter(listAdapter);<\/p>\n<p>\t\tupdate = (Button) rootView.findViewById(R.id.deny3);<\/p>\n<p>\t\t new DownloadFilesTask().execute(URL_FEED);<\/p>\n<p>\t        \/\/Initialize swipe to refresh view<\/p>\n<p>\t        mSwipeRefreshLayout = (SwipeRefreshLayout)rootView.findViewById(R.id.swipeRefreshLayout);<\/p>\n<p>\t        mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {<\/p>\n<p>\t            @Override<\/p>\n<p>\t            public void onRefresh() {<\/p>\n<p>\t                \/\/Refreshing data on server<\/p>\n<p>\t                new DownloadFilesTask().execute(URL_FEED);<\/p>\n<p>\t            }<\/p>\n<p>\t        });<\/p>\n<p>\t\tupdate.setOnClickListener(new OnClickListener() {<\/p>\n<p>\t\t\t@Override<\/p>\n<p>\t\t\tpublic void onClick(View v) {<\/p>\n<p>\t\t\t\t\/\/ TODO Auto-generated method stub<\/p>\n<p>\t\t\t\tIntent nxt = new Intent(getActivity(), Feedback.class);<\/p>\n<p>\t\t\t\tstartActivity(nxt);<\/p>\n<p>\t\t\t}<\/p>\n<p>\t\t});<\/p>\n<p>\t\tfeedback = (Button) rootView.findViewById(R.id.deny3);<\/p>\n<p>\t\tupdate.setOnClickListener(new OnClickListener() {<\/p>\n<p>\t\t\t@Override<\/p>\n<p>\t\t\tpublic void onClick(View v) {<\/p>\n<p>\t\t\t\t\/\/ TODO Auto-generated method stub<\/p>\n<p>\t\t\t\tIntent nxt = new Intent(getActivity(), Feedback.class);<\/p>\n<p>\t\t\t\tstartActivity(nxt);<\/p>\n<p>\t\t\t}<\/p>\n<p>\t\t});<\/p>\n<p>\t\tCache cache = AppController.getInstance().getRequestQueue().getCache();<\/p>\n<p>\t\tEntry entry = cache.get(URL_FEED);<\/p>\n<p>\t\tif (entry != null) {<\/p>\n<p>\t\t\t\/\/ fetch the data from cache<\/p>\n<p>\t\t\ttry {<\/p>\n<p>\t\t\t\tString data = new String(entry.data, &#8220;UTF-8&#8221;);<\/p>\n<p>\t\t\t\ttry {<\/p>\n<p>\t\t\t\t\tparseJsonFeed(new JSONObject(data));<\/p>\n<p>\t\t\t\t} catch (JSONException e) {<\/p>\n<p>\t\t\t\t\te.printStackTrace();<\/p>\n<p>\t\t\t\t}<\/p>\n<p>\t\t\t} catch (UnsupportedEncodingException e) {<\/p>\n<p>\t\t\t\te.printStackTrace();<\/p>\n<p>\t\t\t}<\/p>\n<p>\t\t} else {<\/p>\n<p>\t\t\t\/\/ making fresh volley request and getting json<\/p>\n<p>\t\t\tJsonObjectRequest jsonReq = new JsonObjectRequest(Method.GET,<\/p>\n<p>\t\t\t\t\tURL_FEED, null, new Response.Listener() {<\/p>\n<p>\t\t\t\t\t\t@Override<\/p>\n<p>\t\t\t\t\t\tpublic void onResponse(JSONObject response) {<\/p>\n<p>\t\t\t\t\t\t\tVolleyLog.d(TAG, &#8220;Response: &#8221; + response.toString());<\/p>\n<p>\t\t\t\t\t\t\tif (response != null) {<\/p>\n<p>\t\t\t\t\t\t\t\tparseJsonFeed(response);<\/p>\n<p>\t\t\t\t\t\t\t}<\/p>\n<p>\t\t\t\t\t\t}<\/p>\n<p>\t\t\t\t\t}, new Response.ErrorListener() {<\/p>\n<p>\t\t\t\t\t\t@Override<\/p>\n<p>\t\t\t\t\t\tpublic void onErrorResponse(VolleyError error) {<\/p>\n<p>\t\t\t\t\t\t\tVolleyLog.d(TAG, &#8220;Error: &#8221; + error.getMessage());<\/p>\n<p>\t\t\t\t\t\t}<\/p>\n<p>\t\t\t\t\t});<\/p>\n<p>\t\t\t\/\/ Adding request to volley request queue<\/p>\n<p>\t\t\tAppController.getInstance().addToRequestQueue(jsonReq);<\/p>\n<p>\t\t}<\/p>\n<p>\t\treturn rootView;<\/p>\n<p>\t}<\/p>\n<p>\t private void updateList() {<\/p>\n<p>\t        ArrayAdapter mAdapter = new ArrayAdapter(getActivity(), android.R.layout.simple_list_item_1, feedItems);<\/p>\n<p>\t        listView.setAdapter(mAdapter);<\/p>\n<p>\t        if (mSwipeRefreshLayout.isRefreshing()) {<\/p>\n<p>\t            mSwipeRefreshLayout.setRefreshing(false);<\/p>\n<p>\t        }<\/p>\n<p>\t    }<\/p>\n<p>\t    private class DownloadFilesTask extends AsyncTask {<\/p>\n<p>\t        @Override<\/p>\n<p>\t        protected void onProgressUpdate(Void&#8230; values) {<\/p>\n<p>\t        }<\/p>\n<p>\t        @Override<\/p>\n<p>\t        protected void onPostExecute(Void result) {<\/p>\n<p>\t            if (null != feedItems) {<\/p>\n<p>\t                updateList();<\/p>\n<p>\t            }<\/p>\n<p>\t        }<\/p>\n<p>\t        @Override<\/p>\n<p>\t        protected Void doInBackground(String&#8230; params) {<\/p>\n<p>\t            \/\/ getting JSON string from URL<\/p>\n<p>\t            JSONObject json = getJSONFromUrl(params[0]);<\/p>\n<p>\t            \/\/parsing json data<\/p>\n<p>\t            parseJsonFeed(json);<\/p>\n<p>\t            return null;<\/p>\n<p>\t        }<\/p>\n<p>\t    }<\/p>\n<p>\t    public JSONObject getJSONFromUrl(String url) {<\/p>\n<p>\t        InputStream is = null;<\/p>\n<p>\t        JSONObject jObj = null;<\/p>\n<p>\t        String json = null;<\/p>\n<p>\t        try {<\/p>\n<p>\t            DefaultHttpClient httpClient = new DefaultHttpClient();<\/p>\n<p>\t            HttpPost httpPost = new HttpPost(url);<\/p>\n<p>\t            HttpResponse httpResponse = httpClient.execute(httpPost);<\/p>\n<p>\t            HttpEntity httpEntity = httpResponse.getEntity();<\/p>\n<p>\t            is = httpEntity.getContent();<\/p>\n<p>\t            BufferedReader reader = new BufferedReader(new InputStreamReader(is, &#8220;iso-8859-1&#8221;), 8);<\/p>\n<p>\t            StringBuilder sb = new StringBuilder();<\/p>\n<p>\t            String line = null;<\/p>\n<p>\t            while ((line = reader.readLine()) != null) {<\/p>\n<p>\t                sb.append(line + &#8220;n&#8221;);<\/p>\n<p>\t            }<\/p>\n<p>\t            is.close();<\/p>\n<p>\t            json = sb.toString();<\/p>\n<p>\t            jObj = new JSONObject(json);<\/p>\n<p>\t        } catch (Exception e) {<\/p>\n<p>\t            Log.e(&#8220;Error&#8221;, &#8220;Error parsing data &#8221; + e.toString());<\/p>\n<p>\t        }<\/p>\n<p>\t        return jObj;<\/p>\n<p>\t    }<\/p>\n<p>\tprivate void parseJsonFeed(JSONObject response) {<\/p>\n<p>\t\ttry {<\/p>\n<p>\t\t\tJSONArray feedArray = response.getJSONArray(&#8220;contacts&#8221;);<\/p>\n<p>\t\t\tfor (int i = 0; i &lt; feedArray.length(); i++) {<\/p>\n<p>\t\t\t\tJSONObject feedObj = (JSONObject) feedArray.get(i);<\/p>\n<p>\t\t\t\tFeedItem item = new FeedItem();<\/p>\n<p>\t\t\t\titem.setName(feedObj.getString(&quot;name&quot;));<\/p>\n<p>\t\t\t\titem.setStatus(feedObj.getString(&quot;status&quot;));<\/p>\n<p>\t\t\t\titem.setTimeStamp(feedObj.getString(&quot;timeStamp&quot;));<\/p>\n<p>\t\t\t\tfeedItems.add(item);<\/p>\n<p>\t\t\t}<\/p>\n<p>\t\t\t\/\/ notify data changes to list adapater<\/p>\n<p>\t\t\tlistAdapter.notifyDataSetChanged();<\/p>\n<p>\t\t} catch (JSONException e) {<\/p>\n<p>\t\t\te.printStackTrace();<\/p>\n<p>\t\t}<\/p>\n<p>\t}<\/p>\n<p>\tprivate class Click2 implements ListView.OnItemClickListener {<\/p>\n<p>\t\t@Override<\/p>\n<p>\t\tpublic void onItemClick(AdapterView parent, View view, int position,<\/p>\n<p>\t\t\t\tlong id) {<\/p>\n<p>\t\t\tString name = ((TextView) view.findViewById(R.id.name)).getText()<\/p>\n<p>\t\t\t\t\t.toString();<\/p>\n<p>\t\t\tString status = ((TextView) view.findViewById(R.id.txtStatusMsg))<\/p>\n<p>\t\t\t\t\t.getText().toString();<\/p>\n<p>\t\t\tString timestamp = ((TextView) view.findViewById(R.id.timestamp))<\/p>\n<p>\t\t\t\t\t.getText().toString();<\/p>\n<p>\t\t\t\/\/ String bitmap =<\/p>\n<p>\t\t\t\/\/ ((Movie)feedItems.get(position)).getThumbnailUrl();<\/p>\n<p>\t\t\tIntent in = new Intent(getActivity(), SingleActivity2.class);<\/p>\n<p>\t\t\tin.putExtra(TAG_NAME, name);<\/p>\n<p>\t\t\tin.putExtra(TAG_TIMESTAMP, timestamp);<\/p>\n<p>\t\t\tin.putExtra(TAG_STATUS, status);<\/p>\n<p>\t\t\t\/\/ in.putExtra(&#8220;images&#8221;, bitmap);<\/p>\n<p>\t\t\tstartActivity(in);<\/p>\n<p>\t\t}<\/p>\n<p>\t}<\/p>\n<p>\t@Override<\/p>\n<p>\tpublic void onDestroy() {<\/p>\n<p>\t\tsuper.onDestroy();<\/p>\n<p>\t\thidePDialog();<\/p>\n<p>\t}<\/p>\n<p>\tprivate void hidePDialog() {<\/p>\n<p>\t\tif (pDialog != null) {<\/p>\n<p>\t\t\tpDialog.dismiss();<\/p>\n<p>\t\t\tpDialog = null;<\/p>\n<p>\t\t}<\/p>\n<p>\t}<\/p>\n<p>}<\/p>\n","parent":0}],"attachments":[],"comment_count":7,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3460507927"],"post_views_count":["7383"],"fsb_social_facebook":["3"],"fsb_social_twitter":["4"],"fsb_social_google":["2"],"fsb_social_linkedin":["0"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-27 17:27:30\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"1c204d5c152c72709a1ada82db3b1f52\";s:5:\"pDate\";s:19:\"2015-01-27 17:27:33\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_958559684156286\";s:5:\"pDate\";s:19:\"2015-01-27 17:27:32\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"549198429\";s:5:\"pDate\";s:19:\"2015-01-27 17:27:28\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"560126966301331458\";s:5:\"pDate\";s:19:\"2015-01-27 17:27:29\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":8051,"type":"post","slug":"android-relativelayout-example","url":"http:\/\/stacktips.com\/tutorials\/android\/android-relativelayout-example","status":"publish","title":"Android RelativeLayout Example","title_plain":"Android RelativeLayout Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android RelativeLayout Example' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-relativelayout-example' data-summary='Over the course of this tutorial, we will take a look into Android RelativeLayout and its properties. RelativeLayout is one among the most used layout after LinearLayout. It allows its child views to position relative to each other or relative to the container or another container. For example, if we have to build a complex layout as shown in the image below, this can be achieved \u00a0with ease by using RelativeLayout.'><\/div>\n<p>Over the course of this tutorial, we will take a look into Android RelativeLayout and its properties.<\/p>\n<p>RelativeLayout is one among the most used layout after LinearLayout. It allows its child views to position relative to each other or relative to the container or another container. For example, if we have to build a complex layout as shown in the image below, this can be achieved \u00a0with ease by using RelativeLayout.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/android\/android-relativelayout-example\/attachment\/relativelayout-example\" rel=\"attachment wp-att-8053\"><img class=\"aligncenter size-thumbnail wp-image-8053\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/RelativeLayout-Example-300x437.png\" alt=\"RelativeLayout Example\" width=\"300\" height=\"437\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/RelativeLayout-Example-300x437.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/RelativeLayout-Example.png 317w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p>\n<h1>Positioning Views in RelativeLayout<\/h1>\n<p>As discussed above, the RelativeLayout childs need to specify their position relative to the parent view or another siblings. If they don&#8217;t specify their position explicitly, by default they are positioned to the top-left corner of parent layout.<\/p>\n<p>Some of the most useful RelativeLayout properties includes,<\/p>\n<table class=\"reference\" style=\"font-size: 90%;\">\n<tbody>\n<tr>\n<th>XML Attributes<\/th>\n<th>Description<\/th>\n<\/tr>\n<tr>\n<td>layout_alignParentTop<\/td>\n<td>Accepts boolean value. If specified, the widget will be docked to the top of RelativeLayout.<\/td>\n<\/tr>\n<tr>\n<td>layout_alignParentBottom<\/td>\n<td>Accepts boolean value. If specified, the widget will be docked to the bottom of RelativeLayout.<\/td>\n<\/tr>\n<tr>\n<td>layout_alignParentLeft<\/td>\n<td>Accepts boolean value. If specified, the widget will be docked to the left edge of RelativeLayout.<\/td>\n<\/tr>\n<tr>\n<td>layout_alignParentRight<\/td>\n<td>Accepts boolean value. If specified, the widget will be docked to the right edge of RelativeLayout.<\/td>\n<\/tr>\n<tr>\n<td>layout_centerInParent<\/td>\n<td>Accepts boolean value. If specified, the widget will be aligned to center of RelativeLayout.<\/td>\n<\/tr>\n<tr>\n<td>layout_centerHorizontal<\/td>\n<td>Accepts boolean value. If specified, the widget will be horizontally center aligned<\/td>\n<\/tr>\n<tr>\n<td>layout_centerVertical<\/td>\n<td>Accepts boolean value. If specified, the widget will be vertically center aligned<\/td>\n<\/tr>\n<tr>\n<td>layout_below<\/td>\n<td>Accepts sibling widget id. Places the widget below the view as specified widget id.<\/td>\n<\/tr>\n<tr>\n<td>layout_above<\/td>\n<td>Accepts sibling widget id. Places the widget above the specified widget id.<\/td>\n<\/tr>\n<tr>\n<td>layout_toRightOf<\/td>\n<td>Accepts sibling widget id. Places the widget to right of the view as specified widget id.<\/td>\n<\/tr>\n<tr>\n<td>layout_toLeftOf<\/td>\n<td>Accepts sibling widget id. Places the widget to left of the view as specified widget id.<\/td>\n<\/tr>\n<tr>\n<td>layout_toEndOf<\/td>\n<td>Accepts sibling widget id. Places the widget to end of the view as specified widget id.<\/td>\n<\/tr>\n<tr>\n<td>layout_toStartOf<\/td>\n<td>Accepts sibling widget id. Places the widget to the beginning of the view as specified widget id.<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<h1>RelativeLayout Example<\/h1>\n<p>Let us create an example of RelativeLayout as shown in the screenshot below. For the sake of simplicity, we have made the example relatively very simple, by adding some random Buttons to demonstrate different RelativeLayout attributes.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/android\/android-relativelayout-example\/attachment\/android-relativelayout-example\" rel=\"attachment wp-att-8052\"><img class=\"aligncenter size-full wp-image-8052\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-RelativeLayout-Example.png\" alt=\"Android RelativeLayout Example\" width=\"340\" height=\"573\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-RelativeLayout-Example.png 340w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-RelativeLayout-Example-300x506.png 300w\" sizes=\"(max-width: 340px) 100vw, 340px\" \/><\/a><\/p>\n<p>Source Code of the above example is below<\/p>\n<pre class=\"prettyprint lang-java\">&lt;RelativeLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    android:padding=\"10dp\"&gt;\r\n\r\n    &lt;Button\r\n        android:id=\"@+id\/button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:text=\"Button1\" \/&gt;\r\n\r\n    &lt;Button\r\n        android:id=\"@+id\/button2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:text=\"Button2\" \/&gt;\r\n\r\n    &lt;Button\r\n        android:id=\"@+id\/button3\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentLeft=\"true\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:text=\"Button3\" \/&gt;\r\n\r\n    &lt;Button\r\n        android:id=\"@+id\/button4\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:text=\"Button5\" \/&gt;\r\n\r\n    &lt;Button\r\n        android:id=\"@+id\/button5\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignBottom=\"@+id\/button2\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:text=\"Button4\" \/&gt;\r\n\r\n    &lt;Button\r\n        android:id=\"@+id\/button6\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_above=\"@+id\/button4\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:text=\"Button6\" \/&gt;\r\n\r\n    &lt;Button\r\n        android:id=\"@+id\/button7\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignBottom=\"@+id\/button\"\r\n        android:layout_toEndOf=\"@+id\/button\"\r\n        android:layout_toRightOf=\"@+id\/button\"\r\n        android:text=\"Button7\" \/&gt;\r\n\r\n&lt;\/RelativeLayout&gt;\r\n<\/pre>\n","excerpt":"<p>Over the course of this tutorial, we will take a look into Android RelativeLayout and its properties. RelativeLayout is one among the most used layout after LinearLayout. It allows its child views to position relative to each other or relative to the container or another container. For example, if we have to build a complex layout as shown in the image below, this can be achieved \u00a0with ease by using RelativeLayout.<\/p>\n","date":"2015-01-27 20:09:43","modified":"2015-03-03 23:28:27","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":8052,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-RelativeLayout-Example.png","slug":"android-relativelayout-example","title":"Android RelativeLayout Example","description":"Android RelativeLayout Example","caption":"","parent":8051,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-RelativeLayout-Example.png","width":340,"height":573},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-RelativeLayout-Example.png","width":340,"height":573},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-RelativeLayout-Example.png","width":340,"height":573},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-RelativeLayout-Example.png","width":340,"height":573},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-RelativeLayout-Example.png","width":340,"height":573},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-RelativeLayout-Example.png","width":340,"height":573}}},{"id":8053,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/RelativeLayout-Example.png","slug":"relativelayout-example","title":"RelativeLayout Example","description":"RelativeLayout Example","caption":"","parent":8051,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/RelativeLayout-Example.png","width":317,"height":462},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/RelativeLayout-Example.png","width":317,"height":462},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/RelativeLayout-Example.png","width":317,"height":462},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/RelativeLayout-Example.png","width":317,"height":462},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/RelativeLayout-Example.png","width":317,"height":462},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/RelativeLayout-Example.png","width":317,"height":462},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/RelativeLayout-Example.png","width":317,"height":462}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"549282463\";s:5:\"pDate\";s:19:\"2015-01-27 22:37:47\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-27 22:37:48\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"9215045139383472cb77891a02720e1d\";s:5:\"pDate\";s:19:\"2015-01-27 22:37:48\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"560205064048889856\";s:5:\"pDate\";s:19:\"2015-01-27 22:37:49\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_958663880812533\";s:5:\"pDate\";s:19:\"2015-01-27 22:37:51\";}}\";"],"dsq_thread_id":["3461336464"],"post_views_count":["4823"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":8020,"type":"post","slug":"android-table-layout-example","url":"http:\/\/stacktips.com\/tutorials\/android\/android-table-layout-example","status":"publish","title":"Android Table Layout Example","title_plain":"Android Table Layout Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android Table Layout Example' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-table-layout-example' data-summary='The TableLayout layout is an extension of LinearLayout. As the name indicates, TableLayout is used to display child View elements in rows and columns. The concept of TableLayout works something similar to an HTML table. If you can recall the HTML table, TableLayout can be explained as tag and TableRow is like a element. You can use any view as table cell element.'><\/div>\n<p>The TableLayout layout is an extension of LinearLayout. As the name indicates, TableLayout is used to display child View elements in rows and columns.<\/p>\n<p>The concept of TableLayout works something similar to an HTML table. If you can recall the HTML table, TableLayout can be explained as &lt;table&gt; tag and TableRow is like a &lt;tr&gt; element. You can use any view as table cell element.<\/p>\n<p>Let us create a TableView layout to display list of Android version releases. Each row contains three cells that represents version code, version name and API level. We are trying to achieve the same as the screenshot shown below.<\/p>\n<p>&nbsp;<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TableLayout-Android-Example.png\"><img class=\"aligncenter size-full wp-image-8021\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TableLayout-Android-Example.png\" alt=\"TableLayout Android Example\" width=\"351\" height=\"254\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TableLayout-Android-Example.png 351w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TableLayout-Android-Example-300x217.png 300w\" sizes=\"(max-width: 351px) 100vw, 351px\" \/><\/a><\/p>\n<h1>Example<\/h1>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;TableLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:layout_marginTop=\"10dp\"&gt;\r\n\r\n    &lt;TableRow\r\n        android:background=\"#607D8B\"\r\n        android:padding=\"5dp\"&gt;\r\n        &lt;TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"Version\" \/&gt;\r\n        &lt;TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"Version Name\" \/&gt;\r\n        &lt;TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"API Level\" \/&gt;\r\n    &lt;\/TableRow&gt;\r\n\r\n    &lt;TableRow\r\n        android:background=\"#ECEFF1\"\r\n        android:padding=\"5dp\"&gt;\r\n        &lt;TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"5.0\" \/&gt;\r\n        &lt;TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"Android Lollipop\" \/&gt;\r\n        &lt;TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"21\" \/&gt;\r\n    &lt;\/TableRow&gt;\r\n\r\n    &lt;TableRow\r\n        android:background=\"#ECEFF1\"\r\n        android:padding=\"5dp\"&gt;\r\n        &lt;TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"4.4\" \/&gt;\r\n        &lt;TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"Android Kitkat\" \/&gt;\r\n        &lt;TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"19\" \/&gt;\r\n    &lt;\/TableRow&gt;\r\n    &lt;TableRow\r\n        android:background=\"#ECEFF1\"\r\n        android:padding=\"5dp\"&gt;\r\n        &lt;TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"4.3\" \/&gt;\r\n        &lt;TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"Android Jelly Bean\" \/&gt;\r\n        &lt;TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"18\" \/&gt;\r\n    &lt;\/TableRow&gt;\r\n&lt;\/TableLayout&gt;<\/pre>\n<p>Now that we have declared the TableLayout layout, let is load this layout in the Activity <code>onCreate()<\/code> method<\/p>\n<pre class=\"prettyprint lang-java\">@Override\r\nprotected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n}\r\n<\/pre>\n<p>The <code>SetContentView(int)<\/code> method loads the layout file for the Activity, specified by the layout resource Id.<\/p>\n","excerpt":"<p>The TableLayout layout is an extension of LinearLayout. As the name indicates, TableLayout is used to display child View elements in rows and columns. The concept of TableLayout works something similar to an HTML table. If you can recall the HTML table, TableLayout can be explained as<br \/>\n<table> tag and TableRow is like a<br \/>\n<tr> element. You can use any view as table cell element.<\/p>\n","date":"2015-01-27 17:11:17","modified":"2015-03-10 20:21:48","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":8021,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TableLayout-Android-Example.png","slug":"tablelayout-android-example","title":"TableLayout Android Example","description":"","caption":"","parent":8020,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TableLayout-Android-Example.png","width":351,"height":254},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TableLayout-Android-Example.png","width":351,"height":254},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TableLayout-Android-Example.png","width":351,"height":254},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TableLayout-Android-Example.png","width":351,"height":254},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TableLayout-Android-Example.png","width":351,"height":254},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TableLayout-Android-Example.png","width":351,"height":254},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TableLayout-Android-Example.png","width":351,"height":254},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/TableLayout-Android-Example.png","width":351,"height":254}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"560206107885334529\";s:5:\"pDate\";s:19:\"2015-01-27 22:41:58\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"549283620\";s:5:\"pDate\";s:19:\"2015-01-27 22:42:00\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-27 22:42:01\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"96f3c84d206eb924b3253472b0fee087\";s:5:\"pDate\";s:19:\"2015-01-27 22:42:02\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_958665000812421\";s:5:\"pDate\";s:19:\"2015-01-27 22:42:04\";}}\";"],"dsq_thread_id":["3461516381"],"post_views_count":["4753"],"fsb_social_facebook":["0"],"fsb_social_twitter":["1"],"fsb_social_google":["2"],"fsb_social_linkedin":["0"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":8004,"type":"post","slug":"android-framelayout-example","url":"http:\/\/stacktips.com\/tutorials\/android\/android-framelayout-example","status":"publish","title":"Android FrameLayout Example","title_plain":"Android FrameLayout Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android FrameLayout Example' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-framelayout-example' data-summary='Over the course of this tutorial, we will take a look into Android FrameLayout and creating layout through xml and from code programmatically. FrameLayout is one of the useful layout provided by android system, which allows User Interface widgets to be overlapped with each other.'><\/div>\n<h1>Introduction<\/h1>\n<p>Over the course of this tutorial, we will take a look into Android FrameLayout and creating layout through xml and\u00a0from code programmatically.<\/p>\n<p>FrameLayout is one of the useful layout provided by android system, which allows User Interface widgets to be overlapped with each other.<\/p>\n<p>The Linear Layout and RelativeLayout places the views adjacent to each other but, if you have to develope something as shown in the screenshot below, \u00a0where the TextViews are placed on top of an ImageView. It is quite impossible to achieve using LinearLayout or RelativeLayout.<\/p>\n<p>In FrameLayout, all the child views added are placed like stack. The most recent added are shown on top. This means that, developers must pay attention to the order of widgets, while adding them to layout.<\/p>\n<h1>Creating FrameLayout in xml<\/h1>\n<ol>\n<li>Open Android Studio and Create a new project. In this example, I have used <code>MyApplication<\/code> as the name of my application.<\/li>\n<li>Add a new file called <code>activity_main.xml<\/code> and add the following code. To compile this code, you need to add a image with named image.jpg.<\/li>\n<\/ol>\n<pre class=\"prettyprint lang-xml\">&lt;FrameLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"&gt;\r\n\r\n    &lt;ImageView\r\n        android:id=\"@+id\/imageView1\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:scaleType=\"centerCrop\"\r\n        android:src=\"@drawable\/photo\" \/&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id\/textView1\"\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"center_horizontal\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:background=\"#00000c\"\r\n        android:padding=\"10dp\"\r\n        android:text=\"Fanny Hands Lane, London\"\r\n        android:textColor=\"#fafafa\"\r\n        android:textSize=\"22sp\" \/&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id\/textView2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"right|bottom\"\r\n        android:layout_marginLeft=\"5dp\"\r\n        android:background=\"#AA000000\"\r\n        android:padding=\"10dp\"\r\n        android:text=\"26\/Jan\/2014\"\r\n        android:textColor=\"#FFFFFF\"\r\n        android:textSize=\"18sp\" \/&gt;\r\n\r\n&lt;\/FrameLayout&gt;\r\n<\/pre>\n<ol start=\"3\">\n<li>We are almost done! All you have to do is now set the layout to your activity. you can do that by calling <code>setContentView(layoutID)<\/code> method inside onCreate(). Your activity code should look something similar to the following code snippets.<\/li>\n<\/ol>\n<pre class=\"prettyprint lang-java\">\/\/Your activity class\r\npublic class MainActivity extends Activity {\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n    }\r\n}\r\n<\/pre>\n<ol start=\"4\">\n<li>Compile and run The output of the code will look same as the screenshot below.<\/li>\n<\/ol>\n<p><a href=\"http:\/\/stacktips.com\/android\/android-framelayout-example\/attachment\/frame-layout-android-example\" rel=\"attachment wp-att-8005\"><img class=\"aligncenter size-medium wp-image-8005\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Frame-Layout-Android-Example.png\" alt=\"Frame Layout Android Example\" width=\"1\" height=\"1\" \/><\/a><\/p>\n<h1>Creating FrameLayout Programmatically<\/h1>\n<p>Android operating system provides list of API\u2019s to create FrameLayout programmatically. Although most developers prefers to have layout as xml, but certain situations you might require view to be created programmatically. The following code snippet will show you how to achieve the same result as shown in the image above, from code.<\/p>\n<p>Just add the following code to your activity <code>onCreate()<\/code> method.<\/p>\n<pre class=\"prettyprint lang-java\">@Override\r\nprotected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n\r\n    \/\/Initializing imageView\r\n    ImageView imageView = new ImageView(this);\r\n    imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);\r\n    imageView.setImageResource(R.drawable.photo);\r\n    imageView.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, \r\n    \t\t\tLayoutParams.MATCH_PARENT));\r\n\r\n    TextView textView1 = new TextView(this);\r\n    textView1.setText(\"Fanny Hands Lane, London\");\r\n    textView1.setTextSize(22);\r\n    textView1.setGravity(Gravity.CENTER_HORIZONTAL);\r\n    textView1.setTextColor(Color.parseColor(\"#fcfcfc\"));\r\n    textView1.setBackgroundColor((Color.parseColor(\"#00000c\")));\r\n    textView1.setPadding(10,10,10,10);\r\n\tLayoutParams lp1 = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT, \r\n\t\t\t\tGravity.CENTER_HORIZONTAL);\r\n    lp1.setMargins(0,20,0,0);\r\n    textView1.setLayoutParams(lp1);\r\n\r\n    TextView textView2 = new TextView(this);\r\n    textView2.setTextSize(18);\r\n    textView2.setGravity(Gravity.RIGHT|Gravity.BOTTOM);\r\n    textView2.setText(\"26\/Jan\/2014\");\r\n    textView2.setTextColor(Color.WHITE);\r\n    textView2.setPadding(10,10,10,10);\r\n    textView2.setBackgroundColor(Color.BLACK);\r\n    LayoutParams lp2 = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT, \r\n    \t\t\tGravity.BOTTOM|Gravity.RIGHT);\r\n    textView2.setLayoutParams(lp2);\r\n\r\n    \/\/Initializing frame layout\r\n    FrameLayout framelayout = new FrameLayout(this);\r\n    framelayout.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, \r\n    \t\t\tLayoutParams.MATCH_PARENT));\r\n\r\n    \/\/Adding views to FrameLayout\r\n    framelayout.addView(imageView);\r\n    framelayout.addView(textView1);\r\n    framelayout.addView(textView2);\r\n\r\n     setContentView(framelayout);\r\n}\r\n<\/pre>\n<h1>Key Notes<\/h1>\n<ol>\n<li>The visibility of all child views added to FrameLayout, can be controlled programmatically by using <code>setVisiblity()<\/code> method.<\/li>\n<li><code>LayoutParams<\/code> are used by views to tell their parents how they want to be laid out. The base LayoutParams class just describes how big the view wants to be for both width and height.<\/li>\n<li>The order in which the views are added to FrameLayout is important. Views may be hidden beneath, if we some other view added on top of it.<\/li>\n<\/ol>\n","excerpt":"<p>Over the course of this tutorial, we will take a look into Android FrameLayout and creating layout through xml and from code programmatically.<\/p>\n<p>FrameLayout is one of the useful layout provided by android system, which allows User Interface widgets to be overlapped with each other.<\/p>\n","date":"2015-01-27 05:02:05","modified":"2015-02-02 15:17:35","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":8005,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Frame-Layout-Android-Example.png","slug":"frame-layout-android-example","title":"Frame Layout Android Example","description":"Frame Layout Android Example","caption":"","parent":8004,"mime_type":"image\/png","images":[]}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3457618816"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-27 09:48:48\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"b4621939686ff164303698e0b5de0861\";s:5:\"pDate\";s:19:\"2015-01-27 09:48:49\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_958410094171245\";s:5:\"pDate\";s:19:\"2015-01-27 09:48:52\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"549076775\";s:5:\"pDate\";s:19:\"2015-01-27 09:48:54\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"560011561666764800\";s:5:\"pDate\";s:19:\"2015-01-27 09:48:54\";}}\";"],"post_views_count":["9513","9513"],"fsb_social_facebook":["0"],"fsb_social_twitter":["1"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"dsq_needs_sync":["1"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":7977,"type":"post","slug":"android-lollipop-toolbar-example","url":"http:\/\/stacktips.com\/tutorials\/android\/android-lollipop-toolbar-example","status":"publish","title":"Android Lollipop Toolbar Example","title_plain":"Android Lollipop Toolbar Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android Lollipop Toolbar Example' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-lollipop-toolbar-example' data-summary='Toolbar is a complete replacement to Android ActionBar. It provides greater control to customize its appearance unlike old ActionBar. Using Toolbar, application developer can now, show multiple toolbars on the screen, spanning only part of the width, etc.'><\/div>\n<h2>Introduction<\/h2>\n<p>Android\u2019s new operating system named Android Lollipop, is highly focused on rich user experience and what they called it as material design. In this example we will take a look at the new Actionbar replacement called Toolbar.<\/p>\n<h2>What is Toolbar?<\/h2>\n<p>Toolbar is a complete replacement to Android ActionBar. It provides greater control to customize its appearance unlike old ActionBar. Using Toolbar, application developer can now, show multiple toolbars on the screen, spanning only part of the width, etc.<\/p>\n<div id=\"attachment_7985\" style=\"width: 630px\" class=\"wp-caption aligncenter\"><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-Toolbar-Example.png\"><img class=\"size-medium wp-image-7985\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-Toolbar-Example-620x331.png\" alt=\"Android Toolbar Example\" width=\"620\" height=\"331\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-Toolbar-Example-620x331.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-Toolbar-Example-300x160.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-Toolbar-Example-800x428.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-Toolbar-Example.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-Toolbar-Example-370x198.png 370w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a>\n<p class=\"wp-caption-text\">Screenshot showing simple toolbar in android tablet and phone.<\/p>\n<\/div>\n<p>It is introduced in Android Lollipop, API level 21 release, and hence it is available to use, out of box for the application that are targeted to 21 and above. However, as always Google provides fully supported Toolbar features to lower android os devices via AppCompact support library. In AppCompat, Toolbar is implemented in the <code>android.support.v7.widget.Toolbar<\/code> class.<\/p>\n<p>A Toolbar can be used in two ways.<\/p>\n<ol>\n<li>Use a Toolbar as an replacement to ActionBar. In this you can still continued to use the ActionBar features such as menus, selections, etc.<\/li>\n<li>Use a standalone Toolbar, where ever you want to place in your application.<\/li>\n<\/ol>\n<h2>Using Toolbar as ActionBar<\/h2>\n<p>Following are simple steps you need to follow for implementing Toolbar as ActionBar replacement.<\/p>\n<p>First of all, you need to disable ActionBar. To do this, you need to extend your application theme from <code>Theme.AppCompat.NoActionBar<\/code> or if you are already using <code>Theme.AppCompact<\/code> theme, then just add below lines of code snippet<\/p>\n<pre class=\"&quot;prettyprint\">&lt;!-- Base application theme. --&gt;\r\n    &lt;style name=\"AppTheme\" parent=\"Theme.AppCompat\"&gt;\r\n        &lt;item name=\"android:windowNoTitle\"&gt;true&lt;\/item&gt;\r\n        &lt;item name=\"windowActionBar\"&gt;false&lt;\/item&gt;\r\n    &lt;\/style&gt;\r\n<\/pre>\n<p>Secondly, add the App Compact V7 support support library. In this example, I am using Android Studio as the development IDE. You can add the V7 support library dependency to your application build.gradle file.<\/p>\n<pre class=\"&quot;prettyprint\">dependencies {\r\n    compile fileTree(dir: 'libs', include: ['*.jar'])\r\n    compile \"com.android.support:appcompat-v7:21.0.+\"\r\n}\r\n<\/pre>\n<p>Now you need to add Toolbar to your Activity layout. Find the code snippet below for simple Toolbar Layout.<\/p>\n<pre class=\"&quot;prettyprint\">&lt;android.support.v7.widget.Toolbar\r\n        android:id=\"@+id\/toolbar\"\r\n        android:minHeight=\"?attr\/actionBarSize\"\r\n        android:background=\"#2196F3\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"&gt;\r\n    &lt;\/android.support.v7.widget.Toolbar&gt;\r\n<\/pre>\n<p>Apply the theme to Activity. Here in this step you need to apply the theme which we have created in step-1 to your activity. This can be done, by using <code>android:theme<\/code> attribute in your application AndroidManifest.xml.<\/p>\n<pre class=\"&quot;prettyprint\">&lt;activity\r\n            android:name=\"com.javatechig.sample.MyActivity\"\r\n            android:label=\"@string\/app_name\"\r\n            android:theme=\"@style\/AppTheme\" &gt;\r\n&lt;\/activity&gt;\r\n<\/pre>\n<p>Now you are almost ready. You just need to instantiate the Toolbar and add it to your activity by using <code>setSupportActionBar(Toolbar)<\/code> method.<\/p>\n<pre class=\"&quot;prettyprint\">import android.support.v7.app.ActionBarActivity;\r\nimport android.support.v7.widget.Toolbar;\r\n\r\npublic class MyActivity extends ActionBarActivity{\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_my);\r\n\r\n        \/\/ Set a toolbar to replace the action bar.\r\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n\t}\r\n}\r\n<\/pre>\n","excerpt":"<p>Toolbar is a complete replacement to Android ActionBar. It provides greater control to customize its appearance unlike old ActionBar. Using Toolbar, application developer can now, show multiple toolbars on the screen, spanning only part of the width, etc.<\/p>\n","date":"2015-01-25 18:44:34","modified":"2015-07-01 21:22:05","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8151,"name":"vishnu","url":"","date":"2015-08-07 19:27:00","content":"<p>Hey : add custom view to this kind of ActionBar in using  toolbar<\/p>\n","parent":0},{"id":8165,"name":"SANdeep Tengale","url":"","date":"2015-09-01 12:06:00","content":"<p>But ActionBarActivity is deprecated, is it fine to use it??<\/p>\n","parent":0},{"id":8167,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-09-01 15:42:00","content":"<p>You can use AppCompatActivity<\/p>\n","parent":8165},{"id":8197,"name":"Vihaan Verma","url":"","date":"2015-09-09 02:23:00","content":"<p>Where is the source code<\/p>\n","parent":0},{"id":8255,"name":"Saqib Rehman","url":"","date":"2015-10-07 13:07:00","content":"<p>public class MainActivity extends AppCompatActivity()<br \/>\nbut in &#8220;toolBar&#8221; we use setSupportActionBar &#8230;&#8230;<br \/>\nthis show Conflict and show error<br \/>\n&#8220;setSupportActionBar cannot be apply on appCompatActivity&#8221;&#8230;&#8230;<\/p>\n","parent":8167},{"id":8336,"name":"Lavekush Agrawal","url":"","date":"2015-12-16 13:21:00","content":"<p>Can we set custom layout in Toolbar ?<\/p>\n","parent":0},{"id":8345,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-12-23 18:09:00","content":"<p>Yes absolutely. A toolbar is a view group like FrameLayout. You can put any custom layout in it.<\/p>\n","parent":8336},{"id":8492,"name":"Towhid Islam","url":"","date":"2016-04-17 22:51:00","content":"<p>Please ans &#8230;<br \/>\nWhy the action is been duplicated?? and on the below action bar image button doesn&#8217;t show the toast too..<\/p>\n","parent":0}],"attachments":[{"id":7985,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-Toolbar-Example.png","slug":"android-toolbar-example","title":"Android Toolbar Example","description":"Android Toolbar Example","caption":"Screenshot showing simple toolbar in android tablet and phone.","parent":7977,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-Toolbar-Example.png","width":900,"height":481},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-Toolbar-Example-620x331.png","width":620,"height":331},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-Toolbar-Example.png","width":900,"height":481},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-Toolbar-Example.png","width":900,"height":481},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Android-Toolbar-Example.png","width":900,"height":481}}}],"comment_count":8,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3456296147"],"post_views_count":["12575"],"fsb_social_facebook":["1"],"fsb_social_twitter":["4"],"fsb_social_google":["1"],"fsb_social_linkedin":["7"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-26 10:56:19\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"04a3de02efbd9dd8dbf7feb3cba7a12d\";s:5:\"pDate\";s:19:\"2015-01-26 10:56:18\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_958001344212120\";s:5:\"pDate\";s:19:\"2015-01-26 10:56:17\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"548723977\";s:5:\"pDate\";s:19:\"2015-01-26 10:56:19\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"559666136397012992\";s:5:\"pDate\";s:19:\"2015-01-26 10:56:18\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":7960,"type":"post","slug":"how-to-implement-color-picker-with-wordpress","url":"http:\/\/stacktips.com\/tutorials\/wordpress\/how-to-implement-color-picker-with-wordpress","status":"publish","title":"How to Implement Color Picker with WordPress and Get Color ids to Use Further?","title_plain":"How to Implement Color Picker with WordPress and Get Color ids to Use Further?","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Implement Color Picker with WordPress and Get Color ids to Use Further?' data-link='http:\/\/stacktips.com\/tutorials\/wordpress\/how-to-implement-color-picker-with-wordpress' data-summary=''><\/div>\n<p>WordPress has been offering a great platform to its users. It&#8217;s clean and easy-to-use back end always kept it on top in the list of CMSs. The simple reason behind WordPress popularity is the ease it provides to manage the website by your own way. Also, you will be amazed to see the customization options that WordPress offers.<\/p>\n<p>Most of the WordPress website owners often prefer adding custom features to add personal touches to their dashboard. For users, who spend substantial amount of time in the admin area, changing colors can bring a refreshing experience to the way they work.<\/p>\n<p>Changing colors for different admin areas like the posts categories, front-end background etc., isn\u2019t a new concept. Of course, you can do so by simply adding a custom CSS field. But, let\u2019s face it! Not all of us are good at CSS. Fortunately, WordPress 3.5 introduced a new \u201cColor Picker\u201d, making it easy for you to change the color scheme with just a click of a button.<\/p>\n<p>This post is about using a color picker to implement the option for changing background color (in the form of CSS3 gradients) of your posts on the front end.<\/p>\n<h1>How to Create a Custom MetaBox With Color Picker?<\/h1>\n<p>In the course of this tutorial, we will\u00a0take a look into step by step approach\u00a0to\u00a0implement color picker in a metabox. Follow the steps given below and add the following code snippets to your functions files that will add metabox in your WordPress post screen with color picker field.<\/p>\n<h2>Step 1 \u2013 Register Custom Metabox<\/h2>\n<pre class=\"prettyprint lang-php\">function wdm_add_meta_box() {\r\n\tadd_meta_box('wdm_sectionid', 'Post Background', 'wdm_meta_box_callback', 'post');\r\n}<\/pre>\n<p>This code will register our custom metabox. It contains a default WordPress function: add_meta_box() that takes some parameters to tell WordPress about the meta box:<\/p>\n<ol>\n<li>wdm_sectionid: HTML &#8216;id&#8217; attribute of the edit screen<\/li>\n<li>Post Background: Title of the edit screen<\/li>\n<li>wdm_meta_box_callback: This is a function that prints out the HTML for the edit screen.<\/li>\n<li>post: This argument determines that the metabox will appear on your post editor screen. You can use replace it with &#8216;page&#8217; if you want to use the metabox on page screen.<\/li>\n<\/ol>\n<h2>Step 2 \u2013 Creating Custom Metabox<\/h2>\n<pre class=\"prettyprint lang-php\">add_action( 'add_meta_boxes', 'wdm_add_meta_box' );\r\n\r\nfunction wdm_meta_box_callback( $post ) {\r\n\twp_nonce_field( 'wdm_meta_box', 'wdm_meta_box_nonce' );\r\n\t$color = get_post_meta( $post-&gt;ID, 'post_bg', true );\r\n\t&lt;div class=\"custom_meta_box\"&gt;\r\n\t&lt;p&gt;\r\n\t&lt;label&gt;Select Post Background Color: &lt;\/label&gt;\r\n\t&lt;input class=\"color-field\" type=\"text\" name=\"post_bg\" value=\"&lt;?php echo '#'.$color; ?&gt;\"\/&gt;\r\n\t&lt;\/p&gt;\r\n\t&lt;div class=\"clear\"&gt;&lt;\/div&gt; \r\n\t&lt;\/div&gt; \r\n}<\/pre>\n<p>This part of the code will create a custom function wdm_meta_box_callback( $post ) that helps to generate the output of the metabox. And the add_action( &#8216;add_meta_boxes&#8217;, &#8216;wdm_add_meta_box&#8217; ) function is a WordPress action hook that tells WordPress to add metabox.<\/p>\n<h2>Step 3 \u2013 Saving Metabox<\/h2>\n<pre class=\"prettyprint lang-php\">function wdm_save_meta_box_data( $post_id ) {\r\n\tif ( !isset( $_POST['wdm_meta_box_nonce'] ) ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( !wp_verify_nonce( $_POST['wdm_meta_box_nonce'], 'wdm_meta_box' ) ) {\r\n\t\treturn;\r\n\t}\r\n\tif ( defined( 'DOING_AUTOSAVE' ) &amp;&amp; DOING_AUTOSAVE ) {\r\n\t\treturn;\r\n\t}\r\n\tif ( !current_user_can( 'edit_post', $post_id ) ) {\r\n\t\treturn;\r\n\t}\r\n\t\r\n\t$post_bg = ( isset( $_POST['post_bg'] ) ? sanitize_html_class( $_POST['post_bg'] ) : '' );\r\n\tupdate_post_meta( $post_id, 'post_bg', $post_bg );\r\n}\r\nadd_action( 'save_post', 'wdm_save_meta_box_data' );<\/pre>\n<p>The wdm_save_meta_box_data($posy_id) function is used to save the metabox value to WordPress database.<\/p>\n<p>For doing so, it requires &#8216;post id&#8217; that save that metabox field value on the particular post meta session in database. The add_action (&#8216;save_post&#8217;, &#8216;wdm_save_meta_box_data&#8217; ) is a hook that tells WordPress to save the post with meta value.<\/p>\n<p>Now that you&#8217;ve come to know how the code works, you would like to see the outcome. The above code generate the input filed with name \u201cPost background color\u201d, as you can see in the below screenshot.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wordpress\/how-to-implement-color-picker-with-wordpress\/attachment\/wordpress-color-picker\" rel=\"attachment wp-att-7962\"><img class=\"aligncenter size-large wp-image-7962\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Wordpress-color-picker.png\" alt=\"Wordpress color picker\" width=\"1\" height=\"1\" \/><\/a><\/p>\n<h1>How to Use Color Picker?<\/h1>\n<p>Although, the metabox with the color picker is created, but you still can&#8217;t use the color picker. In order to use it, copy and paste the below code in your theme&#8217;s functions.php file:<\/p>\n<pre class=\"prettyprint lang-php\">function wpse_80236_Colorpicker(){\r\n\twp_enqueue_style( 'wp-color-picker');\r\n\t\/\/\r\n\twp_enqueue_script( 'wp-color-picker');\r\n}\r\nadd_action('admin_enqueue_scripts', 'wpse_80236_Colorpicker');<\/pre>\n<p><strong>Note<\/strong>: As we had discussed previously, Color Picker API was introduced with WordPress version 3.5, and so if you want to use this function then make sure that your website is running on WordPress version 3.5 or later.<\/p>\n<p>Next, paste the below script code inside your wdm_meta_box_callback( $post ) function to generate the metabox.<\/p>\n<pre class=\"prettyprint lang-php\">&lt;script&gt;\r\n(function( $ ) {\r\n\t\/\/ Add Color Picker to all inputs that have 'color-field' class\r\n\t$(function() {\r\n\t$('.color-field').wpColorPicker();\r\n\t});\r\n})( jQuery );\r\n&lt;\/script&gt;\r\n<\/pre>\n<p>Once this script is executed, the \u201cColor Picker\u201d will be visible in your WordPress website admin panel.<\/p>\n<p>If you need to get color code ids, simply add the following line of code in your functions.php file.<\/p>\n<pre class=\"prettyprint lang-php\">$post_background = get_post_meta( get_the_ID(), 'post_bg', true );\r\necho $post_background \/\/ here is your color code\r\n<\/pre>\n<p>That&#8217;s it! The color picker will be implemented into your metabox in your website backend. You can add the color picker to any other area in your admin panel following the same approach as we had discussed above.<\/p>\n","excerpt":"<p>WordPress has been offering a great platform to its users. It&#8217;s clean and easy-to-use back end always kept it on top in the list of CMSs. The simple reason behind WordPress popularity is the ease it provides to manage the website by your own way. Also, you will be amazed to see the customization options [&hellip;]<\/p>\n","date":"2015-01-23 18:47:15","modified":"2015-07-29 15:27:15","categories":[{"id":181,"slug":"wordpress","title":"Wordpress","description":"","parent":297,"post_count":6}],"tags":[],"author":{"id":151,"slug":"sophia-phillips","name":"Sophia Phillips","first_name":"Sophia","last_name":"Phillips","nickname":"Sophia Phillips","url":"","description":"Sophia Phillips's forte is WordPress developer and her work exists at the intersection of web development and technology blogging. Sophia is professionally associated with  <a href=\"http:\/\/www.wordprax.com\/\" title=\"WordPrax\">WordPrax Ltd.<\/a> that has been taking huge strides in the web domain consistently and dominatingly."},"comments":[],"attachments":[{"id":7962,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Wordpress-color-picker.png","slug":"wordpress-color-picker","title":"Wordpress color picker","description":"Wordpress color picker","caption":"","parent":7960,"mime_type":"image\/png","images":[]}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3448341379"],"post_views_count":["2946"],"fsb_social_facebook":["1"],"fsb_social_twitter":["8"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_956618914350363\";s:5:\"pDate\";s:19:\"2015-01-23 13:25:01\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"558616425137307648\";s:5:\"pDate\";s:19:\"2015-01-23 13:25:08\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338}}},{"id":7824,"type":"post","slug":"15-mobile-app-design-uxui-trends-2015","url":"http:\/\/stacktips.com\/design\/15-mobile-app-design-uxui-trends-2015","status":"publish","title":"15 Mobile App Design &#038; UX\/UI Trends 2015","title_plain":"15 Mobile App Design &#038; UX\/UI Trends 2015","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='15 Mobile App Design &amp; UX\/UI Trends 2015' data-link='http:\/\/stacktips.com\/design\/15-mobile-app-design-uxui-trends-2015' data-summary=''><\/div>\n<p>The mobile app design &amp; UX\/UI have gone through various evolutions. Every year has taught us new things about best features that should be implemented in application and interface design. In the same way, the year 2014 has given lots of ideas that will set up trends in Mobile app design and UX\/UI in 2015 and most of the designers &amp; developers are not aware of these trending tactics. Therefore, this blog showcases some of major trends in mobile app design &amp; UX\/UI that can help programmers to code the best app and generate best revenue.<\/p>\n<p>Let\u2019s have a\u00a0glance over major trends in application design &amp; UX\/ UI in 2015.<\/p>\n<h2>1. Flat Interface Design<\/h2>\n<p>Designers should implement \u201cFlat\u201d design, as it gives clean and simple structure to the interface. Moreover, it will also optimize the user experience because the users can easily access the features that they require.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Flat-Design-Interface.png\"><img class=\"aligncenter wp-image-7835 size-medium\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Flat-Design-Interface-620x367.png\" alt=\"Flat Design Interface\" width=\"620\" height=\"367\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Flat-Design-Interface-620x367.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Flat-Design-Interface-300x178.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Flat-Design-Interface-940x556.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Flat-Design-Interface-800x474.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Flat-Design-Interface.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Flat-Design-Interface-900x533.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Flat-Design-Interface-370x219.png 370w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<h2>2. Design To Grab Attention At A First Sight<\/h2>\n<p>Remember that do not waste application searcher\u2019s time. Your application\u2019s design should be powerful enough to impress the audience at a first sight. The audience should easily understand what your mobile application can do and know about how to use it effectively.<\/p>\n<h2>3. Design Layered Interface<\/h2>\n<p>Besides implementing the clean design, it will be good to deploy the layered interface. This will give 3D like experience to the smartphones users and also make user experience awesome. For implementing the multilayer interface, you should use active widgets at the front and the non active at the back.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Layered-App-Design.png\"><img class=\"aligncenter wp-image-7838 size-medium\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Layered-App-Design-620x349.png\" alt=\"Layered App Design\" width=\"620\" height=\"349\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Layered-App-Design-620x349.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Layered-App-Design-300x169.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Layered-App-Design-940x529.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Layered-App-Design-800x450.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Layered-App-Design-1000x563.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Layered-App-Design-900x506.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Layered-App-Design-370x208.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Layered-App-Design.png 1600w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<h2>4. Integrate Social Media<\/h2>\n<p>Today, social media, like Google+, Twitter and Facebook has got millions of users. By integrating these social networking website in the mobile apps, you can enhance the functionality of your mobile app. With the social media, the users can give challenge to their friends or other people who are in their networks. Moreover, it will also ease the way for marketing because the users can directly \u201cLike\u201d, \u201cShare\u201d and give \u201c+1\u201d to your app.<\/p>\n<h2>5. Add Social Media Login Feature<\/h2>\n<p>Most of the mobile web applications come with complex and time-consuming log in form that frustrates the users. Therefore, while downloading the mobile application, most of the users change their mind &amp; uninstall the app. The best solution to this is, integrate social media login facility. As millions of people have their account on social media websites, they only need to use their social media login data to access the mobile application.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Social-Login-Page.png\"><img class=\"aligncenter size-medium wp-image-7935\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Social-Login-Page-620x355.png\" alt=\"Social Login Page\" width=\"620\" height=\"355\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Social-Login-Page-620x355.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Social-Login-Page-300x172.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Social-Login-Page-370x212.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Social-Login-Page.png 703w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<h2>6. Divide Elements\/Widget With Space<\/h2>\n<p>To make the content cleaner and simpler, it will be better not to include lines for separating the elements or widgets in the contents. The spacing makes the content understandable for the users and they can easily use the app.<\/p>\n<h2>7. Implement Simple Color Schemes<\/h2>\n<p>Deploy the simple color schemes in the application design. The simplicity in interface color makes the apps more interactive because it optimizes the \u201cFlat\u201d design, owing to this, users can easily access the features and use the particular function.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-Color-Palette.png\"><img class=\"aligncenter wp-image-7839 size-medium\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-Color-Palette-620x319.png\" alt=\"App Color Palette\" width=\"620\" height=\"319\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-Color-Palette-620x319.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-Color-Palette-300x154.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-Color-Palette-370x190.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-Color-Palette.png 754w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<h2>8. Deploy Targeted Gestures For Different Audience<\/h2>\n<p>While designing an application, it is imperative that you create the design according to the audience. Try to implement the gesture features in the application, this will enable the users to access the mobile app in a smarter way.<\/p>\n<h2>9. Code Thumb-Focused Interaction In App<\/h2>\n<p>Nowadays, most of the people like to use &amp; hold the mobile phone by one hand and prefer thumb to interact with the app. \u00a0Therefore, you should code your app in such a way so that it possesses simple gesture that means thumb-oriented gesture and multiple fingers gesture (when not required). This thing will surely improve the usage of your application.<\/p>\n<h2>10. Design Icon With Fill &amp; Stroke<\/h2>\n<p>Use Fill and Stroke technique to create icon for your app as this makes it easy for the users to identify active and inactive section of the application. Hence, user experience will also be improved.<\/p>\n<h2>11. Embed Blur Effects In Interface<\/h2>\n<p>Implementing the blur effects in the layered interface gives clean, awesome and simple look to the application. This is one of the best ways to enhance the user experience because here user can easily recognize which elements of the application are working.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-with-Blur-Effects-In-Interface.jpg\"><img class=\"aligncenter size-medium wp-image-7842\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-with-Blur-Effects-In-Interface-620x366.jpg\" alt=\"App with Blur Effects In Interface\" width=\"620\" height=\"366\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-with-Blur-Effects-In-Interface-620x366.jpg 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-with-Blur-Effects-In-Interface-300x177.jpg 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-with-Blur-Effects-In-Interface.jpg 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-with-Blur-Effects-In-Interface-370x218.jpg 370w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<h2>12. Integrate Swipe Gesture Feature<\/h2>\n<p>The swipe gesture in application reduces the number of steps in executing the mobile application. With swipe gesture, the user can navigate to different menus, run call to actions and trigger different actions, such as share, like or delete. It will also make gesture easy and the smartphone users can access the features of your application at faster speed.<\/p>\n<h2>13. Considerate About Users Privacy<\/h2>\n<p>You should implement the standard security model in the application. Most of the developers integrate the features that can access the media files, contact information and other data of the smartphones. That gives birth to the tension in the mind of smartphones users. Therefore, you should mention that why are you using that information, so that users can easily trust. Besides this, you should also implement the option for not being traced.<\/p>\n<h2>14. Code Effective Animation<\/h2>\n<p>The animation feature can improve user experience. But, it should be kept in mind that you code the animation in such a way that \u00a0it does not affect loading time of the application. Do not add lots of unimportant elements in the application as this will affect the application performance badly.<\/p>\n<h2>15. In Apps Events\/ Seasonal Features<\/h2>\n<p>Integrate the push notification features in your application, so that the users can easily update their applications without facing any hassle of downloading and installing. This will also help you promote offer in different festive seasons.<\/p>\n<p>Use all these tips while designing &amp; developing the mobile application. These things are helpful to you in development of mobile app effectively. Do you have any confusion regarding this blog or want to share view regarding application designing. Please write to us by using the comment section given below.<\/p>\n","excerpt":"<p>The mobile app design &amp; UX\/UI have gone through various evolutions. Every year has taught us new things about best features that should be implemented in application and interface design. In the same way, the year 2014 has given lots of ideas that will set up trends in Mobile app design and UX\/UI in 2015 [&hellip;]<\/p>\n","date":"2015-01-22 18:02:43","modified":"2016-05-29 19:10:43","categories":[{"id":149,"slug":"design","title":"Design","description":"","parent":0,"post_count":6},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[],"author":{"id":144,"slug":"anshi-sharma","name":"Anshi Sharma","first_name":"Anshi","last_name":"Sharma","nickname":"Anshi Sharma","url":"http:\/\/www.appschopper.com\/","description":"Anshi Sharma is a mobile application developer, who has done lots of creative works in the field of application designing and development. She has been associated with AppsChopper and has written multifold blogs and articles that present strategic designing, development and marketing tips for application."},"comments":[{"id":8054,"name":"rk","url":"","date":"2015-06-30 13:28:00","content":"<p>good<\/p>\n","parent":0},{"id":8055,"name":"rk","url":"","date":"2015-06-30 13:28:00","content":"<p>best apps<\/p>\n","parent":0},{"id":8068,"name":"Ashni Sharma","url":"","date":"2015-07-08 09:53:00","content":"<p>Thanks RK<\/p>\n","parent":8054},{"id":8122,"name":"Will Colson","url":"","date":"2015-07-29 11:33:00","content":"<p>Hi<br \/>\nNice work Ashni,  I think mobile app design has gone various evolution in every years and get new features in mobile industry. you can track UX and UI, you can improve it.<\/p>\n","parent":0},{"id":8314,"name":"Adam","url":"","date":"2015-11-24 11:33:00","content":"<p>Thanks<br \/>\n  for good information and way of explaining., This wil be really useful.<\/p>\n","parent":0}],"attachments":[{"id":7835,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Flat-Design-Interface.png","slug":"flat-design-interface","title":"Flat Design Interface","description":"Flat Design Interface","caption":"","parent":7824,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Flat-Design-Interface.png","width":1000,"height":592},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Flat-Design-Interface-620x367.png","width":620,"height":367},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Flat-Design-Interface.png","width":1000,"height":592},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Flat-Design-Interface.png","width":1000,"height":592}}},{"id":7838,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Layered-App-Design.png","slug":"layered-app-design","title":"Layered App Design","description":"Layered App Design","caption":"","parent":7824,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Layered-App-Design.png","width":1600,"height":900},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Layered-App-Design-620x349.png","width":620,"height":349},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Layered-App-Design.png","width":1600,"height":900}}},{"id":7839,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-Color-Palette.png","slug":"app-color-palette","title":"App Color Palette","description":"App Color Palette","caption":"","parent":7824,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-Color-Palette.png","width":754,"height":388},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-Color-Palette-620x319.png","width":620,"height":319},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-Color-Palette.png","width":754,"height":388},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-Color-Palette.png","width":754,"height":388},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-Color-Palette.png","width":754,"height":388},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-Color-Palette.png","width":754,"height":388},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-Color-Palette.png","width":754,"height":388}}},{"id":7842,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-with-Blur-Effects-In-Interface.jpg","slug":"app-with-blur-effects-in-interface","title":"App with Blur Effects In Interface","description":"App with Blur Effects In Interface","caption":"","parent":7824,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-with-Blur-Effects-In-Interface.jpg","width":800,"height":472},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-with-Blur-Effects-In-Interface-620x366.jpg","width":620,"height":366},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-with-Blur-Effects-In-Interface.jpg","width":800,"height":472},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-with-Blur-Effects-In-Interface.jpg","width":800,"height":472},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-with-Blur-Effects-In-Interface.jpg","width":800,"height":472},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-with-Blur-Effects-In-Interface.jpg","width":800,"height":472},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/App-with-Blur-Effects-In-Interface.jpg","width":800,"height":472}}},{"id":7935,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Social-Login-Page.png","slug":"social-login-page","title":"Social Login Page","description":"Social Login Page","caption":"","parent":7824,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Social-Login-Page.png","width":703,"height":403},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Social-Login-Page-620x355.png","width":620,"height":355},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Social-Login-Page.png","width":703,"height":403},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Social-Login-Page.png","width":703,"height":403},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Social-Login-Page.png","width":703,"height":403},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Social-Login-Page.png","width":703,"height":403},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Social-Login-Page.png","width":703,"height":403}}}],"comment_count":5,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3444956086"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-22 12:33:12\";}}\";"],"post_views_count":["7238","7238"],"fsb_social_facebook":["13"],"fsb_social_twitter":["13"],"fsb_social_google":["4"],"fsb_social_linkedin":["12"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"68c5595ced1e80d0de3ed9e0ce33182c\";s:5:\"pDate\";s:19:\"2015-01-22 12:33:10\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:383:\"a:1:{i:0;a:13:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_956146911064230\";s:5:\"pDate\";s:19:\"2015-01-22 12:33:09\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"547531951\";s:5:\"pDate\";s:19:\"2015-01-22 12:33:13\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:289:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"558240958291013632\";s:5:\"pDate\";s:19:\"2015-01-22 12:33:10\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162}}},{"id":7713,"type":"post","slug":"strategy-design-pattern-in-java","url":"http:\/\/stacktips.com\/tutorials\/design-patterns\/strategy-design-pattern-in-java","status":"publish","title":"Strategy Design Pattern in Java","title_plain":"Strategy Design Pattern in Java","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Strategy Design Pattern in Java' data-link='http:\/\/stacktips.com\/tutorials\/design-patterns\/strategy-design-pattern-in-java' data-summary='The Strategy design pattern belongs to the behavioral family of pattern that deals with change the behavior of a class by changing the internal algorithm at runtime without modifying the class itself. This allows extensibility and loose coupling of objects.'><\/div>\n<h1>Introduction<\/h1>\n<p>The Strategy design pattern belongs to the behavioral family of pattern that deals with change the behavior of a class by changing the internal algorithm at runtime without modifying the class itself. This allows extensibility and loose coupling of objects.\u00a0The definition of State Design Pattern as per the \u00a0original Gang of Four book is;<\/p>\n<p class=\"definition\">&#8220;Defines a set of encapsulated algorithms that can be swapped to carry out a specific\u00a0behavior.&#8221;<\/p>\n<h1>Real time use case<\/h1>\n<ol>\n<li>A data compression software like WinZip, provides different algorithms to perform gip, gzip, tar, jar, 7zip format. At runtime client chooses which type of algorithm to be performed.<\/li>\n<li>Email client like outlook, supports various email types such as plain text and HTML type. It allow client to choose the email format.<\/li>\n<\/ol>\n<h1>How Strategy pattern works?<\/h1>\n<p>The Strategy pattern is simple yet popular design pattern, mostly works together with State pattern. Following are the steps involved to create strategy design pattern:<\/p>\n<ol>\n<li>Implement a Strategy interface for your strategy objects. This interface defines the strategy object behavior.<\/li>\n<li>Implement Concrete Strategy classes that implements the Strategy interface defined in the above step<\/li>\n<li>Create a Context class and maintain the reference to strategy object. Create setter and getter method \u00a0to allow access to strategy object<\/li>\n<\/ol>\n<h1>Strategy Design Pattern Example<\/h1>\n<p>Let us take the example of a program that perform various number sorting algorithm such as Insertion sort, Selection Sort, Merge Sort etc. It allows client to choose which type of sorting he would like to perform.<\/p>\n<p>The above use case\u00a0can be represented in the following class diagram<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Strategy-Design-Pattern-Java.png\"><img class=\"aligncenter size-full wp-image-7714\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Strategy-Design-Pattern-Java.png\" alt=\"Strategy Design Pattern Java\" width=\"609\" height=\"342\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Strategy-Design-Pattern-Java.png 609w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Strategy-Design-Pattern-Java-300x168.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Strategy-Design-Pattern-Java-370x208.png 370w\" sizes=\"(max-width: 609px) 100vw, 609px\" \/><\/a><\/p>\n<p><strong>SortingStrategy.java<\/strong><\/p>\n<pre class=\"prettyprint lang-java\">public interface SortingStrategy {\r\n\r\n\tpublic void sort(int[] numbers);\r\n\r\n}<\/pre>\n<p><strong>SelectionSort.java<\/strong><\/p>\n<pre class=\"prettyprint lang-java\">public class SelectionSort implements SortingStrategy {\r\n\r\n\t@Override\r\n\tpublic void sort(int[] numbers) {\r\n\t\tSystem.out.println(\"Selection Sort!\");\r\n\r\n\t\tint i, j, first, temp;\r\n\t\tfor (i = numbers.length - 1; i &gt; 0; i--) {\r\n\t\t\tfirst = 0;\r\n\t\t\tfor (j = 1; j &lt;= i; j++) {\r\n\t\t\t\tif (numbers[j] &gt; numbers[first])\r\n\t\t\t\t\tfirst = j;\r\n\t\t\t}\r\n\t\t\ttemp = numbers[first];\r\n\t\t\tnumbers[first] = numbers[i];\r\n\t\t\tnumbers[i] = temp;\r\n\t\t}\r\n\t\t\r\n\t\tSystem.out.println(Arrays.toString(numbers));\r\n\t}\r\n}\r\n<\/pre>\n<p><strong>InsertionSort.java<\/strong><\/p>\n<pre class=\"prettyprint lang-java\">public class InsertionSort implements SortingStrategy {\r\n\r\n\t@Override\r\n\tpublic void sort(int[] numbers) {\r\n\t\tSystem.out.println(\"Insertion Sort!\");\r\n\r\n\t\tfor (int i = 1; i &lt; numbers.length; i++) {\r\n\t\t\tint temp = numbers[i];\r\n\t\t\tint j;\r\n\t\t\tfor (j = i - 1; (j &gt;= 0) &amp;&amp; (numbers[j] &gt; temp); j--) {\r\n\t\t\t\tnumbers[j + 1] = numbers[j];\r\n\t\t\t}\r\n\t\t\tnumbers[j + 1] = temp;\r\n\t\t}\r\n\r\n\t\tSystem.out.println(Arrays.toString(numbers));\r\n\t}\r\n}\r\n<\/pre>\n<pre class=\"prettyprint lang-java\">public class SortingContext {\r\n\t\r\n\tprivate SortingStrategy strategy;\r\n\t\r\n\tpublic void setSortingMethod(SortingStrategy strategy) {\r\n\t\tthis.strategy = strategy;\r\n\t}\r\n\t\r\n\tpublic SortingStrategy getStrategy() {\r\n\t\treturn strategy;\r\n\t}\r\n\t\r\n\tpublic void sortNumbers(int[] numbers){\r\n\t\tstrategy.sort(numbers);\r\n\t}\r\n}\r\n<\/pre>\n<p><strong>TestMain.java<\/strong><br \/>\nHere is how client using strategy pattern<\/p>\n<pre class=\"prettyprint lang-java\">public class TestMain {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\t\r\n\t\tint numbers[] = {20, 50, 15, 6, 80};\r\n\t\t\r\n\t\tSortingContext context = new SortingContext();\r\n\t\tcontext.setSortingMethod(new InsertionSort());\r\n\t\tcontext.sortNumbers(numbers);\r\n\t\t\r\n\t\tSystem.out.println(\"***********\");\r\n\t\tcontext.setSortingMethod(new SelectionSort());\r\n\t\tcontext.sortNumbers(numbers);\r\n\t\t\r\n\t}\r\n}\r\n<\/pre>\n<p><strong>Output<\/strong><\/p>\n<pre class=\"prettyprint\">Insertion Sort!\r\n[6, 15, 20, 50, 80]\r\n***********\r\nSelection Sort!\r\n[6, 15, 20, 50, 80]\r\n\r\n<\/pre>\n","excerpt":"<p>The Strategy design pattern belongs to the behavioral family of pattern that deals with change the behavior of a class by changing the internal algorithm at runtime without modifying the class itself. This allows extensibility and loose coupling of objects.<\/p>\n","date":"2015-01-20 06:25:22","modified":"2015-03-17 23:42:33","categories":[{"id":8,"slug":"design-patterns","title":"Design Patterns","description":"We have compiled set of basic and advance java design pattern tutorials to help you get started with various foundational java design patterns. This series focuses on the examination of various foundational java design pattern tutorials.","parent":297,"post_count":12}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":7714,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Strategy-Design-Pattern-Java.png","slug":"strategy-design-pattern-java","title":"Strategy Design Pattern Java","description":"Strategy Design Pattern Java","caption":"","parent":7713,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Strategy-Design-Pattern-Java.png","width":609,"height":342},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Strategy-Design-Pattern-Java.png","width":609,"height":342},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Strategy-Design-Pattern-Java.png","width":609,"height":342},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Strategy-Design-Pattern-Java.png","width":609,"height":342},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Strategy-Design-Pattern-Java.png","width":609,"height":342},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Strategy-Design-Pattern-Java.png","width":609,"height":342},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Strategy-Design-Pattern-Java.png","width":609,"height":342}}}],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","custom_fields":{"price":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3436799713"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-20 00:55:40\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"00dfb2c5f0f3d3353480fb0c5087c859\";s:5:\"pDate\";s:19:\"2015-01-20 00:55:41\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_955065857839002\";s:5:\"pDate\";s:19:\"2015-01-20 00:55:43\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"546633733\";s:5:\"pDate\";s:19:\"2015-01-20 00:55:44\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"557340671724384256\";s:5:\"pDate\";s:19:\"2015-01-20 00:55:45\";}}\";"],"cf_url":[""],"post_views_count":["2927"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"fsb_social_facebook":["17"],"fsb_social_twitter":["6"],"fsb_social_google":["2"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150}}},{"id":7688,"type":"post","slug":"state-design-pattern-in-java","url":"http:\/\/stacktips.com\/tutorials\/design-patterns\/state-design-pattern-in-java","status":"publish","title":"State Design Pattern in Java","title_plain":"State Design Pattern in Java","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='State Design Pattern in Java' data-link='http:\/\/stacktips.com\/tutorials\/design-patterns\/state-design-pattern-in-java' data-summary='Over the course of this article, we will examine State design pattern in java with help of realtime examples. The State design pattern belongs to the behavioral family of pattern that deals with the runtime object behavior based on the current state. The definition of State Design Pattern as per the original Gang of Four book is; &quot;Allows an object to alter its behavior when its internal state changes. The object will appear to change its class&quot;.'><\/div>\n<h1>Introduction<\/h1>\n<p>Over the course of this article, we will examine State\u00a0design pattern in java with help of realtime examples.<\/p>\n<p>The State design pattern belongs to the behavioral family of pattern that deals with the runtime object behavior based on the current state. The definition of State Design Pattern as per the original Gang of Four book is; &#8220;Allows an object to alter its behavior when its internal state changes. The object will appear to change its class&#8221;.<\/p>\n<h1>How State pattern works?<\/h1>\n<ol>\n<li>Define an object that represent various states that object can be. Remember state machine.<\/li>\n<li>Define a context object, whose behavior varies as its state object changes.<\/li>\n<\/ol>\n<h1>Real time use case<\/h1>\n<p>State pattern is one of the heavily used pattern in game development. The game character can be in different states such as healthy, surviving and dead. When character is healthy, it allows user to fires at enemies with different weapons. When surviving state its health gets critical, and when its health reaches to 0, the character is said to be in dead state where the game is over.<\/p>\n<p>Let us implement this use case without using State design pattern. It can be achieved by using set of if else conditional checks, as shown in the following code snippets.<\/p>\n<h3>Player.java<\/h3>\n<p>The Player class defines the different actions a player can perform.<\/p>\n<pre class=\"prettyprint lang-java\">public class Player {\r\n\r\n\tpublic void attack() {\r\n\t\tSystem.out.println(\"Attack\");\r\n\t}\r\n\r\n\tpublic void fireBumb() {\r\n\t\tSystem.out.println(\"Fire Bomb\");\r\n\t}\r\n\r\n\tpublic void fireGunblade() {\r\n\t\tSystem.out.println(\"Fire Gunblade\");\r\n\t}\r\n\r\n\tpublic void fireLaserPistol() {\r\n\t\tSystem.out.println(\"Laser Pistols\");\r\n\t}\r\n\r\n\tpublic void firePistol() {\r\n\t\tSystem.out.println(\"Fire Pistol\");\r\n\t}\r\n\r\n\tpublic void survive() {\r\n\t\tSystem.out.println(\"Surviving!\");\r\n\t}\r\n\r\n\tpublic void dead() {\r\n\t\tSystem.out.println(\"Dead! Game Over\");\r\n\t}\r\n\r\n}\r\n<\/pre>\n<p>Now let us define our game context class which defines the different actions conditionally depends on the state of the player.<\/p>\n<h3>GameContext.java<\/h3>\n<pre class=\"prettyprint lang-java\">public class GameContext {\r\n\r\n\tprivate Player player = new Player();\r\n\r\n\tpublic void gameAction(String state) {\r\n\t\tif (state == \"healthy\") {\r\n\t\t\tplayer.attack();\r\n\t\t\tplayer.fireBumb();\r\n\t\t\tplayer.fireGunblade();\r\n\t\t\tplayer.fireLaserPistol();\r\n\t\t} else if (state == \"survival\") {\r\n\t\t\tplayer.survive();\r\n\t\t\tplayer.firePistol();\r\n\t\t} else if (state == \"dead\") {\r\n\t\t\tplayer.dead();\r\n\t\t}\r\n\t}\r\n}\r\n<\/pre>\n<p>In the above code snippet, the gameAction method contains too many conditional blocks for performing different game action based on the state of player. This is a real problem of code maintainability. this can be avoided using State design pattern.<\/p>\n<h1>State Design Pattern Example<\/h1>\n<p>Before we begin with the state design pattern, let us have a look into the class design.<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/State-Design-Pattern-Java.png\"><img class=\"aligncenter size-full wp-image-7693\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/State-Design-Pattern-Java.png\" alt=\"State Design Pattern Java\" width=\"843\" height=\"449\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/State-Design-Pattern-Java.png 843w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/State-Design-Pattern-Java-300x160.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/State-Design-Pattern-Java-620x330.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/State-Design-Pattern-Java-800x426.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/State-Design-Pattern-Java-370x197.png 370w\" sizes=\"(max-width: 843px) 100vw, 843px\" \/><\/a>1. Define an interface named PlayerState that defines action method. The access() method takes the instance of Player class. This is required to perform player action.<\/p>\n<pre class=\"prettyprint lang-java\">public interface PlayerState {\t\r\n\tvoid action(Player p);\r\n}\r\n<\/pre>\n<p>2. Define three different classes that represents the different states. In this example, I have named them as <code>HealthyState<\/code>, <code>SurvivalState<\/code>, <code>DeadState<\/code>. All of three classes implements <code>PlayerState<\/code> interface and provides the specific <code>action()<\/code> method implementation.<\/p>\n<pre class=\"prettyprint lang-java\">public class HealthyState implements PlayerState {\r\n\r\n\t@Override\r\n\tpublic void action(Player p) {\r\n\t\tp.attack();\r\n\t\tp.fireBumb();\r\n\t\tp.fireGunblade();\r\n\t\tp.fireLaserPistol();\r\n\t}\r\n}\r\n\r\npublic class SurvivalState implements PlayerState {\r\n\r\n\t@Override\r\n\tpublic void action(Player p) {\r\n\t\tp.survive();\r\n\t\tp.firePistol();\r\n\t}\r\n}\r\n\r\npublic class DeadState implements PlayerState {\r\n\r\n\t@Override\r\n\tpublic void action(Player p) {\r\n\t\tp.dead();\r\n\t}\r\n}<\/pre>\n<p>3. The <code>GameContxt<\/code> class contains two <code>setState()<\/code> method composition. Now we will remove all of the code to conditional logic.<\/p>\n<pre class=\"prettyprint lang-java\">public class GameContext {\r\n\t\r\n\tprivate PlayerState state = null;\r\n\tprivate Player player = new Player();\r\n\r\n\tpublic void setState(PlayerState state) {\r\n\t\tthis.state = state;\r\n\t}\r\n\r\n\tpublic void gameAction() {\r\n\t\tstate.action(player);\r\n\t}\r\n}\r\n<\/pre>\n<p>4. Thats All! Let us test our code using below <code>GameTest<\/code> class.<\/p>\n<pre class=\"prettyprint lang-java\">public class GameTest {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tGameContext context = new GameContext();\r\n\r\n\t\tcontext.setState(new HealthyState());\r\n\t\tcontext.gameAction();\r\n\t\tSystem.out.println(\"*****\");\r\n\r\n\t\tcontext.setState(new SurvivalState());\r\n\t\tcontext.gameAction();\r\n\t\tSystem.out.println(\"*****\");\r\n\r\n\t\tcontext.setState(new DeadState());\r\n\t\tcontext.gameAction();\r\n\t\tSystem.out.println(\"*****\");\r\n\r\n\t}\r\n}\r\n<\/pre>\n<h3>Output<\/h3>\n<pre class=\"prettyprint\">Attack\r\nFire Bomb\r\nFire Gunblade\r\nLaser Pistols\r\n*****\r\nSurviving!\r\nFire Pistol\r\n*****\r\nDead! Game Over\r\n*****\r\n<\/pre>\n","excerpt":"<p>Over the course of this article, we will examine State design pattern in java with help of realtime examples. The State design pattern belongs to the behavioral family of pattern that deals with the runtime object behavior based on the current state. The definition of State Design Pattern as per the original Gang of Four book is; &#8220;Allows an object to alter its behavior when its internal state changes. The object will appear to change its class&#8221;.<\/p>\n","date":"2015-01-19 20:47:28","modified":"2015-01-21 05:33:16","categories":[{"id":8,"slug":"design-patterns","title":"Design Patterns","description":"We have compiled set of basic and advance java design pattern tutorials to help you get started with various foundational java design patterns. This series focuses on the examination of various foundational java design pattern tutorials.","parent":297,"post_count":12}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":7693,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/State-Design-Pattern-Java.png","slug":"state-design-pattern-java","title":"State Design Pattern Java","description":"State Design Pattern Java","caption":"","parent":7688,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/State-Design-Pattern-Java.png","width":843,"height":449},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/State-Design-Pattern-Java-620x330.png","width":620,"height":330},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/State-Design-Pattern-Java.png","width":843,"height":449},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/State-Design-Pattern-Java.png","width":843,"height":449},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/State-Design-Pattern-Java.png","width":843,"height":449}}}],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","custom_fields":{"price":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3435270698"],"cf_url":[""],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-19 15:18:05\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"a159e9cca465a2aee4e6f6e8c0b62da3\";s:5:\"pDate\";s:19:\"2015-01-19 15:18:01\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_954822124530042\";s:5:\"pDate\";s:19:\"2015-01-19 15:18:07\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"546486500\";s:5:\"pDate\";s:19:\"2015-01-19 15:18:03\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"557195309122453504\";s:5:\"pDate\";s:19:\"2015-01-19 15:18:08\";}}\";"],"post_views_count":["2570"],"fsb_social_facebook":["0"],"fsb_social_twitter":["1"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150}}},{"id":7484,"type":"post","slug":"objectaid-uml-class-diagrams-generation-plugin-for-eclipse","url":"http:\/\/stacktips.com\/random\/objectaid-uml-class-diagrams-generation-plugin-for-eclipse","status":"publish","title":"ObjectAid UML Class Diagrams Generation Plugin for Eclipse","title_plain":"ObjectAid UML Class Diagrams Generation Plugin for Eclipse","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='ObjectAid UML Class Diagrams Generation Plugin for Eclipse' data-link='http:\/\/stacktips.com\/random\/objectaid-uml-class-diagrams-generation-plugin-for-eclipse' data-summary=''><\/div>\n<p>The ObjectAid UML Explorer is a freemium and lightweight tool that helps to visualize and generate Class and sequence diagrams straight from your java code. It is available as a free eclipse plugin in eclipse marketplace.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-UML-Explorer.jpg\"><img class=\"aligncenter size-medium wp-image-7486\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-UML-Explorer-620x396.jpg\" alt=\"ObjectAid UML Explorer\" width=\"620\" height=\"396\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-UML-Explorer-620x396.jpg 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-UML-Explorer-300x191.jpg 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-UML-Explorer-370x236.jpg 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-UML-Explorer.jpg 638w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<h1>Features<\/h1>\n<p>Following are some of the ObjectAid features<\/p>\n<ol>\n<li>Provides an drag and drop canvas within eclipse IDE to that allows dragging java classes to generate class and sequence diagrams.<\/li>\n<li>Save diagrams in different standard image formats and print straight from IDE<\/li>\n<li>Realtime diagram update. When there is a change code class structure, it reflects the changes in realtime<\/li>\n<li>Open and explore the class hierarchy and relationships<\/li>\n<li>The licensed version of ObjectAid support much more than the free version. It support additional features like, reverse engineer relationships.<\/li>\n<li>SVG and PDF export<\/li>\n<\/ol>\n<h1>How to Install ObjectAid<\/h1>\n<p>Open eclipse and drag the below Install button into workspace. Or alternatively you can follow below steps to install manually from update site.<\/p>\n<p><a class=\"drag\" title=\"Drag to your running Eclipse workspace to install ObjectAid UML Explorer\" href=\"http:\/\/marketplace.eclipse.org\/marketplace-client-intro?mpc_install=495\"><img src=\"http:\/\/marketplace.eclipse.org\/sites\/all\/themes\/solstice\/_themes\/solstice_marketplace\/public\/images\/btn-install.png\" alt=\"Drag to your running Eclipse workspace to install ObjectAid UML Explorer\" \/><\/a><\/p>\n<ol>\n<li>Open Eclipse and go to Help &gt; Install New Software<\/li>\n<li>Click on add to add a new repository and enter name ObjectAid UML Explorer<\/li>\n<li>Enter location url as <code>http:\/\/www.objectaid.net\/update<\/code><\/li>\n<li>And now proceed with the on screen instructions for installation. Note that it will ask you to restart Eclipse to complet the instruction.<\/li>\n<\/ol>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-Eclipse-Installation.png\"><img class=\"aligncenter size-medium wp-image-7491\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-Eclipse-Installation-620x466.png\" alt=\"ObjectAid Eclipse Installation\" width=\"620\" height=\"466\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-Eclipse-Installation-620x466.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-Eclipse-Installation-300x225.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-Eclipse-Installation-800x601.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-Eclipse-Installation-370x278.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-Eclipse-Installation.png 871w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<h1>Creating Class Diagram in ObjectAid<\/h1>\n<ol>\n<li>To create a new UML class diagram, just click on File | New | Other. Select ObjectAid UML diagram from the opened wizard. Select Class or Sequence diagram you want to create.<\/li>\n<\/ol>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Create-New-ObjectAid-Diagram.png\"><img class=\"aligncenter size-full wp-image-7490\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Create-New-ObjectAid-Diagram.png\" alt=\"Create New ObjectAid Diagram\" width=\"526\" height=\"501\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Create-New-ObjectAid-Diagram.png 526w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Create-New-ObjectAid-Diagram-300x286.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Create-New-ObjectAid-Diagram-370x352.png 370w\" sizes=\"(max-width: 526px) 100vw, 526px\" \/><\/a><\/p>\n<ol start=\"2\">\n<li>This step will provide a canvas for the diagram. Now just drop compiled java classes into the canvas and it will generate the diagram.<\/li>\n<li>Right click on the canvas to see various available options.<\/li>\n<\/ol>\n","excerpt":"<p>The ObjectAid UML Explorer is a freemium and lightweight tool that helps to visualize and generate Class and sequence diagrams straight from your java code. It is available as a free eclipse plugin in eclipse marketplace. Features Following are some of the ObjectAid features Provides an drag and drop canvas within eclipse IDE to that [&hellip;]<\/p>\n","date":"2015-01-17 06:00:37","modified":"2015-09-16 19:24:04","categories":[{"id":1,"slug":"random","title":"Random","description":"","parent":0,"post_count":39}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":7486,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-UML-Explorer.jpg","slug":"objectaid-uml-explorer","title":"ObjectAid UML Explorer","description":"ObjectAid UML Explorer","caption":"","parent":7484,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-UML-Explorer.jpg","width":638,"height":407},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-UML-Explorer-620x396.jpg","width":620,"height":396},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-UML-Explorer.jpg","width":638,"height":407},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-UML-Explorer.jpg","width":638,"height":407},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-UML-Explorer.jpg","width":638,"height":407},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-UML-Explorer.jpg","width":638,"height":407},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-UML-Explorer.jpg","width":638,"height":407}}},{"id":7490,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Create-New-ObjectAid-Diagram.png","slug":"create-new-objectaid-diagram","title":"Create New ObjectAid Diagram","description":"Create New ObjectAid Diagram","caption":"","parent":7484,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Create-New-ObjectAid-Diagram.png","width":526,"height":501},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Create-New-ObjectAid-Diagram.png","width":526,"height":501},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Create-New-ObjectAid-Diagram.png","width":526,"height":501},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Create-New-ObjectAid-Diagram.png","width":526,"height":501},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Create-New-ObjectAid-Diagram.png","width":526,"height":501},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Create-New-ObjectAid-Diagram.png","width":526,"height":501}}},{"id":7491,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-Eclipse-Installation.png","slug":"objectaid-eclipse-installation","title":"ObjectAid Eclipse Installation","description":"","caption":"","parent":7484,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-Eclipse-Installation.png","width":871,"height":654},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-Eclipse-Installation-620x466.png","width":620,"height":466},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-Eclipse-Installation.png","width":871,"height":654},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/ObjectAid-Eclipse-Installation.png","width":871,"height":654}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3435395394"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-17 00:32:29\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"375ced7dde56dae19209ed2fd66bae4a\";s:5:\"pDate\";s:19:\"2015-01-17 00:32:30\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_953119691366952\";s:5:\"pDate\";s:19:\"2015-01-17 00:32:32\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"545801607\";s:5:\"pDate\";s:19:\"2015-01-17 00:32:33\";}}\";"],"snap_isAutoPosted":["1"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"556247674668593152\";s:5:\"pDate\";s:19:\"2015-01-17 00:32:34\";}}\";"],"cf_url":[""],"post_views_count":["3689"],"fsb_social_facebook":["0"],"fsb_social_twitter":["1"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":7470,"type":"post","slug":"template-method-design-pattern-in-java","url":"http:\/\/stacktips.com\/tutorials\/design-patterns\/template-method-design-pattern-in-java","status":"publish","title":"Template Method Design Pattern in Java","title_plain":"Template Method Design Pattern in Java","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Template Method Design Pattern in Java' data-link='http:\/\/stacktips.com\/tutorials\/design-patterns\/template-method-design-pattern-in-java' data-summary=''><\/div>\n<h2>Introduction<\/h2>\n<p>Over the course of this article, we will examine Template \u00a0Method design pattern in java with help of realtime examples.<\/p>\n<p>The template method design pattern belongs to the behavioural family of patterns that defines the steps for an algorithm and allows subclass to provide implementation for one or more steps. This design pattern helps in maximizing the code reusability.<\/p>\n<h2>How Template Method Works?<\/h2>\n<ol>\n<li>Define an abstract base class with some fully qualified method containing common implementation logic<\/li>\n<li>Declare the abstract methods for subclasses to override specific behaviours<\/li>\n<li>Declare a <strong>Template method<\/strong> in superclass that holds the core algorithm implementation steps<\/li>\n<li>Derived classes can override placeholder methods<\/li>\n<li>Derived classes can override implemented methods<\/li>\n<\/ol>\n<h2>Real Time Use Case<\/h2>\n<p>Let us take the example of a Pizza Store. The making of a Pizza includes the steps such as selection of bread, add ingredient, heating, add toppings and add cheese. All this steps are in sequential order. Let us implement this use case in Template Method design representation.<\/p>\n<h2>Class Diagram<\/h2>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Template-Method-Design-Pattern-Example.png\"><img class=\"aligncenter size-medium wp-image-7471\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Template-Method-Design-Pattern-Example-620x406.png\" alt=\"Template Method Design Pattern Example\" width=\"620\" height=\"406\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Template-Method-Design-Pattern-Example-620x406.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Template-Method-Design-Pattern-Example-300x197.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Template-Method-Design-Pattern-Example-370x242.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Template-Method-Design-Pattern-Example.png 679w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<p>The above use case is represented in the following class diagram.<\/p>\n<ol>\n<li>We have declares an abstract base class for all <code>Pizza<\/code> implementation. The Pizza store currently serves two variants of pizzas; <code>SweetCornPizza<\/code> and <code>MexicanPizza<\/code>. Both classes extends Pizza class.<\/li>\n<li>Pizza class contains the <code>chooseBread()<\/code>, <code>addIngredients()<\/code> abstract methods. Each of the Pizza implementation will override them to provide specific implementation logic.<\/li>\n<li>The <code>heating()<\/code>, <code>addTopinngs()<\/code> and <code>addCheese()<\/code> methods are common for all Pizza types and hence their implementation is commonly provided in Pizza super class.<\/li>\n<li>Pizza superclass defines <code>preparePizza()<\/code> template method that controls the order that all other methods are called.<\/li>\n<li>Note that preparePizza() method is declared as final, because we don&#8217;t want client to override\/change the pizza preperation \u00a0steps.<\/li>\n<\/ol>\n<p>Thats all! We are ready with Template Method design. Lets us have a glance at the code snippet below.<\/p>\n<h4>Pizza.java<\/h4>\n<pre class=\"prettyprint lang-java\">public abstract class Pizza {\r\n\tpublic abstract void chooseBread();\r\n\tpublic abstract void addIngredients();\r\n\r\n\tpublic void heating() {\r\n\t\tSystem.out.println(\"Heating for 10 minutes!\");\r\n\t}\r\n\r\n\tpublic void addTopinngs() {\r\n\t\tSystem.out.println(\"Adding Topinngs!\");\r\n\t}\r\n\r\n\tpublic void addCheese() {\r\n\t\tSystem.out.println(\"Adding Cheese!\");\r\n\t}\r\n\r\n\t\/\/ Template method\r\n\tpublic final void preparePizza() {\r\n\t\tchooseBread();\r\n\t\taddIngredients();\r\n\t\theating();\r\n\t\taddCheese();\r\n\t\taddTopinngs();\r\n\t}\r\n}<\/pre>\n<h4>SweetCornPizza.java<\/h4>\n<pre class=\"prettyprint lang-java\">public class SweetCornPizza extends Pizza {\r\n\t@Override\r\n\tpublic void chooseBread() {\r\n\t\tSystem.out.println(\"Choosing SweetCorn Pizza Bread!\");\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void addIngredients() {\r\n\t\tSystem.out.println(\"Adding SweetCorn Pizza Ingredients!\");\r\n\t}\r\n}\r\n<\/pre>\n<h4>MexicanPizza.java<\/h4>\n<pre class=\"prettyprint lang-java\">public class MexicanPizza extends Pizza {\r\n\t@Override\r\n\tpublic void chooseBread() {\r\n\t\tSystem.out.println(\"Choosing Mexican Pizza Bread!\");\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void addIngredients() {\r\n\t\tSystem.out.println(\"Adding Mexican Pizza Ingredients!\");\r\n\t}\r\n}\r\n<\/pre>\n<h4>TestMain.java<\/h4>\n<pre class=\"prettyprint lang-java\">public class TestMain {\r\n\tpublic static void main(String[] args) {\t\t\r\n\t\tSweetCornPizza pizza1 = new SweetCornPizza();\r\n\t\tpizza1.preparePizza();\r\n\t\t\r\n\t\tSystem.out.println(\"**********\");\r\n\t\t\r\n\t\tMexicanPizza pizza2 = new MexicanPizza();\r\n\t\tpizza2.preparePizza();\r\n\t}\r\n}\r\n<\/pre>\n<h4>Output<\/h4>\n<pre class=\"prettyprint\">Adding SweetCorn Pizza Ingredients!\r\nHeating for 10 minutes!\r\nAdding Cheese!\r\nAdding Toppings!\r\n************\r\nChoosing Mexican Pizza Bread!\r\nAdding Mexican Pizza Ingredients!\r\nHeating for 10 minutes!\r\nAdding Cheese!\r\nAdding Toppings!\r\n<\/pre>\n<h2>Things to Know<\/h2>\n<ol>\n<li>The Template method should be declares as final to avoid its subclass overriding its implementation logic.<\/li>\n<li>The template method in a super class follows the <a href=\"http:\/\/en.wikipedia.org\/wiki\/Hollywood_principle\">Hollywood principle<\/a>, <i>Don&#8217;t call us, we&#8217;ll call you.<\/i> This refers to the fact that instead of calling the base class methods in the subclasses, the methods from the subclass are called form super class template method.<\/li>\n<\/ol>\n<h2>Problem &#8211; 1<\/h2>\n<p>So far our pizza store works great. But now based on the customer demand the Pizza store is willing to introduce two new pizza types DoubleCheesePizza and NoCheesePizza.<\/p>\n<h2>Adding Hook Methods<\/h2>\n<p>In Order to support Double Cheese Pizza, we can override the addCheese() method in DoubleCheesePizza class and provide double cheese specific implementation here.<\/p>\n<h4>DoubleCheesePizza.java<\/h4>\n<pre class=\"prettyprint lang-java\">public class DoubleCheesePizza extends Pizza {\r\n\t@Override\r\n\tpublic void chooseBread() {\r\n\t\tSystem.out.println(\"Choosing DoubleCheese Pizza Bread!\");\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void addIngredients() {\r\n\t\tSystem.out.println(\"Adding DoubleCheese Pizza Ingredients!\");\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void addCheese() {\r\n\t\tSystem.out.println(\"Adding Double Cheese!\");\r\n\t}\r\n}\r\n<\/pre>\n<p>However, for No cheese pizza the current design will fail to support. We have to introduce a hook methods to achieve the same.<\/p>\n<ol>\n<li>Add <code>isCheese()<\/code> method in Pizza class that execute <code>addCheese()<\/code> method conditionally.<\/li>\n<li>Change the following code in <code>preparePizza()<\/code> method.<\/li>\n<\/ol>\n<pre class=\"prettyprint lang-java\">public boolean isCheese(){\r\n\treturn true;\r\n}\r\n\r\n\/\/ Template method\r\npublic final void preparePizza() {\r\n\tchooseBread();\r\n\taddIngredients();\r\n\theating();\r\n\t\t\r\n\tif(isCheese()){\r\n\t    addCheese();\t\r\n\t}\r\n\taddTopinngs();\r\n}<\/pre>\n<h4>NoCheesePizza.java<\/h4>\n<pre class=\"prettyprint lang-java\">public class NoCheesePizza extends Pizza {\r\n\t@Override\r\n\tpublic void chooseBread() {\r\n\t\tSystem.out.println(\"Choosing SweetCorn Pizza Bread!\");\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void addIngredients() {\r\n\t\tSystem.out.println(\"Adding SweetCorn Pizza Ingredients!\");\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic boolean isCheese() {\r\n\t\treturn false;\r\n\t}\r\n}\r\n<\/pre>\n","excerpt":"<p>Introduction Over the course of this article, we will examine Template \u00a0Method design pattern in java with help of realtime examples. The template method design pattern belongs to the behavioural family of patterns that defines the steps for an algorithm and allows subclass to provide implementation for one or more steps. This design pattern helps [&hellip;]<\/p>\n","date":"2015-01-16 06:17:12","modified":"2015-01-21 05:33:20","categories":[{"id":8,"slug":"design-patterns","title":"Design Patterns","description":"We have compiled set of basic and advance java design pattern tutorials to help you get started with various foundational java design patterns. This series focuses on the examination of various foundational java design pattern tutorials.","parent":297,"post_count":12}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":7471,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Template-Method-Design-Pattern-Example.png","slug":"template-method-design-pattern-example","title":"Template Method Design Pattern Example","description":"Template Method Design Pattern Example","caption":"","parent":7470,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Template-Method-Design-Pattern-Example.png","width":679,"height":445},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Template-Method-Design-Pattern-Example-620x406.png","width":620,"height":406},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Template-Method-Design-Pattern-Example.png","width":679,"height":445},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Template-Method-Design-Pattern-Example.png","width":679,"height":445},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Template-Method-Design-Pattern-Example.png","width":679,"height":445},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Template-Method-Design-Pattern-Example.png","width":679,"height":445},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Template-Method-Design-Pattern-Example.png","width":679,"height":445}}}],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3424502391"],"price":[""],"cf_url":[""],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-16 00:47:24\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"c3d5e2f2eb9ca3e6b8c5242aa97d9ee4\";s:5:\"pDate\";s:19:\"2015-01-16 00:47:25\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_952675961411325\";s:5:\"pDate\";s:19:\"2015-01-16 00:47:27\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"545465655\";s:5:\"pDate\";s:19:\"2015-01-16 00:47:28\";}}\";"],"snapTW":["s:279:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"555889040327593986\";s:5:\"pDate\";s:19:\"2015-01-16 00:47:29\";}}\";"],"post_views_count":["2303","2303"],"fsb_social_facebook":["2"],"fsb_social_twitter":["18"],"fsb_social_google":["0"],"fsb_social_linkedin":["5"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150}}},{"id":7432,"type":"post","slug":"unleashing-agile-development-tools-amended-for-better-performance","url":"http:\/\/stacktips.com\/blog\/unleashing-agile-development-tools-amended-for-better-performance","status":"publish","title":"Unleashing Agile Development Tools Amended For Better Performance","title_plain":"Unleashing Agile Development Tools Amended For Better Performance","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Unleashing Agile Development Tools Amended For Better Performance' data-link='http:\/\/stacktips.com\/blog\/unleashing-agile-development-tools-amended-for-better-performance' data-summary='The Agile development is in the vogue nowadays, this is why, not only the software developers but, various businesses are also seeking a quickly iterative and better approach. Let&#039;s have a look at some of the top-notched development tools that facilitate rapid project management in a proficient way.'><\/div>\n<p>The Agile development is in the vogue nowadays, this is why, not only the software developers but, various businesses are also seeking a quickly iterative and better approach.<\/p>\n<p>However, adopting this change is not as easy as said, but luckily there are several agile development tools that can help attain success in an efficient and effective fashion. Moreover, with the rising demands of the businesses, these tools have been further refined and upgraded to ensure surefire results.<\/p>\n<p>Let&#8217;s have a look at some of the top-notched development tools that facilitate rapid project management in a proficient way.<\/p>\n<h2>Atlassian Jira<\/h2>\n<p><img class=\" size-full wp-image-7445 aligncenter\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Atalasian-JIRA.png\" alt=\"Atalasian JIRA\" width=\"300\" height=\"116\" \/><\/p>\n<p>Popular for efficiently analyzing the product development, the <a href=\"https:\/\/www.atlassian.com\/software\/jira\" target=\"_blank\" rel=\"nofollow\">Atlassian Jira<\/a> tool offers a great way to help teams keep their work well organized and instantly resolve the issues with an absolute approach. Teams can assign the task and follow the desired activity by implementing this tool. Moreover the add-on, jira Agile offers additional features that add to agile development, and these include team functions visualization, fast-running backlogs development and more.<\/p>\n<p>Jira has been eventually improved version by version and the latest of all three is the Jira 6.3 version. Here are the features of its each version.<\/p>\n<ul class=\"space\">\n<li><b>6.1 Version \u2013<\/b> It included an HTML5 editor and branch workflow functionalities that enabled teams to efficiently perform their job while implementing smaller branches.<\/li>\n<li><b>6.2 Version \u2013<\/b> Offers a dashboard by bringing all the relics associated with development under a common place.<\/li>\n<li><b>6.3 Version \u2013<\/b> This is the current version that has been incorporated with better project-tracking features for improved performance.<\/li>\n<\/ul>\n<p>The latest portfolio of Jira allows users to review the work status for a project and teams at a glance.<\/p>\n<h2>LeanKit<\/h2>\n<p><img class=\" size-full wp-image-7446 aligncenter\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Leankit.png\" alt=\"Leankit\" width=\"300\" height=\"90\" \/><\/p>\n<p>The <a href=\"http:\/\/leankit.com\/\" target=\"_blank\" rel=\"nofollow\">LeanKit<\/a> maps the organization processes on a whiteboard that implements the cloud-based services. By using this tool, teams can visualize how the workload is distributed among several members and allow them to fetch the older data associated with the projects.<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox.png\"><br \/>\n<\/a><\/p>\n<p>To deliver more refined data details, the tool has been recently enhanced with more reporting methods and sign-on functionalities. In fact, tools that help manage an enterprise project portfolio for an enterprise have also been incorporated in the LeanKit. This is just the beginning, this tool has been designed with the scope of betterment to the large extent that can be integrated to meet the futuristic business demands as and when desired.<\/p>\n<h2>Planbox<\/h2>\n<p><img class=\"aligncenter size-full wp-image-7448\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox.png\" alt=\"Planbox\" width=\"350\" height=\"80\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox.png 350w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox-300x69.png 300w\" sizes=\"(max-width: 350px) 100vw, 350px\" \/><\/p>\n<p>With a tool like <a href=\"https:\/\/www.planbox.com\/\" target=\"_blank\" rel=\"nofollow\">Planbox<\/a>, you can easily keep a track of all the processes running on your project through the dynamic customer feedbacks and burndown charts generated by this tool. This management tool has been recently improved further to deliver a remarkable performance with an enhanced dashboard and better reporting. However, it is also expected to soon come up with more powerful and resourceful features like time tracking tool and capability to allow users fetch the desirable data implemented in the Planbox.<\/p>\n<h2>Axosoft<\/h2>\n<p><img class=\"aligncenter size-full wp-image-7449\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Axosoft.png\" alt=\"Axosoft\" width=\"300\" height=\"80\" \/><\/p>\n<p>The previous version of this tool was popular as <a href=\"http:\/\/www.axosoft.com\/\" target=\"_blank\" rel=\"nofollow\">Axosoft<\/a> OnTime Scrum. The suite of this tool basically includes four major modules including Hesk Desk, Wiki, Bug Tracker and Scrum. It is based on HTML5 and designed to facilitate teams with burndown charts, and efficient time tracking and bug fixing functions via a user-friendly dashboard. These features will certainly help teams to conveniently and instantly manage sprints, backlogs and releases.<\/p>\n<p>This proficient tool has been further updated with new and advanced capabilities like SMS notifications for better team management. The integrated daily Scrum feature represents the status bar corresponding to work accomplished by a team. You can also observe some more amendments in the latest version of the tool, like drag and drop features, cut and paste feature, a more enhanced dashboard and a lot more.<\/p>\n<h2>Microsoft Visual Studio Team Foundation Server<\/h2>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Atalasian-JIRA.png\"><br \/>\n<\/a> <a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Leankit.png\"><br \/>\n<\/a> <a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server-.png\"><img class=\"aligncenter size-full wp-image-7447\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server-.png\" alt=\"Microsoft Visual Studio Team Foundation Server\" width=\"374\" height=\"80\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server-.png 374w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server--300x64.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server--370x79.png 370w\" sizes=\"(max-width: 374px) 100vw, 374px\" \/><\/a><\/p>\n<p>The <a href=\"http:\/\/www.visualstudio.com\/en-us\/products\/tfs-overview-vs.aspx\" target=\"_blank\" rel=\"nofollow\">Team Foundation Server<\/a> (TFS) is basically a tool that helps manage the lifecycle of an application that is developed in the Visual Studio. In the very recently upgraded version of this tool you can find a better text editor, work elements that can help deliver an enhanced performance. The amended Kanban board of the TFS enables users to track a greater number of items.<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox.png\"><br \/>\n<\/a><\/p>\n<p>Moreover, to ensure security the stakeholder license has also been incorporated in the server itself, as it helps keep shuffling server access. Its latest version Update 4 has even enabled the stakeholders with a complete access permissions (including, read, write and create) to the work elements, while prohibiting the access to code and tests.<\/p>\n<p>These augmentations epitomize how the development tools are enhanced to support the rising need of agile development in businesses. You can also reap the benefits of these resourceful tools and improve your business productivity which embellishing your project quality.<\/p>\n","excerpt":"<p>The Agile development is in the vogue nowadays, this is why, not only the software developers but, various businesses are also seeking a quickly iterative and better approach. Let&#8217;s have a look at some of the top-notched development tools that facilitate rapid project management in a proficient way.<\/p>\n","date":"2015-01-15 06:29:14","modified":"2016-05-29 19:22:51","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[],"author":{"id":52,"slug":"rick-brown","name":"Rick Brown","first_name":"Rick","last_name":"Brown","nickname":"Rick Brown","url":"http:\/\/mobiers.com","description":"Rick Brown is a veteran programmer with <a href=\"http:\/\/www.mobiers.com\/\">Mobiers Ltd<\/a> and provides custom  iOS app development services. You can get in touch with him anytime to clear related queries and explore more about the development platform."},"comments":[],"attachments":[{"id":7449,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Axosoft.png","slug":"axosoft","title":"Axosoft","description":"","caption":"","parent":7432,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Axosoft.png","width":300,"height":80},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Axosoft.png","width":300,"height":80},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Axosoft.png","width":300,"height":80},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Axosoft.png","width":300,"height":80},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Axosoft.png","width":300,"height":80},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Axosoft.png","width":300,"height":80},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Axosoft.png","width":300,"height":80},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Axosoft.png","width":300,"height":80},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Axosoft.png","width":300,"height":80},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Axosoft.png","width":300,"height":80}}},{"id":7447,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server-.png","slug":"microsoft-visual-studio-team-foundation-server","title":"Microsoft Visual Studio Team Foundation Server","description":"","caption":"","parent":7432,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server-.png","width":374,"height":80},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server-.png","width":374,"height":80},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server-.png","width":374,"height":80},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server-.png","width":374,"height":80},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server-.png","width":374,"height":80},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server-.png","width":374,"height":80},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server-.png","width":374,"height":80},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server-.png","width":374,"height":80},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Microsoft-Visual-Studio-Team-Foundation-Server-.png","width":374,"height":80}}},{"id":7448,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox.png","slug":"planbox","title":"Planbox","description":"","caption":"","parent":7432,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox.png","width":350,"height":80},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox.png","width":350,"height":80},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox.png","width":350,"height":80},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox.png","width":350,"height":80},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox.png","width":350,"height":80},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox.png","width":350,"height":80},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox.png","width":350,"height":80},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox.png","width":350,"height":80},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Planbox.png","width":350,"height":80}}},{"id":7445,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Atalasian-JIRA.png","slug":"atalasian-jira","title":"Atalasian JIRA","description":"","caption":"","parent":7432,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Atalasian-JIRA.png","width":300,"height":116},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Atalasian-JIRA.png","width":300,"height":116},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Atalasian-JIRA.png","width":300,"height":116},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Atalasian-JIRA.png","width":300,"height":116},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Atalasian-JIRA.png","width":300,"height":116},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Atalasian-JIRA.png","width":300,"height":116},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Atalasian-JIRA.png","width":300,"height":116},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Atalasian-JIRA.png","width":300,"height":116},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Atalasian-JIRA.png","width":300,"height":116},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Atalasian-JIRA.png","width":300,"height":116}}},{"id":7446,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Leankit.png","slug":"leankit","title":"Leankit","description":"","caption":"","parent":7432,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Leankit.png","width":300,"height":90},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Leankit.png","width":300,"height":90},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Leankit.png","width":300,"height":90},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Leankit.png","width":300,"height":90},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Leankit.png","width":300,"height":90},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Leankit.png","width":300,"height":90},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Leankit.png","width":300,"height":90},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Leankit.png","width":300,"height":90},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Leankit.png","width":300,"height":90},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Leankit.png","width":300,"height":90}}},{"id":7453,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","slug":"agile-tools","title":"Agile tools","description":"Agile tools","caption":"","parent":7432,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","width":412,"height":240},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","width":412,"height":240},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","width":412,"height":240},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","width":412,"height":240},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","width":412,"height":240},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","width":412,"height":240},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","width":412,"height":240}}},{"id":7454,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/software-tools.png","slug":"software-tools","title":"Softwares and tools used for development","description":"Softwares and tools used for development","caption":"","parent":7432,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/software-tools.png","width":350,"height":216},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/software-tools.png","width":350,"height":216},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/software-tools.png","width":350,"height":216},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/software-tools.png","width":350,"height":216},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/software-tools.png","width":350,"height":216},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/software-tools.png","width":350,"height":216},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/software-tools.png","width":350,"height":216},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/software-tools.png","width":350,"height":216}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"dsq_thread_id":["3419786506"],"cf_url":[""],"post_views_count":["1446"],"fsb_social_facebook":["3"],"fsb_social_twitter":["1"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:237:\"a:1:{i:0;a:8:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:243:\"a:1:{i:0;a:9:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:111:\"a:1:{i:0;a:4:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:163:\"a:1:{i:0;a:6:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","width":412,"height":240},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","width":412,"height":240},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","width":412,"height":240},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","width":412,"height":240},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","width":412,"height":240},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","width":412,"height":240},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Agile-tools.png","width":412,"height":240}}},{"id":7462,"type":"post","slug":"how-to-change-default-wordpress-avatar","url":"http:\/\/stacktips.com\/tutorials\/wordpress\/how-to-change-default-wordpress-avatar","status":"publish","title":"How to Change Default WordPress Avatar","title_plain":"How to Change Default WordPress Avatar","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Change Default WordPress Avatar' data-link='http:\/\/stacktips.com\/tutorials\/wordpress\/how-to-change-default-wordpress-avatar' data-summary=''><\/div>\n<p>Gravatar is a globally recognized avatar service, being used in most of the WordPress blog today. If you are using gravatar service you just need to register and map your personalized image avatar to your email id once. Gravatar identifies your post and automatically, your avatar will appear on blog (an example below).<\/p>\n<p><img class=\"aligncenter size-medium wp-image-7463\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Author-bio-with-Gravatar-620x92.png\" alt=\"Author bio with Gravatar\" width=\"620\" height=\"92\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Author-bio-with-Gravatar-620x92.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Author-bio-with-Gravatar-300x44.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Author-bio-with-Gravatar-800x119.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Author-bio-with-Gravatar-370x55.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Author-bio-with-Gravatar.png 810w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/p>\n<p>Gravatar is built in to WordPress and it is used in author bio section. If an user email address is not registered with Gravatar, WordPress allows you to pick some of the boring default images to show as default avatar. Sometimes, \u201cMystery Person\u201d looks quite boring on a fancy looking website.<\/p>\n<p>In this tutorial we will take a drive into how to customize the avatar and add a default image of your choice.<\/p>\n<h2>Step-1 Upload New Gravatar Image<\/h2>\n<p>Upload the image that you want to show as your avatar to themes image folder. The theme folder can be found in the following path. Here in this example my file name is default-avatar.png and uploaded to the following location.<\/p>\n<pre>wp-content\/themes\/twentyeleven\/images\/default-avatar.png<\/pre>\n<h2>Step-2 Adding WordPress Hook<\/h2>\n<p>Once you have uploaded your image in the above step, you need to write the below code that works as WordPress hook to add a new default avatar image. Paste the below code inside <code>functions.php<\/code> file which is located in your themes folder.<\/p>\n<pre class=\"prettyprint lang-php\">\/** Add a new default avatar **\/\r\nadd_filter( 'avatar_defaults', 'add_gravatar' );\r\n\r\nfunction add_gravatar ($avatar_defaults) {\r\n       $myavatar = get_bloginfo('template_directory') . '\/images\/default-avatar.png';\r\n       $avatar_defaults[$myavatar] = \"MY Gravatar\";\r\n       return $avatar_defaults;\r\n}\r\n<\/pre>\n<h2>Step-3 Change Default Avatar Settings<\/h2>\n<p>Now you are almost done. Just visit <strong>Settings -&gt; Discussions -&gt; Default Avatar<\/strong> section in your WordPress admin dashboard, and you will find your newly added avatar image listed as shown in the image below.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Change-Gravatar-Image-Wordpress.png\"><img class=\"aligncenter size-medium wp-image-7464\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Change-Gravatar-Image-Wordpress-620x344.png\" alt=\"Change Gravatar Image WordPress\" width=\"620\" height=\"344\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Change-Gravatar-Image-Wordpress-620x344.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Change-Gravatar-Image-Wordpress-300x167.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Change-Gravatar-Image-Wordpress-800x444.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Change-Gravatar-Image-Wordpress-370x206.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Change-Gravatar-Image-Wordpress.png 884w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<p>Thats all. Now you will see your newly created avatar in author bio and other section as per your theme layout.<\/p>\n","excerpt":"<p>Gravatar is a globally recognized avatar service, being used in most of the WordPress blog today. If you are using gravatar service you just need to register and map your personalized image avatar to your email id once. Gravatar identifies your post and automatically, your avatar will appear on blog (an example below). Gravatar is [&hellip;]<\/p>\n","date":"2015-01-14 21:28:52","modified":"2016-05-29 19:15:18","categories":[{"id":299,"slug":"how-to","title":"How-Tos","description":"","parent":0,"post_count":14},{"id":181,"slug":"wordpress","title":"Wordpress","description":"","parent":297,"post_count":6}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":7463,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Author-bio-with-Gravatar.png","slug":"author-bio-with-gravatar","title":"Author bio with Gravatar","description":"Author bio with Gravatar","caption":"","parent":7462,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Author-bio-with-Gravatar.png","width":810,"height":120},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Author-bio-with-Gravatar-620x92.png","width":620,"height":92},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Author-bio-with-Gravatar.png","width":810,"height":120},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Author-bio-with-Gravatar.png","width":810,"height":120},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Author-bio-with-Gravatar.png","width":810,"height":120},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Author-bio-with-Gravatar.png","width":810,"height":120},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Author-bio-with-Gravatar.png","width":810,"height":120}}},{"id":7464,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Change-Gravatar-Image-Wordpress.png","slug":"change-gravatar-image-wordpress","title":"Change Gravatar Image Wordpress","description":"Change Gravatar Image Wordpress","caption":"","parent":7462,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Change-Gravatar-Image-Wordpress.png","width":884,"height":491},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Change-Gravatar-Image-Wordpress-620x344.png","width":620,"height":344},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Change-Gravatar-Image-Wordpress.png","width":884,"height":491},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Change-Gravatar-Image-Wordpress.png","width":884,"height":491},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Change-Gravatar-Image-Wordpress.png","width":884,"height":491}}},{"id":7467,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Wordpress-Tutorials.png","slug":"wordpress-tutorials","title":"Wordpress Tutorials","description":"Wordpress Tutorials","caption":"","parent":7462,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Wordpress-Tutorials.png","width":248,"height":156},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Wordpress-Tutorials.png","width":248,"height":156},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Wordpress-Tutorials.png","width":248,"height":156},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Wordpress-Tutorials.png","width":248,"height":156},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Wordpress-Tutorials.png","width":248,"height":156},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Wordpress-Tutorials.png","width":248,"height":156},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Wordpress-Tutorials.png","width":248,"height":156},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Wordpress-Tutorials.png","width":248,"height":156},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Wordpress-Tutorials.png","width":248,"height":156},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Wordpress-Tutorials.png","width":248,"height":156},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/01\/Wordpress-Tutorials.png","width":248,"height":156}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3419977596"],"post_views_count":["1473"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"fsb_social_facebook":["1"],"fsb_social_twitter":["6"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"cf_url":[""],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-14 15:59:24\";}}\";"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:378:\"a:1:{i:0;a:12:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"f44f83e665100409088e1fb682e0749b\";s:5:\"pDate\";s:19:\"2015-01-14 15:59:23\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:383:\"a:1:{i:0;a:13:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_952052528140335\";s:5:\"pDate\";s:19:\"2015-01-14 15:59:26\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:227:\"a:1:{i:0;a:8:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"544944512\";s:5:\"pDate\";s:19:\"2015-01-14 15:59:22\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:290:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"555393754719191040\";s:5:\"pDate\";s:19:\"2015-01-14 15:59:23\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/06\/Wordpress-Tutorials.jpg","width":600,"height":338}}},{"id":7336,"type":"post","slug":"architexa-uml-modeling-tool-suite-for-eclipse","url":"http:\/\/stacktips.com\/random\/architexa-uml-modeling-tool-suite-for-eclipse","status":"publish","title":"Architexa UML Modeling Tool Suite for Eclipse","title_plain":"Architexa UML Modeling Tool Suite for Eclipse","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Architexa UML Modeling Tool Suite for Eclipse' data-link='http:\/\/stacktips.com\/random\/architexa-uml-modeling-tool-suite-for-eclipse' data-summary='Architexa is yet another smarter eclipse tool that allows you to build diagrams quickly from your code. It provides easy to use and powerful user interface that lets you create code diagrams that make sense. Currently Architexa support most common diagrams including, class and sequence diagram. Architexa is designed to be code centric around your need.'><\/div>\n<p>Architexa is yet another smarter eclipse tool that allows you to build diagrams quickly from your code. It provides easy to use and powerful user interface that lets you create code diagrams that make sense. Currently Architexa support most common diagrams including, class and sequence diagram. Architexa is designed to be code centric around your need.<\/p>\n<h1>Architexa Features<\/h1>\n<p>The Architexa tool suite helps developers with the following features<\/p>\n<ol class=\"space\">\n<li>Make sense of your code with quick visualizations of key components<\/li>\n<li>Take advantage of powerful interactive exploration of the diagrams<\/li>\n<li>Document code architecture and share discussions with team members<\/li>\n<li>Powerful Class, Sequence, and Layered Diagram Generation and Editing<\/li>\n<li>Collaboration by Sharing Diagrams, Annotating, and Commenting<\/li>\n<li>Sophisticated real-time code analysis.<\/li>\n<\/ol>\n<p><strong>Layered Diagrams<\/strong><\/p>\n<ul>\n<li>View high level code organization<\/li>\n<li>Examine code dependencies<\/li>\n<li>Detect code cycles quickly<\/li>\n<\/ul>\n<p><strong>Class Diagrams<\/strong><\/p>\n<ul>\n<li>View comprehensive architecture<\/li>\n<li>Understand class interctions<\/li>\n<li>Conquer open tabs<\/li>\n<\/ul>\n<p><strong>Sequence Diagrams<\/strong><\/p>\n<ul>\n<li>Examine nitty-gritty code details<\/li>\n<li>Understand detailed logic flow<\/li>\n<li>Debug easily<\/li>\n<\/ul>\n<p><strong>IDE Integration<\/strong><\/p>\n<ul>\n<li>Real-time code analysis<\/li>\n<li>Linked exploration<\/li>\n<li>Open diagrams from any Eclipse view<\/li>\n<\/ul>\n<p><strong>Collaboration<\/strong><\/p>\n<ul>\n<li>Effortless sharing<\/li>\n<li>Create groups to share with<\/li>\n<li>Share by email<\/li>\n<\/ul>\n<p><strong>Documentation<\/strong><\/p>\n<ul>\n<li>Add JavaDoc comments to diagrams<\/li>\n<li>See related diagrams<\/li>\n<li>Track changes to diagrams<\/li>\n<\/ul>\n<h1>Installing Architexa<\/h1>\n<p>Open eclipse and drag the below Install button into workspace.<\/p>\n<p><a class=\"drag\" title=\"Drag to your running Eclipse workspace to install Architexa for Eclipse 3.x\" href=\"http:\/\/marketplace.eclipse.org\/marketplace-client-intro?mpc_install=5677\"><img src=\"http:\/\/marketplace.eclipse.org\/sites\/all\/themes\/solstice\/_themes\/solstice_marketplace\/public\/images\/btn-install.png\" alt=\"Drag to your running Eclipse workspace to install Architexa for Eclipse 3.x\" \/><\/a><\/p>\n","excerpt":"<p>Architexa is yet another smarter eclipse tool that allows you to build diagrams quickly from your code. It provides easy to use and powerful user interface that lets you create code diagrams that make sense. Currently Architexa support most common diagrams including, class and sequence diagram. Architexa is designed to be code centric around your need.<\/p>\n","date":"2015-01-13 16:33:34","modified":"2015-09-16 19:24:05","categories":[{"id":1,"slug":"random","title":"Random","description":"","parent":0,"post_count":39}],"tags":[],"author":{"id":855,"slug":"javatechig","name":"JAVATECHIG","first_name":"Javatechig","last_name":"","nickname":"JAVATECHIG","url":"http:\/\/stacktips.com","description":"Provides tutorials, tips, examples and source code on leading Java, Android, Blackberry, PhoneGap and related mobile technologies."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:43:\"https:\/\/www.youtube.com\/watch?v=rlGzCPLOp6o\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"snap_MYURL":[""],"snapEdIT":["1"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_951527544859500\";s:5:\"pDate\";s:19:\"2015-01-13 11:04:11\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"544510378\";s:5:\"pDate\";s:19:\"2015-01-13 11:04:12\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:107976687556;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/107976687556\";s:5:\"pDate\";s:19:\"2015-01-13 11:04:13\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-13 11:04:14\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"811540c63dbf0f473d2b3b4329a572da\";s:5:\"pDate\";s:19:\"2015-01-13 11:04:14\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"2xmUYn\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/2xmUYn\/comments\";s:5:\"pDate\";s:19:\"2015-01-13 11:04:19\";}}\";"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"554957118873157632\";s:5:\"pDate\";s:19:\"2015-01-13 11:04:21\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"dsq_thread_id":["3416189982"],"cf_url":[""],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["1432"],"fsb_social_facebook":["1"],"fsb_social_twitter":["2"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-620x344.jpg","width":620,"height":344},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150}}},{"id":7369,"type":"post","slug":"introduction-to-java-design-patterns","url":"http:\/\/stacktips.com\/tutorials\/design-patterns\/introduction-to-java-design-patterns","status":"publish","title":"Introduction to Java Design Patterns","title_plain":"Introduction to Java Design Patterns","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Introduction to Java Design Patterns' data-link='http:\/\/stacktips.com\/tutorials\/design-patterns\/introduction-to-java-design-patterns' data-summary=''><\/div>\n<h1>What are Design Patterns?<\/h1>\n<p>Design patterns are solutions to the common software problems. Design pattern tells how classes and objects are structured to solve certain problem. Design and design patterns are the concepts and are platform independent. There are many design patterns identified and available today. It is almost impossible for an individual to know about each and every design pattern present. However, a great developer should know the foundational design patterns known as GOF (Gang-Of-Four) If you understand GOF pattern clearly, than other patterns are derived by overlapping of two or more patterns.<\/p>\n<h1>Characteristics of a good design<\/h1>\n<p>While designing your application, you should be watchful of various software design characteristics. A great design would have all the characteristic. However, sometimes one pattern contradicts to other, so you have to make a hit a middle ground and choose one over other. Below are some of the characteristics for a good software design<\/p>\n<h3>i. Ease of maintenance<\/h3>\n<p>Software is always highly unstable. It is expected to undergo maintenance and changes in feature. The design should be self-explanatory and easy to understand for other programmers.<\/p>\n<h3>ii. Minimal complexity<\/h3>\n<p>Simplicity is the soul of efficiency(&#8211; Austin Freeman) .Design for simplicity. A complex design is often difficult to extend, maintain and understand. There are factors like many interconnections and relations, non-trivial algorithm, behaviors or rules, etc. causes the complexity in design.<\/p>\n<h3>iii. Loose coupling and extensibility<\/h3>\n<p>All components in your design should be loosely coupled to the maximum extend. \u00a0This will make the system modularized and each components can be tested separately before it is integrated to a whole larger system.\u00a0You can change a piece of the system without affecting other pieces. \u00a0If there is a defect in one component in your software, then it won&#8217;t bug much to the other components. This can be done with the basic OO principles like encapsulation, information hiding and abstractions.<\/p>\n<h3>iv. Portability<\/h3>\n<p>How easy would it be to move the system to another environment.<\/p>\n<h3>v. Stratification and reusability<\/h3>\n<p>Design patterns encourage design reuse. Design softwares component, that can be easily used in other system or software. \u00a0For example, if you look at the android design (Image below), it provides multiple layers of abstractions. Each component is independent of other and provides great level of reusability.<\/p>\n<h3>vi. Standard techniques<\/h3>\n<p>Don&#8217;t hate things, because you don&#8217;t know or you don&#8217;t like them. Before \u00a0designing your software evaluate and use the industry suggested patterns that are appropriate for your requirements.<\/p>\n","excerpt":"<p>What are Design Patterns? Design patterns are solutions to the common software problems. Design pattern tells how classes and objects are structured to solve certain problem. Design and design patterns are the concepts and are platform independent. There are many design patterns identified and available today. It is almost impossible for an individual to know [&hellip;]<\/p>\n","date":"2015-01-13 06:09:13","modified":"2015-01-13 19:56:01","categories":[{"id":8,"slug":"design-patterns","title":"Design Patterns","description":"We have compiled set of basic and advance java design pattern tutorials to help you get started with various foundational java design patterns. This series focuses on the examination of various foundational java design pattern tutorials.","parent":297,"post_count":12}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3416650287"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2015-01-13 14:25:34\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"8b9586d2105424c3b8906666528e097c\";s:5:\"pDate\";s:19:\"2015-01-13 14:25:34\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_951589614853293\";s:5:\"pDate\";s:19:\"2015-01-13 14:25:39\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:218:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:9:\"544558778\";s:5:\"pDate\";s:19:\"2015-01-13 14:25:40\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"1MKoTe\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/1MKoTe\/comments\";s:5:\"pDate\";s:19:\"2015-01-13 14:25:41\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:107985026071;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/107985026071\";s:5:\"pDate\";s:19:\"2015-01-13 14:25:35\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"555007790565957632\";s:5:\"pDate\";s:19:\"2015-01-13 14:25:42\";}}\";"],"post_views_count":["1630"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150}}},{"id":7373,"type":"post","slug":"foundational-gangs-of-four-design-patterns-in-java","url":"http:\/\/stacktips.com\/tutorials\/design-patterns\/foundational-gangs-of-four-design-patterns-in-java","status":"publish","title":"Foundational Gangs-Of-Four Design Patterns in Java","title_plain":"Foundational Gangs-Of-Four Design Patterns in Java","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Foundational Gangs-Of-Four Design Patterns in Java' data-link='http:\/\/stacktips.com\/tutorials\/design-patterns\/foundational-gangs-of-four-design-patterns-in-java' data-summary=''><\/div>\n<h1>Foundational (GOF) design patterns<\/h1>\n<p>Gang-Of-Four also called as foundation patterns are the 23 basic design patterns that provides solution to common recurring problems in software design. They categorized into three major categories, based on behaviour and characteristics.<\/p>\n<ol>\n<li>Creational patterns<\/li>\n<li>Structural patterns<\/li>\n<li>Behavioral Patterns<\/li>\n<li>Creational patterns<\/li>\n<\/ol>\n<h1>1. Creational design patterns<\/h1>\n<p>Creational patterns governs object-creation mechanisms that enable greater levels of reuse in evolving systems.<\/p>\n<table>\n<tbody>\n<tr>\n<td>Abstract Factory<\/td>\n<td>Provides an interface for creating families of related or dependent objects without specifying their concrete classes.<\/td>\n<\/tr>\n<tr>\n<td><a title=\"Builder Design Pattern In Java\" href=\"http:\/\/stacktips.com\/java\/design-patterns\/builder-design-pattern-java\">Builder<\/a><\/td>\n<td>Separates the construction of a complex object from its representation so that the same construction process can create different representations.<\/td>\n<\/tr>\n<tr>\n<td><a title=\"Factory Method design pattern in Java\" href=\"http:\/\/stacktips.com\/java\/design-patterns\/factory-method-design-pattern-java\">Factory Method<\/a><\/td>\n<td>Provides a way to use an instance as an object factory. The factory can return an instance of one of several possible classes in a class hierarchy, depending on the data provided to it.<\/td>\n<\/tr>\n<tr>\n<td><a title=\"Prototype Design Pattern In Java\" href=\"http:\/\/stacktips.com\/java\/design-patterns\/prototype-design-pattern-java\">Prototype<\/a><\/td>\n<td>Prototype is used when the type of objects to create is determined by a prototypical instance, which is cloned to produce new objects. In a simpler term, using prototype pattern, we will create new instances through cloning existing instances.<\/td>\n<\/tr>\n<tr>\n<td><a title=\"Singleton Design Pattern in Java\" href=\"http:\/\/stacktips.com\/java\/design-patterns\/singleton-design-pattern-in-java\">Singleton<\/a><\/td>\n<td>Singleton pattern ensures at most one instance of a particular class is ever created in your application.<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<h1>2. Structural design patterns<\/h1>\n<p>Structural design patterns are design patterns that helps to identify a simple way to realize relationships between entities.<\/p>\n<table>\n<tbody>\n<tr>\n<td><a title=\"Adapter Design Pattern In Java\" href=\"http:\/\/stacktips.com\/java\/design-patterns\/adapter-design-pattern-in-java\">Adapter<\/a><\/td>\n<td>Convert the interface of a class into another interface clients expect. Adapter lets classes work together that couldn\u2019t otherwise because of incompatible interfaces.<\/td>\n<\/tr>\n<tr>\n<td>Bridge<\/td>\n<td>Decouple an abstraction from its implementation so that the two can vary independently.<\/td>\n<\/tr>\n<tr>\n<td>Composite<\/td>\n<td>Compose objects into tree structure to represent part-whole hierarchies.Composite lets client treat individual objects and compositions of objects uniformly.<\/td>\n<\/tr>\n<tr>\n<td>Decorator<\/td>\n<td>Allows for the dynamic wrapping of objects in order to modify their existing responsibilities and behaviors.<\/td>\n<\/tr>\n<tr>\n<td>Facade<\/td>\n<td>Provide a unified interface to a set of interfaces in a subsystem. Fa\u00e7ade defines a higher-level interface that makes the subsystem easier to use.<\/td>\n<\/tr>\n<tr>\n<td>Flyweight<\/td>\n<td>Facilitates the reuse of many fine grained objects, making the utilization of large numbers of objects more efficient.<\/td>\n<\/tr>\n<tr>\n<td>Proxy<\/td>\n<td>Allows for object level access control by acting as a pass through entity or a placeholder object.<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<h1>3. Behavioral design patterns<span style=\"text-decoration: underline;\"><strong><br \/>\n<\/strong><\/span><\/h1>\n<p>Behavioral design patterns identifies the common communication patterns between objects.<\/p>\n<table>\n<tbody>\n<tr>\n<td>Chain of Responsibility<\/td>\n<td>Gives more than one object an opportunity to handle a request by linking receiving objects together.<\/td>\n<\/tr>\n<tr>\n<td>Command<\/td>\n<td>Encapsulate a request as an object, thereby letting you parameterize clients with different requests, queue or log requests, and support undoable operations.<\/td>\n<\/tr>\n<tr>\n<td>Interpreter<\/td>\n<td>Given a language, define a representation for its grammar along with an interpreter that uses the representation to interpret sentences in the language.<\/td>\n<\/tr>\n<tr>\n<td>Iterator<\/td>\n<td>Provides a way to access the elements of an aggregate object without exposing its underlying representation.<\/td>\n<\/tr>\n<tr>\n<td>Mediator<\/td>\n<td>Allows loose coupling by encapsulating the way disparate sets of objects interact and communicate with each other. Allows for the actions of each object set to vary independently of one another.<\/td>\n<\/tr>\n<tr>\n<td>Memento<\/td>\n<td>Captures and externalizes an object&#8217;s internal state so that it can be restored later, all without violating encapsulation.<\/td>\n<\/tr>\n<tr>\n<td><a title=\"Observer Design Pattern In Java\" href=\"http:\/\/stacktips.com\/java\/design-patterns\/observer-design-pattern-java\">Observer<\/a><\/td>\n<td>Observer design pattern defines one-to-many dependency between objects in which one object changes state, all its dependents are notified.<\/td>\n<\/tr>\n<tr>\n<td><a title=\"State Design Pattern in Java\" href=\"http:\/\/stacktips.com\/design-patterns\/state-design-pattern-in-java\" target=\"_blank\">State<\/a><\/td>\n<td>Allows an object to alter its behavior when its internal state changes. The object will appear to change its class.<\/td>\n<\/tr>\n<tr>\n<td>Strategy<\/td>\n<td>Defines a set of encapsulated algorithms that can be swapped to carry out a specific behavior.<\/td>\n<\/tr>\n<tr>\n<td><a title=\"Template Method Design Pattern in Java\" href=\"http:\/\/stacktips.com\/design-patterns\/template-method-design-pattern-in-java\" target=\"_blank\">Template Method<\/a><\/td>\n<td>Defines the steps for an algorithm and allows subclass to provide implementation for one or more steps.<\/td>\n<\/tr>\n<tr>\n<td>Visitor<\/td>\n<td>Allows for one or more operation to be applied to a set of objects at runtime, decoupling the operations from the object structure.<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n","excerpt":"<p>Foundational (GOF) design patterns Gang-Of-Four also called as foundation patterns are the 23 basic design patterns that provides solution to common recurring problems in software design. They categorized into three major categories, based on behaviour and characteristics. Creational patterns Structural patterns Behavioral Patterns Creational patterns 1. Creational design patterns Creational patterns governs object-creation mechanisms that [&hellip;]<\/p>\n","date":"2015-01-13 04:22:46","modified":"2015-01-20 19:43:11","categories":[{"id":8,"slug":"design-patterns","title":"Design Patterns","description":"We have compiled set of basic and advance java design pattern tutorials to help you get started with various foundational java design patterns. This series focuses on the examination of various foundational java design pattern tutorials.","parent":297,"post_count":12}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3416432183"],"snap_isAutoPosted":["1"],"snapDA":["s:104:\"a:1:{i:0;a:3:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapLI":["s:265:\"a:1:{i:0;a:8:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapSU":["s:127:\"a:1:{i:0;a:4:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";}}\";"],"snapTR":["s:370:\"a:1:{i:0;a:8:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"price":[""],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapDL":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:235:\"a:1:{i:0;a:8:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:154:\"a:1:{i:0;a:5:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"post_views_count":["1573"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150}}},{"id":8993,"type":"post","slug":"stepping-into-my-first-java-program-hello-world","url":"http:\/\/stacktips.com\/tutorials\/java\/stepping-into-my-first-java-program-hello-world","status":"publish","title":"Stepping Into My First Java Program \u201cHello World!\u201d","title_plain":"Stepping Into My First Java Program \u201cHello World!\u201d","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Stepping Into My First Java Program \u201cHello World!\u201d' data-link='http:\/\/stacktips.com\/tutorials\/java\/stepping-into-my-first-java-program-hello-world' data-summary=''><\/div>\n<p>Before begin writing your first Java program, you need to have your development environment ready. For writing and executing Java program, you need the latest version of Java SDK installed installed and configured on your machine;<\/p>\n<p>Now, let us create an example class that simply prints &#8220;Hello World!&#8221; on standard output terminal.<\/p>\n<pre class=\"prettyprint lang-cs\">\/* My first java program prints \u201cHello World!\u201d *\/\r\nclass HelloWorldApp {  \r\n    public static void main(String[] args) { \r\n       \/\/Prints string hello world \r\n        System.out.println(\"Hello World!\");  \r\n    }  \r\n}<\/pre>\n<p>The \u201cHello World!\u201d application consists of three primary components:<\/p>\n<ol>\n<li>Source code comments<\/li>\n<li>The HelloWorldApp class definition<\/li>\n<li>The main method<\/li>\n<\/ol>\n<h2>1. Source Code Comments<\/h2>\n<p>Comments are ignored by the compiler but are useful for readability purpose. The Java programming language supports three kinds of comments such as, single line, multiline and documentation type comments.<\/p>\n<ul>\n<li><strong>\/\/ text<\/strong> &#8211; The compiler ignores everything from \/\/ to the end of the line.<\/li>\n<li><strong>\/* text *\/<\/strong> &#8211; This indicates multiline comments. The compiler ignores everything from \/* to *\/.<\/li>\n<li><strong>\/** documentation *\/<\/strong> &#8211; This indicates a documentation comment (doc comment, for short). The compiler ignores this kind of comment, just like it ignores comments that use \/* and *\/.<\/li>\n<\/ul>\n<p>The following bold text defines the comments of the \u201cHello World!\u201d application:<\/p>\n<pre class=\"prettyprint lang-cs\">\/* My first java program prints \u201cHello World!\u201d *\/\r\nclass HelloWorldApp {  \r\n    public static void main(String[] args) { \r\n        <strong>\/\/Prints string hello world<\/strong> \r\n        System.out.println(\"Hello World!\");  \r\n    }  \r\n}<\/pre>\n<h2>2. The HelloWorldApp Class Definition<\/h2>\n<p>The following bold text begins the class definition block for the \u201cHello World!\u201d application:<\/p>\n<pre class=\"prettyprint lang-cs\">\/* My first java program prints \u201cHello World!\u201d *\/\r\n<strong>class<\/strong> <strong>HelloWorldApp<\/strong> {  \r\n    public static void main(String[] args) { \r\n        \/\/Prints string hello world \r\n        System.out.println(\"Hello World!\");  \r\n    }  \r\n}<\/pre>\n<p>As shown above, the most basic form of a class definition is <code>class &lt;Class Name&gt;<\/code> followed by curly braces.\u00a0The keyword <code>class<\/code> begins the class definition for a class named name, and the code for each class appears between the opening and closing curly braces marked in bold above.<\/p>\n<h2>3. The main Method<\/h2>\n<p>The following bold text begins the definition of the main method:<\/p>\n<pre class=\"prettyprint lang-cs\">\/* My first java program prints \u201cHello World!\u201d *\/\r\nclass HelloWorldApp {  \r\n   <strong> public static void main(String[] args) {<\/strong> \r\n       \/\/Prints string hello world \r\n        System.out.println(\"Hello World!\");  \r\n    }  \r\n}<\/pre>\n","excerpt":"<p>Before begin writing your first Java program, you need to have your development environment ready. For writing and executing Java program, you need the latest version of Java SDK installed installed and configured on your machine; Now, let us create an example class that simply prints &#8220;Hello World!&#8221; on standard output terminal. \/* My first [&hellip;]<\/p>\n","date":"2015-01-10 20:38:56","modified":"2016-06-14 00:38:24","categories":[{"id":91,"slug":"java","title":"Java","description":"Find some of the high quality Java tutorials and examples on core java, J2ME, blackberry and design patterns.","parent":297,"post_count":3}],"tags":[],"author":{"id":855,"slug":"javatechig","name":"JAVATECHIG","first_name":"Javatechig","last_name":"","nickname":"JAVATECHIG","url":"http:\/\/stacktips.com","description":"Provides tutorials, tips, examples and source code on leading Java, Android, Blackberry, PhoneGap and related mobile technologies."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"cf_url":[""],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"post_views_count":["3"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"slide_template":["default"],"dsq_thread_id":["4899889475"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:237:\"a:1:{i:0;a:8:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:243:\"a:1:{i:0;a:9:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"I\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:111:\"a:1:{i:0;a:4:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:162:\"a:1:{i:0;a:6:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:23:\"%TITLE% -%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-620x380.jpg","width":620,"height":380},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150}}},{"id":7221,"type":"post","slug":"json-feed-reader-application-in-xamarin-android","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/json-feed-reader-application-in-xamarin-android","status":"publish","title":"JSON Feed Reader Application in Xamarin Android","title_plain":"JSON Feed Reader Application in Xamarin Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='JSON Feed Reader Application in Xamarin Android' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/json-feed-reader-application-in-xamarin-android' data-summary=''><\/div>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android.png\"><img class=\"aligncenter size-full wp-image-7225\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android.png\" alt=\"JSON Feed Reader Application in Xamarin.Android\" \/><\/a>This is an sample JSON feed reader application developed in Xamarin.Android platform.\u00a0\u00a0This app will fetch the recent posts from stacktips.com and display list of posts along with post title, thumbnail, description on screen.<\/p>\n<p>Features<\/p>\n<ol>\n<li>Download latest data asynchronously from server<\/li>\n<li>Display feeds\u00a0title, thumbnail on list view<\/li>\n<li>Download and cache images using <a href=\"http:\/\/components.xamarin.com\/gettingstarted\/urlimageviewhelper\" target=\"_blank\">UrlImageViewHelper <\/a>component<\/li>\n<li>Allow user to read feed details<\/li>\n<\/ol>\n<p>All the source code used in this example, are open source. You may grab a copy of the project source code from the download link provided.<\/p>\n<p>&nbsp;<\/p>\n<p style=\"text-align: center;\"><a class=\"ss-button\" href=\"https:\/\/github.com\/npanigrahy\/Xamarin.Android-Examples\/tree\/master\/JsonFeedParser\" target=\"_blank\">Browse Code<\/a> \u00a0\u00a0\u00a0<a class=\"ss-button\" href=\"https:\/\/github.com\/npanigrahy\/Xamarin.Android-Examples\/archive\/master.zip\" target=\"_blank\">Download Zip<\/a><\/p>\n","excerpt":"<p>This is an sample JSON feed reader application developed in Xamarin.Android platform.\u00a0\u00a0This app will fetch the recent posts from stacktips.com and display list of posts along with post title, thumbnail, description on screen. Features Download latest data asynchronously from server Display feeds\u00a0title, thumbnail on list view Download and cache images using UrlImageViewHelper component Allow user [&hellip;]<\/p>\n","date":"2014-12-24 10:28:19","modified":"2015-03-18 16:30:26","categories":[{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":855,"slug":"javatechig","name":"JAVATECHIG","first_name":"Javatechig","last_name":"","nickname":"JAVATECHIG","url":"http:\/\/stacktips.com","description":"Provides tutorials, tips, examples and source code on leading Java, Android, Blackberry, PhoneGap and related mobile technologies."},"comments":[{"id":7938,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-20 18:34:00","content":"<p>You can remove the android:style attribute from TextView layout. Create your own style class.<\/p>\n","parent":0},{"id":7943,"name":"Yupi","url":"","date":"2015-03-23 18:26:00","content":"<p>Hi, when I try to test your example of JsonFeedParser it starts and try to open than suddenly crashes.<\/p>\n","parent":0},{"id":7944,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-23 20:38:00","content":"<p>Would you mind pasting the crash log? That will help to find the cause quick. <\/p>\n<p>Thanks<\/p>\n","parent":7943},{"id":8405,"name":"nkkin","url":"","date":"2016-02-26 02:09:00","content":"<p>i really love your code it is working fine with when using your website feed but finding troubles to use it with my blogger json link ..can you please help me fix it ..This is my json feed link &#8220;https:\/\/googleblog.blogspot.com\/feeds\/posts\/default?alt=json&#8221;<br \/>\ngoogle blogspot json file is too complicated to parse ..Thank so much<\/p>\n","parent":0}],"attachments":[{"id":7224,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","slug":"json-feed-reader-application-in-xamarin-android-thumb","title":"JSON Feed Reader Application in Xamarin.Android Thumb","description":"JSON Feed Reader Application in Xamarin.Android ","caption":"","parent":7221,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174}}},{"id":7225,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android.png","slug":"json-feed-reader-application-in-xamarin-android-2","title":"JSON Feed Reader Application in Xamarin.Android","description":"JSON Feed Reader Application in Xamarin.Android","caption":"","parent":7221,"mime_type":"image\/png","images":[]}],"comment_count":4,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3354735919"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"2L2pAV\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/2L2pAV\/comments\";s:5:\"pDate\";s:19:\"2014-12-24 04:59:02\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:106028080341;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/106028080341\";s:5:\"pDate\";s:19:\"2014-12-24 04:58:57\";}}\";"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-12-24 04:58:55\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"633d70d7328d23d25f6377a3c38282f4\";s:5:\"pDate\";s:19:\"2014-12-24 04:58:59\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_937042689641319\";s:5:\"pDate\";s:19:\"2014-12-24 04:58:49\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"547617394936406017\";s:5:\"pDate\";s:19:\"2014-12-24 04:58:54\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"cf_url":[""],"post_views_count":["3484"],"fsb_social_facebook":["2"],"fsb_social_twitter":["4"],"fsb_social_google":["2"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/JSON-Feed-Reader-Application-in-Xamarin.Android-Thumb.png","width":300,"height":174}}},{"id":6895,"type":"post","slug":"ios-app-permissions-what-makes-them-better-than-android","url":"http:\/\/stacktips.com\/blog\/ios-app-permissions-what-makes-them-better-than-android","status":"publish","title":"iOS App Permissions &#8211; What Makes Them Better Than Android ?","title_plain":"iOS App Permissions &#8211; What Makes Them Better Than Android ?","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='iOS App Permissions - What Makes Them Better Than Android ?' data-link='http:\/\/stacktips.com\/blog\/ios-app-permissions-what-makes-them-better-than-android' data-summary=''><\/div>\n<p>Apple and Google have been making continuous efforts towards ensuring complete privacy towards user data and device security while downloading mobile\u00a0apps.\u00a0Both\u00a0platform vendors, always engaged in\u00a0scrutinizing what their apps are doing on their devices and also with the data that has been shared by the users.<\/p>\n<p>With app permissions being a key area of concern, \u00a0both platforms\u00a0are facing a stiff competition from each other. In the context of this post, we&#8217;ll be taking a closer look at the reasons that make iOS app permissions better as compared to Android app permissions.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions.png\"><img class=\"aligncenter size-full wp-image-7150\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions.png\" alt=\"ios vs android app permissions\" width=\"1637\" height=\"936\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions.png 1637w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions-300x172.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions-620x355.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions-940x537.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions-800x457.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions-1000x572.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions-900x515.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions-370x212.png 370w\" sizes=\"(max-width: 1637px) 100vw, 1637px\" \/><\/a><\/p>\n<h3>Why shouldn&#8217;t you ignore app permissions?<\/h3>\n<p>Considering the ever-growing demand, every renowned iPhone app development company is laying emphasis on making users acquainted with the importance of paying attention to the app permissions\u00a0Irrespective of whether you&#8217;re installing an iOS or Android app, it is recommended not to ignore the app permissions. You should make sure to get familiar with everything that the respective app(s) is\/are expecting you to share. Whether it&#8217;s your contacts list, your photos, videos or audios; ensure that your privacy isn&#8217;t being breached via installation of the chosen app(s).<\/p>\n<p>Mobile app should seek user&#8217;s permission for getting an access to the device&#8217;s camera, internet and a variety of other resources.\u00a0Mere ignore of app permissions can make you fall prey to unexpected extortion and frauds.\u00a0There are several fraudsters out there who&#8217;re waiting to grab opportunities of gaining access to your private details like your credit card number, your name, address etc. For example, Fakedefender came up as a fake anti-virus application that promised to show security alerts to the app user, in addition to cleaning up his\/her smartphone after making a purchase via the application.<\/p>\n<h3>Android app permissions- Why are they inferior?<\/h3>\n<p>A wide community of Geeks, who still believes that, the way android seeks permissions is way better as compared to the iOS.\u00a0Well, this nothing other then a complete myth. Android system seeks users permission while app is being installed. But iOS allows you to go ahead with an installation, and seeks permission when user is using the feature that requires specific permission. Isn&#8217;t looks more practical ?<\/p>\n<p>Although the all-new Android 4.3 comes with a default settings menu for managing app permissions, this menu is typically hidden and never easily\u00a0accessible to users. As an app user,\u00a0you additionally need to pay attention in\u00a0managing the permissions from device settings,\u00a0post app installation. This makes android app\u00a0experience more frustrating.<\/p>\n<h3>iOS app permissions- features that make app more user-friendly<\/h3>\n<p>Android asks user to\u00a0accept or reject all permission used by application before app is being installed. But in iOS, If you choose to install an iOS app with internet access permission, then during installation process, you&#8217;re not granting any special permission(s) to your app like an access to your contact list, GPS, gallery etc.<\/p>\n<p>Whenever user uses a specific feature that requires feature specific permissions like accessing\u00a0Contacts, Reminders, Bluetooth, Calendars, Facebook account, Twitter account etc., it seeks individual permissions for the same. In this way, you&#8217;ll be able to gain a detailed insight and\u00a0reasons behind each\u00a0specific app permission. This will save you from every possible infringement and any attacks by scammers.<\/p>\n<h3>Android&#8217;s &#8216;use It or leave It&#8217; vs Apple&#8217;s\u00a0&#8216;use It as you like It&#8217;<\/h3>\n<p>While Android users can either choose to allow all app permissions during installation or just not use the app; the iOS users can accept some permissions and deny the others, while still continuing to use the application. Quite dissimilar to Android \u00a0app permission system, iOS app permission system allows users to manage and gather a deep understanding of the criteria that needs to be followed for accepting\/rejecting an app permission.<\/p>\n<h3>Conclusion<\/h3>\n<p>Often unheard, but iOS app permissions are indeed much more logical as compared to the low-end Android app permissions. In iOS, your decision of installing a particular app is surrounded by a number of unique factors and not just the conventional ones, as are applicable during installation of Android apps.<\/p>\n","excerpt":"<p>Apple and Google have been making continuous efforts towards ensuring complete privacy towards user data and device security while downloading mobile\u00a0apps.\u00a0Both\u00a0platform vendors, always engaged in\u00a0scrutinizing what their apps are doing on their devices and also with the data that has been shared by the users. With app permissions being a key area of concern, \u00a0both [&hellip;]<\/p>\n","date":"2014-12-23 15:47:57","modified":"2016-05-29 19:22:52","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[{"id":217,"slug":"mobile-apps","title":"Mobile Apps","description":"","post_count":2}],"author":{"id":50,"slug":"addison-cohen","name":"Addison Cohen","first_name":"Addison","last_name":"Cohen","nickname":"Addison Cohen","url":"http:\/\/www.appsted.com\/","description":"Addison Cohen is an iPhone application developer working with Appsted Ltd He loves sharing latest information on mobile technologies including iOS, android development processes."},"comments":[],"attachments":[{"id":7150,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions.png","slug":"ios-vs-android-app-permissions","title":"ios vs android app permissions","description":"ios vs android app permissions","caption":"","parent":6895,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions.png","width":1637,"height":936},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions-620x355.png","width":620,"height":355},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions.png","width":1637,"height":936}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snapDA":["s:104:\"a:1:{i:0;a:3:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapLI":["s:265:\"a:1:{i:0;a:8:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapSU":["s:127:\"a:1:{i:0;a:4:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";}}\";"],"snapTR":["s:370:\"a:1:{i:0;a:8:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"dsq_thread_id":["3351947103"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"cf_url":[""],"post_views_count":["1688"],"fsb_social_facebook":["2"],"fsb_social_twitter":["3"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapDL":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_936658729679715\";s:5:\"pDate\";s:19:\"2014-12-23 10:32:02\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"547338876549726208\";s:5:\"pDate\";s:19:\"2014-12-23 10:32:10\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions.png","width":1637,"height":936},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions-620x355.png","width":620,"height":355},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/ios-vs-android-app-permissions.png","width":1637,"height":936}}},{"id":7080,"type":"post","slug":"listview-example-in-xamarin-android","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/listview-example-in-xamarin-android","status":"publish","title":"ListView Example in Xamarin.Android","title_plain":"ListView Example in Xamarin.Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='ListView Example in Xamarin.Android' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/listview-example-in-xamarin-android' data-summary=''><\/div>\n<p>This post will walk you through crating a custom ListView in Xamarin.Android using list adapter.<\/p>\n<p>ListView is one of the most common UI pattern, used extensively to display collection of data elements in rows. Android ListView is a view group that displays a list of scrollable items. The list items are automatically inserted to the list using an Adapter that pulls content from a source such as an array. Find out more about android <code>ListView<\/code> and <code>ListAdapters<\/code> from Android ListView Tutorial.<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin.png\"><img src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin.png\" alt=\"Custom ListView Example in Xamarin\" class=\"alignleft size-full wp-image-7229\" \/><\/a><\/p>\n<p><\/a>Following are the steps involved in using ListView in your application<\/p>\n<ol class=\"space\">\n<li class=\"space\">Declare ListView layout<\/li>\n<li class=\"space\">Declare list row layout<\/li>\n<li class=\"space\">Define ListView Adapter<\/li>\n<li class=\"space\">Setting ListView Adapter<\/li>\n<li class=\"space\">Handle list click event<\/li>\n<\/ol>\n<h1>1. Declare ListView layout<\/h1>\n<p>Before using list in your application, you first need to declare its layout inside your activity or fragment. For the sake of simplicity, in the below code snippet, we have declared ListView inside activity layout file.<\/p>\n<h4>ListActivity.axml<\/h4>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:orientation=\"vertical\"\r\n    android:layout_width=\"fill_parent\"\r\n    android:layout_height=\"fill_parent\"&gt;\r\n    &lt;ListView\r\n        android:minWidth=\"25px\"\r\n        android:minHeight=\"25px\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:id=\"@+id\/ListView\" \/&gt;\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<p>The property <code>android:id=\"@+id\/IntentoryList\"<\/code> in the above code snippet is the id assigned to ListView. This id will be used to initialize this from activity cs file.<\/p>\n<h1>2. Declare list row layout<\/h1>\n<p>In the above step we have declared ListView layout. Now it is the time to define the layout for list row item. This layout will be used by list adapter.<\/p>\n<h4>ListItemRow.axml<\/h4>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;RelativeLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"fill_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:minHeight=\"50dp\"\r\n    android:orientation=\"horizontal\"&gt;\r\n    &lt;ImageView\r\n        android:id=\"@+id\/Thumbnail\"\r\n        android:layout_width=\"70dp\"\r\n        android:layout_height=\"70dp\"\r\n        android:paddingLeft=\"10dp\"\r\n        android:layout_alignParentLeft=\"true\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:src=\"@drawable\/Placeholder\" \/&gt;\r\n    &lt;TextView\r\n        android:id=\"@+id\/Title\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_toRightOf=\"@id\/Thumbnail\"\r\n        android:lineSpacingExtra=\"3dp\"\r\n        android:paddingLeft=\"10dp\"\r\n        android:paddingTop=\"5dp\"\r\n        android:textColor=\"#ffffff\"\r\n        android:textStyle=\"bold\"\r\n        android:typeface=\"sans\" \/&gt;\r\n    &lt;TextView\r\n        android:id=\"@+id\/Description\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id\/Title\"\r\n        android:layout_toRightOf=\"@id\/Thumbnail\"\r\n        android:paddingLeft=\"10dp\"\r\n        android:paddingTop=\"5dp\"\r\n        android:textColor=\"#fff\"\r\n        android:textSize=\"11sp\" \/&gt;\r\n&lt;\/RelativeLayout&gt;\r\n<\/pre>\n<h1>3. Define ListView Adapter<\/h1>\n<p>Adapter is a tricky part while creating ListView. BaseAdapter is a common Adapter that can be used in both ListView, GridView or Spinners. An adapter takes list of data objects as input, and each object in the list is mapped to a list row. Adapter also inflates the layout to be rendered for each row items.<\/p>\n<p>In our example, <code>CusotmListAdapter<\/code> takes list of Post objects. The structure of Post class as described below.<\/p>\n<pre class=\"prettyprint lang-cs\">public class Post\r\n{\r\n\tpublic string url { get; set; }\r\n\tpublic string title { get; set; }\r\n\tpublic string description { get; set; }\r\n}\r\n<\/pre>\n<p>The post class contains three fields; a url, title and a description. In this example we will not cover much on how to get the data source, you may hardcode or write some logic to download data form server. Now lets move to our list adapter implementation.<\/p>\n<pre class=\"prettyprint lang-cs\">public class CusotmListAdapter : BaseAdapter&lt;Post&gt;\r\n{\r\n\tActivity context;\r\n\tList&lt;Post&gt; list;\r\n\r\n\tpublic CusotmListAdapter (Activity _context, List&lt;Post&gt; _list)\r\n\t\t:base()\r\n\t{\r\n\t\tthis.context = _context;\r\n\t\tthis.list = _list;\r\n\t}\r\n\r\n\tpublic override int Count {\r\n\t\tget { return list.Count; }\r\n\t}\r\n\r\n\tpublic override long GetItemId (int position)\r\n\t{\r\n\t\treturn position;\r\n\t}\r\n\r\n\tpublic override Post this[int index] {\r\n\t\tget { return list [index]; }\r\n\t}\r\n\r\n\tpublic override View GetView (int position, View convertView, ViewGroup parent)\r\n\t{\r\n\t\tView view = convertView; \r\n\r\n\t\t\/\/ re-use an existing view, if one is available\r\n\t\t\/\/ otherwise create a new one\r\n\t\tif (view == null)\r\n\t\t\tview = context.LayoutInflater.Inflate (Resource.Layout.ListRowLayout, parent, false);\r\n\r\n\t\tPost item = this [position];\r\n\t\tview.FindViewById&lt;TextView&gt; (Resource.Id.Title).Text = item.title;\r\n\t\tview.FindViewById&lt;TextView&gt;(Resource.Id.Description).Text = item.description;\r\n\r\n\t\tusing (var imageView = view.FindViewById&lt;ImageView&gt; (Resource.Id.Thumbnail)) {\r\n\t\t\tstring url = Android.Text.Html.FromHtml (item.thumbnail).ToString ();\r\n\r\n\t\t\t\/\/Download and display image\r\n\t\t\tKoush.UrlImageViewHelper.SetUrlDrawable (imageView, \r\n\t\t\t\turl, Resource.Drawable.Placeholder);\r\n\t\t}\r\n\t\treturn view;\r\n\t}\r\n}\r\n<\/pre>\n<ol class=\"space\">\n<li>You must override the Count, GetItemId and GetView method in your BaseAdapter class implementation. The <code>Count<\/code> method indicates the total number of rows in the list, <code>GetItemId<\/code> represent a unique id for reach item in the list. <code>GetView<\/code> inflates layout for each list row and render on the screen.<\/li>\n<li>In this example, we have used <a href=\"http:\/\/components.xamarin.com\/gettingstarted\/urlimageviewhelper\" target=\"_blank\">UrlImageViewHelper<\/a> component. You may download the same form component store and add to your project.<\/li>\n<\/ol>\n<h1>4. Setting ListView Adapter<\/h1>\n<p>Once your\u00a0list adapter is ready, then you are almost done with your ListView implementation. Now all you need to do is to instantiate the adapter and setting to ListView.<\/p>\n<pre class=\"prettyprint lang-cs\">\/\/Initializing listview\r\nlistView = FindViewById (Resource.Id.feedList);\r\nlistView.ItemClick += OnListItemClick;\r\nlistView.Adapter = new CusotmListAdapter(this, listData);\r\n<\/pre>\n<p>You can handle ListView click event by adding <code>ItemClick<\/code> callback.<\/p>\n<pre class=\"prettyprint lang-cs\">void OnListItemClick(object sender, AdapterView.ItemClickEventArgs e) {\r\n\tPost item = result.posts.ElementAt (e.Position);\r\n\t\/\/ Do whatever you like here\r\n}\r\n<\/pre>\n","excerpt":"<p>This post will walk you through crating a custom ListView in Xamarin.Android using list adapter. ListView is one of the most common UI pattern, used extensively to display collection of data elements in rows. Android ListView is a view group that displays a list of scrollable items. The list items are automatically inserted to the [&hellip;]<\/p>\n","date":"2014-12-23 10:51:17","modified":"2014-12-24 10:40:34","categories":[{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":7812,"name":"JavaTechig","url":"http:\/\/stacktips.com\/","date":"2015-02-17 20:29:00","content":"<p>Download code from here<\/p>\n<p><a href=\"http:\/\/stacktips.com\/apps\/json-feed-reader-application-in-xamarin-android\" rel=\"nofollow\">http:\/\/stacktips.com\/apps\/json-feed-reader-application-in-xamarin-android<\/a><\/p>\n","parent":0},{"id":7960,"name":"Ace","url":"","date":"2015-03-28 21:10:00","content":"<p>Works perfectly!!!<\/p>\n","parent":0},{"id":7961,"name":"Ace","url":"","date":"2015-03-28 21:11:00","content":"<p>You deserve a share!!<\/p>\n","parent":0},{"id":8096,"name":"Sridhar","url":"","date":"2015-07-18 15:45:00","content":"<p>Hi guys,<\/p>\n<p>I am newbie in Xamarin.Android. Right now, I am working on the Recycler view. I couldn&#8217;t able to build and run my App. It&#8217;s giving few errors as follows,<\/p>\n<p>1. (Error XA5209: Unzipping failed. Please download <a href=\"https:\/\/dl-ssl.google.com\/android\/repository\/android_m2repository_r15.zip\" rel=\"nofollow\">https:\/\/dl-ssl.google.com\/android\/repository\/android_m2repository_r15.zip<\/a> and extract it to the local\/share\/Xamarin\/Android.Support.v4\/22.2.0\/content directory. (XA5209) )<\/p>\n<p>2. (Error XA5209: Reason: local\/share\/Xamarin\/Android.Support.v4\/22.2.0\/android_m2repository_r15.zip is not a valid zip file (XA5209))<\/p>\n<p>3. (Error XA5207: Please install package: &#8216;Xamarin.Android.Support.v4&#8217; available in SDK installer. Java library file local\/share\/Xamarin\/Android.Support.v4\/22.2.0\/embedded\/classes.jar doesn&#8217;t exist. (XA5207))<\/p>\n<p>NOTE: If I run my code on the desktop it work&#8217;s fine. Whereas in my laptop, it&#8217;s throwing me such errors. I can see this might be a basic error to be fixed, I am lost! Help me guys!!<\/p>\n","parent":0},{"id":8375,"name":"barati","url":"","date":"2016-02-09 20:50:00","content":"<p>hi guys,<\/p>\n<p>i think you can help me in this:  <a href=\"http:\/\/stackoverflow.com\/questions\/35265535\/how-to-add-lines-from-textfile-in-asset-to-customlistview-in-xamarin-android\" rel=\"nofollow\">http:\/\/stackoverflow.com\/questions\/35265535\/how-to-add-lines-from-textfile-in-asset-to-customlistview-in-xamarin-android<\/a><\/p>\n","parent":0}],"attachments":[{"id":7142,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Listview-Example-in-Xamarin.Android.png","slug":"listview-example-in-xamarin-android","title":"Listview Example in Xamarin.Android","description":"","caption":"","parent":7080,"mime_type":"image\/png","images":[]},{"id":7228,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","slug":"custom-listview-example-in-xamarin-thumb","title":"Custom ListView Example in Xamarin Thumb","description":"","caption":"","parent":7080,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174}}},{"id":7229,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin.png","slug":"custom-listview-example-in-xamarin","title":"Custom ListView Example in Xamarin","description":"","caption":"","parent":7080,"mime_type":"image\/png","images":[]}],"comment_count":5,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4869912989"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-12-23 05:21:52\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"e01ebb9256d53431258265396e68491b\";s:5:\"pDate\";s:19:\"2014-12-23 05:21:40\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_936583003020621\";s:5:\"pDate\";s:19:\"2014-12-23 05:21:51\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"5yWTdT\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/5yWTdT\/comments\";s:5:\"pDate\";s:19:\"2014-12-23 05:21:46\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:105936636181;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/105936636181\";s:5:\"pDate\";s:19:\"2014-12-23 05:21:54\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"547260789392809984\";s:5:\"pDate\";s:19:\"2014-12-23 05:21:53\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["6389","6389"],"fsb_social_facebook":["5"],"fsb_social_twitter":["5"],"fsb_social_google":["2"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Custom-ListView-Example-in-Xamarin-Thumb.png","width":300,"height":174}}},{"id":7060,"type":"post","slug":"using-sqlite-net-orm-in-xamarin-application","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/using-sqlite-net-orm-in-xamarin-application","status":"publish","title":"Using SQLite.NET ORM in Xamarin Application","title_plain":"Using SQLite.NET ORM in Xamarin Application","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Using SQLite.NET ORM in Xamarin Application' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/using-sqlite-net-orm-in-xamarin-application' data-summary=''><\/div>\n<p>ORM stands for Object Relational Mapping. SQLite.NET ORM is an light weight and open source library that allows .NET and Mono application to store data in SQLite database. This is available as a free component in Xamarin component store. SQLite.NET supports for Android, iOS and Windows platform, and hence the database operation logic can shared across platforms. Some of the key features of SQLite.NET ORM includes<\/p>\n<ol>\n<li>Easy to ingrate component available to use in existing Xamarin project<\/li>\n<li>It is an light weight thin wrapper, and is efficient without performance trade-off<\/li>\n<li>Support simple CURD operations and support for simple, complex SQL quires<\/li>\n<\/ol>\n<h1>How to use SQLite.NET?<\/h1>\n<p>There are two approaches to integrate SQLite.NET ORM in Xamarin application<\/p>\n<h3>Downloading from Github<\/h3>\n<p>SQLite.NET is a very thin library with single file. You can download <code>SQLite.cs<\/code> file from <a href=\"https:\/\/github.com\/praeclarum\/sqlite-net\/blob\/master\/src\/SQLite.cs\">Github<\/a> and add into your application. SQLite.NET library binds directly to the native device SQLite database engine on each platform.<\/p>\n<h3>Adding from component store<\/h3>\n<p>SQLite.NET is listed free Xamarin Component Store and available for both iOS and Android platform. To include this into your Xamarin Studio project, you can , either double-click on the Components folder in the solution pad, or and right click to select Component Manager.<\/p>\n<p>You will notice that the component manager will be loaded with already downloaded components and you can open Component store from the window. Accessing component manager requires log in to your Xamarin account. Once logged, you can browse through available components and add them to project.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/SQLite.NET-ORM-in-Xamarin-Component-Store.png\"><img class=\"aligncenter size-full wp-image-7061\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/SQLite.NET-ORM-in-Xamarin-Component-Store.png\" alt=\"SQLite.NET-ORM-in-Xamarin-Component-Store\" \/><\/a><\/p>\n<h1>SQLite.NET Example<\/h1>\n<p>Once the component is added to your Xamarin project, you are good to use this library to write SQL operations.<\/p>\n<h2>Creating a database<\/h2>\n<p>Before you can store data into SQLite, you first need to create a database, if not created already. Create a blank database or open existing by passing the file path the SQLiteConnection class constructor.<\/p>\n<pre class=\"prettyprint lang-cs\">private string DbName = \"Intentory_DB.db\";\r\nstring path = System.Environment.GetFolderPath (System.Environment.SpecialFolder.Personal);\r\nSQLiteConnection dbConn = new SQLiteConnection (System.IO.Path.Combine (path, DbName));\r\n<\/pre>\n<ol>\n<li>Depending on what platform you are targeting the file location will be different. For iOS and Android you can use Environment class as shown in the above code snippet, to construct a valid path<\/li>\n<li>The <code>new SQLiteConnection<\/code> opens the database file, if the file under mentioned path is already available, else it will create a new database.<\/li>\n<li>Once your database connection is opened, you can execute the following methods to command different database operations.<\/li>\n<\/ol>\n<h2>Creating a table<\/h2>\n<p>In this example, we will be storing items to Inventory table. Below is the structure of Inventory class. As you can see in the code snippet below, we have declared different SQL attributes to Inventory class model.<\/p>\n<pre class=\"prettyprint lang-cs\">class Inventory\r\n{\r\n\t[PrimaryKey, AutoIncrement]\r\n\tpublic int Id { get; set; }\r\n\r\n\t[NotNull]\r\n\tpublic int ItemCode { get; set;}\r\n\r\n\tpublic String Name{ get; set;}\r\n\tpublic String Category { get; set;}\r\n\tpublic double Price{ get; set;}\r\n\tpublic bool StockAvailable { get; set;}\r\n}\r\n<\/pre>\n<p>Once you have your model ready, you can invoke the below methods to create table, if not exist already.<\/p>\n<pre class=\"prettyprint lang-cs\">dbConn.CreateTable ();<\/pre>\n<h2>Insert into database<\/h2>\n<pre class=\"prettyprint lang-cs\">\/\/Creating inventory object for storing into db\r\nInventory newInventory = new Inventory ();\r\nnewInventory.ItemCode = Convert.ToInt32(ItemCode.Text);\r\nnewInventory.Name = ItemName.Text;\r\nnewInventory.Category = ItemCategory.Text;\r\nnewInventory.Price = Convert.ToDouble(ItemPrice.Text);\r\nnewInventory.StockAvailable = IsStockAvailable.Checked;\r\n\r\n\/\/Inserting record into database\r\ndbConn.Insert (newInventory);<\/pre>\n<h2>Retrieve data from\u00a0database<\/h2>\n<p>Use the following syntax to retrieve all the records from database<\/p>\n<pre>IEnumerable&lt;Inventory&gt; table = dbConn.Table&lt;Inventory&gt; ();\r\nforeach (Inventory s in table) {\r\n\tConsole.WriteLine (s.ItemCode + \" \" + s.Name);\r\n}\r\n<\/pre>\n<p>To retrieve object by primary key, you can use following code syntax.<\/p>\n<pre class=\"prettyprint lang-cs\">\/\/3 is primary key\r\nvar item = db.Get&lt;Inventory&gt;(3);<\/pre>\n<h2>Update record into database<\/h2>\n<pre class=\"prettyprint lang-cs\">\/\/Inserting record into database\r\ndbConn.Update (item);<\/pre>\n<h2>Delete from database<\/h2>\n<pre class=\"prettyprint lang-cs\">dbConn.Delete (item);<\/pre>\n","excerpt":"<p>ORM stands for Object Relational Mapping. SQLite.NET ORM is an light weight and open source library that allows .NET and Mono application to store data in SQLite database. This is available as a free component in Xamarin component store. SQLite.NET supports for Android, iOS and Windows platform, and hence the database operation logic can shared [&hellip;]<\/p>\n","date":"2014-12-20 01:37:43","modified":"2014-12-20 01:51:54","categories":[{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":7963,"name":"Torben Nielsen","url":"","date":"2015-03-30 05:12:00","content":"<p>Thx a lot for tutorial !<\/p>\n","parent":0}],"attachments":[{"id":7061,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/SQLite.NET-ORM-in-Xamarin-Component-Store.png","slug":"sqlite-net-orm-in-xamarin-component-store","title":"SQLite.NET-ORM-in-Xamarin-Component-Store","description":"","caption":"","parent":7060,"mime_type":"image\/png","images":[]}],"comment_count":1,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3341066429"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-12-19 20:08:25\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"1fb30fc5b994f18963d78b8220445070\";s:5:\"pDate\";s:19:\"2014-12-19 20:08:18\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_934707929874795\";s:5:\"pDate\";s:19:\"2014-12-19 20:08:24\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"2kWg22\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/2kWg22\/comments\";s:5:\"pDate\";s:19:\"2014-12-19 20:08:27\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:105627646021;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/105627646021\";s:5:\"pDate\";s:19:\"2014-12-19 20:08:29\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"546034353298341889\";s:5:\"pDate\";s:19:\"2014-12-19 20:08:28\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["3825"],"fsb_social_facebook":["0"],"fsb_social_twitter":["1"],"fsb_social_google":["2"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":7057,"type":"post","slug":"data-storage-options-in-xamarin","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/data-storage-options-in-xamarin","status":"publish","title":"Data Storage Options in Xamarin","title_plain":"Data Storage Options in Xamarin","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Data Storage Options in Xamarin' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/data-storage-options-in-xamarin' data-summary=''><\/div>\n<p>Most of the commercial mobile application uses local storage for large data processing and to improve efficiency. While mobile applications are limited with memory and processing, the way you store, manage and process on data it is always been very tricky. Think a bit, before jumping straight into designing a database for your application.<\/p>\n<p>Both Android and iOS platform provides different mechanism to deal with data storage. You must understand each of the option to choose one over other. Following are some of the available data storage mechanisms for mobile mobile platforms like Android and iOS.<\/p>\n<h2>1. Key Value Preferences<\/h2>\n<p>Preferences are most used way to store simple data of key value pair. They are local to your application, you will loose the data once the application is deleted from device. This option of data storage is preferred for storing application rationalization information. In Android it is named as shared preferences and in iOS it is called NSUserDefaults. Additionally iOS users can take advantage of iCloud technology for data backup and synchronization in multiple devices.<\/p>\n<p>Here is the link to <a href=\"http:\/\/stacktips.com\/xamarin\/sharedpreferences-example-in-xamarin-android\">Shared preference in Xamarin.Android example<\/a> , that might intrest you.<\/p>\n<h2>2. Text Files \/ Serialized Data Files<\/h2>\n<p>Text file is most easiest and convenient way to sore data such content downloaded from server. You may use different data encryption mechanism for ensuring the data security.<\/p>\n<p>Objects can be serialized and persisted as XML or JSON on the file-system. The .NET framework includes libraries that make serializing and de-serializing objects easy. Use appropriate names to organize data files.<\/p>\n<h2>3. Database<\/h2>\n<p>SQLite is an Open-Source embedded SQL database engine built available on both iOS and Android platforms. SQLite provides relational database management structure for storing user defined records in the form of tables. SQLite is light weight when it comes to resource usage and it doesn&#8217;t need to have any server setup like other RDBMS systems. It is an cross platform and self-contained database. Database storage is suited to lists of data with many properties.<\/p>\n<p>Following are some of the advantages of using SQL database engine<\/p>\n<ol>\n<li>SQL databases structured and efficient for storing data<\/li>\n<li>Allows simple and complex queries, that helps to extract specific data<\/li>\n<li>Query results can be sorted<\/li>\n<li>Query results can be aggregated<\/li>\n<li>Similar to other RDBMS, which helps developers to utilize existing knowledge in database design<\/li>\n<li>Allow application to pre-package with database<\/li>\n<\/ol>\n<p>You may take advantage of the ready to use ORM (Object Relational Mapping) such as SQLite.NET components from Xamarin Component store for quick integration for SQLite storage. Here is the link to S<a title=\"Using SQLite.NET ORM in Xamarin Application\" href=\"http:\/\/stacktips.com\/xamarin\/using-sqlite-net-orm-in-xamarin-application\">QLite.NET components integration example<\/a>, that might intrest you.<\/p>\n<h2>4. Image files<\/h2>\n<p>As mobile devices are limited with memory, it is highly recommended not to use database for storing large size images. Images must be stored into device file-system and only the mapping file name can be stored into database. If you&#8217;re dealing with many images in your application, it is a good practice to have image caching logic in place.<\/p>\n","excerpt":"<p>Most of the commercial mobile application uses local storage for large data processing and to improve efficiency. While mobile applications are limited with memory and processing, the way you store, manage and process on data it is always been very tricky. Think a bit, before jumping straight into designing a database for your application. Both [&hellip;]<\/p>\n","date":"2014-12-20 01:31:37","modified":"2015-12-01 19:37:05","categories":[{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"2zKrKu\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/2zKrKu\/comments\";s:5:\"pDate\";s:19:\"2014-12-19 20:02:06\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:105627224546;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/105627224546\";s:5:\"pDate\";s:19:\"2014-12-19 20:02:11\";}}\";"],"dsq_thread_id":["3341050804"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"cf_url":[""],"post_views_count":["2741"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-12-19 20:02:03\";}}\";"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"62b5de73d369aefcd6ab78edb677563f\";s:5:\"pDate\";s:19:\"2014-12-19 20:01:58\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_934704249875163\";s:5:\"pDate\";s:19:\"2014-12-19 20:02:09\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"546032724515909634\";s:5:\"pDate\";s:19:\"2014-12-19 20:01:59\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}},{"id":6968,"type":"post","slug":"xamarin-learning-resources","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/xamarin-learning-resources","status":"publish","title":"Xamarin Learning Resources","title_plain":"Xamarin Learning Resources","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Xamarin Learning Resources' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/xamarin-learning-resources' data-summary=''><\/div>\n<p>Xamarin is a San Francisco, California based software company which provides commercial software development tools that leverage the Mono open source project in order to allow you to develop applications for Android, iOS, and OS X using C# and the .NET framework.<\/p>\n<p>Find links to Xamarin learning resources and some of the popular Xamarin development books. If you want to list down your blog or book on this page then please comment below.<\/p>\n<h3>Xamarin Learning Resources<\/h3>\n<p>Below are some of the Xamarin learning web portals, provides examples, source code and step by step guide for developers to learn Xamarin from scratch.<\/p>\n<h4 style=\"text-decoration: underline;\">API Documentation<\/h4>\n<p><a title=\"iOS Xamarin API documentation\" href=\"http:\/\/iosapi.xamarin.com\/\" target=\"_blank\">1. iOS API Documentation<\/a><br \/>\n<a href=\"http:\/\/androidapi.xamarin.com\/\" target=\"_blank\">2. Android API Documentation<\/a><br \/>\n<a href=\"http:\/\/macapi.xamarin.com\/\" target=\"_blank\">3. Mac API Documentation<\/a><br \/>\n<a href=\"http:\/\/developer.xamarin.com\/guides\/testcloud\/apis\" target=\"_blank\">4. TestCloud Documentation<\/a><\/p>\n<h4 style=\"text-decoration: underline;\">Xamarin Tutorials<\/h4>\n<p><a href=\"http:\/\/developer.xamarin.com\/guides\/ios\/getting_started\/\" target=\"_blank\">1. Xamarin Developer Website<\/a><br \/>\n<a href=\"http:\/\/blogs.msdn.com\/\" target=\"_blank\">2. Microsoft MSDN Site<\/a><br \/>\n<a title=\"XamarinAppDev.com\" href=\"http:\/\/xamarinappdev.com\/\" target=\"_blank\" rel=\"home\">3. XamarinAppDev.com<\/a><br \/>\n<a title=\"MvvmCross Github\" href=\"https:\/\/github.com\/MvvmCross\/MvvmCross\/wiki\" target=\"_blank\">2. MvvmCross Github<\/a><\/p>\n<h3>Xamarin Development Books<\/h3>\n<hr \/>\n<p>[col type=&#8221;one-fourth&#8221;]<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-with-Android.jpg\">\u001b<\/a><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-Android-second.jpg\"><img class=\"alignnone wp-image-10057 size-thumbnail\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-Android-second-300x356.jpg\" alt=\"Xamarin+Mobile+Application+Development+for+Android+second\" width=\"300\" height=\"356\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-Android-second-300x356.jpg 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-Android-second-370x439.jpg 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-Android-second.jpg 421w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-with-Android.jpg\"><br \/>\n<\/a><br \/>\n[\/col]<\/p>\n<p>[col type=&#8221;three-fourth last&#8221;]<\/p>\n<h3>Xamarin Mobile Application Development for Android &#8211; Second Edition<\/h3>\n<h2>About This Book<\/h2>\n<ul>\n<li>Build and test multi-view Android applications using Xamarin.Android<\/li>\n<li>Work with device capabilities such as location sensors and the camera<\/li>\n<li>A progressive, hands-on guide to develop stunning Android applications using Xamarin<\/li>\n<\/ul>\n<h2>Who This Book Is For<\/h2>\n<p>If you are a C# developer who wants to develop Android apps and enhance your existing skill set, then this book is ideal for you. Good working knowledge of C#, .NET, and object-oriented software development is assumed.<\/p>\n<h2>What You Will Learn<\/h2>\n<ul>\n<li>Build a multi-view, orientation-aware Android application with navigation<\/li>\n<li>Lay out content using the LinearLayout, RelativeLayout, and TableLayout layout managers<\/li>\n<li>Use a ListView (AdapterView) and Adapter to build a view that is populated from server data<\/li>\n<li>Consume REST web service to perform GET, UPDATE, DELETE operation<\/li>\n<li>Use Android SQLite for data persistence and caching<\/li>\n<li>Capture the current location of a device, determine the street address, and integrate with the map app<\/li>\n<li>Test, debug, and deploy an Android app<\/li>\n<\/ul>\n<p><a href=\"http:\/\/www.amazon.com\/Xamarin-Mobile-Application-Development-Android-ebook\/dp\/B00YSIM3UU\/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1449238693&amp;sr=1-1&amp;keywords=Xamarin+Mobile+Application+Development+for+Android+second\" target=\"_blank\">Download this book from Amazon<\/a><\/p>\n<p>[\/col]<\/p>\n<hr \/>\n<p>[col type=&#8221;one-fourth&#8221;]<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Forms.png\"><img class=\"aligncenter size-full wp-image-7001\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Forms.png\" alt=\"Xamarin form\" width=\"300\" height=\"366\" \/><\/a><br \/>\n[\/col]<\/p>\n<p>[col type=&#8221;three-fourth last&#8221;]<\/p>\n<h3>Creating Mobile Apps with Xamarin.Forms<\/h3>\n<p>The preview edition contains six chapters:<\/p>\n<ul>\n<li>How does Xamarin.Forms fit in?<\/li>\n<li>Pages, layouts, and views<\/li>\n<li>Building an app: Infrastructure<\/li>\n<li>Building an app: Architecture<\/li>\n<li>Principles of presentation<\/li>\n<li>The interactive interface<\/li>\n<\/ul>\n<p>This is only the beginning &#8211; the completed book will cover all aspects of Xamarin.Forms from the various layout and styling options to extending functionality using native APIs.\u00a0Preview edition is\u00a0now available for <a href=\"http:\/\/developer.xamarin.com\/guides\/cross-platform\/xamarin-forms\/creating-mobile-apps-xamarin-forms\/#Download_Now\">download<\/a>.<\/p>\n<p>[\/col]<\/p>\n<hr \/>\n<p>[col type=&#8221;one-fourth&#8221;]<br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-iOS.jpg\"><img class=\"aligncenter size-full wp-image-7010\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-iOS.jpg\" alt=\"Xamarin Mobile Application Development for iOS\" width=\"201\" height=\"258\" \/><\/a><br \/>\n[\/col]<\/p>\n<p>[col type=&#8221;three-fourth last&#8221;]<\/p>\n<h3>Xamarin Mobile Application Development for iOS<\/h3>\n<p>The book begins by discussing the installation of the IDE (for both PC and Mac) as well as how to set up your PC so it can be used to develop for iOS. From there, successive chapters cover the user interface, views, view controllers, customisation of controls, animation, events and event handling, getting the most from your app using threading, creating your own settings system, the internal database system and LINQ, sending texts, making calls, taking photos, videos, and audio recordings as well as using the mapping system. The book culminates by showing you how to test your app using testflight and finally how to release your app on the Apple Store. It is an all-encompassing book that leaves nothing out.<\/p>\n<p><a href=\"http:\/\/www.amazon.in\/Xamarin-Mobile-Application-Development-iOS\/dp\/935110477X\/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1418369348&amp;sr=1-1&amp;keywords=xamarin\" target=\"_blank\">Download this book from Amazon<\/a><br \/>\n[\/col]<\/p>\n","excerpt":"<p>Xamarin is a San Francisco, California based software company which provides commercial software development tools that leverage the Mono open source project in order to allow you to develop applications for Android, iOS, and OS X using C# and the .NET framework. Find links to Xamarin learning resources and some of the popular Xamarin development [&hellip;]<\/p>\n","date":"2014-12-13 10:58:56","modified":"2015-12-04 21:02:00","categories":[{"id":166,"slug":"books","title":"Books","description":"","parent":0,"post_count":3},{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":855,"slug":"javatechig","name":"JAVATECHIG","first_name":"Javatechig","last_name":"","nickname":"JAVATECHIG","url":"http:\/\/stacktips.com","description":"Provides tutorials, tips, examples and source code on leading Java, Android, Blackberry, PhoneGap and related mobile technologies."},"comments":[],"attachments":[{"id":6973,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-development-Tutorials.png","slug":"xamarin-development-tutorials","title":"Xamarin development Tutorials","description":"Xamarin development Tutorials","caption":"","parent":6968,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-development-Tutorials.png","width":941,"height":200},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-development-Tutorials-620x131.png","width":620,"height":131},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-development-Tutorials.png","width":941,"height":200},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-development-Tutorials.png","width":941,"height":200},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-development-Tutorials.png","width":941,"height":200}}},{"id":7001,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Forms.png","slug":"xamarin-forms","title":"Xamarin Forms","description":"","caption":"","parent":6968,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Forms.png","width":300,"height":366},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Forms.png","width":300,"height":366},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Forms.png","width":300,"height":366},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Forms.png","width":300,"height":366},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Forms.png","width":300,"height":366},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Forms.png","width":300,"height":366},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Forms.png","width":300,"height":366},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Forms.png","width":300,"height":366}}},{"id":7005,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-with-Android.jpg","slug":"xamarin-mobile-application-development-with-android","title":"Xamarin Mobile Application Development with Android","description":"Xamarin Mobile Application Development with Android","caption":"","parent":6968,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-with-Android.jpg","width":260,"height":320},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-with-Android.jpg","width":260,"height":320},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-with-Android.jpg","width":260,"height":320},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-with-Android.jpg","width":260,"height":320},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-with-Android.jpg","width":260,"height":320},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-with-Android.jpg","width":260,"height":320},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-with-Android.jpg","width":260,"height":320},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-with-Android.jpg","width":260,"height":320}}},{"id":7010,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-iOS.jpg","slug":"xamarin-mobile-application-development-for-ios","title":"Xamarin Mobile Application Development for iOS","description":"Xamarin Mobile Application Development for iOS","caption":"","parent":6968,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-iOS.jpg","width":201,"height":258},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-iOS.jpg","width":201,"height":258},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-iOS.jpg","width":201,"height":258},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-iOS.jpg","width":201,"height":258},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-iOS.jpg","width":201,"height":258},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-iOS.jpg","width":201,"height":258},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-iOS.jpg","width":201,"height":258},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-iOS.jpg","width":201,"height":258},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-iOS.jpg","width":201,"height":258}}},{"id":10057,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-Android-second.jpg","slug":"xamarinmobileapplicationdevelopmentforandroidsecond","title":"Xamarin+Mobile+Application+Development+for+Android+second","description":"","caption":"","parent":6968,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-Android-second.jpg","width":421,"height":500},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-Android-second.jpg","width":421,"height":500},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-Android-second.jpg","width":421,"height":500},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-Android-second.jpg","width":421,"height":500},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-Android-second.jpg","width":421,"height":500},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-Android-second.jpg","width":421,"height":500},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Xamarin-Mobile-Application-Development-for-Android-second.jpg","width":421,"height":500}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3315530062"],"snap_isAutoPosted":["1"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"1FHdnP\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/1FHdnP\/comments\";s:5:\"pDate\";s:19:\"2014-12-13 05:29:14\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:105065732126;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/105065732126\";s:5:\"pDate\";s:19:\"2014-12-13 05:29:15\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["1827"],"cf_url":[""],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-12-13 05:29:01\";}}\";"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"3f78e0d6285a1acd19492509422a0039\";s:5:\"pDate\";s:19:\"2014-12-13 05:29:01\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_931386156873639\";s:5:\"pDate\";s:19:\"2014-12-13 05:29:05\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"543638759409864705\";s:5:\"pDate\";s:19:\"2014-12-13 05:29:16\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}},{"id":7054,"type":"post","slug":"asynchronous-image-loading-xamarin-android","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/asynchronous-image-loading-xamarin-android","status":"publish","title":"Asynchronous Image Loading in Xamarin Android","title_plain":"Asynchronous Image Loading in Xamarin Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Asynchronous Image Loading in Xamarin Android' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/asynchronous-image-loading-xamarin-android' data-summary=''><\/div>\n<p>This tutorial explains how to download image asynchronously in Xamarin.Android. In this example, we will downloading image using <code>System.Net.WebClient<\/code> and while downloading, the application will show a loading progress indicator.<\/p>\n<p><strong>System.Net.WebClient<\/strong> class provides ability to send and download data from remote location. Check out class reference from <a href=\"http:\/\/msdn.microsoft.com\/en-us\/library\/system.net.webclient(v=vs.110).aspx\">Official MSDN <\/a> API documentation.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Asynchronous-Image-Loading-in-Xamarin-Android.png\"><img class=\"aligncenter size-full wp-image-6962\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Asynchronous-Image-Loading-in-Xamarin-Android.png\" alt=\"Asynchronous Image Loading in Xamarin Android\" width=\"1007\" height=\"619\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Asynchronous-Image-Loading-in-Xamarin-Android.png 1007w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Asynchronous-Image-Loading-in-Xamarin-Android-300x184.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Asynchronous-Image-Loading-in-Xamarin-Android-620x381.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Asynchronous-Image-Loading-in-Xamarin-Android-940x577.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Asynchronous-Image-Loading-in-Xamarin-Android-800x491.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Asynchronous-Image-Loading-in-Xamarin-Android-1000x614.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Asynchronous-Image-Loading-in-Xamarin-Android-900x553.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Asynchronous-Image-Loading-in-Xamarin-Android-370x227.png 370w\" sizes=\"(max-width: 1007px) 100vw, 1007px\" \/><\/a><\/p>\n<p>Let us create a layout as shown in the image above<\/p>\n<h3>Main.axml<\/h3>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:minWidth=\"25px\"\r\n    android:minHeight=\"25px\"\r\n    android:layout_width=\"fill_parent\"\r\n    android:layout_height=\"fill_parent\"\r\n    android:gravity=\"center_horizontal\"\r\n    android:orientation=\"vertical\"&gt;\r\n\r\n    &lt;Button\r\n        android:text=\"Download Image\"\r\n        android:id=\"@+id\/downloadButton\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\" \/&gt;\r\n    \r\n    &lt;LinearLayout\r\n        android:minWidth=\"25px\"\r\n        android:minHeight=\"25px\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        android:id=\"@+id\/progressLayout\"\r\n        android:gravity=\"center\"&gt;\r\n\r\n        &lt;ProgressBar\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"match_parent\"\r\n            android:id=\"@+id\/progressBar1\" \/&gt;\r\n        &lt;TextView\r\n            android:text=\"Loading..\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"match_parent\"\r\n            android:id=\"@+id\/textView1\"\r\n            android:gravity=\"center\" \/&gt;\r\n    &lt;\/LinearLayout&gt;\r\n\r\n    &lt;ImageView\r\n        android:src=\"@android:drawable\/ic_menu_gallery\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:id=\"@+id\/imageView1\" \/&gt;\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<h3>ImageViewExample.cs<\/h3>\n<pre class=\"prettyprint lang-cs\">using System;\r\n\r\nusing Android.App;\r\nusing Android.Content;\r\nusing Android.Runtime;\r\nusing Android.Views;\r\nusing Android.Widget;\r\nusing Android.OS;\r\nusing Android.Graphics;\r\nusing System.Threading.Tasks;\r\nusing System.IO;\r\nusing System.Net;\r\n\r\nnamespace ImageViewExample\r\n{\r\n\t[Activity (Label = \"ImageViewExample\", MainLauncher = true, Icon = \"@drawable\/icon\")]\r\n\tpublic class MainActivity : Activity\r\n\t{\r\n\r\n\t\tButton downloadButton;\r\n\t\tImageView imageView;\r\n\t\tLinearLayout progressLayout;\r\n\r\n\t\t\/\/Instance of webclient for async processing\r\n\t\tWebClient webClient;\r\n\r\n\t\tprotected override void OnCreate (Bundle bundle){\r\n\t\t\tbase.OnCreate (bundle);\r\n\r\n\t\t\t\/\/ Set our view from the \"main\" layout resource\r\n\t\t\tSetContentView (Resource.Layout.Main);\r\n\r\n\t\t\tthis.imageView = FindViewById&lt;ImageView&gt; (Resource.Id.imageView1);\r\n\t\t\t\/\/Hide progressbar initially\r\n\t\t\tthis.progressLayout = FindViewById&lt;LinearLayout&gt; (Resource.Id.progressLayout);\r\n\t\t\tthis.progressLayout.Visibility = ViewStates.Gone;\r\n\r\n\t\t\t\/\/ Get views from the layout resource axml file\r\n\t\t\tthis.downloadButton = FindViewById&lt;Button&gt; (Resource.Id.downloadButton);\r\n\t\t\tdownloadButton.Click += downloadAsync;\r\n\t\t}\r\n\r\n\t\tasync void downloadAsync(object sender, System.EventArgs ea){\r\n                  \/\/Logic to download image and display on ImageView\r\n\t\t}\r\n\r\n\t\tvoid cancelDownload(object sender, System.EventArgs ea){\r\n                 \/\/ Logic to cancel downlaod\r\n\t\t}\r\n\t}\r\n}\r\n<\/pre>\n<h2>Downloading Image<\/h2>\n<p style=\"text-align: left;\">In our activity, we have a button labelled &#8220;Download Image&#8221; is added with <code>downloadAsync<\/code> delegate. The downloadAsync method will contain the logic of download using WebClient, display progress bar, resize and store image locally. When user hits download button, the download starts and the button turns into &#8220;Cancel Download&#8221;. Below is the code snippet for downloadAsync method.<\/p>\n<pre class=\"prettyprint lang-cs\">async void downloadAsync(object sender, System.EventArgs ea){\r\n\twebClient = new WebClient ();\r\n\tvar url = new Uri (\"http:\/\/doubletreebyhiltonsanjose.com\/wp-content\/uploads\/2014\/08\/Dog-Pictures-1024x698.jpg\");\r\n\tbyte[] imageBytes = null;\r\n\r\n\t\/\/Show loading progress\r\n\tthis.progressLayout.Visibility = ViewStates.Visible;\r\n\r\n\t\/\/Toggle button click listener to cancel the task\r\n\tthis.downloadButton.Text = \"Cancel Download\";\r\n\tthis.downloadButton.Click -= downloadAsync;\r\n\tthis.downloadButton.Click += cancelDownload;\r\n\r\n\ttry{\r\n\t\timageBytes = await webClient.DownloadDataTaskAsync(url);\r\n\t} catch(TaskCanceledException){\r\n\t\tthis.progressLayout.Visibility = ViewStates.Gone;\r\n\t\treturn;\r\n\t} catch(Exception e){\r\n\t\tthis.progressLayout.Visibility = ViewStates.Gone;\r\n\r\n\t\tthis.downloadButton.Click -= cancelDownload;\r\n\t\tthis.downloadButton.Click += downloadAsync;\r\n\t\tthis.downloadButton.Text = \"Download Image\";\r\n\t\treturn;\r\n\t}\r\n\r\n\t\/\/Saving bitmap locally\r\n\tstring documentsPath = System.Environment.GetFolderPath (System.Environment.SpecialFolder.Personal);\t\r\n\tstring localFilename = \"image.png\";\r\n\tstring localPath = System.IO.Path.Combine (documentsPath, localFilename);\r\n\r\n\t\/\/Save the Image using writeAsync\r\n\tFileStream fs = new FileStream (localPath, FileMode.OpenOrCreate);\r\n\tawait fs.WriteAsync (imageBytes, 0, imageBytes.Length);\r\n\tConsole.WriteLine(\"Saving image in local path: \"+localPath);\r\n\r\n\t\/\/Close file connection\r\n\tfs.Close ();\r\n\r\n\tBitmapFactory.Options options = new BitmapFactory.Options ();\r\n\toptions.InJustDecodeBounds = true;\r\n\tawait BitmapFactory.DecodeFileAsync (localPath, options);\r\n\r\n\t\/\/Resizing bitmap image\r\n\toptions.InSampleSize = options.OutWidth &gt; options.OutHeight ? options.OutHeight \/ imageView.Height : options.OutWidth \/ imageView.Width;\r\n\toptions.InJustDecodeBounds = false;\r\n\r\n\tBitmap bitmap = await BitmapFactory.DecodeFileAsync (localPath, options);\r\n\timageView.SetImageBitmap (bitmap);\r\n\r\n\t\/\/Hide progress bar layout\r\n\tthis.progressLayout.Visibility = ViewStates.Gone;\r\n\r\n\t\/\/Toggle button click listener\r\n\tthis.downloadButton.Click -= cancelDownload;\r\n\tthis.downloadButton.Click += downloadAsync;\r\n\tthis.downloadButton.Text = \"Download Image\";\r\n}<\/pre>\n<h2>Cancel Image Download<\/h2>\n<p>The <code>cancelDownload<\/code> delegate is added to button, when the user clicks on download button. This method contains the logic to cancel the download process.<\/p>\n<pre class=\"prettyprint lang-cs\">void cancelDownload(object sender, System.EventArgs ea){\r\n\tif(webClient!=null)\r\n\t\twebClient.CancelAsync ();\r\n\r\n\t\/\/Hide progressbar layout\r\n\tthis.progressLayout.Visibility = ViewStates.Gone;\r\n\r\n\t\/\/Toggle button click listener\r\n\tthis.downloadButton.Click -= cancelDownload;\r\n\tthis.downloadButton.Click += downloadAsync;\r\n\tthis.downloadButton.Text = \"Download Image\";\r\n}\r\n<\/pre>\n","excerpt":"<p>This tutorial explains how to download image asynchronously in Xamarin.Android. In this example, we will downloading image using System.Net.WebClient and while downloading, the application will show a loading progress indicator. System.Net.WebClient class provides ability to send and download data from remote location. Check out class reference from Official MSDN API documentation. Let us create a [&hellip;]<\/p>\n","date":"2014-12-11 19:07:33","modified":"2015-12-01 19:37:34","categories":[{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"snap_isAutoPosted":["1"],"dsq_thread_id":["3313875094"],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"90lnA8\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/90lnA8\/comments\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:55\";s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";}}\";"],"snapTR":["s:397:\"a:1:{i:0;a:9:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapImportedFBComments":["a:0:{}"],"cf_url":[""],"post_views_count":["3805"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:45\";s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["2"],"fsb_social_linkedin":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"8afa33de3c9f3bda21e8519286df9f43\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:45\";s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_934698453209076\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:52\";s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:154:\"a:1:{i:0;a:5:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}},{"id":6787,"type":"post","slug":"useful-android-books-for-developers","url":"http:\/\/stacktips.com\/books\/useful-android-books-for-developers","status":"publish","title":"Useful Android Books for Developers","title_plain":"Useful Android Books for Developers","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Useful Android Books for Developers' data-link='http:\/\/stacktips.com\/books\/useful-android-books-for-developers' data-summary=''><\/div>\n<p>In this post we have outlined some of the popular programming books that helps in developers to learn Android application development.\u00a0If you want to list down your book on this page then please contact at <a href=\"mailto:javatechig@gmail.com\">javatechig@gmail.com<\/a>.<\/p>\n<p>[col type=&#8221;one-fourth&#8221;]<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/The-Busy-Coder\u2019s-Guide-to-Advanced-Android-Development.jpg\"><img class=\"aligncenter size-full wp-image-7360\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/The-Busy-Coder\u2019s-Guide-to-Advanced-Android-Development.jpg\" alt=\"The Busy Coder\u2019s Guide to Advanced Android Development\" width=\"202\" height=\"250\" \/><\/a><\/p>\n<p>[\/col]<\/p>\n<p>[col type=&#8221;three-fourth last&#8221;]<\/p>\n<h3>Beginning Android 4 Application Development<\/h3>\n<p>This book furnishes you with all the required skills for creating attractive user interfaces, working with SMS services, APIs and the Android SDK. Starting right from the basics, you can make your way up to creating that app of your dreams and watch it score you some fame.<\/p>\n<p>Key Features<\/p>\n<ul>\n<li>Provides an in-depth approach to application programming and development on the Android 4 OS.<\/li>\n<li>Android 4 OS is for the first time a single solution for both Smartphones and tablets and mastering it will help you create apps on both.<\/li>\n<\/ul>\n<p><strong>ISBN-10 <\/strong>: 8126535571 | <strong>ISBN-13<\/strong>: 978-8126535576<br \/>\n[\/col]<\/p>\n<hr \/>\n<p>[col type=&#8221;one-fourth&#8221;]<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Professional-Android-4-Application-Development.jpg\"><img class=\"aligncenter size-full wp-image-7362\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Professional-Android-4-Application-Development.jpg\" alt=\"Professional Android 4 Application Development\" width=\"192\" height=\"250\" \/><\/a><\/p>\n<p>[\/col]<\/p>\n<p>[col type=&#8221;three-fourth last&#8221;]<\/p>\n<h3>Professional Android 4 Application Development<\/h3>\n<p>All the practical exercises that have been outlined in the book will bolster your abilities to design a robust yet purposeful application for your target audience. It is common knowledge that developing a world class application is just half the story and you also need to know how to release it, market it . The book takes care of those areas also as it would walk you through ideas on how to publish and market your application as well create platforms that will enhance user&#8217;s experience. Professional Android 4 Application Development (Wrox) was published on 8 June 2012 in paperback.<\/p>\n<p><strong>ISBN-10 <\/strong>: 812653608X | <strong>ISBN-13<\/strong>: 978-8126536085<br \/>\n[\/col]<\/p>\n<hr \/>\n<p>[col type=&#8221;one-fourth&#8221;]<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Android-Application-Development-For-Dummies.jpg\"><img class=\"aligncenter size-full wp-image-7361\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Android-Application-Development-For-Dummies.jpg\" alt=\"Android Application Development For Dummies\" width=\"189\" height=\"250\" \/><\/a><\/p>\n<p>[\/col]<\/p>\n<p>[col type=&#8221;three-fourth last&#8221;]<\/p>\n<h3 id=\"title\" class=\"a-size-large a-spacing-none\"><span id=\"productTitle\" class=\"a-size-large\">Android Application Development For Dummies<\/span><\/h3>\n<p>This book includes new programming techniques that take advantage of Android 4, including scrollable widgets, new UI tools, the improved application programming interface for calendar and contact information and improved social media integration. It also explains the procedure to download the SDK, to get Eclipse up and running, code Android applications and submit the finished products to the Android Market.<\/p>\n<p><strong>ISBN-10 <\/strong>: 8126538775 | <strong>ISBN-13<\/strong>: 978-8126538775<br \/>\n[\/col]<\/p>\n<hr \/>\n<p>[col type=&#8221;one-fourth&#8221;]<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Beginning-Android-4-Application-Development.jpg\"><img class=\"aligncenter size-full wp-image-7363\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Beginning-Android-4-Application-Development.jpg\" alt=\"Beginning Android 4 Application Development\" width=\"192\" height=\"250\" \/><\/a><\/p>\n<p>[\/col]<\/p>\n<p>[col type=&#8221;three-fourth last&#8221;]<\/p>\n<h3>The Busy Coder&#8217;s Guide to Advanced Android Development<\/h3>\n<p>There are many Android programming guides that give you the basics. This book goes beyond simple apps into many areas of Android development that you simply will not find in competing books.<\/p>\n<p>This book is one in CommonsWare&#8217;s growing series of Android related titles, including The Busy Coder&#8217;s Guide to Android Development, Android Programming Tutorials, and the upcoming Tuning Android Applications.<\/p>\n<p><strong>ISBN-10 <\/strong>: 098167805X | <strong>ISBN-13<\/strong>: 978-0981678054<br \/>\n[\/col]<\/p>\n","excerpt":"<p>In this post we have outlined some of the popular programming books that helps in developers to learn Android application development.\u00a0If you want to list down your book on this page then please contact at javatechig@gmail.com. [col type=&#8221;one-fourth&#8221;] [\/col] [col type=&#8221;three-fourth last&#8221;] Beginning Android 4 Application Development This book furnishes you with all the required [&hellip;]<\/p>\n","date":"2014-12-10 16:04:36","modified":"2015-06-01 20:43:05","categories":[{"id":166,"slug":"books","title":"Books","description":"","parent":0,"post_count":3}],"tags":[{"id":269,"slug":"books","title":"Books","description":"","post_count":2}],"author":{"id":855,"slug":"javatechig","name":"JAVATECHIG","first_name":"Javatechig","last_name":"","nickname":"JAVATECHIG","url":"http:\/\/stacktips.com","description":"Provides tutorials, tips, examples and source code on leading Java, Android, Blackberry, PhoneGap and related mobile technologies."},"comments":[],"attachments":[{"id":7360,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/The-Busy-Coder\u2019s-Guide-to-Advanced-Android-Development.jpg","slug":"the-busy-coders-guide-to-advanced-android-development","title":"The Busy Coder\u2019s Guide to Advanced Android Development","description":"","caption":"","parent":6787,"mime_type":"image\/jpeg","images":[]},{"id":7361,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Android-Application-Development-For-Dummies.jpg","slug":"android-application-development-for-dummies","title":"Android Application Development For Dummies","description":"","caption":"","parent":6787,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Android-Application-Development-For-Dummies.jpg","width":189,"height":250},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Android-Application-Development-For-Dummies.jpg","width":189,"height":250},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Android-Application-Development-For-Dummies.jpg","width":189,"height":250},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Android-Application-Development-For-Dummies.jpg","width":189,"height":250},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Android-Application-Development-For-Dummies.jpg","width":189,"height":250},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Android-Application-Development-For-Dummies.jpg","width":189,"height":250},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Android-Application-Development-For-Dummies.jpg","width":189,"height":250},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Android-Application-Development-For-Dummies.jpg","width":189,"height":250},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Android-Application-Development-For-Dummies.jpg","width":189,"height":250}}},{"id":7362,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Professional-Android-4-Application-Development.jpg","slug":"professional-android-4-application-development","title":"Professional Android 4 Application Development","description":"","caption":"","parent":6787,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Professional-Android-4-Application-Development.jpg","width":192,"height":250},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Professional-Android-4-Application-Development.jpg","width":192,"height":250},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Professional-Android-4-Application-Development.jpg","width":192,"height":250},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Professional-Android-4-Application-Development.jpg","width":192,"height":250},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Professional-Android-4-Application-Development.jpg","width":192,"height":250},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Professional-Android-4-Application-Development.jpg","width":192,"height":250},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Professional-Android-4-Application-Development.jpg","width":192,"height":250},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Professional-Android-4-Application-Development.jpg","width":192,"height":250},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Professional-Android-4-Application-Development.jpg","width":192,"height":250}}},{"id":7363,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Beginning-Android-4-Application-Development.jpg","slug":"beginning-android-4-application-development","title":"Beginning Android 4 Application Development","description":"Beginning Android 4 Application Development","caption":"","parent":6787,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Beginning-Android-4-Application-Development.jpg","width":192,"height":250},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Beginning-Android-4-Application-Development.jpg","width":192,"height":250},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Beginning-Android-4-Application-Development.jpg","width":192,"height":250},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Beginning-Android-4-Application-Development.jpg","width":192,"height":250},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Beginning-Android-4-Application-Development.jpg","width":192,"height":250},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Beginning-Android-4-Application-Development.jpg","width":192,"height":250},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Beginning-Android-4-Application-Development.jpg","width":192,"height":250},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Beginning-Android-4-Application-Development.jpg","width":192,"height":250},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Beginning-Android-4-Application-Development.jpg","width":192,"height":250}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["4876541419"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"21xw5k\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/21xw5k\/comments\";s:5:\"pDate\";s:19:\"2014-12-10 10:35:27\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:104834469646;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/104834469646\";s:5:\"pDate\";s:19:\"2014-12-10 10:35:27\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"cf_url":[""],"post_views_count":["1476"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-12-10 10:35:17\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"71d9678a416f7b84735658e6b53f2097\";s:5:\"pDate\";s:19:\"2014-12-10 10:35:18\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_929824613696460\";s:5:\"pDate\";s:19:\"2014-12-10 10:35:22\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"542628633940992001\";s:5:\"pDate\";s:19:\"2014-12-10 10:35:23\";}}\";"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":6898,"type":"post","slug":"android-l-whats-store-mobile-app-designers","url":"http:\/\/stacktips.com\/design\/android-l-whats-store-mobile-app-designers","status":"publish","title":"Android L: What&#8217;s in Store for Mobile App Designers","title_plain":"Android L: What&#8217;s in Store for Mobile App Designers","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android L: What&#039;s in Store for Mobile App Designers' data-link='http:\/\/stacktips.com\/design\/android-l-whats-store-mobile-app-designers' data-summary=''><\/div>\n<p>New features and functionalities have always kept Google&#8217;s Android under the vigil eye of smartphone app designers and developers. Whether it&#8217;s related to designing an app&#8217;s layout or an entire user interface; Android versions have always been released with innovative trends that have been well embraced by the Android app development community. Adding up to the count of successful Android versions is Android L(Lollipop). Just like the previous versions of Android, this one also comprises of new changes in terms of design, features and functions. Today, through this blog, I&#8217;ll be making you abreast with the specific design moderations that have been introduced along with this brand new Android version.<\/p>\n<h3>1. Material Design awaits Android app designers<\/h3>\n<p>Mobile app seekers can now gather an excellent opportunity of hiring top Android app developers who&#8217;re well abreast about using Material Design interface for building apps that function flawlessly, irrespective of the device and mobile platform. Android L(Lollipop) has employed a Material Design interface which allows you to design app elements that can be made smaller or bigger as per the size of the targeted screens. And that&#8217;s not all. With Material Design, you can also ensure the placement of more white space elements and 3D effects in your Android powered applications. Bidding adieu to the traditional Android aesthetics, Material Design has emerged as a spontaneous means of building \u00a0robust and scalable apps.<\/p>\n<h3>2. Android apps will now be more scalable due to an Adaptive design<\/h3>\n<p>When using Android L, you(a mobile app designer) would be required to follow certain layout guidelines for designing the apps. \u00a0You&#8217;ll need to adhere to adaptive design guidelines wherein you&#8217;ll be required to design apps that can be easily scaled across a range of screen sizes so as to maintain consistency in user experience. Since app interactions need to be consistent for all Android devices, you&#8217;ll be supposed to follow standards set for design and placement of colors, icons, spacing etc.<\/p>\n<h3>3. Google&#8217;s focus on UI guidelines that\u00a0works in favor of designers<\/h3>\n<p>A large majority of Android app designers has been ignoring the Google&#8217;s\u00a0guidelines when it comes to designing the user interface for\u00a0an application. Now, with the emergence of Android L operating system, the app builders would be expected to abide by all the prescribed Google&#8217;s guidelines for bringing unified mobile experience\u00a0without fail. Designers are now equipped\u00a0with a well-defined documentation that would enable them to learn the process of interacting with the brand new paradigm without getting a headache. Material design guidelines can be found in <a href=\"http:\/\/www.google.com\/design\/\" target=\"_blank\">Google&#8217;s official website for designers<\/a>.<\/p>\n<h3>4. App Indexing makes way for rendering a streamlined user experience<\/h3>\n<p>The App Indexing feature installed within Android L will enable the users to search through Google Chrome and fetch results even from the apps that have been downloaded into the Android smartphone. To put in simple words, this app indexing feature will enable the interlinking of web apps and native apps, thereby adding excellence into the user experience.<\/p>\n<h3>5. Intuitive Notifications will serve as a &#8216;sweet&#8217; surprise to users<\/h3>\n<p>Unlike the previous Android OS versions which included dull, boring notifications; Android L will have smarter and more interactive notifications. The best part is that the notifications would no longer be locked to the app&#8217;s notifications bar. Instead they would be a showcased as a key component of the device&#8217;s lock screen. Moreover, the Visibility Controls will enable the app user to manage the type of notifications that are displayed on the lock screen. This would assure complete privacy and security of the information that&#8217;s being displayed as notifications. As an added advantage, the users would also be able to perform common tasks via the notification itself.<\/p>\n<h3>6. 64-bit support that helps\u00a0building more intricate apps<\/h3>\n<p>With the launch of Android Lollipop, Android app designers will be capable of designing apps that can run on Android devices which comprise of over 4GB of RAM. These apps will be quite similar to the heavy programs that usually run on desktops or\u00a0laptops.<\/p>\n<h3>Wrapping up<\/h3>\n<p>Witnessing a 63% global market share of smartphone and tablet shipments, Android has undoubtedly become one of the most used devices among hand-held gadget fans. As an Android app designer, you can leverage Android L for creating apps that would not only offer you complete work satisfaction but will even work as a magic wand for meeting your client&#8217;s customized requirements.<\/p>\n","excerpt":"<p>New features and functionalities have always kept Google&#8217;s Android under the vigil eye of smartphone app designers and developers. Whether it&#8217;s related to designing an app&#8217;s layout or an entire user interface; Android versions have always been released with innovative trends that have been well embraced by the Android app development community. Adding up to [&hellip;]<\/p>\n","date":"2014-12-10 12:16:47","modified":"2016-05-29 19:22:53","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":149,"slug":"design","title":"Design","description":"","parent":0,"post_count":6},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[{"id":164,"slug":"android-l","title":"Android L","description":"","post_count":2},{"id":165,"slug":"material-design","title":"Material Design","description":"","post_count":3}],"author":{"id":48,"slug":"luciekruger","name":"Lucie Kruger","first_name":"Lucie","last_name":"Kruger","nickname":"Lucie Kruger","url":"http:\/\/www.mobiers.com\/","description":"Lucie Kruger is an eminent Senior Content Editor and IT consultant for <a href=\"http:\/\/www.mobiers.com\/\">Mobiers Ltd.<\/a>"},"comments":[],"attachments":[{"id":8727,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design.jpeg","slug":"whats-new-in-android-l-material-design","title":"Whats new in Android L material design","description":"Whats new in Android L material design","caption":"","parent":6898,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design.jpeg","width":800,"height":465},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design-620x360.jpeg","width":620,"height":360},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design.jpeg","width":800,"height":465},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design.jpeg","width":800,"height":465},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design.jpeg","width":800,"height":465},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design.jpeg","width":800,"height":465},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design.jpeg","width":800,"height":465}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:6:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:10:\"show_image\";s:4:\"true\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snapDA":["s:104:\"a:1:{i:0;a:3:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapLI":["s:265:\"a:1:{i:0;a:8:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapSU":["s:127:\"a:1:{i:0;a:4:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";}}\";"],"snapTR":["s:370:\"a:1:{i:0;a:8:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"dsq_thread_id":["3308561023"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"cf_url":[""],"post_views_count":["1549","1549"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapDL":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_929756743703247\";s:5:\"pDate\";s:19:\"2014-12-10 06:50:34\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"542572244187090944\";s:5:\"pDate\";s:19:\"2014-12-10 06:51:19\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design.jpeg","width":800,"height":465},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design-620x360.jpeg","width":620,"height":360},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design.jpeg","width":800,"height":465},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design.jpeg","width":800,"height":465},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design.jpeg","width":800,"height":465},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design.jpeg","width":800,"height":465},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/12\/Whats-new-in-Android-L-material-design.jpeg","width":800,"height":465}}},{"id":6890,"type":"post","slug":"top-rated-eclipse-plugins-java-developers","url":"http:\/\/stacktips.com\/blog\/top-rated-eclipse-plugins-java-developers","status":"publish","title":"Top Rated Eclipse Plugins for Java Developers","title_plain":"Top Rated Eclipse Plugins for Java Developers","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Top Rated Eclipse Plugins for Java Developers' data-link='http:\/\/stacktips.com\/blog\/top-rated-eclipse-plugins-java-developers' data-summary=''><\/div>\n<p>As an integrated development environment, Eclipse has always proved to be a robust and viable tool for Java developers when it comes to improving their level of productivity and managing workflow. Its open-source nature and high-quality functionalities help webmasters stay productive and better equipped to build high-end projects. The software also offers a great deal of plugins that play an important role in the success of the Java based projects. They allow Eclipse to remain competitive and stand out amongst so many IDE\u2019s and be the most popular in its own \u00a0way.<\/p>\n<p>In this post, we are going to show you a collection of some top of the line Eclipse plugins that help developers stay more agile and efficient. So, without much ado, let&#8217;s discuss about them in detail.<\/p>\n<h1>Code Quality Plugins<\/h1>\n<h3><a href=\"http:\/\/findbugs.sourceforge.net\/\">1. Find Bugs<\/a><\/h3>\n<p>Find Bugs is a highly reliable plugin that is used with eclipse IDE to help you locate bugs in Java based projects. The software is available for free under Lesser GNU Public License and also available on Maven, Netbeans, and IntelliJ.<\/p>\n<h3><a href=\"http:\/\/eclipse-cs.sourceforge.net\/#!\/\" target=\"_blank\">2. CheckStyle<\/a><\/h3>\n<p>CheckStyle is a powerful open-source development tool that allows you to keep a close eye on whether your Java code adheres to the coding standards. The tool analyzes the source code of your Java document and highlights those items which violate the pre-defined set of coding standards.<\/p>\n<h3><a href=\"http:\/\/www.eclemma.org\/\" target=\"_blank\">3. EClemma<\/a><\/h3>\n<p>EClemma is a free Java code coverage tool great for providing fast development and test cycles. The tool offers an excellent analyzes of the coverage by instantly summarizing and highlighting the results in the Java source code editors.<\/p>\n<h1>Text Editor Plugins<\/h1>\n<h3><a href=\"http:\/\/andrei.gmxhome.de\/anyedit\/\" target=\"_blank\">4. Any Edit Tools<\/a><\/h3>\n<p>Any Edit Tools is an extremely helpful plugin that allow you add a new text-based eclipse editors to output consoles. It also provides a seamless way to import and export data.<\/p>\n<h3><a href=\"http:\/\/sourceforge.net\/projects\/eclipse-rbe\/\" target=\"_blank\">5. Eclipse-rbe<\/a><\/h3>\n<p>Eclipse Resource Bundle Editor is an ideal plugin used to perform editing on the Java resource bundles. Some of its highlighting features include: sorted keys, display of warning icons in the case of missing values and keys, hierarchical views of keys and more.<\/p>\n<h1>Dependency Management Plugins<\/h1>\n<h3><a href=\"http:\/\/ant.apache.org\/ivy\/ivyde\/\" target=\"_blank\">6. Apache IvyDE<\/a><\/h3>\n<p>Apache IvyDE is an eclipse plugin that helps you effectively manage dependencies declared in an ivy.xml file in your Java project. It comes packed with a great deal of features such as managed classpath container, Ivy XML files editor, Ivy console, reverse dependency explorer and more.<\/p>\n<h3><a href=\"http:\/\/eclipse.org\/m2e\/\" target=\"_blank\">7. M2eclipse (Maven Plugin)<\/a><\/h3>\n<p>M2eclipse comes complete with a solid integration with Apache Maven for developing dynamic Java powered projects with ease. It boasts awesome functionalities such as dependency management as well as their automatic downloading from the remote maven repositories, wizards that help you create new Maven projects and more.<\/p>\n<h1>Version Control Integration Plugins<\/h1>\n<h3><a href=\"http:\/\/subclipse.tigris.org\/\" target=\"_blank\">8. Subclipse<\/a><\/h3>\n<p>Subclipse is a top rated SVN plugin that provides a firm support for the smooth functioning of Eclipse IDE and it is licensed under EPL 1.0. Its user-friendly interface is what that is mostly liked by its users and rich functionalities that add an edge to your Java powered projects.<\/p>\n<h3><a href=\"http:\/\/www.eclipse.org\/egit\/\" target=\"_blank\">9. EGit<\/a><\/h3>\n<p>EGit plugin is extremely helpful in synchronizing views as well as reading for .git\/exclude files. It also offers sophisticated commands for pulling and pushing.<\/p>\n<h3><a href=\"http:\/\/javaforge.com\/project\/HGE\" target=\"_blank\">10. MercurialEclipse<\/a><\/h3>\n<p>MercurialEclipse is a solid plugin with an active version control system that helps you manage and work on the highly popular Mercurial, distributed source control management tool within eclipse IDE.<\/p>\n<h1>Framework Development<\/h1>\n<h3><a href=\"http:\/\/spring.io\/tools\/eclipse\" target=\"_blank\">11. Spring Tool Suite<\/a><\/h3>\n<p>Spring Tool Suite basically provides a range of best-fitted tools that help developers in creating robust frameworks for the leading Java projects.<\/p>\n<h3><a href=\"http:\/\/www.easyeclipse.org\/site\/plugins\/springide.html%20\u00a0\" target=\"_blank\">12. Spring IDE<\/a><\/h3>\n<p>Spring IDE is an easy and effective way of developing and managing spring framework based applications. It features a graphical user interface that lets you configure files with the help of Spring framework and a range of features to write compelling Spring applications.<\/p>\n<h3><a href=\"http:\/\/hibernator.sourceforge.net\/\" target=\"_blank\">13. Hibernator<\/a><\/h3>\n<p>Hibernator is all what you need to create\/update a database schema, working with Hibernate queries and develop user-friendly Hibernate mapping documents.<\/p>\n<h3>14. Jboss Tools<\/h3>\n<p>Jboss Tools is a set of plugins that is used with eclipse IDE. Tailored to improve productivity, its top range of tools provides superior support for your entire project. It also comes packed with a broad set of tooling capabilities and is compatible to support multiple programming models and frameworks.<\/p>\n<h1>Continuous Integration Related Plugin<\/h1>\n<h3><a href=\"http:\/\/marketplace.eclipse.org\/content\/hudson-status\" target=\"_blank\">15. Hudson Status<\/a><\/h3>\n<p>Hudson Status is an easy to follow plugin that displays the status of an application in the form of an icon on Hudson build server. The icon changes itself as per the growth made in the project development process and unsuccessful projects are listed in the tooltip.<\/p>\n<h1>Conclusion<\/h1>\n<p>So, there we have it all. The above mentioned list of top rated eclipse plugins will help you quickly get started developing Java applications by providing a development environment which is simple and friendly.<\/p>\n","excerpt":"<p>As an integrated development environment, Eclipse has always proved to be a robust and viable tool for Java developers when it comes to improving their level of productivity and managing workflow. Its open-source nature and high-quality functionalities help webmasters stay productive and better equipped to build high-end projects. The software also offers a great deal [&hellip;]<\/p>\n","date":"2014-12-09 15:25:19","modified":"2016-05-29 19:22:55","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[{"id":267,"slug":"eclipse","title":"Eclipse","description":"","post_count":1}],"author":{"id":49,"slug":"celin-smith","name":"Celin Smith","first_name":"Celin","last_name":"Smith","nickname":"Celin Smith","url":"http:\/\/www.xicom.biz","description":"Celin Smith is renowned web developer and blogger at <a href=\"http:\/\/www.xicom.biz\">Xicom Technologies Ltd.<\/a> who loves to write regarding mobile and web applications."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3305471488"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDA":["s:104:\"a:1:{i:0;a:3:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapDL":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_929757587036496\";s:5:\"pDate\";s:19:\"2014-12-10 06:55:32\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapLI":["s:265:\"a:1:{i:0;a:8:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapSU":["s:127:\"a:1:{i:0;a:4:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";}}\";"],"snapTR":["s:370:\"a:1:{i:0;a:8:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"542573323272474624\";s:5:\"pDate\";s:19:\"2014-12-10 06:55:36\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["2094"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-620x344.jpg","width":620,"height":344},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/03\/eclipse_bckgr_logo_fc_lg-e1415185740364.jpg","width":248,"height":150}}},{"id":6855,"type":"post","slug":"a-step-by-step-guide-on-ios8-beta-testing-using-testflight","url":"http:\/\/stacktips.com\/news\/a-step-by-step-guide-on-ios8-beta-testing-using-testflight","status":"publish","title":"A Step-By-Step Guide On iOS8 Beta Testing Using TestFlight","title_plain":"A Step-By-Step Guide On iOS8 Beta Testing Using TestFlight","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='A Step-By-Step Guide On iOS8 Beta Testing Using TestFlight' data-link='http:\/\/stacktips.com\/news\/a-step-by-step-guide-on-ios8-beta-testing-using-testflight' data-summary=''><\/div>\n<p>Building a fine quality mobile app is something that involves a great deal of dedication and hard work. In other words, prior to submitting your iOS app to the App Store, it is pivotal to beta test it for detection of any kind of bugs.<\/p>\n<p>TestFlight is one of the best tools that are used for distributing iOS applications for beta testing. Having being acquired by Apple, TestFlight&#8217;s parent company Burstly has been quite confident about the success and acceptance of this Apple beta distribution platform. Getting started with TestFlight is as simple as taking a walk in the park. Through this blog, I&#8217;ll be offering you a definite guideline on iOS8 beta testing performed with the help of TestFlight.<\/p>\n<h1><b>iOS app beta testing- What is it exactly?<\/b><\/h1>\n<p>Beta testing is basically a prominent step in the software development life cycle. Even after testing the app using the built-in simulator and real device, there are chance of missing the opportunity of uncovering some of the basic bugs. This is the point why, the significance of beta testing is realized. Generally open for a small group of real people, beta testing is an effective method of receiving feedback for a particular app that&#8217;s to be released soon. You can allow the beta testers to discover a wide range of bugs that might have entered into the app during the design and development stages.<\/p>\n<h2><b>TestFlight- An innovative tool for beta testing of iOS apps<\/b><\/h2>\n<p>TestFlight helps you in streamlining the process of beta testing of your application. TestFlight is a tool that makes it quite easy for a developer\/app owner to invite users for testing the pre-release version of iOS8 applications. With TestFlight, you can invite up to 1,000 beta testers via their email addresses.<\/p>\n<p>Adjacent to the official release of iOS8 and Xcode 6, TestFlight can be easily integrated into iTunes Connect.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/testflight-24-19.png\"><img class=\"aligncenter size-medium wp-image-6864\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/testflight-24-19-620x403.png\" alt=\"testflight-24-19\" width=\"620\" height=\"403\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/testflight-24-19-620x403.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/testflight-24-19-300x195.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/testflight-24-19-370x240.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/testflight-24-19.png 800w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<h2><b>Testing with external testers- Possible with TestFlight<\/b><\/h2>\n<p>TestFlight allows you to arrange app testing with external testers and internal app users. Here, internal app users can be engineers from development team and other stakeholders. \u00a0With new TestFlight, you can invite up to, 25 internal users and 1,000 external testers, who can download and test the app and can report bugs.<\/p>\n<p>The only point that needs to be noted with the process of inviting external testers is that your app must be approved by Apple beforehand. This restriction isn&#8217;t there for the internal users as they can begin beta testing your app once its been uploaded to iTunes Connect.<\/p>\n<h2><b>And now, the steps involved in beta testing iOS apps using TestFlight<\/b><\/h2>\n<p>In this post, we will drive through the process that involve the steps to distribute an app for beta testers using TestFlight.<\/p>\n<p>If you are an Android developer looking for similar beta testing platform read through <a title=\"TestFairy \u2013 Android app beta testing and deployment platform\" href=\"http:\/\/stacktips.com\/android\/testfairy-android-app-beta-testing-platform\">TestFairy &#8211; Android app beta testing and deployment platform<\/a>.<\/p>\n<h3><b>Step 1- Create an app record on iTunes Connect<\/b><\/h3>\n<p>In order to get started with beta testing, you need to create an app record on iTunes Connect. Simply go to the <a href=\"https:\/\/itunesconnect.apple.com\/WebObjects\/iTunesConnect.woa\">iTunes Connect<\/a> official website and create an account.<\/p>\n<p>Once your account is setup, sign in and select &#8216;My Apps&#8217; and the + icon for creating a new Ios app. Here, you&#8217;ll also be asked to fill in values for fields including: App name, primary language, Bundle ID, version and SKU (Stock Keeping Unit).<\/p>\n<h3><b>Step 2- Update the Build String<\/b><\/h3>\n<p>Now let us go back to Xcode IDE and make sure the version number matches with the one you entered in iTunes Connect.<\/p>\n<p>Go to project navigator and select the project and target for displaying the project editor. After this, under the General Tab, ensure to review the version fields available under the identity section and set the Build field to 1.<\/p>\n<h3><b>Step 3- Archive and upload the application<\/b><\/h3>\n<p>Prior to archiving the app, make it a point to include the app icon and launch the image in the Xcode project. Here, all the app icons will be managed by the asset catalog. In order to add an icon to the set, select the app icon in the Finder and drag the same to the appropriate image in the set viewer.<\/p>\n<p>For archiving the app, simply review the Archive scheme settings and make sure the build configuration has been set to Release. Once you&#8217;re done with the app archiving process, the archive will appear within the Organizer and the app will be ready for upload to iTunes Connect.<\/p>\n<h3><b>Step 4- Manage the app&#8217;s beta testing in iTunes Connect<\/b><\/h3>\n<p>Once the build is uploaded to iTunes Connect, select My Apps and then your app. You can easily spot your uploaded app archive under the PreRelease tab. Next, opt for enabling beta testing by flipping the TestFlight Beta Testing to &#8216;On&#8217;.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/12TestingOff_2x.png\"><img class=\"aligncenter size-medium wp-image-6861\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/12TestingOff_2x.png\" alt=\"12TestingOff_2x\" width=\"1\" height=\"1\" \/><\/a><\/p>\n<p>The status of beta testing of app will be changed from Inactive to Invite Testers. After this, click on &#8216;Invite Testers&#8217; and &#8216;Users and Roles&#8217; for inviting the internal testers to check out the application. You can assign specific designations to users including: admin, legal etc. The specific users will receive an email regarding the invitation for performing the app&#8217;s TestFlight beta testing.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/6AddExternalTesters_2x.png\"><img class=\"aligncenter size-medium wp-image-6858\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/6AddExternalTesters_2x.png\" alt=\"6AddExternalTesters_2x\" width=\"1\" height=\"1\" \/><\/a><\/p>\n<h1><b>Conclusion<\/b><\/h1>\n<p>TestFlight has been one of the most powerful tools for beta testing of iOS applications. Once you&#8217;ve built an app after hiring a <a href=\"http:\/\/www.xicom.biz\/offerings\/iphone-development\/\">Custom iPhone App Development Company<\/a>, its quite crucial for you to beta test it before releasing it for the general public. \u00a0With testing being a vital part of app development process, you can&#8217;t afford to skip it in any way.<\/p>\n<p>Hope the steps mentioned will helped you gather a clear insight into beta testing your apps using TestFlight before public release.<\/p>\n","excerpt":"<p>Building a fine quality mobile app is something that involves a great deal of dedication and hard work. In other words, prior to submitting your iOS app to the App Store, it is pivotal to beta test it for detection of any kind of bugs. TestFlight is one of the best tools that are used [&hellip;]<\/p>\n","date":"2014-11-25 15:54:43","modified":"2016-05-29 19:15:44","categories":[{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[{"id":177,"slug":"beta-testing","title":"Beta Testing","description":"","post_count":4},{"id":175,"slug":"testflight","title":"TestFlight","description":"","post_count":2},{"id":241,"slug":"testing","title":"Testing","description":"","post_count":4}],"author":{"id":47,"slug":"emily","name":"Emily Heming","first_name":"Emily","last_name":"Heming","nickname":"Emily","url":"","description":"She is a professional blogger and working for one of the leading Mobile Development Company."},"comments":[],"attachments":[{"id":6864,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/testflight-24-19.png","slug":"testflight-24-19","title":"testflight-24-19","description":"","caption":"","parent":6855,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/testflight-24-19.png","width":800,"height":521},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/testflight-24-19-620x403.png","width":620,"height":403},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/testflight-24-19.png","width":800,"height":521},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/testflight-24-19.png","width":800,"height":521},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/testflight-24-19.png","width":800,"height":521},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/testflight-24-19.png","width":800,"height":521}}},{"id":6858,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/6AddExternalTesters_2x.png","slug":"6addexternaltesters_2x","title":"6AddExternalTesters_2x","description":"","caption":"","parent":6855,"mime_type":"image\/png","images":[]},{"id":6861,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/12TestingOff_2x.png","slug":"12testingoff_2x","title":"12TestingOff_2x","description":"","caption":"","parent":6855,"mime_type":"image\/png","images":[]},{"id":6857,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","slug":"ios8-beta-testing-using-testflight","title":"iOS8 Beta Testing Using TestFlight","description":"iOS8 Beta Testing Using TestFlight","caption":"","parent":6855,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","width":480,"height":323},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","width":480,"height":323},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","width":480,"height":323},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","width":480,"height":323},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","width":480,"height":323},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","width":480,"height":323},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","width":480,"height":323}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDA":["s:104:\"a:1:{i:0;a:3:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapSU":["s:127:\"a:1:{i:0;a:4:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";}}\";"],"snapTR":["s:370:\"a:1:{i:0;a:8:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"dsq_thread_id":["3262135680"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["3415"],"fsb_social_facebook":["4"],"fsb_social_twitter":["5"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"],"cf_url":[""],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:237:\"a:1:{i:0;a:8:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:384:\"a:1:{i:0;a:13:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_922193321126256\";s:5:\"pDate\";s:19:\"2014-11-25 17:55:38\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:111:\"a:1:{i:0;a:4:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:290:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"537303672162484224\";s:5:\"pDate\";s:19:\"2014-11-25 17:55:53\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","width":480,"height":323},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","width":480,"height":323},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","width":480,"height":323},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","width":480,"height":323},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","width":480,"height":323},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","width":480,"height":323},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/iOS8-Beta-Testing-Using-TestFlight.jpg","width":480,"height":323}}},{"id":6839,"type":"post","slug":"5-golden-rules-java-telephonic-interviews","url":"http:\/\/stacktips.com\/blog\/5-golden-rules-java-telephonic-interviews","status":"publish","title":"5 Golden Rules for Java Telephonic Interviews","title_plain":"5 Golden Rules for Java Telephonic Interviews","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='5 Golden Rules for Java Telephonic Interviews' data-link='http:\/\/stacktips.com\/blog\/5-golden-rules-java-telephonic-interviews' data-summary=''><\/div>\n<p>The phone interview is an integral part of any company\u2019s recruitment process.\u00a0 With some roles getting upwards of 50 CVs per eventual hire it\u2019s important that you can impress on the phone interview.\u00a0 First impressions count, and this is your opportunity to make it count.<\/p>\n<p>With this in mind, here are 5 top tips for excelling in your Java Interview<\/p>\n<h1>1. Practice core Java questions<\/h1>\n<p>Most phone interviews will rely on basic core java questions. They\u2019re standardized so candidates can be compared, they require limited thinking from the interviewer and they work great over the telephone.\u00a0 You definitely want to practice question based on<\/p>\n<ul>\n<li><a href=\"http:\/\/stacktips.com\/java\/core-java\/java-thread-interview-questions\">Threading<\/a> (Click for a great list of questions): In particular have a good answer around deadlocks.<\/li>\n<li>Object Oriented Programming: People love asking questions about inheritance and abstraction. Prepare a concise answer for around cohesion and coupling. Understand Polymorphism and Encapsulation.<\/li>\n<li><a href=\"http:\/\/www.corejavainterviewquestions.com\/java-collections-data-structures-interview-questions\/\">Collections<\/a> (Click for a full guide to java collections interview questions). Understanding data structures is so important as a developer so any good interview will want to know you know. What are the different types? Why would I use one of the other?<\/li>\n<\/ul>\n<p>Become the master of these things and you\u2019re well on your way.<\/p>\n<h1>2. Have your CV in front of you<\/h1>\n<p>The interviewer will likely go through your CV and ask questions about interesting technologies that you have used.\u00a0 A friend recently remarked to me how much they loved asking about technologies they didn&#8217;t know about to see if the candidate could explain it to them.\u00a0 A lot of CV&#8217;s nowadays simply list every technology a person has ever touched.\u00a0 Avoid this; if you&#8217;ve got it written down then expect to be called out on it.\u00a0 Candidates who say \u201cI only tried it for a couple of days\u201d after listing it on their CV will lose credibility.<\/p>\n<p>Make sure you&#8217;ve prepared a good answer for questions about Spring and Hibernate. These are two of the most popular technologies in Java but they are often poorly understood.<\/p>\n<h1>3. Find somewhere private<\/h1>\n<p>Have a location ready in advance of being called. Whether it\u2019s a room at work or somewhere at home, don\u2019t be rushing around to find somewhere when the interviewer calls. You want to be prepared and relaxed so you can do your best- get yourself in the zone!\u00a0\u00a0 It also gives a terrible first impression if you first words to your potential new boss are \u201ccan you just give me a minute whilst I find a room?\u201d.\u00a0 You instantly paint yourself as badly organised.\u00a0 Not a great start.<\/p>\n<h1>4.\u00a0\u00a0Pre-prepare list of questions<\/h1>\n<p>At the end of the interview there is always a slot to ask questions about the new role and company.\u00a0 This is still part of the interview and you will be judged based on what questions you&#8217;ve asked. This is a great opportunity to impress; by asking about the development style you can enthuse about the way your new team works.\u00a0 Perhaps they do Agile or TDD. If this is the case then use the opportunity to effuse about your experience in those areas, or if you don\u2019t have the experience then you can talk about how keen you are to learn these new things.\u00a0 Showing you\u2019re eager and interested in the role is a big plus point and can absolutely swing an average interview into your favor.\u00a0\u00a0 That doesn&#8217;t apply for just the end of the interview.\u00a0 Sound enthusiastic throughout the interview, make it clear how excited you are about the role.\u00a0 Many candidates don\u2019t do this and it\u2019s an easy way to stand out from the crowd.\u00a0 It is likely your interviewer is doing several interviews in a row, so if you can do just one thing to stand out you will greatly increase your chances of progressing to the next round.<\/p>\n<h1>5. \u00a0Say \u201cI don\u2019t know\u201d<\/h1>\n<p>This might sound crazy but it really isn&#8217;t.\u00a0 When an interviewer asks you a question then it is likely they know the answer. If you don\u2019t, and you try to guess your way through it then it will be incredibly obvious.\u00a0 It\u2019s absolutely fine to say that you don\u2019t know something.\u00a0 It\u2019s an easy way to earn respect too.\u00a0 You can also add \u201cbut I\u2019m happy to happy a guess if you\u2019d like?\u201d.\u00a0 This way it\u2019s clear you\u2019re not lying about your knowledge but you have the opportunity to show off your analytical skills.\u00a0 If possible though, try not to say you don\u2019t know more than a couple of times an interview.<\/p>\n<p>Hopefully with these tips you\u2019ll be well on your way to your dream job.\u00a0 Learning core java is very important (and javatechig is full of great posts to help you) but there\u2019s a lot more to it than memorizing answers.<\/p>\n","excerpt":"<p>The phone interview is an integral part of any company\u2019s recruitment process.\u00a0 With some roles getting upwards of 50 CVs per eventual hire it\u2019s important that you can impress on the phone interview.\u00a0 First impressions count, and this is your opportunity to make it count. With this in mind, here are 5 top tips for [&hellip;]<\/p>\n","date":"2014-11-25 12:52:28","modified":"2016-05-29 19:24:20","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":297,"slug":"tutorials","title":"Tutorials &amp; Tips","description":"","parent":0,"post_count":3}],"tags":[],"author":{"id":46,"slug":"sam-atkinson","name":"Sam Atkinson","first_name":"Sam","last_name":"Atkinson","nickname":"sam.atkinson","url":"http:\/\/corejavainterviewquestions.com","description":"A passionate technologist, entrepreneur and all round geek, Sam is the founder of <a href=\"http:\/\/corejavainterviewquestions.com\" rel=\"nofollow\">corejavainterviewquestions.com <\/a> You can find him on twitter via @SambaHK."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDA":["s:104:\"a:1:{i:0;a:3:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapLI":["s:265:\"a:1:{i:0;a:8:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapSU":["s:127:\"a:1:{i:0;a:4:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";}}\";"],"snapTR":["s:370:\"a:1:{i:0;a:8:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"dsq_thread_id":["3260500031"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["1707"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:237:\"a:1:{i:0;a:8:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:384:\"a:1:{i:0;a:13:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_921972157815039\";s:5:\"pDate\";s:19:\"2014-11-25 07:34:51\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:111:\"a:1:{i:0;a:4:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:290:\"a:1:{i:0;a:10:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"537147512381919232\";s:5:\"pDate\";s:19:\"2014-11-25 07:35:21\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154}}},{"id":7053,"type":"post","slug":"android-login-screen-using-xamarin","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/android-login-screen-using-xamarin","status":"publish","title":"Android Login Screen Using Xamarin","title_plain":"Android Login Screen Using Xamarin","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android Login Screen Using Xamarin' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/android-login-screen-using-xamarin' data-summary=''><\/div>\n<p>In this tutorial we will see &#8220;How to create a login screen using Xamarin.Android&#8221;. This example assumes, you have Xamarin for Android development environment setup already.<\/p>\n<p>To design login screen as shown in the image below, we will be using two EditText for username, password and login button.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Login-Screen-using-Xamarin.png\"><img class=\"aligncenter size-full wp-image-6820\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Login-Screen-using-Xamarin.png\" alt=\"Login Screen using Xamarin\" \/><\/a><\/p>\n<h3>Login.axml<\/h3>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;RelativeLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"#2579BF\"\r\n    android:orientation=\"vertical\"&gt;\r\n\r\n    &lt;LinearLayout\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerInParent=\"true\"\r\n        android:layout_margin=\"10dp\"\r\n        android:orientation=\"vertical\"&gt;\r\n\r\n        &lt;ImageView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginBottom=\"20dp\"\r\n            android:src=\"@drawable\/ic_launcher\" \/&gt;\r\n\r\n        &lt;EditText\r\n            android:id=\"@+id\/userName\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"45dp\"\r\n            android:padding=\"5dp\"\r\n            android:background=\"@android:color\/white\" \/&gt;\r\n\r\n        &lt;View\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"2dp\"\r\n            android:background=\"#f7f7f7\" \/&gt;\r\n\r\n        &lt;EditText\r\n            android:id=\"@+id\/password\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"45dp\"\r\n            android:padding=\"5dp\"\r\n            android:background=\"@android:color\/white\"\r\n            android:inputType=\"textPassword\" \/&gt;\r\n\r\n        &lt;Button\r\n            android:id=\"@+id\/login\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@id\/password\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:background=\"#307FC1\"\r\n            android:text=\"Login\"\r\n            android:textColor=\"@android:color\/white\" \/&gt;\r\n\r\n    &lt;\/LinearLayout&gt;\r\n\r\n&lt;\/RelativeLayout&gt;\r\n<\/pre>\n<p>Now, let us create an Activity class and use the below code. To make this example simplified, we are just displaying a toast message when login button is clicked.<\/p>\n<h3>LoginActivity.cs<\/h3>\n<pre class=\"prettyprint lang-cs\">using System;\r\n\r\nusing Android.App;\r\nusing Android.Content;\r\nusing Android.Runtime;\r\nusing Android.Views;\r\nusing Android.Widget;\r\nusing Android.OS;\r\n\r\nnamespace MyApplication\r\n{\r\n\t[Activity (Label = \"POIApplication\", Theme=\"@style\/android:Theme.Holo.Light.NoActionBar\")]\r\n\tpublic class LoginActivity : Activity\r\n\t{\r\n\t\tprotected override void OnCreate (Bundle bundle)\r\n\t\t{\r\n\t\t\tbase.OnCreate (bundle);\r\n\r\n\t\t\t\/\/ Set our view from the \"main\" layout resource\r\n\t\t\tSetContentView (Resource.Layout.Login);\r\n\r\n\t\t\t\/\/Initializing button from layout\r\n\t\t\tButton login = FindViewById&lt;Button&gt; (Resource.Id.login);\r\n\r\n\t\t\t\/\/Login button click action\r\n\t\t\tlogin.Click += (object sender, EventArgs e) =&gt; {\r\n\t\t\t\tAndroid.Widget.Toast.MakeText(this, \"Login Button Clicked!\", Android.Widget.ToastLength.Short).Show();\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n<\/pre>\n","excerpt":"<p>In this tutorial we will see &#8220;How to create a login screen using Xamarin.Android&#8221;. This example assumes, you have Xamarin for Android development environment setup already. To design login screen as shown in the image below, we will be using two EditText for username, password and login button. Login.axml &lt;?xml version=&#8221;1.0&#8243; encoding=&#8221;utf-8&#8243;?&gt; &lt;RelativeLayout xmlns:android=&#8221;http:\/\/schemas.android.com\/apk\/res\/android&#8221; android:layout_width=&#8221;match_parent&#8221; [&hellip;]<\/p>\n","date":"2014-11-12 15:53:31","modified":"2015-12-01 19:37:51","categories":[{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"snap_isAutoPosted":["1","1"],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3341032550"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"2vKgsB\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/2vKgsB\/comments\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:42\";s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:105626713216;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/105626713216\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:42\";s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["4783"],"cf_url":[""],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:32\";s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["2"],"fsb_social_linkedin":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"0938cac063daab261fa2fb8854efbfff\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:33\";s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_934698373209084\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:39\";s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"546030895849676800\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:43\";s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}},{"id":7052,"type":"post","slug":"creating-a-splash-screen-in-android-using-xamarin","url":"http:\/\/stacktips.com\/tutorials\/xamarin\/creating-a-splash-screen-in-android-using-xamarin","status":"publish","title":"Creating a Splash Screen in Android Using Xamarin","title_plain":"Creating a Splash Screen in Android Using Xamarin","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Creating a Splash Screen in Android Using Xamarin' data-link='http:\/\/stacktips.com\/tutorials\/xamarin\/creating-a-splash-screen-in-android-using-xamarin' data-summary=''><\/div>\n<p>In this article, we take a look into creating a splash screen in Android using Xamarin. A splash screen is non different than other screens, that indicates the loading of resources\/data for application. Usually most of the real time application have a splash screen as the first screen to show when application starts, and it is automatically goes off once app is fully loaded.<\/p>\n<p>All you have to do is to define your activity theme style inside <code>Resources\/values\/Styles.xml<\/code> file. If you take a look into below style attributes, they are self explanatory. The <code>android:windowBackground<\/code> attributes takes the link to splash image.<\/p>\n<h3>Styles.xml<\/h3>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\r\n&lt;resources&gt;\r\n  &lt;style name=\"Theme.SplashActivity\" parent=\"android:Theme.Holo.Light.NoActionBar\"&gt;\r\n    &lt;item name=\"android:windowBackground\"&gt;@drawable\/ic_splash_logo&lt;\/item&gt;\r\n  &lt;\/style&gt;\r\n&lt;\/resources&gt;\r\n<\/pre>\n<h3>SplashActivity.cs<\/h3>\n<p>Now let us create a new Activity for splash screen. In this example, we have named it as SplashActivity, and paste the below code.<\/p>\n<pre class=\"prettyprint lang-vb\">namespace MyApplication\r\n{\r\n    using System.Threading;\r\n    using Android.App;\r\n    using Android.OS;\r\n\r\n    [Activity (Label = \"SplashScreen\", MainLauncher=true, NoHistory=true, Theme=\"@style\/Theme.SplashActivity\")]\r\n    public class SplashActivity : Activity\r\n    {\r\n        protected override void OnCreate(Bundle bundle)\r\n        {\r\n            base.OnCreate(bundle);\r\n\r\n            \/\/ Wait for 2 seconds\r\n            Thread.Sleep(2000); \r\n\r\n            \/\/Moving to next activity\r\n            StartActivity(typeof(MainActivity));\r\n        }\r\n    }\r\n}\r\n<\/pre>\n<p>In the above code we have specified <code>[Activity]<\/code> attribute with following properties<\/p>\n<ol>\n<li><strong>MainLauncher<\/strong> &#8211; This specifies that the activity is a launcher activity and will start automatically when application is launched<\/li>\n<li><strong>Theme<\/strong> &#8211; This specifies the custom theme to android activity<\/li>\n<li><strong>NoHistory<\/strong> &#8211; By default Android application maintain back stack of all activities. When user moves from ActivityA to ActivityB, and presses device back button from ActivityB, android system automatically shows to ActivityA. In case of splash screen, once application is loaded, we are not welling to display splash screen again at any point of time. Hence, we must ask android system to explicitely, not to add SplashActivity into backstack. This can be done by using <code>NoHistory = true<\/code> argument.\u00a0.<\/li>\n<\/ol>\n<p>A typical android application Splash screen will perform the loading activity. As this is an example we are just using <code>Thread.Sleep(milliseconds)<\/code>\u00a0\u00a0to create a delay.<\/p>\n","excerpt":"<p>In this article, we take a look into creating a splash screen in Android using Xamarin. A splash screen is non different than other screens, that indicates the loading of resources\/data for application. Usually most of the real time application have a splash screen as the first screen to show when application starts, and it [&hellip;]<\/p>\n","date":"2014-11-12 14:32:17","modified":"2015-12-01 19:39:11","categories":[{"id":122,"slug":"xamarin","title":"Xamarin","description":"Find some of the high quality Xamarin.Android tutorials and examples to help you get started with Android programming using Mono. All the example and source code are open source. You're free to share, distribute or add to your project.\r\n\r\nAll the tutorials, references, and examples provided in this website are constantly reviewed to avoid errors, but we offer no guarantee that any information published here is accurate. If you spot a mistake \u2013 let us know! ","parent":297,"post_count":22}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"snap_isAutoPosted":["1","1"],"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3217488821"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"1hYqq8\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/1hYqq8\/comments\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:30\";s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:105626699406;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/105626699406\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:30\";s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["3007"],"cf_url":[""],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:21\";s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"b5b2ef0c4ba2cdf1f4c6f344b049d970\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:22\";s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_934698226542432\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:28\";s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:11:\"isPrePosted\";s:1:\"1\";s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"546030843576057856\";s:5:\"pDate\";s:19:\"2014-12-19 19:54:31\";s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2015\/05\/Xamarin-Tutorials.png","width":295,"height":180}}},{"id":6733,"type":"post","slug":"interface-segregation-principle","url":"http:\/\/stacktips.com\/tutorials\/design-patterns\/interface-segregation-principle","status":"publish","title":"Interface Segregation Principle","title_plain":"Interface Segregation Principle","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Interface Segregation Principle' data-link='http:\/\/stacktips.com\/tutorials\/design-patterns\/interface-segregation-principle' data-summary=''><\/div>\n<p>This article explains interface segregation principle and its uses. Interface segregation is a design principle that deals with the disadvantages of &#8220;fat&#8221; interfaces. Interfaces containing methods that are not specific to it are called polluted or fat interfaces.<\/p>\n<blockquote><p>\u201cClients should not be forced to depend upon interfaces that they don&#8217;t use.\u201d<\/p><\/blockquote>\n<p>Let us take the example of a multi purpose machine developed by Xerox. This super xerox system could do a wide variety of jobs like printing, scanning, stapling, photocopying, etc. They can be implemented as a IMachine interface and XeroxMachine implementation as shown below.<\/p>\n<pre class=\"prettyprint lang-java\">public interface IMachine {\r\n\tpublic void print();\r\n\tpublic void staple();\r\n\tpublic void scan();\r\n\tpublic void photoCopy();\r\n}<\/pre>\n<p>XeroxMachine implementation<\/p>\n<pre class=\"prettyprint lang-java\">public class XeroxMachine implements IMachine {\r\n\r\n\t@Override\r\n\tpublic void print() {\r\n\t\tSystem.out.println(\"Printing Job\");\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void staple() {\r\n\t\tSystem.out.println(\"Stapling Job\");\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void scan() {\r\n\t\tSystem.out.println(\"Scan Job\");\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void photoCopy() {\r\n\t\tSystem.out.println(\"Photo Copy\");\r\n\t}\r\n}\r\n<\/pre>\n<p>The super machine is developed and working great. Now company is getting requests for making a machine that do only print function. Management has decided to develop a specialized print machine. Now developers want to write Printer class that implements IMachine interface. Did you notice any problem? Although you need only print function, you have to implement all other methods of IMachine interface. <strong>Now IMachine interface is not following interface segregation principle and called fat interface.<\/strong><\/p>\n<p>We can breakdown the IMachine into multiple special purpose interfaces as shown below.<\/p>\n<pre class=\"prettyprint lang-java\">public interface IPrinter {\r\n\tpublic void print();\r\n}\r\n\r\npublic interface IScanner {\r\n\tpublic void fax();\r\n}\r\n\r\npublic interface IStapler {\r\n\tpublic void staple();\r\n}\r\n\r\npublic interface IPhotoCopier {\r\n\tpublic void photoCopy();\r\n}\r\n<\/pre>\n<p>Notes:<\/p>\n<ol style=\"padding-left: 30px;\">\n<li>What if you are dealing with existing legacy application where interface is a fat interface? How do deal with such situation? Well, you can always use adapter design pattern for segregation.<\/li>\n<li>Interface segregation brings implementation simplicity and makes easy to debug and maintain.<\/li>\n<li>Interface segregation principle is easy to understand and sounds great in theory, but often difficult to identify the distinct interfaces and it can also end up with proliferation of interfaces.<\/li>\n<\/ol>\n","excerpt":"<p>This article explains interface segregation principle and its uses. Interface segregation is a design principle that deals with the disadvantages of &#8220;fat&#8221; interfaces. Interfaces containing methods that are not specific to it are called polluted or fat interfaces. \u201cClients should not be forced to depend upon interfaces that they don&#8217;t use.\u201d Let us take the [&hellip;]<\/p>\n","date":"2014-11-06 20:55:18","modified":"2015-01-10 20:42:27","categories":[{"id":8,"slug":"design-patterns","title":"Design Patterns","description":"We have compiled set of basic and advance java design pattern tutorials to help you get started with various foundational java design patterns. This series focuses on the examination of various foundational java design pattern tutorials.","parent":297,"post_count":12}],"tags":[{"id":171,"slug":"ooad","title":"OOAD","description":"","post_count":1},{"id":170,"slug":"solid","title":"SOLID","description":"","post_count":1}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3198305777"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"f9cfc468a1b5a027de105b9c9c5e6bcb\";s:5:\"pDate\";s:19:\"2014-11-06 15:25:22\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_912379925440929\";s:5:\"pDate\";s:19:\"2014-11-06 15:25:26\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:211:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"IP\";s:5:\"pDate\";s:19:\"2014-11-06 15:25:29\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"AQocim\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/AQocim\/comments\";s:5:\"pDate\";s:19:\"2014-11-06 15:25:37\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:101929356516;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/101929356516\";s:5:\"pDate\";s:19:\"2014-11-06 15:25:37\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"530380496883048448\";s:5:\"pDate\";s:19:\"2014-11-06 15:25:38\";}}\";"],"post_views_count":["2914"],"fsb_social_facebook":["0"],"fsb_social_twitter":["2"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150}}},{"id":6196,"type":"post","slug":"java-garbage-collection-interview-questions","url":"http:\/\/stacktips.com\/random\/java-garbage-collection-interview-questions","status":"publish","title":"Java Garbage Collection Interview Questions","title_plain":"Java Garbage Collection Interview Questions","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Java Garbage Collection Interview Questions' data-link='http:\/\/stacktips.com\/random\/java-garbage-collection-interview-questions' data-summary=''><\/div>\n<p>In this tutorial we will touch upon some of the most commonly asked Java garbage collection interview questions.<\/p>\n<h3>Q: Explain garbage collection and how can you force the garbage collection?<\/h3>\n<p>Garbage collection is the concept of identifying and deleting the objects that are no longer needed by program so that the resources can be reused by program. A java object is said to be ready for garbage collector, when it is no longer referenced. Garbage collector is a program that runs by JVM which is used for automatic memory management.<\/p>\n<p>Every class inherits <code>finalize()<\/code> method from java.lang.Object, the finalize() method is called by garbage collector when it determines no more references to the object exists. On calling System.gc() and Runtime.gc(), JVM tries to recycle the unused objects, but there is no guarantee when all the objects will be garbage collected. There is no guarantee that Garbage collection will start immediately upon request of <code>System.gc().<\/code><\/p>\n<h3>Q: It is a daemon thread. Can an object&#8217;s finalize() method be invoked while it is reachable?<\/h3>\n<p>An object&#8217;s finalize() method cannot be invoked by the garbage collector while the object is still reachable. However, an object&#8217;s finalize() method may be invoked by other objects.<\/p>\n<h3>Q: Does garbage collection guarantee that a program will not run out of memory?<\/h3>\n<p>Garbage collection does not guarantee that a program will not run out of memory. It is possible for programs to use up memory resources faster than they are garbage collected. It is also possible for programs to create objects that are not subject to garbage collection.<\/p>\n<h3>Q: What is the purpose of finalization?<\/h3>\n<p>The purpose of finalization is to give an unreachable object the opportunity to perform any cleanup, before the object gets garbage collected. For example, closing an opened database Connection.<\/p>\n<h3>Q: If an object is garbage collected, can it become reachable again?<\/h3>\n<p>Once an object is garbage collected, It can no longer become reachable again.<\/p>\n<h3>Q: Which part of the memory is involved in Garbage Collection? Stack or Heap?<\/h3>\n<p>Heap<\/p>\n<h3>Q: Is garbage collector a dameon thread?<\/h3>\n<p>Yes. A dameon thread runs behind the application. It is started by JVM.<\/p>\n<h3>Q: Who controls Garbage Collector?<\/h3>\n<p>The JVM controls the Garbage Collector; it decides when to run the Garbage Collector. JVM runs the Garbage Collector when it realizes that the memory is running low, but this behavior of jvm can not be guaranteed. One can request the Garbage Collection to happen from within the java program but there is no guarantee that this request will be taken care of by jvm.<\/p>\n<h3>Q: When does an object become eligible for garbage collection?<\/h3>\n<p>An object becomes eligible for Garbage Collection when no live thread can access it.<\/p>\n<h3>Q: Can the Garbage Collection be forced by any means?<\/h3>\n<p>No. The Garbage Collection can not be forced, though there are few ways by which it can be requested there is no guarantee that these requests will be taken care of by JVM.<\/p>\n<h3>Q: How can the Garbage Collection be requested?<\/h3>\n<p>There are two ways in which we can request the jvm to execute the Garbage Collection.<\/p>\n<p style=\"padding-left: 60px;\">1. Runtime.getRuntime().gc();<br \/>\n2. System.gc();<\/p>\n<h3>Q: What is the purpose of overriding finalize() method?<\/h3>\n<p>The finalize() method should be overridden for an object to include the clean up code or to dispose of the system resources that should to be done before the object is garbage collected.<\/p>\n<h3>Q: How many times does the garbage collector call the finalize() method for an object?<\/h3>\n<p>Only once.<\/p>\n<h3>Q: What happens if an uncaught exception is thrown from during the execution of the finalize() method of an object?<\/h3>\n<p>The exception will be ignored and the garbage collection (finalization) of that object terminates.<\/p>\n<h3>Q: How to enable\/disable call of finalize() method of exit of the application<\/h3>\n<p>Runtime.getRuntime().runFinalizersOnExit(boolean value) . Passing the boolean value will either disable or enable the finalize() call.<\/p>\n","excerpt":"<p>In this tutorial we will touch upon some of the most commonly asked Java garbage collection interview questions. Q: Explain garbage collection and how can you force the garbage collection? Garbage collection is the concept of identifying and deleting the objects that are no longer needed by program so that the resources can be reused [&hellip;]<\/p>\n","date":"2014-11-06 07:32:30","modified":"2015-03-18 16:30:28","categories":[{"id":1,"slug":"random","title":"Random","description":"","parent":0,"post_count":39}],"tags":[],"author":{"id":855,"slug":"javatechig","name":"JAVATECHIG","first_name":"Javatechig","last_name":"","nickname":"JAVATECHIG","url":"http:\/\/stacktips.com","description":"Provides tutorials, tips, examples and source code on leading Java, Android, Blackberry, PhoneGap and related mobile technologies."},"comments":[],"attachments":[{"id":6692,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","slug":"interview-questions-and-answers","title":"Interview questions and answers","description":"Interview questions and answers","caption":"","parent":6196,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154}}}],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_MYURL":[""],"snapEdIT":["1"],"snapTR":["s:370:\"a:1:{i:0;a:8:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapTW":["s:154:\"a:1:{i:0;a:5:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"0488f01c3d54e52ff396bb56950fe1bd\";s:5:\"pDate\";s:19:\"2014-11-06 02:02:36\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_912150482130540\";s:5:\"pDate\";s:19:\"2014-11-06 02:02:42\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:211:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"IP\";s:5:\"pDate\";s:19:\"2014-11-06 02:02:42\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snap_isAutoPosted":["1"],"snapSU":["s:154:\"a:1:{i:0;a:5:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"dsq_thread_id":["3196735418"],"snapImportedFBComments":["a:0:{}"],"cf_url":[""],"post_views_count":["3425"],"fsb_social_facebook":["1"],"fsb_social_twitter":["3"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154}}},{"id":6667,"type":"post","slug":"how-to-use-picasso-library-in-android","url":"http:\/\/stacktips.com\/tutorials\/android\/how-to-use-picasso-library-in-android","status":"publish","title":"How to Use Picasso Image Loader Library in Android","title_plain":"How to Use Picasso Image Loader Library in Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Use Picasso Image Loader Library in Android' data-link='http:\/\/stacktips.com\/tutorials\/android\/how-to-use-picasso-library-in-android' data-summary='This this tutorial, we will take a look into how to use Picasso library in android. Picasso is open source and one of the widely used image downloader library in Android. It is created and maintained by Square. It is among the powerful image download and caching library for android.'><\/div>\n<p>This this tutorial, we will take a look into how to use Picasso library in android. Picasso is open source and one of the widely used image downloader library in Android. It is created and maintained by <a href=\"http:\/\/square.github.io\/\">Square<\/a>. It is among the powerful image download and caching <a title=\"Android third party libraries and SDK\u2019s\" href=\"http:\/\/stacktips.com\/android\/android-third-party-libraries-sdks\">library for Android.<\/a><\/p>\n<p>Some of the other alternative contenders of Picasso are;<\/p>\n<ol>\n<li><a href=\"https:\/\/github.com\/nostra13\/Android-Universal-Image-Loader\">Universal Image Loader<\/a><\/li>\n<li><a href=\"http:\/\/developer.android.com\/training\/volley\/index.html\">Volley<\/a><\/li>\n<\/ol>\n<h2><b>Why to use?<\/b><\/h2>\n<ol>\n<li>It simplifies the process of loading images from external urls and display on your application. For example, downloading an image from server, is one of the most common task in any application. And it needs quite a larger amount of code to achieve this via android networking API\u2019s. By using Picasso, you can achieve this with few lines of code.<\/li>\n<li>It is always not about downloading image from remote location. You also have to think of implementing image caching logic in order to provide a seamless user experience. Picasso provides automatic image caching.<\/li>\n<li>Image transformation is a costly affair. If your application need deal with such runtime image transformation, you must be watchful about OutOfMemoryException. Picasso deals with it, so you dont have to do it yourself.<\/li>\n<\/ol>\n<p><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Picasso-Image-Downloader.png\"><img class=\"aligncenter size-full wp-image-6671\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Picasso-Image-Downloader.png\" alt=\"Picasso Image Downloader\" width=\"800\" height=\"342\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Picasso-Image-Downloader.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Picasso-Image-Downloader-300x128.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Picasso-Image-Downloader-620x265.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Picasso-Image-Downloader-370x158.png 370w\" sizes=\"(max-width: 800px) 100vw, 800px\" \/><\/a><\/center><\/p>\n<h2><b>How To Use Picasso Library In Android?<\/b><\/h2>\n<p><a href=\"http:\/\/square.github.io\/picasso\/\">Download the Picasso JAR file<\/a>, If you haven&#8217;t done it already. If you are using eclipse as your development IDE, then just copy the downloaded <code>picasso-2.4.0.jar<\/code> file into your application lib folder. If you are using Android Studio IDE, then you have to add below dependency in build.gradle file.<\/p>\n<pre class=\"prettyprint lang-java\">dependencies {\r\n   ...\r\n   compile \"com.squareup.picasso:picasso:2.4.0\"\r\n   ...\r\n}<\/pre>\n<h2><b>Loading Remote Image in ImageView<\/b><\/h2>\n<p>We are done with configuration, let us see how to use this library to download images from remote server and display in ImageView. I assume you have your activity layout file already with ImageView declared on it.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;ImageView\r\n    android:layout_width=\"wrap_content\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:id=\"@+id\/imageView\"\r\n    android:layout_alignParentTop=\"true\"\r\n    android:layout_centerHorizontal=\"true\"&gt;\r\n&lt;\/ImageView&gt;\r\n<\/pre>\n<p>For Picasso download image from server, you need to add below internet permissions to your project&#8217;s manifest.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;uses-permission android:name=\"android.permission.INTERNET\" \/&gt;<\/pre>\n<p>Now let us download the image and display on imageView<\/p>\n<pre class=\"prettyprint lang-java\">\/\/Initialize ImageView\r\nImageView imageView = (ImageView) findViewById(R.id.imageView);\r\n\r\n\/\/Loading image from below url into imageView\r\n\r\nPicasso.with(this)\r\n   .load(\"YOUR IMAGE URL HERE\")\r\n   .into(imageView);\r\n<\/pre>\n<p>In the first line we are getting ImageView instance from the layout. And then load the image from the above remote url using Picasso library.<\/p>\n<h2>Placeholder And Error Fallback<\/h2>\n<p>In the above code snippet, we have just downloaded the image and displayed on ImageView. But that is not enough always. For any real time application, you must think of all possible cases. Now we need an placeholder and error fallback for our ImageView. Placeholder image will be shown before the image is loaded. Error fallback will be shown if, there is an error while downloading image. However both fallback and placeholder are optional.<\/p>\n<pre class=\"prettyprint lang-java\">Picasso.with(this)\r\n    .load(\"YOUR IMAGE URL HERE\")\r\n    .placeholder(R.drawable.ic_placeholder) \/\/ optional\r\n    .error(R.drawable.ic_error_fallback) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\/\/ optional\r\n    .into(imageView);<\/pre>\n<h2>Image Resize and Transformation<\/h2>\n<p>Picasso offers much more than just downloading image. It can resize the image, transform before it is displayed in ImageView.<\/p>\n<pre class=\"prettyprint lang-java\">Picasso.with(this)\r\n     .load(\"YOUR IMAGE URL HERE\") \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\r\n     .placeholder(R.drawable.ic_placeholder)   \/\/ optional \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\r\n     .error(R.drawable.ic_error_fallback) \u00a0\u00a0\u00a0\u00a0\u00a0\/\/ optional \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\r\n     .resize(250, 200) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\/\/ optional \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\r\n     .rotate(90) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\/\/ optional \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\r\n     .into(imageView);\r\n<\/pre>\n","excerpt":"<p>This this tutorial, we will take a look into how to use Picasso library in android. Picasso is open source and one of the widely used image downloader library in Android. It is created and maintained by Square. It is among the powerful image download and caching library for android.<\/p>\n","date":"2014-11-05 18:30:57","modified":"2015-02-13 04:52:27","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":7699,"name":"Derrick","url":"","date":"2014-12-03 11:27:00","content":"<p>Yes&#8230;.I love this. Thanks!<\/p>\n","parent":0},{"id":7729,"name":"Mainak","url":"","date":"2015-01-06 11:09:00","content":"<p>I can use picasso jar file  without licensed agreement.<\/p>\n","parent":0},{"id":8256,"name":"Sachin Rajput","url":"","date":"2015-10-07 17:05:00","content":"<p>hey i am working with picasso in my project<br \/>\ni am done with loading images from urls in my grid view<br \/>\nbut<br \/>\nnow i want that if i will click any image it should be open in enlarge way and there should some option by which we can save it on memorycard<br \/>\ncan you help me out with this \ud83d\ude42<\/p>\n","parent":0},{"id":8263,"name":"Shama Agrawal","url":"","date":"2015-10-14 16:05:00","content":"<p>Error:Execution failed for task &#8216;:app:packageAllDebugClassesForMultiDex&#8217;.<\/p>\n<p>&gt; java.util.zip.ZipException: duplicate entry: com\/squareup\/picasso\/Action$RequestWeakReference.class<\/p>\n<p>I am getting this error.Pls suggest how to solve this<\/p>\n","parent":0},{"id":8264,"name":"Shama Agrawal","url":"","date":"2015-10-14 16:07:00","content":"<p>hey hiii,did you get some error like <\/p>\n<p>Error:Execution failed for task &#8216;:app:packageAllDebugClassesForMultiDex&#8217;.<\/p>\n<p>&gt; java.util.zip.ZipException: duplicate entry: com\/squareup\/picasso\/Action$RequestWeakReference.class<\/p>\n","parent":8256},{"id":8339,"name":"Haseeb Kp","url":"","date":"2015-12-22 15:34:00","content":"<p>Thank you<\/p>\n","parent":0},{"id":8372,"name":"Inzi Nasir","url":"","date":"2016-02-09 17:07:00","content":"<p>thanks for helpful articlenow i want to replace  url with drawable image.<\/p>\n","parent":0},{"id":8436,"name":"Rushabh Patel","url":"","date":"2016-03-10 11:37:00","content":"<p>Does Picasso support exif for the Gallery images?<\/p>\n","parent":0},{"id":8454,"name":"XoLem","url":"","date":"2016-03-21 15:17:00","content":"<p>It&#8217;s a nice article but can you help to explain more details about how is it caching any is there any way to control &amp; access picasso caching?<\/p>\n","parent":0},{"id":8458,"name":"brahmy","url":"","date":"2016-03-29 12:56:00","content":"<p>can i add url like this   .load(&#8220;some url i.e related of added imagename&#8221;+item.getImageName()) if i have some json file with image name.that json file does contains image name instead of full image path.<\/p>\n","parent":0},{"id":8473,"name":"Pulkit Kumar","url":"http:\/\/www.babajikenotes.com","date":"2016-04-03 19:30:00","content":"<p>Concatenate the base url with the image name<br \/>\nex: image name is abc.jpg Use Uri builder which is Android Class to build the url<\/p>\n","parent":8458}],"attachments":[{"id":6671,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Picasso-Image-Downloader.png","slug":"picasso-image-downloader","title":"Picasso Image Downloader","description":"","caption":"","parent":6667,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Picasso-Image-Downloader.png","width":800,"height":342},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Picasso-Image-Downloader-620x265.png","width":620,"height":265},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Picasso-Image-Downloader.png","width":800,"height":342},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Picasso-Image-Downloader.png","width":800,"height":342},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Picasso-Image-Downloader.png","width":800,"height":342},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Picasso-Image-Downloader.png","width":800,"height":342},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Picasso-Image-Downloader.png","width":800,"height":342}}}],"comment_count":11,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3194236388"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:154:\"a:1:{i:0;a:5:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:101839940446;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/101839940446\";s:5:\"pDate\";s:19:\"2014-11-05 13:01:02\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"price":[""],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"97fcec16308d2d75dac23d34b476c92d\";s:5:\"pDate\";s:19:\"2014-11-05 13:01:05\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_911866325492289\";s:5:\"pDate\";s:19:\"2014-11-05 13:01:19\";}}\";"],"snapIP":["s:211:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"IP\";s:5:\"pDate\";s:19:\"2014-11-05 13:01:15\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"529981714777382912\";s:5:\"pDate\";s:19:\"2014-11-05 13:01:01\";}}\";"],"cf_url":[""],"post_views_count":["12058","12058"],"fsb_social_facebook":["4"],"fsb_social_twitter":["3"],"fsb_social_google":["6"],"fsb_social_linkedin":["4"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":6590,"type":"post","slug":"factory-method-design-pattern-java","url":"http:\/\/stacktips.com\/tutorials\/design-patterns\/factory-method-design-pattern-java","status":"publish","title":"Factory Method design pattern in Java","title_plain":"Factory Method design pattern in Java","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Factory Method design pattern in Java' data-link='http:\/\/stacktips.com\/tutorials\/design-patterns\/factory-method-design-pattern-java' data-summary='Over the course of this article, we will examine one of the most commonly used patterns, the Factory method pattern in java.. The Factory design pattern provides a way to use an instance as an object factory. The factory can return an instance of one of several possible classes in a class hierarchy, depending on the data provided to it.'><\/div>\n<p>Over the course of this article, we will examine one of the most commonly used patterns, the Factory method pattern in java.<\/p>\n<p>Software systems undergo constant changes and they are unstable. We must consider to design where the objects and relationships are loosely coupled. Loose coupling is one of the most important characteristics in software design; this helps in extending new functions in the software without disturbing or doing no changes to the existing system.<\/p>\n<blockquote><p>&#8220;The Factory design pattern provides a way to use an instance as an object factory. The factory can return an instance of one of several possible classes in a class hierarchy, depending on the data provided to it.&#8221;<\/p><\/blockquote>\n<p>Java Factory pattern belongs to the creational family of design patterns that govern the object instantiation process. The Factory pattern is a grouped into the Simple Factory, Factory Method and Abstract Factory patterns. We will\u00a0taper the context of this tutorial to Simple Factory and Factory method design pattern.<\/p>\n<ol>\n<li><strong>Simple Factory:<\/strong> Simple factory isn\u2019t actually a design pattern; its more of a programming technique often used to encapsulate the object instantiation process.<\/li>\n<li><strong>Factory Method:<\/strong> Defines an interface for creating an object, but let&#8217;s the classes that implement the interface decide which class to instantiate. The Factory method lets a class defer instantiation to subclasses.<\/li>\n<li><strong>Abstract Factory:<\/strong> Provides an interface for creating families of related or dependent objects without specifying their concrete classes.<\/li>\n<\/ol>\n<p>Benefits of Factory design pattern<\/p>\n<ol>\n<li>The client does not need to know every subclass of objects it must create. It only need one reference to the abstract class\/interface and the factory object.<\/li>\n<li>The factory encapsulate the creation of objects. This can be useful if the creation process is very complex.<\/li>\n<\/ol>\n<h1>Simple Factory Pattern<\/h1>\n<p>Spice Digital Inc. is one of the top smartphone manufacturers in India. They are pioneer in manufacturing and distributing smartphones in indian market. For now they have two successful products SpiceFire and SpiceBolt.\u00a0The <code>produceMobile()<\/code> method is working well which produce two different mobiles based on their model number. Let us have a look into the current implementation of produceMobile() method.<\/p>\n<pre class=\"prettyprint lang-java\">public SpiceMobile produceMobile(String model) {\r\n\t\tSpiceMobile mobile = null;\r\n\r\n\t\tif (model.equalsIgnoreCase(\"SpiceBolt\")) {\r\n\t\t\tmobile = new SpicePlus();\r\n\t\t} else if (model.equalsIgnoreCase(\"SpiceFire\")) {\r\n\t\t\tmobile = new SpiceBolt();\r\n\t\t}\r\n\t\tmobile.prepare();\r\n\t\tmobile.bundle();\r\n\t\tmobile.label();\r\n\r\n\t\treturn mobile;\r\n}\r\n<\/pre>\n<p>SpiceMobile implementation<\/p>\n<pre class=\"prettyprint lang-java\">public abstract class SpiceMobile {\r\n\tpublic abstract void prepare();\r\n\tpublic abstract void bundle();\r\n\tpublic abstract void label();\r\n}\r\n\r\npublic class SpiceFire extends SpiceMobile {\r\n\t@Override\r\n\tpublic void prepare() {\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void bundle() {\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void label() {\r\n\t}\r\n}\r\n\r\npublic class SpiceBolt extends SpiceMobile {\r\n\r\n\t@Override\r\n\tpublic void prepare() {\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void bundle() {\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void label() {\r\n\t}\r\n}\r\n<\/pre>\n<p>Problems with above implementation<\/p>\n<ol>\n<li>The above implementation is working well and everyone are happy. However, at some point of time company want to release another new model to market, they need to change the produceMobile() method code.<\/li>\n<li>Design is not extensive and it is closed for modification.<\/li>\n<li>Adds more complexity to refactor code each time new products added.<\/li>\n<\/ol>\n<h1>Factory Method Design Pattern Example<\/h1>\n<p>The above example is working great to deal for producing mobiles. However, we have outlined some of the problems above on the above approach. Now let us add some more complexity to the above requirements.<\/p>\n<p>Spice Digital Inc. company now decided to makes their global presence. They want to extend their business to London and NewYork location. Looking at the market interest, London factory will produce only SpiceBolt and SpiceFire model and New York will produce SpiceFire and SpicePlus. Now the usecase is becoming fairly complex. Let us have a glance at the below class diagram that using Factory method design pattern.<\/p>\n<p><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern.png\"><img class=\"aligncenter size-medium wp-image-6591\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern-620x365.png\" alt=\"Factory Method Design Pattern\" width=\"620\" height=\"365\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern-620x365.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern-300x176.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern-800x471.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern-370x218.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern.png 852w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/center><\/p>\n<h3>SpiceMobile.java<\/h3>\n<pre class=\"prettyprint lang-java\">public abstract class SpiceMobile {\r\n\tpublic double price;\r\n\tpublic double getPrice() {\r\n\t\treturn price;\r\n\t}\r\n\r\n\tpublic void setPrice(double price) {\r\n\t\tthis.price = price;\r\n\t}\r\n\r\n\tpublic abstract void prepare();\r\n\r\n\tpublic abstract void bundle();\r\n\r\n\tpublic abstract void label();\r\n}\r\n<\/pre>\n<p>Now, let us create three different Spice mobile implementation. For demonstration purpose, we have three simple implementation i.e. SpiceBolt, SpiceFire and SpicePlus. All three classes are similar so we don&#8217;t have listed them all.<\/p>\n<h3>SpiceBolt.java<\/h3>\n<pre class=\"prettyprint lang-java\">public class SpiceBolt extends SpiceMobile {\r\n\r\n\t@Override\r\n\tpublic void prepare() {\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void bundle() {\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void label() {\r\n\t}\r\n}\r\n<\/pre>\n<h3>MobileFactory.java<\/h3>\n<pre class=\"prettyprint lang-java\">public abstract class MobileFactory {\r\n\r\n\tpublic abstract SpiceMobile constructMobile(String model);\r\n\r\n\t\/**\r\n\t * Defines the process to product mobile. This implementation should'nt be\r\n\t * be changed by clients\r\n\t * \r\n\t * @param model\r\n\t * @return SpiceMobile\r\n\t *\/\r\n\tpublic SpiceMobile produceMobile(String model) {\r\n\r\n\t\tSpiceMobile mobile = constructMobile(model);\r\n\t\tmobile.prepare();\r\n\t\tmobile.bundle();\r\n\t\tmobile.label();\r\n\r\n\t\treturn mobile;\r\n\t}\r\n}\r\n<\/pre>\n<h3>LondonMobileFactory.java<\/h3>\n<pre class=\"prettyprint lang-java\">\/**\r\n * London mobile factory is specialized and only sale Spice3D and SpiceHD.\r\n *\/\r\npublic class LondonMobileFactory extends MobileFactory {\r\n\r\n\t@Override\r\n\tpublic SpiceMobile constructMobile(String model) {\r\n\r\n\t\tSpiceMobile mobile = null;\r\n\r\n\t\tif (model.equalsIgnoreCase(\"SpiceFire\")) {\r\n\t\t\tmobile = new SpicePlus();\r\n\t\t\tmobile.setPrice(300);\r\n\t\t} else if (model.equalsIgnoreCase(\"SpiceBolt\")) {\r\n\t\t\tmobile = new SpiceBolt();\r\n\t\t\tmobile.setPrice(400);\r\n\t\t}\r\n\r\n\t\treturn mobile;\r\n\t}\r\n}\r\n<\/pre>\n<h3>NYMobileFactory.java<\/h3>\n<pre class=\"prettyprint lang-java\">\/**\r\n * New York mobile factory is specialized and only sale Spice3D and SpiceMono.\r\n *\/\r\n\r\npublic class NYMobileFactory extends MobileFactory {\r\n\r\n\t@Override\r\n\tpublic SpiceMobile constructMobile(String model) {\r\n\t\t\r\n\t\tSpiceMobile mobile = null;\r\n\r\n\t\tif (model.equalsIgnoreCase(\"SpiceFire\")) {\r\n\t\t\tmobile = new SpicePlus();\r\n\t\t\tmobile.setPrice(200);\r\n\t\t} else if (model.equalsIgnoreCase(\"SpiceMono\")) {\r\n\t\t\tmobile = new SpiceFire();\r\n\t\t\tmobile.setPrice(280);\r\n\t\t}\r\n\r\n\t\treturn mobile;\r\n\t}\r\n}<\/pre>\n<h3>Client.java<\/h3>\n<pre class=\"prettyprint lang-java\">public class Client {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tMobileFactory factory = new LondonMobileFactory();\r\n\t\tSpiceMobile mobile = factory.produceMobile(\"SpiceHD\");\r\n\r\n\t\tMobileFactory nyFactory = new NYMobileFactory();\r\n\t\tSpiceMobile mobile2 = factory.produceMobile(\"SpiceMono\");\r\n\r\n\t}\r\n}\r\n<\/pre>\n","excerpt":"<p>Over the course of this article, we will examine one of the most commonly used patterns, the Factory method pattern in java.. The Factory design pattern provides a way to use an instance as an object factory. The factory can return an instance of one of several possible classes in a class hierarchy, depending on the data provided to it.<\/p>\n","date":"2014-11-04 10:55:55","modified":"2015-01-19 20:49:57","categories":[{"id":8,"slug":"design-patterns","title":"Design Patterns","description":"We have compiled set of basic and advance java design pattern tutorials to help you get started with various foundational java design patterns. This series focuses on the examination of various foundational java design pattern tutorials.","parent":297,"post_count":12}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8105,"name":"Anil Nivargi","url":"","date":"2015-07-21 16:55:00","content":"<p>Thanks for good explanation&#8230;..<\/p>\n","parent":0},{"id":8107,"name":"Anil Nivargi","url":"","date":"2015-07-22 16:12:00","content":"<p>nice explanation&#8230;<\/p>\n","parent":0},{"id":8483,"name":"s.shivasurya","url":"http:\/\/www.i-visionblog.com\/","date":"2016-04-13 19:29:00","content":"<p>may be small finding : london factory doesn&#8217;t provide such class name spiceHd<br \/>\nany good article thanks<\/p>\n","parent":0},{"id":8509,"name":"lovroh","url":"","date":"2016-05-02 19:55:00","content":"<p>thanks for this simplified explanation.. you rock!!<\/p>\n","parent":0}],"attachments":[{"id":6591,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern.png","slug":"factory-method-design-pattern","title":"Factory Method Design Pattern","description":"Factory Method Design Pattern","caption":"","parent":6590,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern.png","width":852,"height":502},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern-620x365.png","width":620,"height":365},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern.png","width":852,"height":502},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern.png","width":852,"height":502}}},{"id":6663,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Java-Design-Pattern-Tutorials.png","slug":"java-design-pattern-tutorials-2","title":"Java Design Pattern Tutorials","description":"Java Design Pattern Tutorials","caption":"","parent":6590,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Java-Design-Pattern-Tutorials-e1415184817301.png","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Java-Design-Pattern-Tutorials-e1415184817301.png","width":248,"height":150},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Java-Design-Pattern-Tutorials-e1415184817301.png","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Java-Design-Pattern-Tutorials-e1415184817301.png","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Java-Design-Pattern-Tutorials-e1415184817301.png","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Java-Design-Pattern-Tutorials-e1415184817301.png","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Java-Design-Pattern-Tutorials-e1415184817301.png","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Java-Design-Pattern-Tutorials-e1415184817301.png","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Java-Design-Pattern-Tutorials-e1415184817301.png","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Java-Design-Pattern-Tutorials-e1415184817301.png","width":248,"height":150}}},{"id":6697,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","slug":"design-pattern-tutorials","title":"Design Pattern Tutorials","description":"Java Design Pattern Tutorials","caption":"","parent":6590,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150}}}],"comment_count":4,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"dsq_thread_id":["3187182021"],"snap_isAutoPosted":["1"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"1bLDkr\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/1bLDkr\/comments\";s:5:\"pDate\";s:19:\"2014-11-04 05:26:33\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:101738095996;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/101738095996\";s:5:\"pDate\";s:19:\"2014-11-04 05:26:36\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"price":[""],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-11-04 05:26:22\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"b3735f4d037cf3b46ae459af7690ec98\";s:5:\"pDate\";s:19:\"2014-11-04 05:26:23\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_911255772220011\";s:5:\"pDate\";s:19:\"2014-11-04 05:26:27\";}}\";"],"snapIP":["s:211:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"IP\";s:5:\"pDate\";s:19:\"2014-11-04 05:26:30\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"529504970450542593\";s:5:\"pDate\";s:19:\"2014-11-04 05:26:36\";}}\";"],"post_views_count":["3725","3725"],"fsb_social_facebook":["0"],"fsb_social_twitter":["1"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern.png","width":852,"height":502},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern-620x365.png","width":620,"height":365},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern.png","width":852,"height":502},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Factory-Method-Design-Pattern.png","width":852,"height":502}}},{"id":6579,"type":"post","slug":"builder-design-pattern-java","url":"http:\/\/stacktips.com\/tutorials\/design-patterns\/builder-design-pattern-java","status":"publish","title":"Builder Design Pattern In Java","title_plain":"Builder Design Pattern In Java","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Builder Design Pattern In Java' data-link='http:\/\/stacktips.com\/tutorials\/design-patterns\/builder-design-pattern-java' data-summary='Over the course of this article, we will examine Builder design pattern in Java. Builder design pattern belongs to the creational family of pattern, that control the object instantiation process. Builder design pattern simplifies the object instantiation process for complex objects.'><\/div>\n<p>Over the course of this article, we will examine Builder design pattern in Java. Builder design pattern belongs to the creational family of pattern, that control the object instantiation process. Builder design pattern simplifies the object instantiation process for complex objects. The definition of Builder design pattern as provided in the original Gang of Four book is,<\/p>\n<p class=\"definition\"> Separates the construction of a complex object from its representation so that the same construction process can create different representations.<\/p>\n<p>Let us understand this pattern in a simpler term. In Java for instantiating objects we need to pass parameters to its class constructor. What if we have different combinations of parameters required to create objects and some of them are mandatory and some are optional? We can overload the class constructor with different combinations to achieve this.<\/p>\n<p>Instead of using numerous constructors, the builder pattern uses another object, a builder, that receives each initialization parameter step by step and then returns the resulting constructed object at once.<\/p>\n<h1>Builder Design Pattern Example<\/h1>\n<p>Let us take an example of a cafe preparing a meal. For preparing a meal there are various steps being performed, for example, choosing sandwich, adding sides, drink, offer, etc. There can be different combination of meal created during the process. In such cases preparing a meal is difficult than it is expected. Let us solve this issue by using builder design pattern.<\/p>\n<p><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Builder-Design-Pattern-Java.png\"><img class=\"aligncenter size-medium wp-image-6580\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Builder-Design-Pattern-Java-620x382.png\" alt=\"Builder Design Pattern Java\" width=\"620\" height=\"382\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Builder-Design-Pattern-Java-620x382.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Builder-Design-Pattern-Java-300x185.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Builder-Design-Pattern-Java-370x228.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Builder-Design-Pattern-Java.png 761w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/center>In the above class diagram,<\/p>\n<ol style=\"padding-left: 30px;\">\n<li>The <code>MealBuilder<\/code> specifies an abstract interface for creating parts of a Meal.<\/li>\n<li>The <code>SandwichMealBuilder<\/code> is an concrete builder constructs and assembles parts of the product by implementing the MealBuilder interface.<\/li>\n<li>The <code>MealDirector<\/code> constructs an object using the MealBuilder interface.<\/li>\n<li>The <code>Meal<\/code> is the object which we are intended to create during this process<\/li>\n<\/ol>\n<h3>Meal.java<\/h3>\n<pre class=\"prettyprint lang-java\">package com.javatechig.designpattern.builder;\r\n\r\npublic class Meal {\r\n\tpublic String sandwich;\r\n\tpublic String sideOrder;\r\n\tpublic String drink;\r\n\tpublic String offer;\r\n\tpublic double price;\r\n\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn \"Sandwich=\" + sandwich + \" Side Order=\" + sideOrder + \" Drink=\"\r\n\t\t\t\t+ drink + \" Offer=\" + offer + \" Price=\" + price;\r\n\t}\r\n}\r\n<\/pre>\n<h3>MealBuilder.java<\/h3>\n<pre class=\"prettyprint lang-java\">package com.javatechig.designpattern.builder;\r\n\r\npublic interface MealBuilder {\t\r\n\tpublic abstract void addSandwich(String sandwich);\r\n\tpublic abstract void addSides(String sides);\r\n\tpublic abstract void addDrink(String drink);\r\n\tpublic abstract void addOffer(String coupon);\r\n\tpublic abstract void setPrice(double price);\r\n\tpublic abstract Meal getMeal();\r\n}\r\n<\/pre>\n<h3>SandwichMealBuilder.java<\/h3>\n<pre class=\"prettyprint lang-java\">package com.javatechig.designpattern.builder;\r\n\r\npublic class SandwichMealBuilder implements MealBuilder {\r\n\tprivate Meal _meal = new Meal();\r\n\r\n\t@Override\r\n\tpublic void addSandwich(String sandwich) {\r\n\t\t_meal.sandwich = sandwich;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void addSides(String sides) {\r\n\t\t_meal.sideOrder = sides;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void addDrink(String drink) {\r\n\t\t_meal.drink = drink;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void addOffer(String coupon) {\r\n\t\t_meal.offer = coupon;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void setPrice(double price) {\r\n\t\t_meal.price = price;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Meal getMeal() {\r\n\t\treturn _meal;\r\n\t}\r\n}\r\n<\/pre>\n<h3>MealDirector.java<\/h3>\n<pre class=\"prettyprint lang-java\">package com.javatechig.designpattern.builder;\r\n\r\npublic class MealDirector {\r\n\t\r\n\tpublic void makeMeal(MealBuilder mealBuilder) {\r\n\t\t\r\n\t\tmealBuilder.addSandwich(\"Hamburger\");\r\n\t\tmealBuilder.addSides(\"Fries\");\r\n\t\tmealBuilder.addDrink(\"Coke\");\r\n\t\tmealBuilder.addOffer(\"Weekend Bonanza\");\r\n\t\tmealBuilder.setPrice(5.99);\r\n\t}\r\n}\r\n<\/pre>\n<h3>Client.java<\/h3>\n<pre class=\"prettyprint lang-java\">package com.javatechig.designpattern.builder;\r\n\r\npublic class Client {\r\n\tpublic static void main(String[] args) {\t\t\r\n\t\tMealBuilder pizzaBuilder = new SandwichMealBuilder();\r\n\t\tMealDirector director = new MealDirector();\r\n\t\tdirector.makeMeal(pizzaBuilder);\r\n\t\t\r\n\t\tMeal meal = pizzaBuilder.getMeal();\r\n\t\tSystem.out.println(meal.toString());\r\n\t}\r\n}\r\n<\/pre>\n","excerpt":"<p>Over the course of this article, we will examine Builder design pattern in Java. Builder design pattern belongs to the creational family of pattern, that control the object instantiation process. Builder design pattern simplifies the object instantiation process for complex objects.<\/p>\n","date":"2014-11-03 16:10:11","modified":"2015-03-17 23:43:26","categories":[{"id":8,"slug":"design-patterns","title":"Design Patterns","description":"We have compiled set of basic and advance java design pattern tutorials to help you get started with various foundational java design patterns. This series focuses on the examination of various foundational java design pattern tutorials.","parent":297,"post_count":12}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":6580,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Builder-Design-Pattern-Java.png","slug":"builder-design-pattern-java","title":"Builder Design Pattern Java","description":"Builder Design Pattern Java","caption":"","parent":6579,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Builder-Design-Pattern-Java.png","width":761,"height":470},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Builder-Design-Pattern-Java-620x382.png","width":620,"height":382},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Builder-Design-Pattern-Java.png","width":761,"height":470},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Builder-Design-Pattern-Java.png","width":761,"height":470},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Builder-Design-Pattern-Java.png","width":761,"height":470},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Builder-Design-Pattern-Java.png","width":761,"height":470},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Builder-Design-Pattern-Java.png","width":761,"height":470}}}],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3186294961"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-11-03 10:40:30\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"38f5d74e73594f41798314e0ec843233\";s:5:\"pDate\";s:19:\"2014-11-03 10:40:30\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_910846985594223\";s:5:\"pDate\";s:19:\"2014-11-03 10:42:38\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:211:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"IP\";s:5:\"pDate\";s:19:\"2014-11-03 10:40:23\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"2PwsIE\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/2PwsIE\/comments\";s:5:\"pDate\";s:19:\"2014-11-03 10:40:21\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:101665160391;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/101665160391\";s:5:\"pDate\";s:19:\"2014-11-03 10:40:31\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"529221550185017345\";s:5:\"pDate\";s:19:\"2014-11-03 10:40:24\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"cf_url":[""],"post_views_count":["2046"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150}}},{"id":6562,"type":"post","slug":"prototype-design-pattern-java","url":"http:\/\/stacktips.com\/tutorials\/design-patterns\/prototype-design-pattern-java","status":"publish","title":"Prototype Design Pattern In Java","title_plain":"Prototype Design Pattern In Java","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Prototype Design Pattern In Java' data-link='http:\/\/stacktips.com\/tutorials\/design-patterns\/prototype-design-pattern-java' data-summary='Prototype design pattern belongs to the structural family of pattern. It is used when the type of objects to create is determined by a prototypical instance, which is cloned to produce new objects'><\/div>\n<p>Over the course of this article, we will examine Prototype design pattern in Java. Prototype design pattern belongs to the creational\u00a0family of pattern. It is used when the type of objects to create is determined by a prototypical instance, which is cloned to produce new objects. In a simpler term, using prototype pattern, we will create new instances through cloning existing instances.<\/p>\n<p>Creating instance in java is one of the costly operation. It costs time and resources. If there is a scope to avoid object creation process, by just copying the existing object, then won&#8217;t it be great? Prototype design patterns answers that problem.<\/p>\n<p>Use the prototype\u00a0design pattern when,<\/p>\n<ol style=\"padding-left: 30px;\">\n<li>When specifying new objects by changing an existing objects structure<\/li>\n<li>Speeds up instantiation of large, dynamically loaded classes<\/li>\n<\/ol>\n<h2>Prototype Design Pattern Example<\/h2>\n<p>The Hampstead Cake company are well known for providing quality birthday cheese cakes in London. For each order the cheese cake has to be customized with recipients name, however the ingredients and taste remains the same. The cake company is getting inundated orders and now struggling to deliver them. The trouble is, it is taking too long to specify ingredients and build cheese cake for each order. That way they cannot produce enough cakes. How about you just produce a single cheesecake, and clone it multiple times, and then customize each one?<\/p>\n<p>In this example, CakeStore class is the client. The client creates multiple prototypical \u00a0instances by calling <code>prepareCake()<\/code> method.<\/p>\n<p><center><br \/>\n<a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Prototype-Design-Pattern.png\"><img class=\"aligncenter wp-image-6575 size-full\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Prototype-Design-Pattern.png\" alt=\"Prototype Design Pattern\" width=\"609\" height=\"459\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Prototype-Design-Pattern.png 609w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Prototype-Design-Pattern-300x226.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Prototype-Design-Pattern-370x278.png 370w\" sizes=\"(max-width: 609px) 100vw, 609px\" \/><\/a><\/center><\/p>\n<h3>Cake.java<\/h3>\n<pre class=\"prettyprint lang-java\">package com.javatechig.designpattern.prototype;\r\n\r\npublic interface Cake extends Cloneable {\r\n\r\n\tpublic Cake prepareCake();\r\n}\r\n<\/pre>\n<h3>CheeseCake.java<\/h3>\n<pre class=\"prettyprint lang-java\">package com.javatechig.designpattern.prototype;\r\n\r\npublic class CheeseCake implements Cake {\r\n\r\n\tprivate String sugar;\r\n\tprivate String butter;\r\n\tprivate String cheese;\r\n\tprivate String name;\r\n\r\n\tpublic Cake prepareCake() {\r\n\t\tCake cake = null;\r\n\t\ttry {\r\n\t\t\tcake = (Cake) super.clone();\r\n\t\t} catch (CloneNotSupportedException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn cake;\r\n\t}\r\n\r\n\tvoid addSugar(String sugar) {\r\n\t\tthis.sugar = sugar;\r\n\t}\r\n\r\n\tvoid addButter(String butter) {\r\n\t\tthis.butter = butter;\r\n\t}\r\n\r\n\tpublic void addCheese(String cheese) {\r\n\t\tthis.cheese = cheese;\r\n\t}\r\n\r\n\tpublic void setName(String name) {\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn \"Sugar:\" + sugar + \", Butter:\" + butter + \", Name:\" + name\r\n\t\t\t\t+ \", Cheese:\" + cheese;\r\n\t}\r\n\r\n}\r\n<\/pre>\n<h3>CakeStore.java<\/h3>\n<pre class=\"prettyprint lang-java\">package com.javatechig.designpattern.prototype;\r\n\r\npublic class CakeStore {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\t\/* Cheese cake preparation *\/\r\n\t\tCheeseCake cake = new CheeseCake();\r\n\t\tcake.addSugar(\"100g\");\r\n\t\tcake.addButter(\"200g\");\r\n\t\tcake.addCheese(\"Acapella\");\r\n\t\tSystem.out.println(\"Cake = \" + cake.toString());\r\n\r\n\t\t\r\n\t\t\/* Order with custom name *\/\r\n\t\tCheeseCake cake1 = (CheeseCake) cake.prepareCake();\r\n\t\tcake1.setName(\"Bastien\");\r\n\t\tSystem.out.println(\"Cake1 = \" + cake1.toString());\r\n\r\n\r\n\t\t\/* Order with custom name and customized cheese *\/\r\n\t\tCheeseCake cake2 = (CheeseCake) cake.prepareCake();\r\n\t\tcake2.addCheese(\"Extra Cheese\");\r\n\t\tcake2.setName(\"Adams\");\r\n\t\tSystem.out.println(\"Cake3 = \" + cake2.toString());\r\n\t}\r\n}\r\n<\/pre>\n<h3>Output<\/h3>\n<pre>Cake = Sugar:100g, Butter:200g, Name:null, Cheese:Acapella\r\nCake1 = Sugar:100g, Butter:200g, Name:Bastien, Cheese:Acapella\r\nCake3 = Sugar:100g, Butter:200g, Name:Adams, Cheese:Extra Cheese\r\n<\/pre>\n","excerpt":"<p>Prototype design pattern belongs to the structural family of pattern. It is used when the type of objects to create is determined by a prototypical instance, which is cloned to produce new objects<\/p>\n","date":"2014-10-31 00:02:33","modified":"2014-11-05 23:37:51","categories":[{"id":8,"slug":"design-patterns","title":"Design Patterns","description":"We have compiled set of basic and advance java design pattern tutorials to help you get started with various foundational java design patterns. This series focuses on the examination of various foundational java design pattern tutorials.","parent":297,"post_count":12}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":6575,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Prototype-Design-Pattern.png","slug":"prototype-design-pattern","title":"Prototype Design Pattern","description":"Prototype Design Pattern","caption":"","parent":6562,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Prototype-Design-Pattern.png","width":609,"height":459},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Prototype-Design-Pattern.png","width":609,"height":459},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Prototype-Design-Pattern.png","width":609,"height":459},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Prototype-Design-Pattern.png","width":609,"height":459},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Prototype-Design-Pattern.png","width":609,"height":459},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Prototype-Design-Pattern.png","width":609,"height":459},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Prototype-Design-Pattern.png","width":609,"height":459}}}],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3174092076"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:133:\"a:1:{i:0;a:3:{s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:4:\"doBG\";i:0;}}\";"],"snapDA":["s:100:\"a:1:{i:0;a:3:{s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:4:\"doDA\";i:0;}}\";"],"snapDI":["s:102:\"a:1:{i:0;a:3:{s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:4:\"doDI\";i:0;}}\";"],"snapDL":["s:102:\"a:1:{i:0;a:3:{s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:4:\"doDL\";i:0;}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_908846932460895\";s:5:\"pDate\";s:19:\"2014-10-30 18:33:06\";}}\";"],"snapFF":["s:151:\"a:1:{i:0;a:5:{s:4:\"doFF\";i:0;s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapIP":["s:98:\"a:1:{i:0;a:3:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"2dySyv\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/2dySyv\/comments\";s:5:\"pDate\";s:19:\"2014-10-30 18:33:10\";}}\";"],"snapTR":["s:366:\"a:1:{i:0;a:8:{s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:4:\"doTR\";i:0;}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"527890981559869440\";s:5:\"pDate\";s:19:\"2014-10-30 18:33:11\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["1888"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150}}},{"id":6477,"type":"post","slug":"adapter-design-pattern-in-java","url":"http:\/\/stacktips.com\/tutorials\/design-patterns\/adapter-design-pattern-in-java","status":"publish","title":"Adapter Design Pattern In Java","title_plain":"Adapter Design Pattern In Java","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Adapter Design Pattern In Java' data-link='http:\/\/stacktips.com\/tutorials\/design-patterns\/adapter-design-pattern-in-java' data-summary='Over the course of this article, we will examine Adapter design pattern in Java. Java Adapter design pattern allows two incompatible classes to work together by converting the interface of one class into an interface expected by the clients.'><\/div>\n<p>Over the course of this article, we will examine Adapter design pattern in Java. Adapter design pattern belongs to the structural family of pattern, that enables two incompatible interfaces to work together. The Adapter pattern allows two incompatible classes to work together by converting the interface of one class into an interface expected by the clients. This pattern is also known as Wrapper. The definition of Adapter pattern provided in the original Gang of Four book is,<\/p>\n<blockquote>\n<p style=\"text-align: left;\">Convert the interface of a class into another interface clients expect. Adapter lets classes work together that couldn&#8217;t otherwise because of incompatible interfaces.<\/p>\n<\/blockquote>\n<p>In order to understand this pattern, let us have a look into some of the real-time examples of adapter<\/p>\n<ol>\n<li>Suppose you have bought a laptop from India, and in recent past you have just moved to United Kingdom. The electric sockets used in UK is different from the indian electric sockets. And hence, your laptop charger wont work directly. You need to buy an adapter that can charge your indian charger on UK electric socket.<\/li>\n<li>When you have an legacy library interface to be integrated with new system. The new system is not directly accepting the way the legacy library works. As the library is intended to use is not longer on development, we need an adapter to make the two incompatible types to work.<\/li>\n<\/ol>\n<p>In this pattern,<\/p>\n<ol>\n<li>The Client makes a request to the adapter by calling a method on it using the target interface.<\/li>\n<li>The Adapter translates that request into one or more calls on adaptee using adapter interface.<\/li>\n<li>The client receives the result of the call and never knows there is an adapter doing the translation.<\/li>\n<\/ol>\n<p>Use the adapter design pattern when,<\/p>\n<ol >\n<li>You want to use the existing class and its interfaces that meet your interface requirements at your end.<\/li>\n<li>You want to create a reusable class that helps to interface between two incompatible classes.<\/li>\n<\/ol>\n<h2>Adapter Design Pattern Example<\/h2>\n<p>Lloyds bank is an international bank offers services worldwide. For offshore account holders, the tax rate is 0.03%. And, in India it offers two types of accounts, Standard and Platinum. Tax rules are not applied to indian bank accounts. Now the offshore bank is incompatible to Indian account types. We need to design an AccountAdapter to make both the incompatible account types to work together.<\/p>\n<p>In the above example, the interaction diagram will be represented as shown below. Here client is just calling the <code>getBalance()<\/code> method of adapter. Adapter calls <code> getOffshoreBalance()<\/code> on adaptee and returns the result that client is expecting. The getBalance() methods inside Adapter will calculate the account balance by deducing the taxes applied for the offshore account.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Sequence-Diagram.png\"><img class=\"aligncenter wp-image-6479 size-medium\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Sequence-Diagram-620x492.png\" alt=\"Adapter Design Pattern Sequence Diagram\" width=\"620\" height=\"492\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Sequence-Diagram-620x492.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Sequence-Diagram-300x238.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Sequence-Diagram-370x293.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Sequence-Diagram.png 701w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<p>In this example we are using object adapters. The object adapters uses composition to adapt one incompatible interface to another. The adapter inherits the target interface that the client expects to see, while it holds an instance of adaptee. This enables the client and the adaptee to be completely decoupled from each other. Only the adapter knows about both of them.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Class-Diagram.png\"><img class=\"aligncenter wp-image-6478 size-medium\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Class-Diagram-620x330.png\" alt=\"Adapter Design Pattern Class Diagram\" width=\"620\" height=\"330\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Class-Diagram-620x330.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Class-Diagram-300x159.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Class-Diagram-800x426.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Class-Diagram-900x479.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Class-Diagram-370x197.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Class-Diagram.png 920w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/p>\n<h3>OffshoreAccount.java<\/h3>\n<pre class=\"prettyprint lang-java\">package com.javatechig.designpattern.adapter;\r\n\r\npublic class OffshoreAccount {\r\n\tprivate double balance;\r\n\r\n\t\/** The tax for the country where the account is *\/\r\n\tprivate static final double TAX_RATE = 0.04;\r\n\r\n\tpublic OffshoreAccount(final double balance) {\r\n\t\tthis.balance = balance;\r\n\t}\r\n\r\n\tpublic double getTaxRate() {\r\n\t\treturn TAX_RATE;\r\n\t}\r\n\r\n\tpublic double getOffshoreBalance() {\r\n\t\treturn balance;\r\n\t}\r\n\r\n\tpublic void debit(final double debit) {\r\n\t\tif (balance &gt;= debit) {\r\n\t\t\tbalance -= debit;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void credit(final double credit) {\r\n\t\tbalance += balance;\r\n\t}\r\n}\r\n<\/pre>\n<h3>Account.java<\/h3>\n<pre class=\"prettyprint lang-java\">package com.javatechig.designpattern.adapter;\r\n\r\npublic interface Account {\r\n    public double getBalance();    \r\n    public boolean isOverdraftAvailable();    \r\n    public void credit(final double credit);\r\n}\r\n<\/pre>\n<h3>AbstractAccount.java<\/h3>\n<pre class=\"prettyprint lang-java\">package com.javatechig.designpattern.adapter;\r\n\r\npublic class AbstractAccount implements Account {\r\n\tprivate double balance;\t\r\n\tprivate boolean isOverdraftAvailable;\r\n\r\n\tpublic AbstractAccount(final double size) {\r\n\t\tthis.balance = size;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic double getBalance() {\r\n\t\treturn balance;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean isOverdraftAvailable() {\r\n\t\treturn isOverdraftAvailable;\r\n\t}\r\n\r\n\tpublic void setOverdraftAvailable(boolean isOverdraftAvailable) {\r\n\t\tthis.isOverdraftAvailable = isOverdraftAvailable;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn getClass().getSimpleName() + \" Balance=\" + getBalance()\r\n\t\t\t\t+ \" Overdraft:\" + isOverdraftAvailable();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void credit(final double credit) {\r\n\t\tbalance += credit;\r\n\t}\r\n}\r\n<\/pre>\n<h3>PlatinumAccount.java<\/h3>\n<pre class=\"prettyprint lang-java\">public class PlatinumAccount extends AbstractAccount {\r\n\r\n\tpublic PlatinumAccount(final double balance) {\r\n\t\tsuper(balance);\r\n\t\tsetOverdraftAvailable(true);\r\n\t}\r\n}\r\n<\/pre>\n<h3>StandardAccount.java<\/h3>\n<pre class=\"prettyprint lang-java\">public class StandardAccount extends AbstractAccount {\r\n\r\n\tpublic StandardAccount(final double balance) {\r\n\t\tsuper(balance);\r\n\t\tsetOverdraftAvailable(false);\r\n\t}\r\n}\r\n<\/pre>\n<h3>AccountAdapter.java<\/h3>\n<pre class=\"prettyprint lang-java\">public class AccountAdapter extends AbstractAccount {\r\n\r\n\t\/\/ Adaptee - The class we are adapting from\r\n\tprivate OffshoreAccount offshoreAccount;\r\n\r\n\t\/**\r\n\t * \r\n\t * @param offshoreAccount\r\n\t *            the instance of OffshoreAccount we are going to adapt from.\r\n\t *\/\r\n\tpublic AccountAdapter(final OffshoreAccount offshoreAccount) {\r\n\t\tsuper(offshoreAccount.getOffshoreBalance());\r\n\r\n\t\t\/\/ holds adaptee reference\r\n\t\tthis.offshoreAccount = offshoreAccount;\r\n\t}\r\n\r\n\t\/**\r\n\t * Calculate offshore account balance after deducting the tax owed for\r\n\t * offshore account\r\n\t *\/\r\n\t@Override\r\n\tpublic double getBalance() {\r\n\t\tfinal double taxRate = offshoreAccount.getTaxRate();\r\n\t\tfinal double grossBalance = getBalance();\r\n\r\n\t\tfinal double taxableBalance = grossBalance * taxRate;\r\n\t\tfinal double balanceAfterTax = grossBalance - taxableBalance;\r\n\t\treturn balanceAfterTax;\r\n\t}\r\n}\r\n<\/pre>\n<h3>Client.java<\/h3>\n<pre class=\"prettyprint lang-java\">public class AdapterTest {\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tStandardAccount sa = new StandardAccount(2000);\r\n\t\tSystem.out.println(\"Account Balance= \" + sa.getBalance());\r\n\t\t\r\n\t\t\/\/Calling getBalance() on Adapter\r\n\t\tAccountAdapter adapter = new AccountAdapter(new OffshoreAccount(2000));\r\n\t\tSystem.out.println(\"Account Balance= \" + adapter.getBalance());\t\t\r\n\t}\r\n}\r\n<\/pre>\n","excerpt":"<p>Over the course of this article, we will examine Adapter design pattern in Java. Java Adapter design pattern allows two incompatible classes to work together by converting the interface of one class into an interface expected by the clients.<\/p>\n","date":"2014-10-29 00:37:04","modified":"2015-03-09 21:28:21","categories":[{"id":8,"slug":"design-patterns","title":"Design Patterns","description":"We have compiled set of basic and advance java design pattern tutorials to help you get started with various foundational java design patterns. This series focuses on the examination of various foundational java design pattern tutorials.","parent":297,"post_count":12}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":6478,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Class-Diagram.png","slug":"adapter-design-pattern-class-diagram","title":"Adapter Design Pattern Class Diagram","description":"Adapter Design Pattern Class Diagram","caption":"","parent":6477,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Class-Diagram.png","width":920,"height":490},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Class-Diagram-620x330.png","width":620,"height":330},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Class-Diagram.png","width":920,"height":490},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Class-Diagram.png","width":920,"height":490},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Class-Diagram.png","width":920,"height":490}}},{"id":6479,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Sequence-Diagram.png","slug":"adapter-design-pattern-sequence-diagram","title":"Adapter Design Pattern Sequence Diagram","description":"Adapter Design Pattern Sequence Diagram","caption":"","parent":6477,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Sequence-Diagram.png","width":701,"height":557},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Sequence-Diagram-620x492.png","width":620,"height":492},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Sequence-Diagram.png","width":701,"height":557},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Sequence-Diagram.png","width":701,"height":557},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Sequence-Diagram.png","width":701,"height":557},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Adapter-Design-Pattern-Sequence-Diagram.png","width":701,"height":557}}}],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3166322699"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-10-28 19:07:44\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"f795ee680179276cb8a2bb83ba8372f2\";s:5:\"pDate\";s:19:\"2014-10-28 19:07:36\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_907896832555905\";s:5:\"pDate\";s:19:\"2014-10-28 19:07:36\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:211:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"IP\";s:5:\"pDate\";s:19:\"2014-10-28 19:07:26\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"1tYzrw\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/1tYzrw\/comments\";s:5:\"pDate\";s:19:\"2014-10-28 19:07:43\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:101190422346;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/101190422346\";s:5:\"pDate\";s:19:\"2014-10-28 19:07:27\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"527174834547994624\";s:5:\"pDate\";s:19:\"2014-10-28 19:07:28\";}}\";"],"cf_url":[""],"post_views_count":["5492"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["2"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/11\/Design-Pattern-Tutorials.png","width":248,"height":150}}},{"id":6439,"type":"post","slug":"observer-design-pattern-in-java","url":"http:\/\/stacktips.com\/tutorials\/design-patterns\/observer-design-pattern-in-java","status":"publish","title":"Observer Design Pattern In Java","title_plain":"Observer Design Pattern In Java","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Observer Design Pattern In Java' data-link='http:\/\/stacktips.com\/tutorials\/design-patterns\/observer-design-pattern-in-java' data-summary='Observer design pattern defines one-to-many dependency between objects in which one object changes state, all its dependents are notified. Observer design pattern sometimes called as publisher-subscriber design pattern in networked models.'><\/div>\n<p>Over the course of this article, we will examine yet another heavily used design patterns, the Observer Design Pattern In Java.<\/p>\n<p>The observer design pattern belongs to behavioural family of patterns, that defines a common communication pattern between objects. Observer design pattern defines one-to-many dependency between objects in which one object changes state, all its dependents are notified. Observer design pattern sometimes called as publisher-subscriber design pattern in networked models. Dependent objects are called as observers and the object they are registering to, is called Subject. When subject changes its state, all the observers gets notified.<\/p>\n<p>In this pattern,<\/p>\n<ol>\n<li>Observers register themselves with the subject.<\/li>\n<li>Subject maintains the list of its \u00a0dependents (Observers), and it broadcast notification \u00a0to all its dependents when it&#8217;s state changes.<\/li>\n<li>Observers de-register explicitly when they no more want to be notified.<\/li>\n<\/ol>\n<p>In order to understand this pattern, let us have a look into some of the real-time examples of observer design pattern<\/p>\n<ol>\n<li>This design pattern is widely used on most of the user interface frameworks<\/li>\n<li>Most commonly used in most of the MVC (Model-View-Controller) models<\/li>\n<li>Consider the different charts in an excel document. A chart is drawn based on the data shown on grid. If there is any change to data in excel grid, the chart is automatically redrawn.<\/li>\n<\/ol>\n<h1>Example<\/h1>\n<p>In this example, let us take the case of a news publisher. In typical flow, the new readers subscribe for news. Once a new news is published by publisher, all the observers gets notified. Here the publisher is act as subject and subscribers are observers. A single publisher can have one or many subscribers.<\/p>\n<p><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram.png\"><img class=\"aligncenter wp-image-6440 size-full\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram.png\" alt=\"Observer Design Pattern Class Diagram\" width=\"923\" height=\"599\" \/><\/a><\/center>The above class diagram represents, two observers \u00a0<code>Subscriber1<\/code> and <code>Subscriber2<\/code> register with publisher. Once there is a change in Publisher both the subscribers gets notified.<\/p>\n<h3>Observer.java<\/h3>\n<pre class=\"prettyprint lang-java\">public interface Observer {\r\n\t public void update(String editon);\r\n}\r\n<\/pre>\n<h3>Subscriber1.java<\/h3>\n<pre class=\"prettyprint lang-java\">public class Subscriber1 implements Observer {\r\n\r\n\t@Override\r\n\tpublic void update(String  edition) {\r\n\t\tSystem.out.println(\"New Edition from Subscriber1\");\r\n\t}\r\n}\r\n<\/pre>\n<h3>Subscriber2.java<\/h3>\n<pre class=\"prettyprint lang-java\">public class Subscriber2 implements Observer {\r\n\r\n\t@Override\r\n\tpublic void update(String  edition) {\r\n\t\tSystem.out.println(\"New Edition from Subscriber2\");\r\n\t}\r\n}\r\n<\/pre>\n<h3>Subject.java<\/h3>\n<pre class=\"prettyprint lang-java\">public interface Subject {\r\n\tpublic void registerObserver(Observer observer);\r\n\r\n\tpublic void removeObserver(Observer observer);\r\n\r\n\tpublic void notifyObservers();\r\n}\r\n<\/pre>\n<h3>Publisher.java<\/h3>\n<pre class=\"prettyprint lang-java\">import java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Publisher implements Subject {\r\n\r\n\tprivate List&lt;Observer&gt; _observers = new ArrayList&lt;Observer&gt;();\r\n\r\n\t@Override\r\n\tpublic void registerObserver(Observer observer) {\r\n\t\tSystem.out.println(\"Registered observer\");\t\t\r\n\t\t_observers.add(observer);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void removeObserver(Observer observer) {\r\n\t\tSystem.out.println(\"Deregister observer\");\r\n\t\t_observers.remove(observer);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void notifyObservers() {\r\n\t\t\r\n\t\tfor (Observer observer : _observers) {\r\n\t\t\tobserver.update(\"Weekly Edition\");\r\n\t\t}\r\n\t}\r\n}\r\n<\/pre>\n<h3>Test.java<\/h3>\n<pre class=\"prettyprint lang-java\">public class Test {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\t\r\n\t\t\/* News Publisher *\/\r\n\t\tSubject publisher = new Publisher();\r\n\t\t\r\n\t\t\/* registering observers *\/\r\n\t\tObserver subscriber1 = new Subscriber1();\r\n\t\tpublisher.registerObserver(subscriber1);\r\n\t\t\r\n\t\tObserver subscriber2 = new Subscriber2();\r\n\t\tpublisher.registerObserver(subscriber2);\r\n\t\t\r\n\t\t\/* Notify observers *\/\r\n\t\tpublisher.notifyObservers();\r\n\t\t\r\n\t\t\/* Delete observers *\/\r\n\t\tpublisher.removeObserver(subscriber2);\r\n\t\t\r\n\t\t\/* Notify observers *\/\r\n\t\tpublisher.notifyObservers();\r\n\t}\r\n}\r\n<\/pre>\n<h3>Output<\/h3>\n<pre>Registered observer\r\nRegistered observer\r\nNew Edition from Subscriber1\r\nNew Edition from Subscriber2\r\nDeregister observer\r\nNew Edition from Subscriber1\r\n\r\n<\/pre>\n<h1>Advantages<\/h1>\n<ol>\n<li>Provides loose coupling between objects called observer and observable. The subject only know the list of observers it don\u2019t care about their implementation. All the observers are notified by subject in a single message broadcast.<\/li>\n<li>You can add and remove observers at anytime. No modification is need to be done to the subject to add new observers.<\/li>\n<\/ol>\n<h1>Drawbacks<\/h1>\n<ol>\n<li>Sometimes if there is a problem, it becomes complex to debug between the chain of observers.<\/li>\n<li>The subject holds reference of all the observers, if we not unregister the object it can cause memory leak. This common problem is called as lapsed listener problem.<\/li>\n<\/ol>\n<h1>Rules of thumb<\/h1>\n<ol>\n<li>Explicitly unregister the observers, when no longer it is required to listen to Subject.<\/li>\n<li>It is recommended for subject to hold, weakreference of objects to avoid memory leak.<\/li>\n<\/ol>\n","excerpt":"<p>Observer design pattern defines one-to-many dependency between objects in which one object changes state, all its dependents are notified. Observer design pattern sometimes called as publisher-subscriber design pattern in networked models.<\/p>\n","date":"2014-10-24 20:48:07","modified":"2015-01-19 20:56:11","categories":[{"id":8,"slug":"design-patterns","title":"Design Patterns","description":"We have compiled set of basic and advance java design pattern tutorials to help you get started with various foundational java design patterns. This series focuses on the examination of various foundational java design pattern tutorials.","parent":297,"post_count":12}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":6440,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram.png","slug":"observer-design-pattern-class-diagram","title":"Observer Design Pattern Class Diagram","description":"Observer Design Pattern Class Diagram","caption":"","parent":6439,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram-e1414250905440.png","width":754,"height":470},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram-e1414250905440-620x386.png","width":620,"height":386},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram-e1414250905440.png","width":754,"height":470},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram-e1414250905440.png","width":754,"height":470},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram-e1414250905440.png","width":754,"height":470},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram-e1414250905440.png","width":754,"height":470},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram-e1414250905440.png","width":754,"height":470}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3151765049"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"1EpsX3\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/1EpsX3\/comments\";s:5:\"pDate\";s:19:\"2014-10-24 15:19:34\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:100833198456;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/100833198456\";s:5:\"pDate\";s:19:\"2014-10-24 15:19:30\";}}\";"],"price":[""],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-10-24 15:19:27\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"fb8a9e8e6ce8c1e0f6ebb52ce0375083\";s:5:\"pDate\";s:19:\"2014-10-24 15:19:28\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_905734979438757\";s:5:\"pDate\";s:19:\"2014-10-24 15:19:26\";}}\";"],"snapIP":["s:211:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"IP\";s:5:\"pDate\";s:19:\"2014-10-24 15:19:35\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"525667868109598720\";s:5:\"pDate\";s:19:\"2014-10-24 15:19:20\";}}\";"],"post_views_count":["3395","3395"],"fsb_social_facebook":["11"],"fsb_social_twitter":["3"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram-e1414250905440.png","width":754,"height":470},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram-e1414250905440-620x386.png","width":620,"height":386},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram-e1414250905440.png","width":754,"height":470},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram-e1414250905440.png","width":754,"height":470},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram-e1414250905440.png","width":754,"height":470},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram-e1414250905440.png","width":754,"height":470},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Observer-Design-Pattern-Class-Diagram-e1414250905440.png","width":754,"height":470}}},{"id":6362,"type":"post","slug":"google-introduce-new-website-designers-tp-learn-material-design","url":"http:\/\/stacktips.com\/design\/google-introduce-new-website-designers-tp-learn-material-design","status":"publish","title":"Google Introduce New Website For Designers to Learn Material Design","title_plain":"Google Introduce New Website For Designers to Learn Material Design","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Google Introduce New Website For Designers to Learn Material Design' data-link='http:\/\/stacktips.com\/design\/google-introduce-new-website-designers-tp-learn-material-design' data-summary='Google has invested hugely on bringing life to design by introducing a complete new design philosophy for visual, motion, and user interaction. They name it as material design.'><\/div>\n<p>On\u00a07th annual Google I\/O developer conference, Google introduced its upcoming android operating system Android Lollypop. One of the key focus of this event\u00a0was Android Lollypop and and material design.\u00a0Google has made huge investment for\u00a0bringing life to design by introducing a complete new design philosophy for visual, motion, and user interaction. They call\u00a0it as\u00a0material design!<\/p>\n<p>Although, Android is one among leading mobile operating system, it was falling behind its competitor iOS when it comes to visual design. Apple&#8217;s design first approach, provides rich and ease to use to experience for smartphone\u00a0users. Google&#8217;s material design certainly a footstep, towards improvising platform design and to provide rich user experience with visual language.<\/p>\n<p>Checkout Google&#8217;s <a href=\"http:\/\/www.google.com\/design\/spec\/material-design\/introduction.html\" target=\"_blank\"><strong>new website<\/strong><\/a> that helps application designers and developers to learn and adopt material design principles. Here, you will find all the resources that helps to understand the key elements of material design.\u00a0It covers the various topics such as, introduction\u00a0to available android\u00a0visual components and layouts , platform design guidelines and recommendation, usage of fonts, enabling different accessibility features, patterns and user actions. Hope to see some appealing Android L applications soon on Google Play!<\/p>\n<p>[col type=&#8221;half&#8221;]<\/p>\n<div style=\"width: 640px; \" class=\"wp-video\"><!--[if lt IE 9]><script>document.createElement('video');<\/script><![endif]--><br \/>\n<video class=\"wp-video-shortcode\" id=\"video-6362-1\" width=\"640\" height=\"360\" preload=\"metadata\" controls=\"controls\"><source type=\"video\/webm\" src=\"http:\/\/material-design.storage.googleapis.com\/videos\/animations-meaningfultransitions-hierarchical_transitions_topLevel_large_xhdpi.webm?_=1\" \/><a href=\"http:\/\/material-design.storage.googleapis.com\/videos\/animations-meaningfultransitions-hierarchical_transitions_topLevel_large_xhdpi.webm\">http:\/\/material-design.storage.googleapis.com\/videos\/animations-meaningfultransitions-hierarchical_transitions_topLevel_large_xhdpi.webm<\/a><\/video><\/div>\n<p>[\/col]<\/p>\n<p>[col type=&#8221;half last&#8221;]<\/p>\n<div style=\"width: 640px; \" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-6362-2\" width=\"640\" height=\"360\" preload=\"metadata\" controls=\"controls\"><source type=\"video\/webm\" src=\"http:\/\/material-design.storage.googleapis.com\/videos\/animation-meaningfultransitions-view_contact_large_xhdpi.webm?_=2\" \/><a href=\"http:\/\/material-design.storage.googleapis.com\/videos\/animation-meaningfultransitions-view_contact_large_xhdpi.webm\">http:\/\/material-design.storage.googleapis.com\/videos\/animation-meaningfultransitions-view_contact_large_xhdpi.webm<\/a><\/video><\/div>\n<p>[\/col]<\/p>\n<p>&nbsp;<\/p>\n","excerpt":"<p>Google has invested hugely on bringing life to design by introducing a complete new design philosophy for visual, motion, and user interaction. They name it as material design.<\/p>\n","date":"2014-10-18 05:13:45","modified":"2016-05-29 19:22:56","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":149,"slug":"design","title":"Design","description":"","parent":0,"post_count":6},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[{"id":259,"slug":"android","title":"Android","description":"","post_count":1},{"id":164,"slug":"android-l","title":"Android L","description":"","post_count":2},{"id":165,"slug":"material-design","title":"Material Design","description":"","post_count":3}],"author":{"id":854,"slug":"guest","name":"Guest","first_name":"Guest","last_name":"Blogger","nickname":"guest","url":"","description":""},"comments":[],"attachments":[{"id":6364,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi.png","slug":"materialdesign-goals-landingimage_large_mdpi","title":"materialdesign-goals-landingimage_large_mdpi","description":"","caption":"","parent":6362,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184204955-620x370.png","width":620,"height":370},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"enclosure":["http:\/\/material-design.storage.googleapis.com\/videos\/animations-meaningfultransitions-hierarchical_transitions_topLevel_large_xhdpi.webm\r\n343049\r\nvideo\/webm\r\n","http:\/\/material-design.storage.googleapis.com\/videos\/animation-meaningfultransitions-view_contact_large_xhdpi.webm\r\n408719\r\nvideo\/webm\r\n"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:100276874056;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/100276874056\";s:5:\"pDate\";s:19:\"2014-10-17 23:43:49\";}}\";"],"snapDI":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:154:\"a:1:{i:0;a:5:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"dsq_thread_id":["3128549949"],"post_views_count":["1724"],"fsb_social_facebook":["1"],"fsb_social_twitter":["0"],"fsb_social_google":["8"],"fsb_social_linkedin":["0"],"slide_template":["default"],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:264:\"a:1:{i:0;a:9:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";s:1:\"1\";s:10:\"msgTFormat\";s:7:\"%TITLE%\";s:9:\"msgFormat\";s:12:\"%RAWEXCERPT%\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFB":["s:272:\"a:1:{i:0;a:10:{s:4:\"doFB\";i:0;s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapIP":["s:138:\"a:1:{i:0;a:5:{s:4:\"doIP\";i:0;s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"],"snapTW":["s:190:\"a:1:{i:0;a:7:{s:4:\"doTW\";i:0;s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:2:\"do\";i:0;}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184204955-620x370.png","width":620,"height":370},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/materialdesign-goals-landingimage_large_mdpi-e1415184279612.png","width":248,"height":150}}},{"id":6272,"type":"post","slug":"export-mbox-outlook-format","url":"http:\/\/stacktips.com\/reviews\/export-mbox-outlook-format","status":"publish","title":"Sponsored : How to Export MBOX into Outlook Format","title_plain":"Sponsored : How to Export MBOX into Outlook Format","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Sponsored : How to Export MBOX into Outlook Format' data-link='http:\/\/stacktips.com\/reviews\/export-mbox-outlook-format' data-summary='MBOX\/MBX it is one of the recommended file format to export and backup outlook mails. It is highly useful simple and easy to use file format that allow users to organize and store e-mail messages on hard drive.'><\/div>\n<p>MBOX\/MBX it is one of the recommended\u00a0file format to export and backup outlook mails. \u00a0It is highly useful simple and easy to use file format that allow users to organize and store e-mail messages on hard drive. MBOX widely accepted by popular emil client applications\u00a0such as AppleMail, MozzilaMail, Thunderbird, Entourage, Spicebird, Pocomail, Eudora, Mulberry, SeaMonkey, Netscape, ClawsMail, OperaMail, Evolution, Sylpheed, Cone, Mutt and Gnu Mail, etc.<\/p>\n<p>In MBOX format all messages for each mailbox are stored as a single text file in a string of concatenated email messages, starting with the \u201cForm\u201d header of the message. This creates more or less long text file containing one email messages after the other. Many Organizations used this MBOX format as it provides expert feature that make a professional choice. This file format is mostly used for business purpose.<\/p>\n<h1>Corruption Reasons in MBOX File<\/h1>\n<p>Due to accumulate or adding lots of data in mailbox, sometime there is a chance to get corrupted but it is not just the only reason, there are various other possible reasons that may corrupt your data. Once MBOX file is corrupted,\u00a0we can\u2019t access or read MBOX containing emails.<\/p>\n<p>CorruptedMBOX\u00a0file are pretty troublesome to agitate. Once corrupted MBOX has to be fastidiously examined and repaired with applicable solution. Its nearly not possible to use a short lived resolution to a corrupted MBOX files and access it. There it\u2019s advised that user to conversion is necessary. Otherwise keep a backup copy of every and each mailbox data. But due to some reasons if you want to switch back to other file format, in such circumstances, you will need a reliable solution that convert their MBOX format to another desired one format.<\/p>\n<p>Many users face various unintentional problems while performing MBOX to Outlook conversion.\u00a0It can be an\u00a0unintentional changes to file, malfunctioning in software, corruption in MBOX files, virus invasions, etc. Below are some of the foremost reasons that may corrupt \u00a0a MBOX backup file.<\/p>\n<ul>\n<li>Corruption in Thunderbird Profile<\/li>\n<li>Malicious Virus attacks on MBOX file<\/li>\n<li>Corruption due to email clients application, can also corrupt mails during execution time or not open properly<\/li>\n<li>Sometime the tool is used by a person contains the issues which corrupt PDF file during the saving process.<\/li>\n<li>In numerous circumstances like \u2013high voltage or power fluctuation, hard disk corruption<\/li>\n<\/ul>\n<p>Below are some of the typical errors messages shown to by\u00a0the email client application perpetually indicates regarding the failure of a MBOX file<\/p>\n<ul>\n<li>Damaged MBOX file or corruption in email messages<\/li>\n<li>Corruption occurs email opening due to Thunderbird crash<\/li>\n<li>Error opening emails<\/li>\n<li>Missing header<\/li>\n<li>Errors in the MBOX\u00a0format<\/li>\n<li>Error processing emails<\/li>\n<li>The file contains invalid coding<\/li>\n<li>Delivering messages to MBOXCL2 format mailboxes with MBOXO or MBOXRD tools will corrupt the mailbox, rendering all subsequently delivered messages<\/li>\n<\/ul>\n<p>If you are struggling to transfer mails or having suspicious problems, you may still be able to recover\/repair it by using a reliable MBOX to PST converter tool that can restore various types of corrupted MBOX problems. There are various tools out there in market, but my pick is IBID Info MBOX to PST converter tool.<\/p>\n<h2>Recover Message from Corrupt MBOX Folder<\/h2>\n<p>In the course of this article, we will see some of the steps that\u00a0help you to resolve MBOX file corruption related issues. In short tips to recover and repair MBOX\/MBX.<\/p>\n<p>First step towards recovering MBOX file is to understand the basic structure of MBOX file. MBOX file stores their data in one single file so number of times the size of MBOX file can become exceeding or become over size. Any types of corruption in this MBOX\u00a0file may effect the ability of accessing or opening individual messages or open all folder.<\/p>\n<p>If MBOX\u00a0file is not badly corrupted you can work around the problem by deleting the index folder or compact the folder or moving all messages another one folder. Like replace corrupt folder to fresh one folder but what to do when this trick doesn\u2019t work and you cannot recover all your messages.<\/p>\n<p>Download <a href=\"http:\/\/www.ibidinfo.com\/product\/mbox-to-pst-converter.html\" target=\"_blank\">IBID Info MBOX to Outlook Converter<\/a> tool and repair MBOX Free with this.IBID Info MBOX to PST Converter software, makes\u00a0corrupted MBOX\u00a0file recovery effortless. This works as one of the reliable tools with a better success rate. This online utility supports the file repairing process of any format of MBOX\u00a0file like MBOXO, MBOXRD, &amp;MBOXCL2 etc.<\/p>\n<p>Highlights\u00a0of IBID Info MBOX Outlook\u00a0Converter<\/p>\n<ol>\n<li>Fix all of the problem and repair corrupt MBOX\u00a0file make accessible in MS Outlook when you perform secure conversion of MBOX to PST format.<\/li>\n<li>Fixes all issues and convert MBOX file to PST, MSG and EML in batch<\/li>\n<li>Preserves the original formatting of email messages.<\/li>\n<li>Convert emails with attachments and merge various MBOX\u00a0file to single PST<\/li>\n<\/ol>\n<p>Follow though the quick steps for converting MBOX to PST format.<\/p>\n<ol>\n<li>Choose a MBOX file<\/li>\n<li>You can select any of MBOX\/MacMBOX\/MBX\/AppleMail files to be convert into PST Format<\/li>\n<li>Add MBOX file<\/li>\n<li>Preview data of selected MBOX file<\/li>\n<li>Export MBOX to PST format<\/li>\n<\/ol>\n","excerpt":"<p>MBOX\/MBX it is one of the recommended file format to export and backup outlook mails.  It is highly useful simple and easy to use file format that allow users to organize and store e-mail messages on hard drive.<\/p>\n","date":"2014-10-14 03:46:10","modified":"2015-03-28 19:55:49","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":117,"slug":"reviews","title":"Reviews","description":"","parent":0,"post_count":8}],"tags":[],"author":{"id":854,"slug":"guest","name":"Guest","first_name":"Guest","last_name":"Blogger","nickname":"guest","url":"","description":""},"comments":[],"attachments":[{"id":6274,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst.png","slug":"ibid-mbox-to-pst","title":"ibid-mbox-to-pst","description":"","caption":"Android Tutorials","parent":6272,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3113820787"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDL":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFB":["s:262:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:154:\"a:1:{i:0;a:5:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:99941888601;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/99941888601\";s:5:\"pDate\";s:19:\"2014-10-13 22:16:48\";}}\";"],"snapTW":["s:181:\"a:1:{i:0;a:6:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"post_views_count":["1356"],"fsb_social_facebook":["3"],"fsb_social_twitter":["4"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/ibid-mbox-to-pst-e1415185134160.png","width":248,"height":141}}},{"id":6198,"type":"post","slug":"java-exception-interview-questions","url":"http:\/\/stacktips.com\/random\/java-exception-interview-questions","status":"publish","title":"Java Exception Interview Questions","title_plain":"Java Exception Interview Questions","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Java Exception Interview Questions' data-link='http:\/\/stacktips.com\/random\/java-exception-interview-questions' data-summary=''><\/div>\n<h3>Q: What is an Exception?<\/h3>\n<p>The exception is said to be thrown whenever an exceptional event occurs in java which signals that something is not correct with the code written and may give unexpected result. An exceptional event is a occurrence of condition which alters the normal program flow. Exceptional handler is the code that does something about the exception.<\/p>\n<h3>Q: Exceptions are defined in which java package?<\/h3>\n<p>All the exceptions are subclasses of <code>java.lang.Exception<\/code><\/p>\n<h3>Q: What is difference between Error and Exception?<\/h3>\n<p>An error is an irrecoverable condition occurring at runtime. Such as OutOfMemory error. These JVM errors and you can not repair them at runtime.Though error can be caught in catch block but the execution of application will come to a halt and is not recoverable. While exceptions are conditions that occur because of bad input etc.<\/p>\n<p>e.g. FileNotFoundException will be thrown if the specified file does not exist. Or a NullPointerException will take place if you try using a null reference. In most of the cases it is possible to recover from an exception (probably by giving user a feedback for entering proper values etc.)<\/p>\n<h3>Q: How are the exceptions handled in java?<\/h3>\n<p>When an exception occurs the execution of the program is transferred to an appropriate exception handler. The try-catch-finally block is used to handle the exception.<\/p>\n<p><strong>try &#8211;\u00a0<\/strong>\u00a0The codes that may cause exception\u00a0is enclosed in a try block<\/p>\n<p><strong>catch &#8211;<\/strong> The clause matches a specific exception to a block of code which handles that exception.<\/p>\n<p><strong>finally &#8211;<\/strong> And the clean up code which needs to be executed no matter the exception occurs or not is put inside the finally block<\/p>\n<h3>Q: Explain the exception hierarchy in java.<\/h3>\n<p><code>Throwable<\/code> is a parent class off all Exception classes.\u00a0They are two types of Exceptions: Checked exceptions and UncheckedExceptions. Both type of exceptions extends <code>Exception<code> class.<\/code><\/code><\/p>\n<h3>Q: What is Runtime Exception or unchecked exception?<\/h3>\n<p>Runtime exceptions represent problems that are the result of a programming problem. Such problems include arithmetic exceptions, such as dividing by zero; pointer exceptions, such as trying to access an object through a null reference; and indexing exceptions. Runtime exceptions need not be explicitly caught in try catch block as it can occur anywhere in a program, and in a typical one they can be very numerous. Having to add runtime exceptions in every method declaration would reduce a program&#8217;s clarity. Thus, the compiler does not require that you catch or specify runtime exceptions (although you can). The solution to rectify is to correct the programming logic where the exception has occurred or provide a check.<\/p>\n<h3>Q: What is checked exception?<\/h3>\n<p>Checked exception are the exceptions which forces the programmer to catch them explicitly in try-catch block. It is a sub class of Exception. Example IOException is a type of checked exception.<\/p>\n<h3>Q: What is difference between ClassNotFoundException and NoClassDefFoundError?<\/h3>\n<p>A <code>ClassNotFoundException<\/code> is thrown when the reported class is not found by the ClassLoader in the CLASSPATH. It could also mean that the class in question is trying to be loaded from another class which was loaded in a parent classloader and hence the class from the child classloader is not visible.<\/p>\n<p>Consider if <code>NoClassDefFoundError<\/code> occurs which is something like<br \/>\njava.lang.NoClassDefFoundError in src\/com\/TestClass<\/p>\n<p>does not mean that the TestClass class is not in the CLASSPATH. It means that the class TestClass was found by the ClassLoader however when trying to load the class, it ran into an error reading the class definition. This typically happens when the class in question has static blocks or members which use a Class that&#8217;s not found by the ClassLoader. So to find the culprit, view the source of the class in question (TestClass in this case) and look for code using static blocks or static members.<\/p>\n<h3>Q: What is throw keyword?<\/h3>\n<p>Throw keyword is used to throw the exception manually. It is mainly used when the program fails to satisfy the given condition and it wants to warn the application.The exception thrown should be subclass of Throwable.<\/p>\n<pre class=\"prettyprint lang-java\">public void parent(){\r\n   try{\r\n      child();\r\n     }catch(MyCustomException e){\r\n     }\r\n   }\r\n\r\npublic void child{\r\n  String iAmMandatory=null;\r\n  if(iAmMandatory == null){\r\n  throw (new MyCustomException(\"Eek!\");\r\n   }\r\n} \r\n<\/pre>\n<h3>Q: What is use of throws keyword?<\/h3>\n<p>If the function is not capable of handling the exception then it can ask the calling method to handle it by simply putting the throws clause at the function declaration.<\/p>\n<pre class=\"prettyprint lang-java\">  public void child throws MyCustomException{\r\n     ....\r\n   }\r\n<\/pre>\n<h3>Q: What are the possible combination to write try, catch finally block?<\/h3>\n<p>Combination -1<\/p>\n<pre class=\"prettyprint lang-java\">try{\r\n\/\/lines of code that may throw an exception\r\n}catch(Exception e){\r\n\/\/lines of code to handle the exception thrown in try block\r\n}finally{\r\n\/\/the clean code which is executed always no matter the exception occurs or not.\r\n}\r\n<\/pre>\n<p>Combination -2<\/p>\n<pre class=\"prettyprint lang-java\">try{\r\n}finally{}\r\n<\/pre>\n<p>Combination -3<\/p>\n<pre class=\"prettyprint lang-java\">try{\r\n}catch(Exception e){\r\n\/\/lines of code to handle the exception thrown in try block\r\n}<\/pre>\n<p>The catch blocks must always follow the try block. If there are more than one catch blocks they all must follow each other without any block in between. The finally block must follow the catch block if one is present or if the catch block is absent the finally block must follow the try block.<\/p>\n<h3>Q: How to create custom Exception?<\/h3>\n<p>To create you own exception extend the Exception class or any of its subclasses. e.g.<br \/>\nclass New1Exception extends Exception { } \/\/ this will create Checked Exception<br \/>\nclass NewException extends IOExcpetion { } \/\/ this will create Checked exception<br \/>\nclass NewException extends NullPonterExcpetion { } \/\/ this will create UnChecked exception<\/p>\n<h3>Q: When to make a custom checked Exception or custom unchecked Exception?<\/h3>\n<p>If an application can reasonably be expected to recover from an exception, make it a checked exception. If an application cannot do anything to recover from the exception, make it an unchecked exception.<\/p>\n<h3>Q: What is StackOverflowError?<\/h3>\n<p>The StackOverFlowError is an Error Object thorwn by the Runtime System when it Encounters that your application\/code has ran out of the memory. It may occur in case of recursive methods or a large amount of data is fetched from the server and stored in some object. This error is generated by JVM.<\/p>\n<p>e.g. void swap(){<br \/>\nswap();<br \/>\n}<\/p>\n<h3>Q: Why did the designers decide to force a method to specify all uncaught checked exceptions that can be thrown within its scope?<\/h3>\n<p>Any Exception that can be thrown by a method is part of the method&#8217;s public programming interface. Those who call a method must know about the exceptions that a method can throw so that they can decide what to do about them. These exceptions are as much a part of that method&#8217;s programming interface as its parameters and return value.<\/p>\n<h3>Q: Once the control switches to the catch block does it return back to the try block to execute the balance code?<\/h3>\n<p>No. Once the control jumps to the catch block it never returns to the try block but it goes to finally block(if present).<\/p>\n<h3>Q: Where is the clean up code like release of resources is put in try-catch-finally block and why?<\/h3>\n<p>The code is put in a finally block because irrespective of try or catch block execution the control will flow to finally block. Typically finally block contains release of connections, closing of result set etc.<\/p>\n<h3>Q: What happens if the exception is never caught and throws down the method stack?<\/h3>\n<p>If the exception is not caught by any of the method in the method&#8217;s stack till you get to the main() method, the main method throws that exception and the JVM halts its execution.<\/p>\n<h3>Q: How do you get the descriptive information about the Exception occurred during the program execution?<\/h3>\n<p>All the exceptions inherit a method printStackTrace() from the Throwable class. This method prints the stack trace from where the exception occurred. It prints the most recently entered method first and continues down, printing the name of each method as it works its way down the call stack from the top.<\/p>\n<h3>Q: Can you catch more than one exceptions in a single catch block?<\/h3>\n<p>Yes. If the exception class specified in the catch clause has subclasses, any exception object that is a subclass of the specified Exception class will be caught by that single catch block. E.g..<\/p>\n<pre class=\"prettyprint lang-java\">try {\r\n\/\/ Some code here that can throw an IOException\r\n}\r\ncatch (IOException e) {\r\ne.printStackTrace();\r\n}<\/pre>\n<p>The catch block above will catch IOException and all its subclasses e.g. FileNotFoundException etc.<\/p>\n<h3>Q: Why is not considered as a good practice to write a single catchall handler to catch all the exceptions?<\/h3>\n<p>If you use the Superclass Exception in the catch block then you will not get the valuable information about each of the exception thrown during the execution, though you can find out the class of the exception occurred. Also it will reduce the readability of the code as the programmer will not understand what is the exact reason for putting the try-catch block.<\/p>\n<h3>Q: What is exception matching?<\/h3>\n<p>Exception matching is the process by which the the jvm finds out the matching catch block for the exception thrown from the list of catch blocks. When an exception is thrown, Java will try to find by looking at the available catch clauses in the top down manner. If it doesn&#8217;t find one, it will search for a handler for a supertype of the exception. If it does not find a catch clause that matches a supertype for the exception, then the exception is propagated down the call stack. This process is called exception matching.<\/p>\n<h3>Q: What happens if the handlers for the most specific exceptions is placed above the more general exceptions handler?<\/h3>\n<p>Compilation fails. The catch block for handling the most specific exceptions must always be placed above the catch block written to handle the more general exceptions.<\/p>\n<h3>Q: Does the order of the catch blocks matter if the Exceptions caught by them are not subtype or supertype of each other?<\/h3>\n<p>No. If the exceptions are siblings in the Exception class&#8217;s hierarchy i.e. If one Exception class is not a subtype or supertype of the other, then the order in which their handlers(catch clauses) are placed does not matter.<\/p>\n<h3>Q: What happens if a method does not throw an checked Exception directly but calls a method that does? What does &#8216;Ducking&#8217; the exception mean?<\/h3>\n<p>If a method does not throw an checked Exception directly but calls a method that throws an exception then the calling method must handle the throw exception or declare the exception in its throws clause. If the calling method does not handle and declares the exception, the exceptions is passed to the next method in the method stack. This is called as ducking the exception down the method stack.<\/p>\n<p>e.g. The code below will not compile as the getCar() method has not declared the CarNotFoundException which is thrown by the getColor () method.<\/p>\n<pre class=\"prettyprint lang-java\">public void getCar() {\r\n   getColor();\r\n}\r\n\r\npublic void getColor () {\r\n   throw new CarNotFoundException();\r\n}<\/pre>\n<p>Fix for the above code is<\/p>\n<pre class=\"prettyprint lang-java\">public void getCar() throws CarNotFoundException {\r\n    getColor();\r\n}\r\n\r\npublic void getColor () {\r\n    throw new CarNotFoundException();\r\n}\r\n<\/pre>\n<h3>Q: Is an empty catch block legal?<\/h3>\n<p>Yes. But its not a good practice as it makes it difficult to troubleshoot.<\/p>\n","excerpt":"<p>Q: What is an Exception? The exception is said to be thrown whenever an exceptional event occurs in java which signals that something is not correct with the code written and may give unexpected result. An exceptional event is a occurrence of condition which alters the normal program flow. Exceptional handler is the code that [&hellip;]<\/p>\n","date":"2014-10-11 12:34:14","modified":"2015-03-18 16:30:29","categories":[{"id":1,"slug":"random","title":"Random","description":"","parent":0,"post_count":39}],"tags":[{"id":147,"slug":"qa","title":"Q&amp;A","description":"","post_count":4}],"author":{"id":855,"slug":"javatechig","name":"JAVATECHIG","first_name":"Javatechig","last_name":"","nickname":"JAVATECHIG","url":"http:\/\/stacktips.com","description":"Provides tutorials, tips, examples and source code on leading Java, Android, Blackberry, PhoneGap and related mobile technologies."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"snap_isAutoPosted":["1"],"fsb_social_facebook":["1"],"fsb_social_twitter":["0"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"dsq_thread_id":["3105882246"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDL":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFB":["s:262:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:154:\"a:1:{i:0;a:5:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:99716546956;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/99716546956\";s:5:\"pDate\";s:19:\"2014-10-11 10:19:59\";}}\";"],"snapTW":["s:181:\"a:1:{i:0;a:6:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"post_views_count":["2009"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154}}},{"id":6236,"type":"post","slug":"flipkart-big-billion-sale-big-billion-mess-now-apologies","url":"http:\/\/stacktips.com\/blog\/flipkart-big-billion-sale-big-billion-mess-now-apologies","status":"publish","title":"Flipkart Big Billion Sale, Big Billion Mess And Now Apologies","title_plain":"Flipkart Big Billion Sale, Big Billion Mess And Now Apologies","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Flipkart Big Billion Sale, Big Billion Mess And Now Apologies' data-link='http:\/\/stacktips.com\/blog\/flipkart-big-billion-sale-big-billion-mess-now-apologies' data-summary=''><\/div>\n<p>With lot of hype and\u00a0full of front page advertisement Flipkart\u00a0introduced\u00a0<strong>&#8220;BIG BILLION SALE&#8221; on\u00a06th October 2014<\/strong>. This is possibly one of the bigger ever sale arrangement ever made by any online retailer. Above all the big shot arrangement, the e-commerce giant failed to stand on customer expectation. Many of the happy indian Flipkart\u00a0customer turned into disappointment with various problem like unexpected price hike on the products, unplanned outage of server due to heavy traffic, transaction failures.<\/p>\n<p>This is indeed one of the ever shocking mistake that any e-retailer can think of. After all frustrations, today Flipkart\u00a0apologize its customers over email. Checkout the email copy below.<\/p>\n<blockquote><p>Dear Customer, <\/p>\n<p>Yesterday was a big day for us. And we really wanted it to be a great day for you.\tBut at the end of the day, we know that your experience was less than pleasant. We did not live up to the promises we made and for that we are really and truly sorry. <\/p>\n<p>It took enormous effort from everyone at Flipkart, many months of preparation and pushing our capabilities and systems to the limit to be able to create this day. We were looking at fulfilling the dreams of millions of Indian consumers through deals and offers we had painstakingly put together for months. <\/p>\n<p>And though we saw unprecedented interest in our products and traffic like never before, we also realized that we were not adequately prepared for the sheer scale of the event. We didn&#8217;t source enough products and deals in advance to cater to your requirements. To add to this, the load on our server led to intermittent outages, further impacting your shopping experience on our site. <\/p>\n<p>An unprecedented 1.5 million people shopped at Flipkart yesterday. While we stand humbled by the sheer faith that such a large number of customers have shown in us, we are unhappy that we were unable to live up to the expectations of millions more who wanted to buy from us yesterday. <\/p>\n<p>And this is not acceptable to us. <\/p>\n<p>Delighting you, and every single one of our customers, is absolutely the top most priority for Flipkart and we have worked very hard over the last seven years to earn your trust. Yesterday, we failed that trust. We have learnt some valuable lessons from this and have started working doubly hard to address all the issues that cropped up during this sale. <\/p>\n<p>Price Changes As we were preparing various deals and promotional pricing in the lead up to the sale, the pricing of several products got \u200bchanged to their non-discounted rates for a few hours\u200b. We realise that this breaks the trust our customers have put in us. We are truly sorry for this and will ensure that this never happens again. <\/p>\n<p>Out-of-stock Issues We ran out of the stock for many products within a few minutes (and in some cases, seconds) of the sale going live. For example, most of our special deals were sold out as soon as they went live. We had ensured availability, anywhere from hundreds to a few lakh units for various products, but it was nowhere near the actual demand. We promise to plan much better for future promotions and ensure that we minimise the out-of-stock issues. <\/p>\n<p>Cancellations We had large number of people buying specific products simultaneously. This led to some instances of an order getting over-booked for a product that was sold out just a few seconds ago. We are working round-the-clock to ensure availability of additional units for these products and will do our level best to ensure that we minimise any cancellations. <\/p>\n<p>Website Issues \u200bWe realise that the shopping experience for many of you was frustrating due to errors and unavailability of the website at times. We had deployed nearly 5000 servers and had prepared for 20 times the traffic growth &#8211; but the volume of traffic at different times of the day was much higher than this. We are continuing to significantly scale up all our back end systems so that we do a much, much better job next time. <\/p>\n<p>Everything that we have achieved at Flipkart is purely on the basis of our customer&#8217;s trust and faith. This is why we come to work each day and continue to remain extremely passionate about building the best possible customer experience for Indian consumers. We failed to live up to this promise yesterday and would like to apologise once again to every single customer for our failure. <\/p>\n<p>Thank you.<br \/>\nSachin and Binny\n<\/p><\/blockquote>\n","excerpt":"<p>With lot of hype and\u00a0full of front page advertisement Flipkart\u00a0introduced\u00a0&#8220;BIG BILLION SALE&#8221; on\u00a06th October 2014. This is possibly one of the bigger ever sale arrangement ever made by any online retailer. Above all the big shot arrangement, the e-commerce giant failed to stand on customer expectation. Many of the happy indian Flipkart\u00a0customer turned into disappointment [&hellip;]<\/p>\n","date":"2014-10-08 01:07:51","modified":"2016-05-29 19:22:57","categories":[{"id":151,"slug":"blog","title":"Blog","description":"","parent":0,"post_count":26},{"id":284,"slug":"news","title":"News &amp; Updates","description":"","parent":0,"post_count":32}],"tags":[],"author":{"id":854,"slug":"guest","name":"Guest","first_name":"Guest","last_name":"Blogger","nickname":"guest","url":"","description":""},"comments":[],"attachments":[{"id":6245,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale.jpg","slug":"flipkart-big-billion-day-sale","title":"flipkart-big-billion-day-sale","description":"Flipcart Big billion day sale","caption":"Flipcart Big billion day sale","parent":6236,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415183958504-620x360.jpg","width":620,"height":360},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"snap_isAutoPosted":["1"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["4"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"dsq_thread_id":["3093231384"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDL":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFB":["s:262:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:154:\"a:1:{i:0;a:5:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:99422590786;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/99422590786\";s:5:\"pDate\";s:19:\"2014-10-07 19:39:28\";}}\";"],"snapTW":["s:181:\"a:1:{i:0;a:6:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"post_views_count":["1269"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415183958504-620x360.jpg","width":620,"height":360},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/flipkart-big-billion-day-sale-e1415184112134.jpg","width":248,"height":150}}},{"id":6204,"type":"post","slug":"core-java-interview-questions","url":"http:\/\/stacktips.com\/random\/core-java-interview-questions","status":"publish","title":"Core Java Interview Questions","title_plain":"Core Java Interview Questions","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Core Java Interview Questions' data-link='http:\/\/stacktips.com\/random\/core-java-interview-questions' data-summary=''><\/div>\n<p>In this post we will see some of the random core Java interview questions and answers.<\/p>\n<h3>Q: What is a variable?<\/h3>\n<p>Variable is a named memory location that can be easily referred in the program. A variable is just a container for holding data and is accessible through a reference.<\/p>\n<h3>Q: What is the Java API?<\/h3>\n<p>The Java API(Application Programming Interface) is the set of classes included with the Java Development Environment. These classes are written using the Java language and run on the JVM. The Java API includes everything from collection classes to GUI classes<\/p>\n<h3>Q: What is JVM, JRE and JDK?<\/h3>\n<p>The <strong>Java Virtual Machine(JVM)<\/strong> is the software that can be ported onto various hardware-based platforms.The JVM executes instructions that a Java compiler generates.<\/p>\n<p>The <strong>JRE<\/strong> is the Java Runtime Environment consisting of the JVM, the Java libraries, and all other components necessary to run Java applications and applets, but does not contain any development tools such as a compiler or a debugger<\/p>\n<p><strong>JDK<\/strong> contains software development tools which are used to compile and run the Java program.\u00a0Both JDK and JRE contains the JVM.<\/p>\n<h3>Q: Answer following questions relates to java <code>main()<\/code> method. What happens when, ?<\/h3>\n<ol>\n<li>Main method is declared as private?<\/li>\n<li>Static modifier is removed from the signature of the main method?<\/li>\n<li>I do not provide the String array as the argument to the method?<\/li>\n<\/ol>\n<p>Answer:<\/p>\n<p>1. The program compiles properly but at runtime it will give &#8220;Main method not public&#8221; error message.<br \/>\n2. Program compiles.But at runtime throws an error <code>NoSuchMethodError<\/code><br \/>\n3. The program works fine.<\/p>\n<h3>Q: Can an application have multiple classes having main method?<\/h3>\n<p>Yes. While starting the application we mention the class name to be run. The JVM will look for the main method only in the class whose name you have mentioned. Hence there is no conflict amongst the multiple classes having main method.<\/p>\n<h3>Q: Can I have multiple main methods in the same class?<\/h3>\n<p>We can have multiple overloaded main methods but there can be only one main method with the following signature : public static void main(String[] args) {} No the program fails to compile. The compiler says that the main method is already defined in the class.<\/p>\n<h3>Q: What is the difference between an Interface and an Abstract class?<\/h3>\n<ol>\n<li>An abstract class can have instance methods that implement a default behavior. An Interface can only declare constants and instance methods, but cannot implement default behavior and all methods are implicitly abstract.<\/li>\n<li>An interface has all public members and no implementation. An abstract class is a class which may have the usual flavors of class members (private, protected, etc.), but has some abstract methods.<\/li>\n<\/ol>\n<h3>Q: Explain the reason for each keyword of public static void main(String args[])?<\/h3>\n<ol>\n<li><strong>public<\/strong>: \u00a0main() is the first method called by java environment when a program is executed so it has to accessible from java environment. Hence the access specifier has to be public.<\/li>\n<li><strong> static<\/strong>: Java environment should be able to call this method without creating an instance of the class , so this method must be declared as static.<\/li>\n<li><strong>void<\/strong>: main does not return anything so the return type must be void<\/li>\n<li><strong>arguments<\/strong>: String args[] The argument String indicates the argument type which is given at the command line and args is an array for string given during command line.<\/li>\n<\/ol>\n<h3>Q: What is pass by reference and pass by value in Java?<\/h3>\n<p>Pass by reference means, passing the address itself (like pointers) rather than passing the value. Pass by value means passing a copy of the value. Java uses pass by value.<\/p>\n<h3>Q: If you&#8217;re overriding the method equals() of an object, which other method you might also consider?<\/h3>\n<p>hashCode()<\/p>\n<h3>Q: What are the differences between == and <code>.equals()<\/code>?<\/h3>\n<p>The == operator two object based on their address. i.e. it compares two objects to determine if they are present in the same memory location. It is possible for two String objects to have the same value, but located in different address. == compares references while .equals compares contents.<\/p>\n<p>The method public boolean equals(Object obj) is present in\u00a0Object class and can be overridden.\u00a0The default implementation uses the equality operator == to compare the object. String, BitSet, Date, and File override the equals() method. For two String objects, value equality means that they contain the same character sequence.<\/p>\n<p>Example,<\/p>\n<pre class=\"prettyprint lang-java\">public static void main(String[] args) {\r\n\tString string1 = \"MYSTRING1\";\r\n\tString string2 = string1;\r\n\tString string5 = \"MYSTRING1\";\r\n\tString string3 = new String(\"abc\");\r\n\tString string4 = new String(\"abc\");\r\n\tSystem.out.println(\"== comparison : \" + (string1 == string5));\r\n\tSystem.out.println(\"== comparison : \" + (string1 == string2));\r\n\tSystem.out.println(\"Using equals method : \" + string1.equals(string2));\r\n\tSystem.out.println(\"== comparison : \" + string3 == string4);\r\n\tSystem.out.println(\"Using equals method : \" + string3.equals(string4));\r\n}<\/pre>\n<p><strong>Output<\/strong><br \/>\n== comparison : true<br \/>\n== comparison : true<br \/>\nUsing equals method : true<br \/>\n== comparison : false<br \/>\nUsing equals method : true<\/p>\n<h3>Q: What is final, finalize() and finally? What does it mean that a class or member is final?<\/h3>\n<ol>\n<li><strong>final<\/strong> &#8211; Variables defined in an interface are implicitly final. A final class can&#8217;t be extended i.e., final class may not be subclassed. This is done for security reasons with basic classes like String and Integer. It also allows the compiler to make some optimizations, and makes thread safety a little easier to achieve. A final method can&#8217;t be overridden when its class is inherited. You can&#8217;t change value of a final variable (is a constant)<\/li>\n<li><strong>finally<\/strong> &#8211; a key word used in exception handling and will be executed whether or not an exception is thrown. For example, closing of open connections is done in the finally method.<\/li>\n<li><strong>finalize<\/strong> &#8211; helps in garbage collection. finalize() method is used just before an object is destroyed and garbage collected<\/li>\n<\/ol>\n<h3>Q: How to convert String to Number in java program?<\/h3>\n<p>The <code>valueOf()<\/code> function of Integer class is is used to convert string to Number. Here is the code<\/p>\n<pre class=\"prettyprint lang-java\">String numString = \"1000\";\r\nint id = Integer.valueOf(numString).intValue();\r\n<\/pre>\n<h3>Q: What is the difference between a while and a do loop?<\/h3>\n<p>A while statement (pre test) checks at the beginning of a loop to see whether the next loop iteration should occur. A do while statement (post test) checks at the end of a loop. The do statement will always execute the loop body at least once.<\/p>\n<h3>Q: Describe the principles of OOPS.<\/h3>\n<p>There are three main principles<\/p>\n<ol>\n<li>Polymorphism<\/li>\n<li>Inheritance<\/li>\n<li>Encapsulation<\/li>\n<\/ol>\n<h3>Q: Explain the Inheritance principle.<\/h3>\n<p>Inheritance is the process by which one object acquires the properties and behaviour of another object. Inheritance allows well-tested methods to be reused and enables changes to be made once and have effect in all relevant places.<\/p>\n<h3>Q: What do you understand by casting in java? What are the types of casting?<\/h3>\n<p>The process of converting one data type to another is called Casting. There are two types of casting in Java; these are implicit casting and explicit casting.<\/p>\n<h3>Q: What is implicit and explicit casting?<\/h3>\n<p>Implicit casting is the process of simply assigning one entity to another without any transformation guidance to the compiler. This type of casting is not permitted in all kinds of transformations and may not work for all scenarios. Explicit casting in the process in which the complier are specifically informed about transforming the object. Example<\/p>\n<pre class=\"prettyprint lang-java\">int i = 1000, k =100.20;\r\nlong j = i; \/\/Implicit\r\nint j = (int) i; \/\/Explicit\r\n<\/pre>\n<h3>Q: What do you understand by down casting?<\/h3>\n<p>The process of down casting refers to the casting from a general to a more specific type, i.e. casting down the hierarchy.<\/p>\n<h3>Q: Is sizeof a keyword in java?<\/h3>\n<p>The sizeof method is not a keyword.<\/p>\n<h3>Q: What is a native method?<\/h3>\n<p>A native method is a method that is implemented in a language other than Java.<\/p>\n<h3>Q: In System.out.println(), what is System, out and println?<\/h3>\n<p>System is a predefined final class, out is a PrintStream object and println is a built-in overloaded method in the out object.<\/p>\n<h3>Q: Explain Polymorphism? Explain the different forms of Polymorphism.<\/h3>\n<p>Polymorphism simply means one name many forms. Polymorphism enables one entity to be used as a general category for different types of actions. The specific action is determined by the exact nature of the situation.<br \/>\nIn java there are two type of polymorphism: compile time polymorphism (overloading) and runtime polymorphism (overriding). Polymorphism exists in three distinct forms in Java. They are<\/p>\n<ol>\n<li>Method overloading<\/li>\n<li>Method overriding through inheritance<\/li>\n<li>Method overriding through the Java interface<\/li>\n<\/ol>\n<h3>Q: Explain Encapsulation.<\/h3>\n<p>Encapsulation is a process of binding or wrapping the variables and the method that operates on them into a single entity. This keeps the data safe from outside interface and misuse. Objects allow methods to be encapsulated with their data to reduce potential interference. Encapsulation may be used by creating &#8216;get&#8217; and &#8216;set&#8217; methods in a class which are used to access the fields of the object. Typically the fields are made private while the get and set methods are public. Encapsulation provides data security by data hiding.<\/p>\n<h3>Q: What are different Java access modifiers?<\/h3>\n<p>Access specifiers are keywords that determine the type of access to the member of a class. These keywords are for allowing privileges to parts of a program such as methods and variables. These are:<\/p>\n<ol>\n<li><strong>Public<\/strong> : accessible to all classes<\/li>\n<li><strong>Protected<\/strong> : accessible to the classes within the same package and any subclasses.<\/li>\n<li><strong>Private<\/strong> : accessible only to the class to which they belong<\/li>\n<li><strong>Default<\/strong> : accessible to the class to which they belong and to subclasses within the same package<\/li>\n<\/ol>\n<h3>Q: What are the primitive \u00a0types available in Java<\/h3>\n<p>The 8 primitive types are byte, char, short, int, long, float, double, and boolean.<\/p>\n<h3>Q: What is the purpose of static variable and method?<\/h3>\n<ol>\n<li>A static variable is associated with the class context, rather than with specific instances of a class. Each object has only one copy per class, no matter how many objects are created from it.<\/li>\n<li>A static method is a method that belongs to the class rather than any object of the class and doesn&#8217;t apply to an object or even require that any objects of the class have been instantiated.<\/li>\n<li>Static methods are implicitly final, because overriding is done based on the type of the object, and static methods are attached to a class, not an object.<\/li>\n<li>A static method in a superclass can be shadowed by another static method in a subclass, as long as the original method was not declared final. However, you can&#8217;t override a static method with a non-static method. In other words, you can&#8217;t change a static method into an instance method in a subclass.<\/li>\n<\/ol>\n<h3>Q: What is the difference between &amp; operator and the &amp;&amp; operator?<\/h3>\n<p>If an expression involving the boolean &amp; operator is evaluated, both operands are evaluated, whereas the &amp;&amp; operator is a short circuit operator. When an expression involving the &amp;&amp; operator is evaluated, the first operand is evaluated. If the first operand returns a value of true then the second operand is evaluated. If the first operand evaluates to false, the evaluation of the second operand is skipped.<\/p>\n<h3>Q: What is the difference between variable declaration and variable\u00a0definition?<\/h3>\n<p>In declaration we only mention the type of the variable and its name without initializing it. Defining means declaration + initialization. For example String s; is just a declaration while String s = new String (&#8220;hello!&#8221;); is a definition.<\/p>\n<h3>Q: What type of parameter passing does Java support?<\/h3>\n<p>In Java the arguments (primitives and objects) are always passed by value. With objects, the object reference itself is passed by value and so both the original reference and parameter copy both refer to the same object.<\/p>\n<h3>Q: What is reflection API? How are they implemented?<\/h3>\n<p>Reflection is the process of introspecting the features and state of a class at runtime. This is supported using Reflection API with built-in classes like Class, Method, Fields, Constructors etc. Eg: Using Java Reflection API we can get the class name, by using the getName method.<\/p>\n<h3>Q: Does JVM maintain a cache by itself?<\/h3>\n<p>Yes, the JVM maintains a cache by itself. It creates the Objects on the heap, but references to those objects are on the STACK.<\/p>\n<h3>Q: Can a method be static and synchronized?<\/h3>\n<p>A static method can be synchronized. If you do so, the JVM will obtain a lock on the java.lang.Class instance associated with the object. It is similar to saying: synchronized(XYZ.class) { }<\/p>\n<h3>Q: Does java support multiple inheritance? Why?<\/h3>\n<p>Java does not support multiple inheritance but it provide a way through which it can enact it. Consider the scenario is C++<\/p>\n<pre class=\"prettyprint lang-java\">Class A{\r\n\tpublic void add(){\r\n\t\t\/\/ some code\r\n\t}\r\n}\r\n\r\nClass B{\r\n\tpublic void add(){\r\n\t\t\/\/ some code\r\n\t}\r\n}\r\n\r\nClass C extends A, B{\r\n\tpublic static void main(String arg[]){\r\n\t\tC objC = new C();\r\n\t\tobjC.add(); \/\/problem, compiler gets confused\r\n\t\t\/\/and cant decide to call Class A or B method.\r\n}<\/pre>\n<p>This problem is called Diamond problem. This problem in java is taken care with the use of interfaces In Java similar problem would look like:<\/p>\n<pre class=\"prettyprint lang-java\">public interface A{\r\n\tadd();\r\n}\r\n\r\npublic interface B{\r\n\tadd();\r\n}\r\n\r\nclass C implements A,B{\r\n\tadd(){\r\n\t\t\/\/ doesnt matter which interface it belong to\r\n\t}\r\n}<\/pre>\n<h3>Q: What is difference between instanceof and isInstance(Object obj)?<\/h3>\n<p>1. instanceof is a java keyword, but isInstance(Object obj) is a method of java.lang.Class.<br \/>\n2. instanceof keyword is used to check the type of an object which are known at compile time and isInstance() could only be called on class, say instance of java.lang.Class.<\/p>\n<pre class=\"prettyprint lang-java\">if (obj instanceof MyClassType) {\r\n\t\/\/ your code here\r\n}else if (MyClassType.class.isInstance(obj)) {\r\n\t\/\/your code here\r\n}<\/pre>\n<p>3) instanceof is used of identify whether the object is type of a particular class or its subclass but isInstance(obj) is used to identify object of a particular class.<\/p>\n<h3>Q: What is memory leak?<\/h3>\n<p>A memory leak is where an unreferenced object that will never be used again still hangs around in memory and doesn&#8217;t get garbage collected.<\/p>\n<h3>Q: What restrictions are placed on method overloading?<\/h3>\n<p>Two methods may not have the same name and argument list.<\/p>\n<h3>Q: What is the difference between String and StringBuffer?<\/h3>\n<p>String objects are immutable whereas StringBuffer objects are not. StringBuffer unlike Strings support growable and modifiable strings.<\/p>\n<h3>Q: Can a private method of a superclass be declared within a subclass?<\/h3>\n<p>Sure. A private field or method or inner class belongs to its declared class and hides from its subclasses. There is no way for private stuff to have a runtime overloading or overriding (polymorphism) features.<\/p>\n<h3>Q: What are\u00a0differences between a constructor and a method? How can a subclass call a method or a constructor defined in a superclass?<\/h3>\n<ol>\n<li>A constructor has the same name as the class and has no return type and is called using new operator to create an instance of class. They are only called once. Methods can be called many times and has its own name, a return type and is invoked using the dot operator.<\/li>\n<li>Constructor will be automatically invoked when an object is created whereas method has to be called explicitly.<\/li>\n<li>super.method(); is used to call a superclass method from a sub class. To call a constructor of the superclass, we use the super(); statement as the first line of the subclass&#8217;s constructor.<\/li>\n<\/ol>\n<h3>Q: Where and how can you use a private constructor?<\/h3>\n<p>Private constructor can be used if you do not want any other class to instantiate the class. This concept is generally used in Singleton Design Pattern. The instantiation of such classes is done from a static public method.<\/p>\n<h3>Q: How are <code>this()<\/code> and <code>super()<\/code> used with constructors?<\/h3>\n<p>this() is used to invoke a constructor of the same class. super() is used to invoke a superclass constructor.<\/p>\n<h3>Q: What is Method Overriding? What restrictions are placed on method overriding?<\/h3>\n<p>When a class defines a method using the same name, return type, and argument list as that of a method in its superclass, the method in the subclass is said to override the method present in the Superclass. When the method is invoked for an object of the class, it is the new definition of the method that is called, and not the method definition from superclass. Restrictions placed on method overriding<\/p>\n<ol>\n<li>Overridden methods must have the same name, argument list, and return type.<\/li>\n<li>The overriding method may not limit the access of the method it overrides. Methods may be overridden to be more public, not more private.<\/li>\n<li>The overriding method may not throw any exceptions that may not be thrown by the overridden method.<\/li>\n<\/ol>\n<h3>Q: Differentiate between a Class and an Object?<\/h3>\n<p>The Object class is the highest-level class in the Java class hierarchy. The Class class is used to represent the classes and interfaces that are loaded by a Java program. The Class class is used to obtain information about an object&#8217;s design. A Class is only a definition or prototype of real life object. Whereas an object is an instance or living representation of real life object. Every object belongs to a class and every class contains one or more related objects.<\/p>\n<h3>Q: What is difference between overloading and overriding?<\/h3>\n<p>Method overloading: When 2 or more methods in a class have the same method names with different arguments, it is said to be method overloading. Overloading does not block inheritance from the superclass. Overloaded methods must have different method signatures but does not consider the return types.<\/p>\n<p>Method overriding : When a method in a class has the same method name with same arguments as that of the superclass, it is said to be method overriding. Overriding blocks inheritance from the superclass. Overridden methods must have same signature.<\/p>\n<ol>\n<li>Overloading and overriding are different aspects of polymorphism.<\/li>\n<li>Overloading &#8211; static\/early binding polymorphism(compile time):<\/li>\n<li>Overriding &#8211; dynamic\/late binding polymorphism(runtime)<\/li>\n<li>Q: If a class is declared without any access modifiers, where may the class be accessed?<\/li>\n<\/ol>\n<p>A class that is declared without any access modifiers is said to have package or default access. This means that the class can only be accessed by other classes and interfaces that are defined within the same package.<\/p>\n<h3>Q: Does a class inherit the constructors of its superclass?<\/h3>\n<p>A class does not inherit constructors from any of its super classes. However constructor chaining invokes the constructor in super class.<\/p>\n<h3>Q: Which java.util classes and interfaces support event handling?<\/h3>\n<p>The EventObject class and the EventListener interface support event processing<\/p>\n<h3>Q: Can an object&#8217;s <code>finalize()<\/code> method be invoked while it is reachable?<\/h3>\n<p>An object&#8217;s finalize() method cannot be invoked by the garbage collector while the object is still reachable. However, an object&#8217;s finalize() method may be invoked by other objects.<\/p>\n<h3>Q: What is the purpose of the Runtime class?<\/h3>\n<p>The purpose of the Runtime class is to provide access to the Java runtime system. It returns the runtime information like memory availability.<\/p>\n<ol>\n<li>Runtime.freeMemory() &#8211; Returns JVM Free Memory<\/li>\n<li>Runtime.maxMemory() &#8211; Returns the maximum amount of memory that the JVM will attempt to use. It also helps to run the garbage collector<\/li>\n<li>Runtime.gc() &#8211; Invokes garbage collector<\/li>\n<\/ol>\n<h3>Q: What is the purpose of the <code>System<\/code> class?<\/h3>\n<p>The purpose of the System class is to provide access to system resources.<\/p>\n<h3>Q: Can an unreachable object become reachable again?<\/h3>\n<p>An unreachable object may become reachable again. This can happen when the object&#8217;s finalize() method is invoked and the object performs an operation which causes it to become accessible to reachable object.<\/p>\n<h3>Q: What is the functionality of i<code>nstanceOf()<\/code> ?<\/h3>\n<p>instanceOf operator is used to check whether an object can be cast to a specific type without throwing <code>ClassCastException<\/code>.<\/p>\n<h3>Q: What is heap in Java?<\/h3>\n<p>It is a memory area which stores all the objects created by an executing program.<\/p>\n<h3>Q: Why default constructor of base class will be called first in java?<\/h3>\n<p>A subclass inherits all the methods and fields (eligible one) from the base class, so base class is constructed in the process of creation of subclass object (subclass is also an object of superclass). Hence before initializing the default value of sub class the super class should be initialized using the default constructor.<\/p>\n<h3>Q: What is an abstract class? Can you make an instance of an abstract class?<\/h3>\n<p>Abstract classes can contain abstract and concrete methods. Abstract classes cannot be instantiated directly i.e. we cannot call the constructor of an abstract class directly nor we can create an instance of an abstract class by using <code>Class.forName().newInstance()<\/code> (Here we get java.lang.InstantiationException). However, if we create an instance of a class that extends an Abstract class, compiler will initialize both the classes. Here compiler will implicitly call the constructor of the Abstract class. Abstract class is a template class that provides some general functionality but leaves specific implementation to its inheriting classes. Example<\/p>\n<pre class=\"prettyprint lang-java\">abstract class AbstractClassExample{\r\n\tprotected String name;\r\n\tpublic String getname() {\r\n\t\treturn name;\r\n\t}\r\n\tpublic abstract void function();\r\n}<\/pre>\n<p>In real world example, vehicle is an abstract class and bus, truck, car etc are specific implementations<\/p>\n<h3>Q: How to define an Interface?<\/h3>\n<p>In Java Interface defines the methods but does not implement them. Interface can include constants. A class that implements the interfaces is bound to implement all the methods defined in Interface. Example<\/p>\n<pre class=\"prettyprint lang-java\">public interface MyInterface {\r\n\tpublic void functionOne();\r\n\tpublic long CONSTANT_ONE = 1000;\r\n}<\/pre>\n","excerpt":"<p>In this post we will see some of the random core Java interview questions and answers. Q: What is a variable? Variable is a named memory location that can be easily referred in the program. A variable is just a container for holding data and is accessible through a reference. Q: What is the Java [&hellip;]<\/p>\n","date":"2014-10-02 12:39:01","modified":"2015-03-18 16:30:30","categories":[{"id":1,"slug":"random","title":"Random","description":"","parent":0,"post_count":39}],"tags":[{"id":147,"slug":"qa","title":"Q&amp;A","description":"","post_count":4}],"author":{"id":855,"slug":"javatechig","name":"JAVATECHIG","first_name":"Javatechig","last_name":"","nickname":"JAVATECHIG","url":"http:\/\/stacktips.com","description":"Provides tutorials, tips, examples and source code on leading Java, Android, Blackberry, PhoneGap and related mobile technologies."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3122656445"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDL":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFB":["s:262:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:154:\"a:1:{i:0;a:5:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTR":["s:554:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:100149778371;s:7:\"postURL\";s:46:\"http:\/\/javatechig.tumblr.com\/post\/100149778371\";s:5:\"pDate\";s:19:\"2014-10-16 09:47:45\";}}\";"],"snapTW":["s:181:\"a:1:{i:0;a:6:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"post_views_count":["2661"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154}}},{"id":6200,"type":"post","slug":"java-collections-interview-questions","url":"http:\/\/stacktips.com\/random\/java-collections-interview-questions","status":"publish","title":"Java Collections Interview Questions","title_plain":"Java Collections Interview Questions","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Java Collections Interview Questions' data-link='http:\/\/stacktips.com\/random\/java-collections-interview-questions' data-summary=''><\/div>\n<p>In this post we will see some of the most asked Java Collections related interview questions with answers.<\/p>\n<h3>Q: What is the Collections API?<\/h3>\n<p>The Collections API provides\u00a0set of classes and interfaces that helps to operate on\u00a0collections of objects.<\/p>\n<h3>Q: What is the List, Vector, Iterator, Map, Set interface?<\/h3>\n<ol>\n<li>List interface provides support for ordered collections of objects.<\/li>\n<li>Vector class provides capability to implement a growable array of objects.<\/li>\n<li>Iterator interface is used to step through elements of a Collection .<\/li>\n<li>Map interface replaces JDK 1.1 Dictionary class and is used associate keys with values.<\/li>\n<li>Set interface provides methods for accessing elements of a finite mathematical set. Sets do not allow duplicate elements<\/li>\n<\/ol>\n<h3>Q: What is the typical use of HashTable?<\/h3>\n<p>If your program want to store a key value pair,\u00a0you can use HashTable.<\/p>\n<h3>Q: Can I store values in HashTable where the value is already exist?<\/h3>\n<p>Yes, you can store value to the HashTable using key. If the value already exist for that key then it will replace the value with the new value.<\/p>\n<h3>Q: What is the difference between the size and capacity of a Vector?<\/h3>\n<p>The size is the number of elements actually stored in the vector, while capacity is the maximum number of elements it can be stored at a given instance of time.<\/p>\n<h3>Q: What is difference between ArrayList and vector?<\/h3>\n<ol>\n<li><strong>Synchronization<\/strong> &#8211; ArrayList is not thread-safe whereas Vector is thread-safe. In Vector class each method like <code>add()<\/code>, <code>get(int i)<\/code> is surrounded with a synchronized block and thus making Vector class thread-safe.<\/li>\n<li><strong>Data growth<\/strong> &#8211; Internally, both the ArrayList and Vector hold onto their contents using an Array. When an element is inserted into an ArrayList or a Vector, the object will need to expand its internal array if it runs out of room. A Vector defaults to doubling the size of its array, while the ArrayList increases its array size by 50 percent.<\/li>\n<\/ol>\n<h3>Q: What is difference between HashMap and HashTable?<\/h3>\n<p>Both collections implements Map. Both collections store value as key-value pairs. The key differences between the two are<\/p>\n<ol>\n<li>Hashmap is not synchronized in nature but HashTable\u00a0is.<\/li>\n<li>Another difference is that iterator in the HashMap is fail-safe while the enumerator for the HashTable\u00a0isn&#8217;t. Fail-safe &#8211; if the HashTable is structurally modified at any time after the iterator is created, in any way except through the iterator&#8217;s own remove method, the iterator will throw a <code>ConcurrentModificationException<\/code><\/li>\n<li>HashMap permits null values and only one null key, while HashTable doesn&#8217;t allow key or value as null.<\/li>\n<\/ol>\n<h3>Q: When to use ArrayList or LinkedList ?<\/h3>\n<ol>\n<li>For the ArrayList, doing random lookup using <code>get()<\/code> is fast, but for LinkedList, it&#8217;s slow. It&#8217;s slow because there&#8217;s no efficient way to index into the middle of a linked list.<\/li>\n<li>When removing elements, using ArrayList is slow. This is because all remaining elements in the underlying array of Object instances must be shifted down for each remove operation. But here LinkedList is fast, because deletion can be done simply by changing a couple of links.<\/li>\n<li>So an ArrayList works best for cases where you&#8217;re doing random access on the list, and a LinkedList works better if you&#8217;re doing a lot of editing in the middle of the list.<\/li>\n<\/ol>\n<h3>Q: Which design pattern Iterator follows?<\/h3>\n<p>Iterator follows behavioral design pattern. I allows you to navigate through a collection of data using a common interface without knowing about the underlying implementation. The benefits of Iterator are about their strength to provide a common interface for iterating through collections without bothering about underlying implementation.<\/p>\n<p>Example &#8211; The class java.util.Enumeration : It represents and abstract means of iterating over a collection of elements in some sequential order without the client having to know the representation of the collection being iterated over. It can be used to provide a uniform interface for traversing collections of all kinds.<\/p>\n<h3>Q: Can a Vector or ArrayList contain heterogenous objects?<\/h3>\n<p>Yes a Vector can contain heterogenous objects. Because a Vector stores everything in terms of Object.<\/p>\n<h3>Q: What is an enumeration?<\/h3>\n<p>It is a construct which collection classes return when you request a collection of all the objects stored in the collection. It allows sequential access to all the elements stored in the collection.<\/p>\n<h3>Q: Where will you use Vector and where will you use ArrayList?<\/h3>\n<p>Vector is synchronized while ArrayList is not. Thus whenever there is a possibility of multiple threads accessing the same instance, one should use Vector. While if not multiple threads are going to access the same instance then use ArrayList. Non synchronized data structure will give better performance than the synchronized one.<\/p>\n<h3>Q: What is HashMap and Map?<\/h3>\n<p>Map is Interface and HashMap is class that implements this interface.<\/p>\n<h3>Q: What is the difference between Iterator and ListIterator?<\/h3>\n<p>Iterator enables you to cycle through a collection in the forward direction only, for obtaining or removing elements<br \/>\nListIterator extends Iterator, allow bidirectional traversal of list and the modification of elements<\/p>\n<h3>Q: Difference between HashMap and HashTable? Can we make hashmap synchronized?<\/h3>\n<p>HashMap is not synchronized while HashTable is.\u00a0HashMap can be synchronized by<\/p>\n<pre class=\"prettyprint\">Map m = Collections.synchronizeMap(hashMap);<\/pre>\n<h3>Q: What is the difference between Set and List?<\/h3>\n<p>A Set stores elements in an unordered way and does not contain duplicate elements, whereas a list stores elements in an ordered way but may contain duplicate elements.<\/p>\n<h3>Q: What is an Iterator interface? Is Iterator a Class or Interface? What is its use?<\/h3>\n<p>The Iterator is an interface, used to traverse through the elements of a Collection. It is not advisable to modify the collection itself while traversing an Iterator.<\/p>\n<h3>Q: How can we access elements of a collection?<\/h3>\n<p>We can access the elements of a collection using the following ways:<\/p>\n<ol>\n<li>Every collection object has <code>get(index)<\/code> method to get the element of the object. This method will return Object.<\/li>\n<li>Collection provide Enumeration or Iterator object so that we can get the objects of a collection one by one.<\/li>\n<\/ol>\n<h3>Q: What&#8217;s the difference between a queue and a stack?<\/h3>\n<p>Stack is a data structure that is based on last-in-first-out rule (LIFO), while queues are based on First-in-first-out (FIFO) rule.<\/p>\n<h3>Q: How can we use HashSet in collection interface?<\/h3>\n<p>This class implements the set interface, backed by a hash table (actually a HashMap instance). It makes no guarantees as to the iteration order of the set; in particular, it does not guarantee that the order will remain constant over time. This class permits the Null element. This class offers constant time performance for the basic operations (add, remove, contains and size), assuming the hash function disperses the elements properly among the buckets.<\/p>\n<h3>Q: What are differences between Enumeration, ArrayList, HashTable and Collections and Collection?<\/h3>\n<ol>\n<li>Enumeration: It is series of elements. It can be use to enumerate through the elements of a vector, keys or values of a hashtable. You can not remove elements from Enumeration.<\/li>\n<li>ArrayList: It is resizable array implementation. Belongs to &#8216;List&#8217; group in collection. It permits all elements, including null. It is not thread -safe.<\/li>\n<li>Hashtable: It maps key to value. You can use non-null value for key or value. It is part of group Map in collection.<\/li>\n<li>Collections: It implements Polymorphic algorithms which operate on collections.<\/li>\n<li>Collection: It is the root interface in the collection hierarchy.<\/li>\n<\/ol>\n<h3>Q: What is difference between array and ArrayList?<\/h3>\n<ol>\n<li>An ArrayList is resizable, whereas, an array is not. ArrayList is a part of the Collection Framework. We can store any type of objects, and we can deal with only objects. It is growable. Array is collection of similar data items. We can have array of primitives or objects. It is of fixed size. We can have multi dimensional arrays.<\/li>\n<li>Array: can store primitive ArrayList: Stores object only<\/li>\n<li>Array: fix size ArrayList: resizable<\/li>\n<li>Array: can have multi dimensional<\/li>\n<li>Array: lang ArrayList: Collection framework<\/li>\n<\/ol>\n<h3>Q: Can you limit the initial capacity of Vector in java?<\/h3>\n<p>Yes you can limit the initial capacity. We can construct an empty vector with specified initial capacity<br \/>\npublic vector(int size)<\/p>\n<h3>Q: What method should the key class of HashMap override?<\/h3>\n<p>The methods to override are <code>equals()<\/code> and <code>hashCode()<\/code>.<\/p>\n<h3>Q: What is the difference between Enumeration and Iterator?<\/h3>\n<p>The functionality of Enumeration interface is duplicated by the Iterator interface. Iterator has a <code>remove()<\/code> method while Enumeration doesn&#8217;t. Enumeration acts as Read-only interface, because it has the methods only to traverse and fetch the objects, whereas using Iterator we can manipulate the objects also like adding and removing the objects. So Enumeration is used when ever we want to make Collection objects as Read-only.<\/p>\n<h3>Q: What goes wrong if the HashMap key has same hashCode value?<\/h3>\n<p>It leads to &#8216;Collision&#8217; wherein all the values are stored in same bucket. Hence, the searching time increases quad radically.<\/p>\n<h3>Q: How will you remove duplicate element from a List?<\/h3>\n<p>Add the List elements to Set. Duplicates will be removed.<\/p>\n<h3>Q: Which java.util classes and interfaces support event handling?<\/h3>\n<p>The EventObject class and the EventListener interface support event processing.<\/p>\n","excerpt":"<p>In this post we will see some of the most asked Java Collections related interview questions with answers. Q: What is the Collections API? The Collections API provides\u00a0set of classes and interfaces that helps to operate on\u00a0collections of objects. Q: What is the List, Vector, Iterator, Map, Set interface? List interface provides support for ordered [&hellip;]<\/p>\n","date":"2014-10-02 12:35:46","modified":"2014-11-05 23:27:22","categories":[{"id":1,"slug":"random","title":"Random","description":"","parent":0,"post_count":39}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"snap_isAutoPosted":["1"],"fsb_social_facebook":["2"],"fsb_social_twitter":["2"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"dsq_thread_id":["3087889070"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDL":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFB":["s:262:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:154:\"a:1:{i:0;a:5:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:99307236101;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/99307236101\";s:5:\"pDate\";s:19:\"2014-10-06 09:43:39\";}}\";"],"snapTW":["s:181:\"a:1:{i:0;a:6:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"post_views_count":["3202"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154}}},{"id":6188,"type":"post","slug":"java-thread-interview-questions","url":"http:\/\/stacktips.com\/random\/java-thread-interview-questions","status":"publish","title":"Java Thread Interview Questions And Answers","title_plain":"Java Thread Interview Questions And Answers","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Java Thread Interview Questions And Answers' data-link='http:\/\/stacktips.com\/random\/java-thread-interview-questions' data-summary=''><\/div>\n<p>In this post we will see some of the most asked Java Thread interview questions with answers.<\/p>\n<h3>Q: What is a Thread?<\/h3>\n<p>A thread is a class in java belongs to java.lang package.\u00a0A thread is an lightweight process\u00a0and\u00a0has its own call stack. In Java, you can run multiple threads parallely.\u00a0\u00a0A thread is used to perform long running jobs dedicated without disturbing to the other part of program. Even if you don&#8217;t create any new threads in your program,\u00a0there is at least one thread i.e. main thread() which runs the application.<\/p>\n<h3>Q: What is difference between thread and process?<\/h3>\n<ol>\n<li>Threads share the address space of the process that created it; processes have their own address.<\/li>\n<li>Threads have direct access to the data segment of its process; processes have their own copy of the data segment of the parent process.<\/li>\n<li>Threads can directly communicate with other threads of its process; processes must use interprocess communication to communicate with sibling processes.<\/li>\n<li>Threads have almost no overhead; processes have considerable overhead.<\/li>\n<li>New threads are easily created; new processes require duplication of the parent process.<\/li>\n<li>Threads can exercise considerable control over threads of the same process; processes can only exercise control over child processes.<\/li>\n<li>Changes to the main thread (cancellation, priority change, etc.) may affect the behavior of the other threads of the process; changes to the parent process do not affect child processes.<\/li>\n<\/ol>\n<h3>Q: What are the different states of a thread&#8217;s life cycle?<\/h3>\n<ol>\n<li><strong>New<\/strong> &#8211; When a thread is instantiated it is in New state until the start() method is called on the thread instance. In this state the thread is not considered to be alive.<\/li>\n<li><strong>Runnable<\/strong> &#8211; The thread enters into this state after the start method is called in the thread instance. The thread may enter into the Runnable state from Running state. In this state the thread is considered to be alive.<\/li>\n<li><strong>Running<\/strong> &#8211; When the thread scheduler picks up the thread from the Runnable thread&#8217;s pool, the thread starts running and the thread is said to be in Running state.<\/li>\n<li><strong>Waiting\/Blocked\/Sleeping<\/strong> &#8211; In these states the thread is said to be alive but not runnable. The thread switches to this state because of reasons like wait method called or sleep method has been called on the running thread or thread might be waiting for some i\/o resource so blocked. Dead &#8211; When the thread finishes its execution i.e. the run() method execution completes, it is said to be in dead state. A dead state can not be started again. If a start() method is invoked on a dead thread a runtime exception will occur.<\/li>\n<\/ol>\n<h3>Q: What are the possible\u00a0ways of creating thread?<\/h3>\n<p>There are two possible ways to create a thread in Java. One is by extending java.lang.Thread class and other is by implementing Runnable interface.<\/p>\n<h4>1. Extending Thread Class<\/h4>\n<p>In this process, just extend the Thread class and override the run() method in your class. Create an instance of the subclass and invoke the start() method on it, which will create a new thread of execution. e.g.<\/p>\n<pre class=\"prettyprint lang-java\">public class MyThread extends Thread{\r\n \r\n public void run(){\r\n \/\/ Your code goes here\r\n \/\/ this code will be executed by NewThread\r\n }\r\n \r\n public static void main(String [] args){\r\n      MyThread c = new MyThread();\r\n      c.start();\r\n }\r\n \r\n}<\/pre>\n<h4>2. Implementing\u00a0Runnable Interface<\/h4>\n<p>Another way of creating thread is by implements the Runnable interface. The class will have to implement the run() method in the Runnable interface. Create an instance of this class. Pass the reference of this instance to the Thread constructor a new thread of execution will be created. e.g. class<\/p>\n<pre class=\"prettyprint lang-java\">public class MyThread implements Runnable{\r\n public void run(){\r\n \/\/...\r\n }\r\n \r\n public static void main(String [] args){\r\n     MyThread c = new MyThread();\r\n     Thread t = new Thread(c);\r\n     t.start();\r\n }\r\n \r\n}<\/pre>\n<h3>Q: What are different ways in which a thread can enter the waiting state?<\/h3>\n<p>A thread can enter the waiting state by the following ways:<\/p>\n<ol>\n<li>Invoking its sleep() method,<\/li>\n<li>By blocking on I\/O<\/li>\n<li>By unsuccessfully attempting to acquire an object&#8217;s lock<\/li>\n<li>By invoking an object&#8217;s wait() method.<\/li>\n<li>It can also enter the waiting state by invoking its (deprecated) suspend() method.<\/li>\n<\/ol>\n<h3>Q: What is the difference between yield and sleep?<\/h3>\n<p>When a task invokes its yield() method, it returns to the ready state, either from waiting, running or after its creation. When a task invokes its sleep() method, it returns to the waiting state from a running state.<\/p>\n<h3>Q: Extending Thread class or implementing Runnable Interface. Which is better?<\/h3>\n<p>You have two ways to do so. First, making your class &#8220;extends&#8221; Thread class. The other way is making your class implement &#8220;Runnable&#8221; interface. The latter is more advantageous, cause when you are going for multiple inheritance, then only interface can help. . If you are already inheriting a different class, then you have to go for Runnable Interface. Also, if you are implementing interface, it means you have to implement all methods in the interface.<\/p>\n<p>Both Thread class and Runnable interface are provided for convenience and use them as per the requirement. But if you are not extending any class, better extend Thread class as it will save few lines of coding. Otherwise performance wise, there is no distinguishable difference. A thread is in the ready state after it has been created and started.<\/p>\n<h3>Q: What is mutual exclusion? How can you take care of mutual exclusion using Java threads?<\/h3>\n<p>Mutual exclusion is a phenomenon where no two processes can access critical regions of memory at the same time. Using Java multithreading we can arrive at mutual exclusion. For mutual exclusion, you can simply use the synchronized keyword and explicitly or implicitly provide an Object, any Object, to synchronize on. The synchronized keyword can be applied to a class, to a method, or to a block of code.<\/p>\n<p>There are several methods in Java used for communicating mutually exclusive threads such as wait( ), notify( ), or notifyAll( ). For example, the notifyAll( ) method wakes up all threads that are in the wait list of an object.<\/p>\n<h3>Q: What is the difference between preemptive scheduling and time slicing?<\/h3>\n<p>Under preemptive scheduling, the highest priority task executes until it enters the waiting or dead states or a higher priority task comes into existence. Under time slicing, a task executes for a predefined slice of time and then re-enters the pool of ready tasks. The scheduler then determines which task should execute next, based on priority and other factors.<\/p>\n<h3>Q: What invokes a thread&#8217;s run() method?<\/h3>\n<p>After a thread is started, via its start() method of the Thread class, the JVM invokes the thread&#8217;s run() method when the thread is initially executed.<\/p>\n<h3>Q: What is the purpose of the wait(), notify(), and notifyAll() methods?<\/h3>\n<p>The wait(), notify() and notifyAll() methods are used to provide an efficient way for thread inter-communication.<\/p>\n<h3>Q: What is deadlock?<\/h3>\n<p>When two threads are waiting for each other and can&#8217;t proceed until the first thread obtains a lock on the other thread or vice versa, the program is said to be in a deadlock.<\/p>\n<h3>Q: What are synchronized methods and synchronized statements?<\/h3>\n<p>Synchronized methods are methods that are used to control access to an object. A thread only executes a synchronized method after it has acquired the lock for the method&#8217;s object or class. Synchronized statements are similar to synchronized methods. A synchronized statement can only be executed after a thread has acquired the lock for the object or class referenced in the synchronized statement.<\/p>\n<h3>Q: What is a volatile keyword?<\/h3>\n<p>In general each thread has its own copy of variable, such that one thread is not concerned with the value of same variable in the other thread. But sometime this may not be the case. Consider a scenario in which the count variable is holding the number of times a method is called for a given class irrespective of any thread calling, in this case irrespective of thread access the count has to be increased so the count variable is declared as volatile. The copy of volatile variable is stored in the main memory, so every time a thread access the variable even for reading purpose the local copy is updated each time from the main memory. The volatile variable also have performance issues.<\/p>\n<h3>Q: What&#8217;s the difference between the methods sleep() and wait()?<\/h3>\n<p>The sleep method is used when the thread has to be put aside for a fixed amount of time. Ex: sleep(1000), puts the thread aside for exactly one second. The wait method is used to put the thread aside for up to the specified time. It could wait for much lesser time if it receives a notify() or notifyAll() call. Ex: wait(1000), causes a wait of up to one second. The method wait() is defined in the Object and the method sleep() is defined in the class Thread.<\/p>\n<h3>Q: What is the difference between process and thread?<\/h3>\n<p>A thread is a separate path of execution in a program. A Process is a program in execution.<\/p>\n<h3>Q: What is daemon thread and which method is used to create the daemon thread?<\/h3>\n<p>Daemon threads are threads with low priority and runs in the back ground doing the garbage collection operation for the java runtime system. The setDaemon() method is used to create a daemon thread. These threads run without the intervention of the user. To determine if a thread is a daemon thread, use the accessor method isDaemon()<\/p>\n<p>When a standalone application is run then as long as any user threads are active the JVM cannot terminate, otherwise the JVM terminates along with any daemon threads which might be active. Thus a daemon thread is at the mercy of the runtime system. Daemon threads exist only to serve user threads.<\/p>\n<h3>Q: What do you understand by Synchronization?<\/h3>\n<p>With respect to multithreading, Synchronization is a process of controlling the access of shared resources by the multiple threads in such a manner that only one thread can access a particular resource at a time. In non synchronized multithreaded application, it is possible for one thread to modify a shared object while another thread is in the process of using or updating the object&#8217;s value. Synchronization prevents such type of data corruption which may otherwise lead to dirty reads and significant errors.<\/p>\n<p>E.g. synchronizing a function:<\/p>\n<pre class=\"prettyprint lang-java\">public synchronized void Method1 () {\r\n\/\/ method code.\r\n}<\/pre>\n<p>E.g. synchronizing a block of code inside a function:<\/p>\n<pre class=\"prettyprint lang-java\">public Method2 (){\r\nsynchronized (this) {\r\n\/\/ synchronized code here.\r\n}\r\n}<\/pre>\n<h3>Q: When will you synchronize a piece of your code?<\/h3>\n<p>When you expect that your shared code will be accessed by different threads and these threads may change a particular data causing data corruption, then they are placed in a synchronized construct or a synchronized method.<\/p>\n<h3>Q: Why would you use a synchronized block vs. synchronized method?<\/h3>\n<p>Synchronized blocks place locks for shorter periods than synchronized methods.<\/p>\n<h3>Q: Can a lock be acquired on a class?<\/h3>\n<p>Yes, a lock can be acquired on a class. This lock is acquired on the class&#8217;s Class object.<\/p>\n<h3>Q: What state does a thread enter when it terminates its processing?<\/h3>\n<p>When a thread terminates its processing, it enters the dead state.<\/p>\n<h3>Q: Is there a separate stack for each thread in Java?<\/h3>\n<p>Yes. Every thread maintains its own separate stack, called Runtime Stack but they share the same memory.<\/p>\n<p>Elements of the stack are the method invocations, called activation records or stack frame. The activation record contains pertinent information about a method like local variables.<\/p>\n<h3>Q: What is the difference between yield() and sleep()?<\/h3>\n<p>yield() allows the current the thread to release its lock from the object and scheduler gives the lock of the object to the other thread with same priority.<\/p>\n<p>sleep() allows the thread to go to sleep state for x milliseconds. When a thread goes into sleep state it doesn&#8217;t release the lock.<\/p>\n<h3>Q: What is the difference between wait() and sleep()?<\/h3>\n<p>1) wait() is a method of Object class. sleep() is a method of Object class.<\/p>\n<p>2) sleep() allows the thread to go to sleep state for x milliseconds. When a thread goes into sleep state it doesn&#8217;t release the lock. wait() allows thread to release the lock and goes to suspended state. The thread is only active when a notify() or notifAll() method is called for the same object.<\/p>\n<h3>Q: What is difference between notify() and notfiyAll()?<\/h3>\n<p>notify( ) wakes up the first thread that called wait( ) on the same object.<\/p>\n<p>notifyAll( ) wakes up all the threads that called wait( ) on the same object. The highest priority thread will run first<\/p>\n<h3>Q: If a thread goes to sleep does it hold the lock?<\/h3>\n<p>Yes when a thread goes to sleep it does not release the lock.<\/p>\n<h3>Q: Can a thread hold multiple locks at the same time?<\/h3>\n<p>Yes. A thread can hold multiple locks at the same time. Once a thread acquires a lock and enters into the synchronized method \/ block, it may call another synchronized method and acquire a lock on another object.<\/p>\n<h3>Q: Can a thread call multiple synchronized methods on the object of which it hold the lock?<\/h3>\n<p>Yes. Once a thread acquires a lock in some object, it may call any other synchronized method of that same object using the lock that it already holds.<\/p>\n<h3>Q: Can static methods be synchronized?<\/h3>\n<p>Yes. As static methods are class methods and have only one copy of static data for the class, only one lock for the entire class is required. Every class in java is represented by java.lang.Class instance. The lock on this instance is used to synchronize the static methods.<\/p>\n<h3>Q: Can two threads call two different static synchronized methods of the same class?<\/h3>\n<p>No. The static synchronized methods of the same class always block each other as only one lock per class exists. So no two static synchronized methods can execute at the same time.<\/p>\n<h3>Q: Does a static synchronized method block a non-static synchronized method?<\/h3>\n<p>No As the thread executing the static synchronized method holds a lock on the class and the thread executing the non-satic synchronized method holds the lock on the object on which the method has been called, these two locks are different and these threads do not block each other.<\/p>\n<h3>Q: Once a thread has been started can it be started again?<\/h3>\n<p>No. Only a thread can be started only once in its lifetime. If you try starting a thread which has been already started once an IllegalThreadStateException is thrown, which is a runtime exception. A thread in runnable state or a dead thread can not be restarted.<\/p>\n<h3>Q: Can the start() method of the Thread class be overridden?<\/h3>\n<p>Yes the start() method can be overridden. But it should not be overridden as its implementation in thread class has the code to create a new executable thread and is specialized.<\/p>\n<h3>Q: What are the methods of the thread class used to schedule the threads?<\/h3>\n<p>The methods are as follows:<\/p>\n<ol>\n<li>public static void sleep(long milliseconds) throws InterruptedException<\/li>\n<li>public static void yield()<\/li>\n<li>public final void join() throws InterruptedException<\/li>\n<li>public final void setPriority(int priority)<\/li>\n<li>public final void wait() throws InterruptedException<\/li>\n<li>public final void notify()<\/li>\n<li>public final void notifyAll()<\/li>\n<\/ol>\n<h3>Q: Which thread related methods are available in Object class?<\/h3>\n<p>The methods are:<\/p>\n<ol>\n<li>public final void wait() throws Interrupted exception<\/li>\n<li>public final void notify()<\/li>\n<li>public final void notifyAll()<\/li>\n<\/ol>\n<h3>Q: Which thread related methods are available in Thread class?<\/h3>\n<p>Methods which are mainly used :<\/p>\n<ol>\n<li>public static void sleep(long milliseconds) throws Interrupted exception<\/li>\n<li>public static void yield()<\/li>\n<li>public final void join() throws Interrupted exception<\/li>\n<li>public final void setPriority(int priority)<\/li>\n<li>public void start()<\/li>\n<li>public void interrupt()<\/li>\n<li>public final void join()<\/li>\n<li>public void run()<\/li>\n<li>public void resume()<\/li>\n<\/ol>\n<h3>Q: List the methods which when called the thread does not release the locks held?<\/h3>\n<ol>\n<li>notify()<\/li>\n<li>join()<\/li>\n<li>sleep()<\/li>\n<li>yield()<\/li>\n<\/ol>\n","excerpt":"<p>In this post we will see some of the most asked Java Thread interview questions with answers. Q: What is a Thread? A thread is a class in java belongs to java.lang package.\u00a0A thread is an lightweight process\u00a0and\u00a0has its own call stack. In Java, you can run multiple threads parallely.\u00a0\u00a0A thread is used to perform [&hellip;]<\/p>\n","date":"2014-10-02 11:30:38","modified":"2014-11-05 23:28:33","categories":[{"id":1,"slug":"random","title":"Random","description":"","parent":0,"post_count":39}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8237,"name":"Peter Clark","url":"","date":"2015-09-28 17:11:00","content":"<p>Thanks for sharing a java serialization question and answer, It&#8217;s really helpful .<\/p>\n","parent":0}],"attachments":[],"comment_count":1,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"snap_isAutoPosted":["1"],"fsb_social_facebook":["2"],"fsb_social_twitter":["2"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"dsq_thread_id":["3084891272"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDL":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFB":["s:262:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:154:\"a:1:{i:0;a:5:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:99211410256;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/99211410256\";s:5:\"pDate\";s:19:\"2014-10-05 09:20:15\";}}\";"],"snapTW":["s:181:\"a:1:{i:0;a:6:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"post_views_count":["6365"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154}}},{"id":6175,"type":"post","slug":"testfairy-command-line-upload-script","url":"http:\/\/stacktips.com\/tutorials\/android\/testfairy-command-line-upload-script","status":"publish","title":"How to Use TestFairy Command Line Upload Script","title_plain":"How to Use TestFairy Command Line Upload Script","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to Use TestFairy Command Line Upload Script' data-link='http:\/\/stacktips.com\/tutorials\/android\/testfairy-command-line-upload-script' data-summary=''><\/div>\n<p class=\"entry-title\">TestFairy is an android application beta testing and deployment platform. Read TestFairy platform features and detailed description <a href=\"http:\/\/stacktips.com\/android\/testfairy-android-app-beta-testing-platform\" target=\"_blank\"><strong>here<\/strong>.<\/a><\/p>\n<p class=\"entry-title\">As you upload a build to TestFairy, it process on the uploaded build and do some dynamic code injection. During the process, it forget that the build was signed with a keystore. Before the build is made available for beta testers to download, TestFairy sign your build with a keystore key of its own. This will result your application not working properly for the services that like Facebook, Google Map, In-App Purchases, Google Cloud Messaging (GCM) etc.<\/p>\n<p>Here is the workaround!! Instead of you just uploading your build to TestFairy, you can use the command line uploader script mentioning your keystore details. In this post we&#8217;ll see the configurations and how to execute testfairy command line uploader script. This will be helpful for integrating bamboo, Jenkins or other CI build automation tools.<\/p>\n<h3>1. Download\u00a0TestFairy Command Line Upload Script<\/h3>\n<p>Let us download the TestFairy command line upload script from <strong><a href=\"https:\/\/github.com\/testfairy\/command-line-uploader\" target=\"_blank\">GitHub<\/a>.<\/strong>\u00a0\u00a0Once you have the <code>testfairy-upload.sh<\/code> file\u00a0you can change the following parameters\u00a0as per your project configurations.<\/p>\n<pre class=\"prettyprint\"># Put your TestFairy API_KEY here. Find it in your TestFairy account settings.\r\nTESTFAIRY_API_KEY=\"Put your TestFairy API key here\"\r\n\r\n# Your Keystore, Storepass and Alias, the ones you use to sign your app.\r\nKEYSTORE=build-dir\/MyProject\/keystore\/myapp.keystore\r\nSTOREPASS=android\r\nALIAS=myapp\r\n\r\n# Tester Groups that will be notified when the app is ready. Setup groups in your TestFairy account testers page.\r\n# This parameter is optional, leave empty if not required\r\nTESTER_GROUPS=\"Distribution Group Name\"\r\n\r\n# Comment text will be included in the email sent to testers\r\nCOMMENT=\"Put your update comment here\"\r\n\r\n# locations of various tools\r\nCURL=\/usr\/bin\/curl\r\nZIP=\/usr\/bin\/zip\r\nKEYTOOL=\/usr\/bin\/keytool\r\nZIPALIGN=\/Applications\/adt-bundle-mac-x86_64-20130917\/sdk\/build-tools\/19.1.0\/zipalign\r\nJARSIGNER=\/usr\/bin\/jarsigner\r\n<\/pre>\n<h3>2. Executing\u00a0Command Line Upload Script<\/h3>\n<pre class=\"prettyprint\">$ chmod a+x testfairy-upload.sh\r\n\r\n$ .\/testfairy-upload.sh bin\/MyApp.apk\r\n<\/pre>\n<p>If the script execute successfully, you will see the output in the code<\/p>\n<pre class=\"prettyprint\">Uploading bin\/MyApp.apk to TestFairy.. OK!\r\nDownloading instrumented APK.. OK!\r\nRe-signing APK file.. jar signed.\r\n\r\nWarning:\r\nNo -tsa or -tsacert is provided and this jar is not timestamped. Without a timestamp, users may not be able to validate this jar after the signer certificate's expiration date (2283-11-17) or after any future revocation date.\r\nOK!\r\nUploading signed APK to TestFairy.. OK!\r\n\r\nBuild was successfully uploaded to TestFairy and is available at:\r\nhttps:\/\/app.testfairy.com\/projects\/6521-myapp\/builds\/142823\r\n<\/pre>\n<p>The above code works fine and build getting uploaded to TestFairy. But there is one problem, if you are uploading build from CI tool, you would like see the comments from developers for each build. In such case you have to pass another command line parameter containing the release comment. This release comment will be send over invitation email.<\/p>\n<pre class=\"prettyprint\">#!\/bin\/sh\r\n\r\nUPLOADER_VERSION=1.09\r\n\r\n# Put your TestFairy API_KEY here. Find it in your TestFairy account settings.\r\nTESTFAIRY_API_KEY=\"Put your TestFairy API key here\"\r\n\r\n# Your Keystore, Storepass and Alias, the ones you use to sign your app.\r\nKEYSTORE=build-dir\/MyProject\/keystore\/myapp.keystore\r\nSTOREPASS=android\r\nALIAS=myapp\r\n\r\n# Tester Groups that will be notified when the app is ready. Setup groups in your TestFairy account testers page.\r\n# This parameter is optional, leave empty if not required\r\nTESTER_GROUPS=\"Distribution Group Name\"\r\n\r\n# Should email testers about neew version. Set to \"off\" to disable email notifications.\r\nNOTIFY=\"on\"\r\n\r\n# If AUTO_UPDATE is \"on\" all users will be prompt to update to this build next time they run the app\r\nAUTO_UPDATE=\"off\"\r\n\r\n# The maximum recording duration for every test. \r\nMAX_DURATION=\"10m\"\r\n\r\n# Is video recording enabled for this build \r\nVIDEO=\"on\"\r\n\r\n# Add a TestFairy watermark to the application icon?\r\nICON_WATERMARK=\"on\"\r\n\r\n# Comment text will be included in the email sent to testers\r\nCOMMENT=\"New Build\"\r\n\r\n# locations of various tools\r\nCURL=\/usr\/bin\/curl\r\nZIP=\/usr\/bin\/zip\r\nKEYTOOL=\/usr\/bin\/keytool\r\nZIPALIGN=\/Applications\/adt-bundle-mac-x86_64-20130917\/sdk\/build-tools\/19.1.0\/zipalign\r\nJARSIGNER=\/usr\/bin\/jarsigner\r\n\r\nSERVER_ENDPOINT=http:\/\/app.testfairy.com\r\n\r\nusage() {\r\n\techo \"Usage: testfairy-upload.sh bin\/TennisTV.apk\"\r\n\techo\r\n}\r\n\t\r\nverify_tools() {\r\n\r\n\t# Windows users: this script requires zip, curl and sed. If not installed please get from http:\/\/cygwin.com\/\r\n\t\r\n\t# Check 'zip' tool\r\n\t${ZIP} -h &gt;\/dev\/null\r\n\tif [ $? -ne 0 ]; then\r\n\t\techo \"Could not run zip tool, please check settings\"\r\n\t\texit 1\r\n\tfi\r\n\t\r\n\t# Check 'curl' tool\r\n\t${CURL} --help &gt;\/dev\/null\r\n\tif [ $? -ne 0 ]; then\r\n\t\techo \"Could not run curl tool, please check settings\"\r\n\t\texit 1\r\n\tfi\r\n\t\r\n\tOUTPUT=$( ${JARSIGNER} -help 2&gt;&amp;1 | grep \"verify\" )\r\n\tif [ $? -ne 0 ]; then\r\n\t\techo \"Could not run jarsigner tool, please check settings\"\r\n\t\texit 1\r\n\tfi\r\n\t\r\n\t# Check 'zipalign' tool\r\n\tOUTPUT=$( ${ZIPALIGN} 2&gt;&amp;1 | grep -i \"Zip alignment\" )\r\n\tif [ $? -ne 0 ]; then\r\n\t\techo \"Could not run zipalign tool, please check settings\"\r\n\t\texit 1\r\n\tfi\r\n\r\n\tOUTPUT=$( ${KEYTOOL} -help 2&gt;&amp;1 | grep \"keypasswd\" )\r\n\tif [ $? -ne 0 ]; then\r\n\t\techo \"Could not run keytool tool, please check settings\"\r\n\t\texit 1\r\n\tfi\r\n}\r\n\r\nverify_settings() {\r\n\tif [ -z \"${TESTFAIRY_API_KEY}\" ]; then\r\n\t\tusage\r\n\t\techo \"Please update API_KEY with your private API key, as noted in the Settings page\"\r\n\t\texit 1\r\n\tfi\r\n\r\n\tif [ -z \"${KEYSTORE}\" -o -z \"${STOREPASS}\" -o -z \"{$ALIAS}\" ]; then\r\n\t\tusage\r\n\t\techo \"Please update KEYSTORE, STOREPASS and ALIAS with your jar signing credentials\"\r\n\t\texit 1\r\n\tfi\r\n\r\n\t# verify KEYSTORE, STOREPASS and ALIAS at once\r\n\tOUTPUT=$( ${KEYTOOL} -list -keystore \"${KEYSTORE}\" -storepass \"${STOREPASS}\" -alias \"${ALIAS}\" 2&gt;&amp;1 )\r\n\tif [ $? -ne 0 ]; then\r\n\t\tusage\r\n\t\techo \"Please check keystore credentials; keytool failed to verify storepass and alias\"\r\n\t\texit 1\r\n\tfi\r\n}\r\n\r\nif [ $# -ne 2 ]; then\r\n\tusage\r\n\texit 1\r\nfi\r\n\r\n# before even going on, make sure all tools work\r\nverify_tools\r\nverify_settings\r\n\r\nAPK_FILENAME=$1\r\nif [ ! -f \"${APK_FILENAME}\" ]; then\r\n\tusage\r\n\techo \"Can't find file: ${APK_FILENAME}\"\r\n\texit 2\r\nfi\r\n\r\nCOMMENT=$2\r\n\r\n# temporary file paths\r\nDATE=`date`\r\nTMP_FILENAME=.testfairy.upload.apk\r\nZIPALIGNED_FILENAME=.testfairy.zipalign.apk\r\nrm -f \"${TMP_FILENAME}\" \"${ZIPALIGNED_FILENAME}\"\r\n\r\n\/bin\/echo -n \"Uploading ${APK_FILENAME} to TestFairy.. \"\r\nJSON=$( ${CURL} -s ${SERVER_ENDPOINT}\/api\/upload -F api_key=${TESTFAIRY_API_KEY} -F apk_file=\"@${APK_FILENAME}\" -F icon-watermark=\"${ICON_WATERMARK}\" -F video=\"${VIDEO}\" -F max-duration=\"${MAX_DURATION}\" -F comment=\"${COMMENT}\" -A \"TestFairy Command Line Uploader ${UPLOADER_VERSION}\" )\r\n\r\nURL=$( echo ${JSON} | sed 's\/\\\\\\\/\/\\\/\/g' | sed -n 's\/.*\"instrumented_url\"\\s*:\\s*\"\\([^\"]*\\)\".*\/\\1\/p' )\r\nif [ -z \"${URL}\" ]; then\r\n\techo \"FAILED!\"\r\n\techo \r\n\techo \"Upload failed, please check your settings\"\r\n\texit 1\r\nfi\r\n\r\nURL=\"${URL}?api_key=${TESTFAIRY_API_KEY}\"\r\n\r\necho \"OK!\"\r\n\/bin\/echo -n \"Downloading instrumented APK.. \"\r\n${CURL} -L -o ${TMP_FILENAME} -s ${URL}\r\n\r\nif [ ! -f \"${TMP_FILENAME}\" ]; then\r\n\techo \"FAILED!\"\r\n\techo\r\n\techo \"Could not download APK back from server, please contact support@testfairy.com\"\r\n\texit 1\r\nfi\r\n\r\necho \"OK!\"\r\n\r\n\/bin\/echo -n \"Re-signing APK file.. \"\r\n${ZIP} -qd ${TMP_FILENAME} 'META-INF\/*'\r\n${JARSIGNER} -keystore \"${KEYSTORE}\" -storepass \"${STOREPASS}\" -digestalg SHA1 -sigalg MD5withRSA ${TMP_FILENAME} \"${ALIAS}\"\r\n${JARSIGNER} -verify ${TMP_FILENAME} &gt;\/dev\/null\r\nif [ $? -ne 0 ]; then\r\n\techo \"FAILED!\"\r\n\techo\r\n\techo \"Jarsigner failed to verify, please check parameters and try again\"\r\n\texit 1\r\nfi\r\n\r\n${ZIPALIGN} -f 4 ${TMP_FILENAME} ${ZIPALIGNED_FILENAME}\r\nrm -f ${TMP_FILENAME}\r\necho \"OK!\"\r\n\r\n\/bin\/echo -n \"Uploading signed APK to TestFairy.. \"\r\nJSON=$( ${CURL} -s ${SERVER_ENDPOINT}\/api\/upload-signed -F api_key=${TESTFAIRY_API_KEY} -F apk_file=@${ZIPALIGNED_FILENAME} -F testers-groups=\"${TESTER_GROUPS}\" -F auto-update=\"${AUTO_UPDATE}\" -F notify=\"${NOTIFY}\")\r\nrm -f ${ZIPALIGNED_FILENAME}\r\n\r\nURL=$( echo ${JSON} | sed 's\/\\\\\\\/\/\\\/\/g' | sed -n 's\/.*\"build_url\"\\s*:\\s*\"\\([^\"]*\\)\".*\/\\1\/p' )\r\nif [ -z \"$URL\" ]; then\r\n\techo \"FAILED!\"\r\n\techo\r\n\techo \"Build uploaded, but no reply from server. Please contact support@testfairy.com\"\r\n\texit 1\r\nfi\r\n\r\necho \"OK!\"\r\necho\r\necho \"Build was successfully uploaded to TestFairy and is available at:\"\r\necho ${URL}\r\n<\/pre>\n<p>Now, we can run the above script by passing two arguments. One for the apk path and other is for comment for your build. This comment will be sent to tester over email.<\/p>\n<pre>$ chmod a+x testfairy-upload.sh\r\n\r\n$ .\/testfairy-upload.sh bin\/MyApp.apk \"$@Your build update comment here\"\r\n<\/pre>\n","excerpt":"<p>TestFairy is an android application beta testing and deployment platform. Read TestFairy platform features and detailed description here. As you upload a build to TestFairy, it process on the uploaded build and do some dynamic code injection. During the process, it forget that the build was signed with a keystore. Before the build is made [&hellip;]<\/p>\n","date":"2014-10-02 09:00:37","modified":"2014-11-25 15:55:02","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":177,"slug":"beta-testing","title":"Beta Testing","description":"","post_count":4},{"id":176,"slug":"testfairy","title":"Testfairy","description":"","post_count":2}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":7627,"name":"Albert Martorell Garcia","url":"","date":"2014-10-06 15:05:00","content":"<p>A really useful post.<br \/>\nTo me, this article fits the bill to understand the process of uploading the apk through command line uploader.<br \/>\nThank you.<\/p>\n","parent":0},{"id":7628,"name":"javatechig","url":"http:\/\/stacktips.com\/","date":"2014-10-06 15:45:00","content":"<p>Thanks Albert. <\/p>\n","parent":7627},{"id":7980,"name":"Chris Wagner","url":"","date":"2015-04-10 02:32:00","content":"<p>Thank you for this!<\/p>\n","parent":0},{"id":8123,"name":"Samanta Cicilia","url":"","date":"2015-07-30 01:41:00","content":"<p>i have a problem with Downloading instrumented APK because i&#8217;m behind a proxy server. How i can configure this?<\/p>\n","parent":0}],"attachments":[],"comment_count":4,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"dsq_thread_id":["3073539943"],"snap_isAutoPosted":["1"],"fsb_social_facebook":["7"],"fsb_social_twitter":["4"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDL":["s:133:\"a:1:{i:0;a:4:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFB":["s:262:\"a:1:{i:0;a:9:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:129:\"a:1:{i:0;a:4:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:154:\"a:1:{i:0;a:5:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapTR":["s:370:\"a:1:{i:0;a:8:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapTW":["s:154:\"a:1:{i:0;a:5:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"post_views_count":["2784"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/08\/Testfairy-Android-beta-testing-platform-e1415185398765.jpg","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/08\/Testfairy-Android-beta-testing-platform-e1415185398765.jpg","width":248,"height":150},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/08\/Testfairy-Android-beta-testing-platform-e1415185398765.jpg","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/08\/Testfairy-Android-beta-testing-platform-e1415185398765.jpg","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/08\/Testfairy-Android-beta-testing-platform-e1415185398765.jpg","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/08\/Testfairy-Android-beta-testing-platform-e1415185398765.jpg","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/08\/Testfairy-Android-beta-testing-platform-e1415185398765.jpg","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/08\/Testfairy-Android-beta-testing-platform-e1415185398765.jpg","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/08\/Testfairy-Android-beta-testing-platform-e1415185398765.jpg","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/08\/Testfairy-Android-beta-testing-platform-e1415185398765.jpg","width":248,"height":150}}},{"id":6067,"type":"post","slug":"touch-feedback-and-gestures-in-android","url":"http:\/\/stacktips.com\/design\/touch-feedback-and-gestures-in-android","status":"publish","title":"Touch Feedback And Gestures In Android","title_plain":"Touch Feedback And Gestures In Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Touch Feedback And Gestures In Android' data-link='http:\/\/stacktips.com\/design\/touch-feedback-and-gestures-in-android' data-summary='A gesture is an action that sends a visual signal to device.\u00a0Gestures allow users to interact with your app by manipulating the screen objects you provide. Following are the core gestures that are supported in Android.'><\/div>\n<p>A gesture is an action that sends a visual signal to device.\u00a0Gestures allow users to interact with your app by manipulating the screen objects you provide. Following are the core touch feedback and gestures supported in Android. App developers can take advantages by overriding the actions for each of the touch feedback supported by OS.<\/p>\n<p><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures.png\"><img class=\"alignnone size-full wp-image-6068\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures.png\" alt=\"Android touch feedback and gestures\" width=\"1190\" height=\"641\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures.png 1190w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures-300x161.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures-620x333.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures-940x506.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures-800x430.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures-1000x538.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures-900x484.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures-370x199.png 370w\" sizes=\"(max-width: 1190px) 100vw, 1190px\" \/><\/a><\/center><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures2.png\"><img class=\"alignnone size-full wp-image-6069\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures2.png\" alt=\"Android touch feedback and gestures\" width=\"1202\" height=\"668\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures2.png 1202w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures2-300x166.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures2-620x344.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures2-940x522.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures2-800x444.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures2-1000x555.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures2-900x500.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures2-370x205.png 370w\" sizes=\"(max-width: 1202px) 100vw, 1202px\" \/><\/a><\/center><\/p>\n","excerpt":"<p>A gesture is an action that sends a visual signal to device.\u00a0Gestures allow users to interact with your app by manipulating the screen objects you provide. Following are the core gestures that are supported in Android.<\/p>\n","date":"2014-09-25 13:24:39","modified":"2014-10-11 19:10:55","categories":[{"id":149,"slug":"design","title":"Design","description":"","parent":0,"post_count":6}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[{"id":6068,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures.png","slug":"android-touch-feedback-and-gestures","title":"Android touch feedback and gestures","description":"Android touch feedback and gestures","caption":"","parent":6067,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures.png","width":1190,"height":641},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures-620x333.png","width":620,"height":333},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures.png","width":1190,"height":641}}},{"id":6069,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures2.png","slug":"android-touch-feedback-and-gestures2","title":"Android touch feedback and gestures2","description":"Android touch feedback and gestures","caption":"","parent":6067,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures2.png","width":1202,"height":668},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures2-620x344.png","width":620,"height":344},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-touch-feedback-and-gestures2.png","width":1202,"height":668}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"dsq_thread_id":["3050950853"],"snap_isAutoPosted":["1"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-09-25 07:54:54\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"58a61c6370c2273de54ff7fbfe9fb73e\";s:5:\"pDate\";s:19:\"2014-09-25 07:55:04\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_889730497705872\";s:5:\"pDate\";s:19:\"2014-09-25 07:55:10\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapIP":["s:211:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"IP\";s:5:\"pDate\";s:19:\"2014-09-25 07:55:15\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"1dL0BV\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/1dL0BV\/comments\";s:5:\"pDate\";s:19:\"2014-09-25 07:55:17\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:98375093176;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/98375093176\";s:5:\"pDate\";s:19:\"2014-09-25 07:55:18\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"515046883991908352\";s:5:\"pDate\";s:19:\"2014-09-25 07:55:21\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["1371"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162}}},{"id":6041,"type":"post","slug":"android-application-ui-design-patterns","url":"http:\/\/stacktips.com\/design\/android-application-ui-design-patterns","status":"publish","title":"Android Application UI Design Patterns","title_plain":"Android Application UI Design Patterns","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android Application UI Design Patterns' data-link='http:\/\/stacktips.com\/design\/android-application-ui-design-patterns' data-summary='User Interface design patterns are the design best practices, acts as a template to solve common problems while designing application. A design patterns acts as handbook for designers while representing the product ideas into visual components.'><\/div>\n<h2>What are design patterns?<\/h2>\n<p>User Interface design patterns are the design best practices, acts as a template to solve common problems while\u00a0designing application.<\/p>\n<ol>\n<li>A design patterns acts as handbook for designers while representing the product ideas into visual components.<\/li>\n<li>Do not reinvent the wheel, when something is proven or adopted by most of them<\/li>\n<li>Design pattern should not affect your brand. Make your brand extension to shine.<\/li>\n<li>Not all applications are equal, don\u2019t get bounded in design patterns and forget creativity.<\/li>\n<li>Specially while designing for\u00a0mobile application, platform guidelines have an significant impact on user experience. Inventing your own design with the motive of uniqueness, may increase the learning curve to user.<\/li>\n<\/ol>\n<h2>Android design challenges<\/h2>\n<p>Designing for android is always been a nightmare.\u00a0Due to raw nature of android platform, Google constantly changing the platform user interface guidelines and practices. Also designing for android means designing for multiple form factors.\u00a0We have outlined few of the challenges while designing for android application<\/p>\n<ol>\n<li><strong>iOS first approach<\/strong>&#8211; Apple&#8217;s iOS has some strict guidelines and popular in US and UK market, so it is always been the first priority for making money. And Android application is mostly meant just for market presence rather then a serious money making business. Which means that, all the designs made for iOS is meant be reused without investing\u00a0on designing something for Android. This approach might save you time up-front, but you run the very real risk of creating inconsistent apps that alienate users.<\/li>\n<\/ol>\n<ol start=\"2\">\n<li><strong>Support for multiple screen sizes increases complexity<\/strong> &#8211; As Android is an open source operating system, there are numerous number of devices available with different screen sizes and densities. Android phones are classified into 5 different categories. They are ldpi, mdpi, hdpi, xhdpi and xxhdpi.<\/li>\n<\/ol>\n<ol start=\"3\">\n<li><strong>Many OS versions and difficult to ignore old ones<\/strong> &#8211; While designing mobile application, we must be aware of the platform capabilities. Using Android 4.0 you might be able to do some cool screen transitions, which may not be possible to achieve on lower android phones. Due to lack of platform support, you have to compromise certain features or find for an best alternative. Below infographics will show you the matrix of device and os distribution.<\/li>\n<\/ol>\n<h2>Device and OS matrix<\/h2>\n<p><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Andorid-OS-market-distribution.png\"><img class=\"alignnone size-full wp-image-6061\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Andorid-OS-market-distribution.png\" alt=\"Andorid OS market distribution\" width=\"575\" height=\"669\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Andorid-OS-market-distribution.png 575w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Andorid-OS-market-distribution-300x349.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Andorid-OS-market-distribution-370x430.png 370w\" sizes=\"(max-width: 575px) 100vw, 575px\" \/><\/a><\/center><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-24-at-9.49.03-PM.png\"><img class=\"alignnone size-full wp-image-6058\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-24-at-9.49.03-PM.png\" alt=\"Screen Shot 2014-09-24 at 9.49.03 PM\" width=\"830\" height=\"537\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-24-at-9.49.03-PM.png 830w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-24-at-9.49.03-PM-300x194.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-24-at-9.49.03-PM-620x401.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-24-at-9.49.03-PM-800x517.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-24-at-9.49.03-PM-370x239.png 370w\" sizes=\"(max-width: 830px) 100vw, 830px\" \/><\/a><\/center><\/p>\n<h2>Quick tips<\/h2>\n<ol>\n<li>Platform guidelines\u00a0are designed with reasons. Making too much of customization will not just cost time and effort, it can create confusion to users.<\/li>\n<li>Don&#8217;t be just fooled by platform guidelines. They may not make sense for your brand and app requirements. So while designing your application you must understand platform\u00a0guidelines before\u00a0deriving your design.<\/li>\n<li>Don&#8217;t leave your branding behind.<\/li>\n<li>Know all the UI controls and widgets available in all platforms. For example, if you are creating a widget to select date in iOS, It might appear differently on Android. You must be able to judge the key difference between platforms.<\/li>\n<\/ol>\n<p>We are publishing series of tutorials to get you familiar with android platform policy and guidelines. Stay tuned until we publish them all..<\/p>\n","excerpt":"<p>User Interface design patterns are the design best practices, acts as a template to solve common problems while designing application. A design patterns acts as handbook for designers while representing the product ideas into visual components.<\/p>\n","date":"2014-09-25 08:33:26","modified":"2015-03-18 16:30:30","categories":[{"id":149,"slug":"design","title":"Design","description":"","parent":0,"post_count":6}],"tags":[],"author":{"id":855,"slug":"javatechig","name":"JAVATECHIG","first_name":"Javatechig","last_name":"","nickname":"JAVATECHIG","url":"http:\/\/stacktips.com","description":"Provides tutorials, tips, examples and source code on leading Java, Android, Blackberry, PhoneGap and related mobile technologies."},"comments":[],"attachments":[{"id":6058,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-24-at-9.49.03-PM.png","slug":"screen-shot-2014-09-24-at-9-49-03-pm","title":"Screen Shot 2014-09-24 at 9.49.03 PM","description":"","caption":"Android Tutorials","parent":6041,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-24-at-9.49.03-PM.png","width":830,"height":537},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-24-at-9.49.03-PM-620x401.png","width":620,"height":401},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-24-at-9.49.03-PM.png","width":830,"height":537},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-24-at-9.49.03-PM.png","width":830,"height":537}}},{"id":6059,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns.png","slug":"android-design-patterns","title":"Android Design Patterns","description":"Android Design Patterns","caption":"","parent":6041,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162}}},{"id":6061,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Andorid-OS-market-distribution.png","slug":"andorid-os-market-distribution","title":"Andorid OS market distribution","description":"Andorid OS market distribution","caption":"","parent":6041,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Andorid-OS-market-distribution.png","width":575,"height":669},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Andorid-OS-market-distribution.png","width":575,"height":669},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Andorid-OS-market-distribution.png","width":575,"height":669},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Andorid-OS-market-distribution.png","width":575,"height":669},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Andorid-OS-market-distribution.png","width":575,"height":669},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Andorid-OS-market-distribution.png","width":575,"height":669}}}],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"dsq_thread_id":["3050772281"],"snap_isAutoPosted":["1"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:182:\"a:1:{i:0;a:6:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"54ap5L\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/54ap5L\/comments\";s:5:\"pDate\";s:19:\"2014-09-25 03:03:49\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:98359699616;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/98359699616\";s:5:\"pDate\";s:19:\"2014-09-25 03:03:50\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"cf_url":[""],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-09-25 03:03:28\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"d13a1c5c0b15162f5f427ee7b32ec1ff\";s:5:\"pDate\";s:19:\"2014-09-25 03:03:38\";}}\";"],"snapFB":["s:375:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:33:\"%TITLE% - #%CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_889643241047931\";s:5:\"pDate\";s:19:\"2014-09-25 03:03:44\";}}\";"],"snapIP":["s:211:\"a:1:{i:0;a:7:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"IP\";s:5:\"pDate\";s:19:\"2014-09-25 03:03:45\";}}\";"],"snapTW":["s:280:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:24:\"%TITLE% -#%CATS% \r\n%URL%\";s:8:\"attchImg\";s:1:\"1\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"514973533714141184\";s:5:\"pDate\";s:19:\"2014-09-25 03:03:53\";}}\";"],"post_views_count":["2967"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Design-Patterns-e1415185303261.png","width":248,"height":162}}},{"id":5987,"type":"post","slug":"android-recyclerview-example","url":"http:\/\/stacktips.com\/tutorials\/android\/android-recyclerview-example","status":"publish","title":"Android RecyclerView Example","title_plain":"Android RecyclerView Example","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android RecyclerView Example' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-recyclerview-example' data-summary='Google&#039;s upcoming operating system named Android L looks very promising. It is highly focused on rich user experience and what they called it as material design. In this example we will take a look at the new UI widget called RecyclerView.'><\/div>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-what-isrecyclerview\">1. What is\u00a0RecyclerView?<\/a><\/li><li><a href=\"#2-recyclerview-example\">2. RecyclerView Example<\/a><ul><li><a href=\"#21-adding-support-library\">2.1. Adding Support Library<\/a><\/li><li><a href=\"#22-adding-internet-permission\">2.2. Adding Internet Permission<\/a><\/li><li><a href=\"#23-declaring-activity-layout\">2.3. Declaring Activity Layout<\/a><\/li><li><a href=\"#24-activity-using-recyclerview\">2.4. Activity Using RecyclerView<\/a><\/li><li><a href=\"#25-creating-recyclerview-adapter\">2.5. Creating RecyclerView Adapter<\/a><\/li><li><a href=\"#26-recyclerview-row-layout\">2.6. RecyclerView Row Layout<\/a><\/li><li><a href=\"#26-implementingviewholderpattern\">2.6. Implementing\u00a0ViewHolder\u00a0Pattern<\/a><\/li><\/ul><\/li><li><a href=\"#3handle-recyclerview-click-event\">3.\u00a0Handle RecyclerView Click Event<\/a><\/li><li><a href=\"#4-download-source-code\">4. Download Source Code<\/a><\/li><\/ul><\/div>\n<\/p>\n<h1><span id=\"1-what-isrecyclerview\">1. What is\u00a0RecyclerView?<\/span><\/h1>\n<p>Google&#8217;s upcoming operating system named <strong>Android L<\/strong> looks very promising. It is highly focused on rich user experience and what they called it as material design. In this example we will take a look at the new UI widget called <code>RecyclerView<\/code>.<\/p>\n<p><code>RecyclerView<\/code> is more advanced and flexible and efficient version of ListView.\u00a0RecyclerView ViewGroup is an container for larger data set of views that can be recycled and scrolled very efficiently.\u00a0RecyclerView can be used for larger datasets to be rendered on the UI like a list.\u00a0RecyclerView provides maximum flexibility to design different kind of views<\/p>\n<h1><span id=\"2-recyclerview-example\">2. RecyclerView Example<\/span><\/h1>\n<p>The tutorial, download the feed data\u00a0from server, parse the JSON feed response and display the items on list.\u00a0This example using both\u00a0RecyclerView and CardView for creating the UI as shown in the following video.<\/p>\n<div class=\"embed\"><iframe width=\"810\" height=\"608\" src=\"https:\/\/www.youtube.com\/embed\/vlWKzNGULSk?feature=oembed\" frameborder=\"0\" allowfullscreen><\/iframe><\/div>\n<p>To accomplish this result as shown in the above video, we need to follow the following\u00a0steps:<\/p>\n<ol>\n<li>Create a new Android application in Android Studio IDE and add the support library dependency.<\/li>\n<li>Declare an layout for your activity and add a RecyclerView and ProgressBar widget<\/li>\n<li>Create an activity class to initiate data download,\u00a0initialize the adapter and display data on RecyclerView<\/li>\n<li>Create RecyclerView row layout. Here we will use the CardView widget.<\/li>\n<li>Create an custom adapter that will be used for\u00a0RecyclerView<\/li>\n<li>Implementing RecyclerView click event handling<\/li>\n<\/ol>\n<h2><span id=\"21-adding-support-library\">2.1. Adding Support Library<\/span><\/h2>\n<p>Android SDK doesn&#8217;t includes the <code>RecyclerView<\/code> class, and hence for using RecyclerView in your project you first need to add the\u00a0recycler view support library to your project.\u00a0Android Studio users can add the following graddle dependency to project\u00a0<code>build.graddle<\/code> file.<\/p>\n<pre class=\"prettyprint lang-java\">dependencies {\r\n\u00a0 \u00a0 \u00a0 \u00a0compile 'com.android.support:recyclerview-v7:+'\r\n       compile 'com.android.support:cardview-v7:21.0.+'\r\n       compile project(':picasso-2.3.4')\r\n}<\/pre>\n<p>Notice that in the above dependency declaration, I have added the RecyclerView and CardView support library, and the <code>Picasso.jar<\/code>. Before this, you need to add Picasso jar module by going to your Android Studio <strong>Project properties<\/strong>.<\/p>\n<h2><span id=\"22-adding-internet-permission\">2.2. Adding Internet Permission<\/span><\/h2>\n<p>You might be aware that, Android application must declare all the permissions that are required for application. As we need to download the data form server, we need to add the <code>INTERNET<\/code> permission. Add the following line to <code>AndroidManifest.xml<\/code> file.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;manifest xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    package=\"com.javatechig.app\"&gt;\r\n\r\n    &lt;uses-permission android:name=\"android.permission.INTERNET\" \/&gt;\r\n\r\n    &lt;application\r\n       .....\r\n    &lt;\/application&gt;\r\n&lt;\/manifest&gt;\r\n<\/pre>\n<h2><span id=\"23-declaring-activity-layout\">2.3. Declaring Activity Layout<\/span><\/h2>\n<p>Our\u00a0first step towards this example is to declare the activity layout.\u00a0Here in this\u00a0example, we will add a RecyclerView and ProgressBar inside a <code>RelativeLayout<\/code>. The progress bar will be shown to user while the data is being downloaded. Add the following code snippets to <code>layout\/activity_feed_list.xml<\/code> file.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;RelativeLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:padding=\"@dimen\/activity_vertical_margin\"&gt;\r\n\r\n    &lt;view\r\n        android:id=\"@+id\/recycler_view\"\r\n        class=\"android.support.v7.widget.RecyclerView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_centerInParent=\"true\" \/&gt;\r\n\r\n    &lt;ProgressBar\r\n        android:id=\"@+id\/progress_bar\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerInParent=\"true\" \/&gt;\r\n&lt;\/RelativeLayout&gt;\r\n<\/pre>\n<h2><span id=\"24-activity-using-recyclerview\">2.4. Activity Using RecyclerView<\/span><\/h2>\n<p><code>RecyclerView<\/code> is a ViewGroup similar to <code>ListView<\/code> or <code>GridView<\/code>. A ViewGroup is an UI widget that is used to render collection of data. In this example, we are trying to download\u00a0the latest feeds from this site\u00a0and display it on\u00a0RecyclerView. \u00a0The focus of this tutorial is narrow down to RecyclerView, hence it doesn&#8217;t include any explanation for\u00a0download\u00a0and\u00a0parse\u00a0data from server. For learning how to\u00a0download data from server, you may read\u00a0<a href=\"http:\/\/stacktips.com\/android\/android-networking-tutorial\">Android Networking Tutorial.<\/a><\/p>\n<p>As the data is downloaded, inside <code>onPostExecute()<\/code> we are initializing the adapter and setting adapter to RecyclerView\u00a0instance by just calling <code>setAdapter()<\/code> method.<\/p>\n<pre class=\"prettyprint lang-java\">package com.javatechig.app;\r\n\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.support.v7.widget.LinearLayoutManager;\r\nimport android.support.v7.widget.RecyclerView;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Toast;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class FeedListActivity extends AppCompatActivity {\r\n    private static final String TAG = \"RecyclerViewExample\";\r\n    private List&lt;FeedItem&gt; feedsList;\r\n    private RecyclerView mRecyclerView;\r\n    private MyRecyclerAdapter adapter;\r\n    private ProgressBar progressBar;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_feeds_list);\r\n\r\n        \/\/ Initialize recycler view\r\n        mRecyclerView = (RecyclerView) findViewById(R.id.recycler_view);\r\n        mRecyclerView.setLayoutManager(new LinearLayoutManager(this));\r\n\r\n        progressBar = (ProgressBar) findViewById(R.id.progress_bar);\r\n        progressBar.setVisibility(View.VISIBLE);\r\n\r\n        \/\/ Downloading data from below url\r\n        final String url = \"http:\/\/stacktips.com\/?json=get_recent_posts&amp;count=45\";\r\n        new AsyncHttpTask().execute(url);\r\n    }\r\n\r\n    public class AsyncHttpTask extends AsyncTask&lt;String, Void, Integer&gt; {\r\n\r\n        @Override\r\n        protected void onPreExecute() {\r\n            setProgressBarIndeterminateVisibility(true);\r\n        }\r\n\r\n        @Override\r\n        protected Integer doInBackground(String... params) {\r\n            Integer result = 0;\r\n            HttpURLConnection urlConnection;\r\n            try {\r\n                URL url = new URL(params[0]);\r\n                urlConnection = (HttpURLConnection) url.openConnection();\r\n                int statusCode = urlConnection.getResponseCode();\r\n\r\n                \/\/ 200 represents HTTP OK\r\n                if (statusCode == 200) {\r\n                    BufferedReader r = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));\r\n                    StringBuilder response = new StringBuilder();\r\n                    String line;\r\n                    while ((line = r.readLine()) != null) {\r\n                        response.append(line);\r\n                    }\r\n                    parseResult(response.toString());\r\n                    result = 1; \/\/ Successful\r\n                } else {\r\n                    result = 0; \/\/\"Failed to fetch data!\";\r\n                }\r\n            } catch (Exception e) {\r\n                Log.d(TAG, e.getLocalizedMessage());\r\n            }\r\n            return result; \/\/\"Failed to fetch data!\";\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(Integer result) {\r\n            \/\/ Download complete. Let us update UI\r\n            progressBar.setVisibility(View.GONE);\r\n\r\n            if (result == 1) {\r\n                adapter = new MyRecyclerAdapter(FeedListActivity.this, feedsList);\r\n                mRecyclerView.setAdapter(adapter);\r\n            } else {\r\n                Toast.makeText(FeedListActivity.this, \"Failed to fetch data!\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void parseResult(String result) {\r\n        try {\r\n            JSONObject response = new JSONObject(result);\r\n            JSONArray posts = response.optJSONArray(\"posts\");\r\n            feedsList = new ArrayList&lt;&gt;();\r\n\r\n            for (int i = 0; i &lt; posts.length(); i++) {\r\n                JSONObject post = posts.optJSONObject(i);\r\n                FeedItem item = new FeedItem();\r\n                item.setTitle(post.optString(\"title\"));\r\n                item.setThumbnail(post.optString(\"thumbnail\"));\r\n\r\n                feedsList.add(item);\r\n            }\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n<\/pre>\n<p>Notice that in the above code snippet, we are using the\u00a0<code>FeedItem<\/code>\u00a0POJO\u00a0class to parse the data from server. Create a new file named\u00a0<code>FeedItem.java<\/code>\u00a0class in\u00a0your project source folder and add the following snippets.<\/p>\n<pre class=\"prettyprint lang-java\">package com.javatechig.recyclerview;\r\n\r\npublic class FeedItem {\r\n    private String title;\r\n    private String thumbnail;\r\n\r\n    public String getTitle() {\r\n        return title;\r\n    }\r\n\r\n    public void setTitle(String title) {\r\n        this.title = title;\r\n    }\r\n\r\n    public String getThumbnail() {\r\n        return thumbnail;\r\n    }\r\n\r\n    public void setThumbnail(String thumbnail) {\r\n        this.thumbnail = thumbnail;\r\n    }\r\n}<\/pre>\n<h2><span id=\"25-creating-recyclerview-adapter\">2.5. Creating RecyclerView Adapter<\/span><\/h2>\n<p>Android RecyclerView\u00a0includes special kind of adapter which works pretty much same as traditional Android\u00a0adapters but with additional functionalities. The additional functionalities includes;<\/p>\n<ul>\n<li>It adds two new methods like <code>onCreateViewHolder()<\/code> and <code>onBindViewHolder()<\/code> to organize the code. You must override these two methods for inflate the view and to bind data to the view<\/li>\n<li>Implements a ViewHolder by default. Conceptually <code>RecyclerView.ViewHolder<\/code> works same as the ViewHolder design pattern which we have been using with other Adapters<\/li>\n<li>Takes care of the overhead of recycling\u00a0and\u00a0gives better performance and scrolling<\/li>\n<\/ul>\n<pre class=\"prettyprint lang-java\">package com.javatechig.app;\r\n\r\nimport android.content.Context;\r\nimport android.support.v7.widget.RecyclerView;\r\nimport android.text.Html;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\nimport com.squareup.picasso.Picasso;\r\nimport java.util.List;\r\n\r\npublic class MyRecyclerAdapter extends RecyclerView.Adapter&lt;MyRecyclerAdapter.CustomViewHolder&gt; {\r\n    private List&lt;FeedItem&gt; feedItemList;\r\n    private Context mContext;\r\n\r\n    public MyRecyclerAdapter(Context context, List&lt;FeedItem&gt; feedItemList) {\r\n        this.feedItemList = feedItemList;\r\n        this.mContext = context;\r\n    }\r\n\r\n    @Override\r\n    public CustomViewHolder onCreateViewHolder(ViewGroup viewGroup, int i) {\r\n        View view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.list_row, null);\r\n\r\n        CustomViewHolder viewHolder = new CustomViewHolder(view);\r\n        return viewHolder;\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(CustomViewHolder customViewHolder, int i) {\r\n        FeedItem feedItem = feedItemList.get(i);\r\n\r\n        \/\/Download image using picasso library\r\n        Picasso.with(mContext).load(feedItem.getThumbnail())\r\n                .error(R.drawable.placeholder)\r\n                .placeholder(R.drawable.placeholder)\r\n                .into(customViewHolder.imageView);\r\n\r\n        \/\/Setting text view title\r\n        customViewHolder.textView.setText(Html.fromHtml(feedItem.getTitle()));\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return (null != feedItemList ? feedItemList.size() : 0);\r\n    }\r\n}\r\n<\/pre>\n<h2><span id=\"26-recyclerview-row-layout\">2.6. RecyclerView Row Layout<\/span><\/h2>\n<p>The above code mentions about another new layout <code>list_row.xml<\/code>. This is defies the layout for RecyclerView\u00a0item. \u00a0Here in this example, we are using the CardView as parent layout and CardView hosts a RelativeLayout with an\u00a0ImageView and TextView.<\/p>\n<p>Click here to learn more about <a href=\"http:\/\/stacktips.com\/android\/android-cardview-example\">Android CardView<\/a>.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;android.support.v7.widget.CardView xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    xmlns:cardview=\"http:\/\/schemas.android.com\/apk\/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"80dp\"\r\n    android:layout_margin=\"8dp\"&gt;\r\n\r\n    &lt;RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"80dp\"&gt;\r\n\r\n        &lt;ImageView\r\n            android:id=\"@+id\/thumbnail\"\r\n            android:layout_width=\"100dp\"\r\n            android:layout_height=\"80dp\"\r\n            android:layout_alignParentLeft=\"true\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:scaleType=\"centerCrop\"\r\n            android:src=\"@drawable\/placeholder\" \/&gt;\r\n\r\n        &lt;TextView\r\n            android:id=\"@+id\/title\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:layout_toRightOf=\"@+id\/thumbnail\"\r\n            android:maxLines=\"3\"\r\n            android:padding=\"8dp\"\r\n            android:text=\"dafdafda\"\r\n            android:textColor=\"#222\"\r\n            android:textSize=\"15dp\" \/&gt;\r\n\r\n    &lt;\/RelativeLayout&gt;\r\n&lt;\/android.support.v7.widget.CardView&gt;\r\n<\/pre>\n<h2><span id=\"26-implementingviewholderpattern\">2.6. Implementing\u00a0ViewHolder\u00a0Pattern<\/span><\/h2>\n<p>Now let us create our ViewHolder class. The ViewHolder contains the reference to the each of the ui widget on the row. We have defined this class as a private class inside <code>MyRecyclerAdapter<\/code>.<\/p>\n<pre class=\"prettyprint lang-java\">public class CustomViewHolder extends RecyclerView.ViewHolder {\r\n        protected ImageView imageView;\r\n        protected TextView textView;\r\n\r\n        public CustomViewHolder(View view) {\r\n            super(view);\r\n            this.imageView = (ImageView) view.findViewById(R.id.thumbnail);\r\n            this.textView = (TextView) view.findViewById(R.id.title);\r\n        }\r\n    }\r\n<\/pre>\n<h1><span id=\"3handle-recyclerview-click-event\">3.\u00a0Handle RecyclerView Click Event<\/span><\/h1>\n<p>Handling click event on RecyclerView is not as sweet as handling click listener in ListView or GridView. Android RecyclerView doesn&#8217;t provide any built in listeners or handy way of handling click events.<\/p>\n<p>However we can use workaround to handle click event explicitly by adding the following code in <code>onBindViewHolder()<\/code> method.<\/p>\n<pre class=\"prettyprint lang-java\">\/\/Handle click event on both title and image click\r\ncustomViewHolder.textView.setOnClickListener(clickListener);\r\ncustomViewHolder.imageView.setOnClickListener(clickListener);\r\n\r\ncustomViewHolder.textView.setTag(customViewHolder);\r\ncustomViewHolder.imageView.setTag(customViewHolder);\r\n<\/pre>\n<p>Add declare the clickListener variable as follows<\/p>\n<pre class=\"prettyprint lang-java\">View.OnClickListener clickListener = new View.OnClickListener() {\r\n    @Override\r\n    public void onClick(View view) {\r\n        CustomViewHolder holder = (CustomViewHolder) view.getTag();\r\n        int position = holder.getPosition();\r\n\r\n        FeedItem feedItem = feedItemList.get(position);\r\n        Toast.makeText(mContext, feedItem.getTitle(), Toast.LENGTH_SHORT).show();\r\n    }\r\n};<\/pre>\n<h1><span id=\"4-download-source-code\">4. Download Source Code<\/span><\/h1>\n<p><a class = 'ss-button dowload-button' href='https:\/\/github.com\/javatechig\/Android-RecyclerView-Example' target='_blank'>Download from GitHub.<\/a><\/p>\n","excerpt":"<p>Google&#8217;s upcoming operating system named Android L looks very promising. It is highly focused on rich user experience and what they called it as material design. In this example we will take a look at the new UI widget called RecyclerView.<\/p>\n","date":"2014-09-24 02:20:27","modified":"2015-07-01 21:20:09","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":148,"slug":"androidl","title":"AndroidL","description":"","post_count":2},{"id":141,"slug":"listview","title":"ListView","description":"","post_count":6}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":7623,"name":"Luizje","url":"","date":"2014-10-02 15:48:00","content":"<p>You need to run it on a Android OS. So if you don&#8217;t want to use a android device you have to run it on a android emulator.. You can use the normal android emulator or you can take a look at Genymotion (in my opinion a better emulator than the one from google)..<\/p>\n","parent":0},{"id":7624,"name":"javatechig","url":"http:\/\/stacktips.com\/","date":"2014-10-02 15:50:00","content":"<p>Thanks @Luizje<\/p>\n","parent":7623},{"id":7693,"name":"n.","url":"","date":"2014-11-23 22:43:00","content":"<p>Thanks a lot!! Everything works perfect<\/p>\n","parent":0},{"id":7754,"name":"Aviv","url":"","date":"2015-01-20 15:56:00","content":"<p>Thanks!<br \/>\nBut instead of<br \/>\ninflate(R.layout.list_row, null);<br \/>\nuse<br \/>\ninflate(R.layout.list_row, viewGroup, false);<\/p>\n","parent":0},{"id":7759,"name":"EDay","url":"","date":"2015-01-23 07:58:00","content":"<p>Thank you very much for posting this. I&#8217;ve been working literally all day trying to figure out how to refresh my RecycleView in a fragment with an AsyncTask. The second section above gave me what I needed, particularly resetting the adapter in onPostExecute.<\/p>\n","parent":0},{"id":7761,"name":"javatechig","url":"http:\/\/stacktips.com\/","date":"2015-01-23 08:06:00","content":"<p>We are glad it helped you.<\/p>\n","parent":7759},{"id":7762,"name":"JohanToc","url":"","date":"2015-01-24 16:19:00","content":"<p>Hi!<\/p>\n<p>How works this sentences?<\/p>\n<p>        return (null != feedItemList ? feedItemList.size() : 0);<\/p>\n<p>I don`t undertand exactly what.<br \/>\nThanks! Great article.<\/p>\n","parent":0},{"id":7763,"name":"javatechig","url":"http:\/\/stacktips.com\/","date":"2015-01-24 16:57:00","content":"<p>Here i amusing ternary operation to make a null check. Otherwise it will throw a NullPointerException when feedItemList is null. The above code is same as <\/p>\n<p>if(feedItemList !=null){<br \/>\n\treturn feedItemList.size();<br \/>\n}else{<br \/>\n\treturn 0;<br \/>\n}<\/p>\n<p>Please read more about ternary operator here <a href=\"http:\/\/en.wikipedia.org\/wiki\/%3F:#Java\" rel=\"nofollow\">http:\/\/en.wikipedia.org\/wiki\/%3F:#Java<\/a><\/p>\n","parent":7762},{"id":7764,"name":"JohanToc","url":"","date":"2015-01-25 22:37:00","content":"<p>Thanks!<\/p>\n","parent":7763},{"id":7767,"name":"JavaTechig","url":"http:\/\/stacktips.com\/","date":"2015-01-27 15:31:00","content":"<p>\ud83d\ude42<\/p>\n","parent":7764},{"id":7776,"name":"JavaTechig","url":"http:\/\/stacktips.com\/","date":"2015-02-03 13:32:00","content":"<p>Download Picasso image downloader library.<\/p>\n","parent":0},{"id":7798,"name":"JavaTechig","url":"http:\/\/stacktips.com\/","date":"2015-02-12 00:34:00","content":"<p>Checkout the sample code. Will soon post the tutorial on Javatechig. <\/p>\n<p><a href=\"https:\/\/github.com\/npanigrahy\/Android-Lollipop-Navigation-Drawer\" rel=\"nofollow\">https:\/\/github.com\/npanigrahy\/Android-Lollipop-Navigation-Drawer<\/a><\/p>\n","parent":0},{"id":7908,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-10 19:05:00","content":"<p>For click event handling in RecyclerView, you won&#8217;t find any standard call back such as onListItemClick, you have to write your own click event handling in adapter class. Find a sample here that might help<\/p>\n<p><a href=\"https:\/\/github.com\/npanigrahy\/Android-Lollipop-Navigation-Drawer\/blob\/master\/app\/src\/main\/java\/com\/javatechig\/apps\/nav\/NavigationDrawerAdapter.java\" rel=\"nofollow\">https:\/\/github.com\/npanigrahy\/Android-Lollipop-Navigation-Drawer\/blob\/master\/app\/src\/main\/java\/com\/javatechig\/apps\/nav\/NavigationDrawerAdapter.java<\/a><\/p>\n<p>Secondly, for passing data such as array list it is recommended not to pass Serializable bundle due to performance reasons. Instead you may consider dealing with some sort of local storage such as SQLite. <\/p>\n","parent":0},{"id":7948,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-24 19:09:00","content":"<p>Checkout this tutorial explains <a href=\"http:\/\/stacktips.com\/android\/how-to-use-picasso-library-in-android\" rel=\"nofollow\">How to Use Picasso Image Loader Library in Android<\/a><\/p>\n","parent":0},{"id":8081,"name":"Milad Moafi","url":"","date":"2015-07-10 10:14:00","content":"<p>hI @javatechig:disqus  please provide a toturial that explain XML Parsing instead of JSON&#8230;i have some isuues with that.<\/p>\n","parent":0},{"id":8111,"name":"Rakhi Dhavale","url":"https:\/\/plus.google.com\/+RakhiDhavale","date":"2015-07-23 16:20:00","content":"<p>Thanks for this post, helped me !!<\/p>\n","parent":0},{"id":8113,"name":"Patient Ba\u00efse","url":"","date":"2015-07-25 04:12:00","content":"<p>Hi, when I have no internet connection, the application stops<br \/>\ncan you helps me?<\/p>\n","parent":0},{"id":8136,"name":"Kanyerezi Patrick","url":"","date":"2015-08-02 19:27:00","content":"<p>hey man thanks for the tutorial. Am getting the error &#8220;RecyclerView\ufe55 No adapter attached; skipping layout&#8221; in my logcat and the application loads upto when it crushes . Wondering what am doing wrong , thanks.<\/p>\n","parent":0},{"id":8141,"name":"jaydeep","url":"","date":"2015-08-04 22:08:00","content":"<p>hii Nilanchala,<br \/>\nI have added recyclerView in material tabs , i am using volley to make request..<br \/>\nin my app i try to add list of videos from youtube channel using youtube data api v3,<br \/>\nbut something went wrong in implementing pagination in recyclerview&#8230;  <\/p>\n<p>please can you tell me how can i solve this ????? here is my code on stackoverflow :<\/p>\n<p><a href=\"http:\/\/stackoverflow.com\/questions\/31792796\/android-error-in-implementing-endless-scrolling-using-pagination-from-api\" rel=\"nofollow\">http:\/\/stackoverflow.com\/questions\/31792796\/android-error-in-implementing-endless-scrolling-using-pagination-from-api<\/a><\/p>\n<p>please reply&#8230; I&#8217;ll be highly thankful.<\/p>\n","parent":0},{"id":8142,"name":"jaydeep","url":"","date":"2015-08-05 11:54:00","content":"<p>hii.. Nilanchala,<\/p>\n<p>I have added RecyclerView in my material tabs fragment, i am trying to add youtube channel videos using pagination to that recycler view from youtube data api v3 but i don&#8217;t know why my code dosen&#8217;t work &#8230;<\/p>\n<p>please can you tell me how can i solve this,<br \/>\nplease reply I&#8217;ll be highly thankful.<\/p>\n<p>here is my code on stackoverflow&#8230;<br \/>\n<a href=\"http:\/\/stackoverflow.com\/questions\/31792796\/android-error-in-implementing-endless-scrolling-using-pagination-from-api\" rel=\"nofollow\">http:\/\/stackoverflow.com\/questions\/31792796\/android-error-in-implementing-endless-scrolling-using-pagination-from-api<\/a><\/p>\n","parent":0},{"id":8144,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-08-05 12:00:00","content":"<p>I guess you&#8217;re missing to call following line<\/p>\n<p>mRecyclerView.setLayoutManager(new LinearLayoutManager(this));<\/p>\n","parent":8136},{"id":8189,"name":"Vince","url":"","date":"2015-09-05 21:36:00","content":"<p>JavaTechig this tutorial is amazing would you perhaps give a link with the back-end code, thanks in advance \ud83d\ude42<\/p>\n","parent":0},{"id":8258,"name":"Lara Ruffle Coles","url":"","date":"2015-10-09 16:18:00","content":"<p>Shouldn&#8217;t you be using this bit of code instead in the dependancies section? \ud83d\ude42<\/p>\n<p>From: <a href=\"http:\/\/square.github.io\/picasso\/\" rel=\"nofollow\">http:\/\/square.github.io\/picasso\/<\/a><br \/>\nCode: compile &#8216;com.squareup.picasso:picasso:2.5.2&#8217;<\/p>\n","parent":7776},{"id":8262,"name":"Krishna Dev","url":"","date":"2015-10-14 11:35:00","content":"<p>i got this code from github, but it&#8217;s show configuration error, i cannot solve that error please help me&#8230;. anyone&#8230;<\/p>\n","parent":0},{"id":8303,"name":"dreamcorp","url":"","date":"2015-11-07 13:01:00","content":"<p>just add this to xml of cardview<br \/>\ncard_view:cardUseCompatPadding=&#8221;true&#8221;<\/p>\n","parent":0},{"id":8320,"name":"Patient Ba\u00efse","url":"","date":"2015-11-27 03:14:00","content":"<p>Hi Nilanchala, <\/p>\n<p>your tutorial is very good but on my projet, I can not get the images in some items .<br \/>\nCan I know why?<br \/>\nmy link is : <\/p>\n<p><a href=\"http:\/\/universfm.org\/api\/get_category_posts\/?id=278\" rel=\"nofollow\">http:\/\/universfm.org\/api\/get_category_posts\/?id=278<\/a><\/p>\n","parent":0},{"id":8321,"name":"Denis Shahov","url":"","date":"2015-11-27 19:38:00","content":"<p>Hello from Urkaine! Your tutorial is incrediable, perfect!!!!!!!!! THANK YOU !!!!!<\/p>\n","parent":0},{"id":8322,"name":"Patient Ba\u00efse","url":"","date":"2015-11-28 05:04:00","content":"<p>I use the code but in some items I can not get the images.<br \/>\nCan I know why?<br \/>\nThis is a problem of size jpg or png format?<br \/>\nMy link is :<br \/>\n<a href=\"http:\/\/universfm.org\/api\/get_category_posts\/?id=278\" rel=\"nofollow\">http:\/\/universfm.org\/api\/get_category_posts\/?id=278<\/a><br \/>\nThank you<\/p>\n","parent":0},{"id":8327,"name":"Patient Ba\u00efse","url":"","date":"2015-11-30 02:46:00","content":"<p>Hi, <\/p>\n<p>Nilanchala<\/p>\n<p> i use this code but in some items I can not get the images.<br \/>\nCan I know why?<br \/>\nThis is a problem of size jpg or png format?<\/p>\n<p>And also I can not have more than 10 items. What should I do?<\/p>\n","parent":0},{"id":8330,"name":"Paul","url":"","date":"2015-11-30 23:02:00","content":"<p>Great tutorial! I didn&#8217;t need anything fancy just something short and sweet. This was perfect!<\/p>\n","parent":0},{"id":8333,"name":"Vishal Bhandare","url":"","date":"2015-12-02 00:40:00","content":"<p>Thank you for this tutorial. It really helps a lot. Can you please explain a bit about the use of Card View in this? &amp; Could you please tell me to do the same in eclipse?<\/p>\n","parent":0},{"id":8335,"name":"Shruti Loddha","url":"","date":"2015-12-02 11:08:00","content":"<p>You should try this&#8230;it was working for me.<\/p>\n","parent":0},{"id":8340,"name":"Babu","url":"","date":"2015-12-22 19:00:00","content":"<p>abe bhai eclipse deprecate ho chuka hai,<br \/>\nstudio pe kaam kar.<\/p>\n","parent":8333},{"id":8343,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-12-23 18:08:00","content":"<p>I am in process of updating all examples in this blog to Android studio project. <\/p>\n","parent":8340},{"id":8363,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2016-01-18 15:26:00","content":"<p>I think you&#8217;re skipping the following code. <\/p>\n<p>mRecyclerView.setLayoutManager(new LinearLayoutManager(this));<\/p>\n","parent":0},{"id":8364,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2016-01-18 15:27:00","content":"<p>I think, something wrong with your list row layout.<\/p>\n","parent":0},{"id":8365,"name":"sumit","url":"","date":"2016-01-18 20:40:00","content":"<p>thanks for the reply, there was some problem with api but i got it now.<\/p>\n","parent":8363},{"id":8368,"name":"Babu","url":"","date":"2016-01-19 18:01:00","content":"<p>Perfect. All the best. (y)<\/p>\n","parent":8343},{"id":8376,"name":"Jeff Chenko","url":"","date":"2016-02-10 02:35:00","content":"<p>Thanks for this tutorial ! I have an issue i think it&#8217;s my php file. It would be great if i can have the tutorial php code to compare with mine.<\/p>\n","parent":0},{"id":8406,"name":"Oim Trust","url":"http:\/\/otrust-tutorial.blogspot.com","date":"2016-02-26 08:27:00","content":"<p>how to way to call them to the next class onClicklistener. like the example, DetailActivity.java as the next class.<br \/>\nSorry, i&#8217;m beginner \ud83d\ude42<\/p>\n","parent":0},{"id":8407,"name":"Oim Trust","url":"http:\/\/otrust-tutorial.blogspot.com","date":"2016-02-26 09:03:00","content":"<p>how the way to call take it to the next class onClickListener. like the example, DetailActivity.java as the next class.<br \/>\nsorry, i&#8217;m a beginner&#8230;<\/p>\n","parent":0},{"id":8416,"name":"nikita","url":"","date":"2016-02-29 12:29:00","content":"<p>m followng material design. so cn i replace fragment on the onClick() of cardview with passing some data from recyclerview adapter class to the another fragment?<\/p>\n","parent":0},{"id":8426,"name":"yathavan yogarajah","url":"","date":"2016-03-06 23:50:00","content":"<p>i developed android Recyclerview, every row have 1progressbar then i click on the item call download function from MainActivity thats work fine. i need to update specific progressbar.<\/p>\n","parent":0},{"id":8428,"name":"Dennis Mubamba","url":"","date":"2016-03-07 04:02:00","content":"<p>i am get getting a no adapter error in my fragment activity, so how can i do this in a activity<\/p>\n","parent":0},{"id":8435,"name":"Mario German Agudelo","url":"","date":"2016-03-10 06:43:00","content":"<p>Hi Nilanchala, thanks for sharing your knowledge: I have an application which has two buttons on the main activity, the idea is that by giving click on them, I send activity recyclerview which would be the same for the two buttons, the only thing is that by giving click button 1 to display information only on that button and the button 2 to give click to show only the information that button, I appreciate all the information you can give me, thank you.<\/p>\n","parent":0},{"id":8438,"name":"Mario German Agudelo","url":"","date":"2016-03-10 23:06:00","content":"<p>Hello Nilanchala; What a great video thanks for sharing, I have the following question: I have an application in which the first activity are all of which want to launch a new activity which is a recyclerview, and that the selecionar one of the buttons show me the pertienen information, ie button 1 show only information I 1 and so on with the buttons, the idea is that everything comes from the same list. I send you the link of the project: <\/p>\n<p><a href=\"https:\/\/github.com\/Mario1708\/MyProyect\" rel=\"nofollow\">https:\/\/github.com\/Mario1708\/MyProyect<\/a><\/p>\n<p>puesdes grateful if I help. Thank you<\/p>\n","parent":0},{"id":8456,"name":"Mehmet","url":"","date":"2016-03-23 02:48:00","content":"<p>Remove padding in mainActivity<\/p>\n","parent":0},{"id":8466,"name":"Davy","url":"","date":"2016-03-30 20:19:00","content":"<p>Make sure layout height&#8217;s cardview is not &#8220;match_parent&#8221; !!<\/p>\n","parent":0},{"id":8467,"name":"Akinyemi john","url":"","date":"2016-04-01 07:12:00","content":"<p>Hi JavaTechig am a fan of yours and i really enjoyed your tutorials, i<br \/>\nneead your help can you please make the rss feed item show in a webview<br \/>\nwhen clicked by a user i have tried so many times but it is not working<br \/>\nsee my code belo for the onitem click in the adapter<br \/>\nView.OnClickListener clickListener = new View.OnClickListener() {<br \/>\n     @Override<br \/>\n     public void onClick(View view) {<br \/>\n         CustomViewHolder holder = (CustomViewHolder) view.getTag();<br \/>\n         int position = holder.getPosition();<\/p>\n<p>         FeedItem feedItem = feedItemList.get(position);<br \/>\n         \/\/Toast.makeText(mContext, feedItem.getTitle(),<br \/>\nToast.LENGTH_SHORT).show();<\/p>\n<p>         \/*Intent intent = new Intent(mContext.getApplicationContext(),<br \/>\nDetails.class);<br \/>\n         intent.putExtra(&#8220;url&#8221;, feedItem.getLink());<br \/>\n         mContext.startActivity(intent);*\/<\/p>\n<p>         String urlval = link + &#8220;&#8221;;<br \/>\n         Intent mIntent = new Intent(mContext.getApplicationContext(),<br \/>\nDetails.class);<br \/>\n         mIntent.putExtra(Details.URL_KEY, urlval);<br \/>\n         mContext.startActivity(mIntent);<\/p>\n<p>     }<br \/>\n};<br \/>\nKindly reply soon thank you in advance<\/p>\n","parent":0},{"id":8479,"name":"Rana Saqib Manj","url":"","date":"2016-04-12 12:24:00","content":"<p><a href=\"http:\/\/stackoverflow.com\/questions\/36498881\/animate-gravity-layout-changes-of-floatingactionbutton-in-android?stw=2\" rel=\"nofollow\">http:\/\/stackoverflow.com\/questions\/36498881\/animate-gravity-layout-changes-of-floatingactionbutton-in-android?stw=2<\/a><\/p>\n<p>I have a question &#8230; please reply me this question&#8230;<\/p>\n","parent":0},{"id":8532,"name":"Himanshu","url":"","date":"2016-06-02 00:31:00","content":"<p>@dennismubamba:disqus I am getting a error in main activity when i am calling adapter in main activity. please see this:<br \/>\n<a href=\"http:\/\/stackoverflow.com\/questions\/37566355\/adapter-not-working-while-implementing-recyclerview-and-cardview?noredirect=1#comment62620177_37566355\" rel=\"nofollow\">http:\/\/stackoverflow.com\/questions\/37566355\/adapter-not-working-while-implementing-recyclerview-and-cardview?noredirect=1#comment62620177_37566355<\/a><\/p>\n","parent":8428}],"attachments":[{"id":5988,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-L.jpg","slug":"android-l","title":"AndroidL Tutorials","description":"AndroidL Tutorials","caption":"Android Tutorials","parent":5987,"mime_type":"image\/jpeg","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-L-e1415185201272.jpg","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-L-620x349.jpg","width":620,"height":349},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-L-e1415185201272.jpg","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-L-e1415185201272.jpg","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-L-e1415185201272.jpg","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-L-e1415185201272.jpg","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-L-e1415185201272.jpg","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-L-e1415185201272.jpg","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-L-e1415185201272.jpg","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-L-e1415185201272.jpg","width":248,"height":150}}},{"id":5998,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-RecyclerView-Example.png","slug":"android-recyclerview-example-2","title":"Android RecyclerView Example","description":"Android RecyclerView Example","caption":"","parent":5987,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-RecyclerView-Example-e1434115167794.png","width":458,"height":635},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-RecyclerView-Example-e1434115167794.png","width":458,"height":635},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-RecyclerView-Example-e1434115167794.png","width":458,"height":635},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-RecyclerView-Example-e1434115167794.png","width":458,"height":635},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-RecyclerView-Example-e1434115167794.png","width":458,"height":635},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-RecyclerView-Example-e1434115167794.png","width":458,"height":635}}}],"comment_count":51,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"snap_isAutoPosted":["1"],"fsb_social_facebook":["11"],"fsb_social_twitter":["6"],"fsb_social_google":["9"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"dsq_thread_id":["3047309784"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"2Tv9bW\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/2Tv9bW\/comments\";s:5:\"pDate\";s:19:\"2014-09-23 20:51:19\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:98251616256;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/98251616256\";s:5:\"pDate\";s:19:\"2014-09-23 20:51:08\";}}\";"],"cf_url":[""],"post_views_count":["15031","15031"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-09-23 20:50:56\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"8231ee0916b9ae69c0f013731f210e6d\";s:5:\"pDate\";s:19:\"2014-09-23 20:51:02\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_889064001105855\";s:5:\"pDate\";s:19:\"2014-09-23 20:51:15\";}}\";"],"snapIP":["s:211:\"a:1:{i:0;a:7:{s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"IP\";s:5:\"pDate\";s:19:\"2014-09-23 21:05:53\";s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:271:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:8:\"attchImg\";s:1:\"0\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"514517389589757952\";s:5:\"pDate\";s:19:\"2014-09-23 20:51:19\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":6005,"type":"post","slug":"android-service-interview-questions","url":"http:\/\/stacktips.com\/tutorials\/android\/android-service-interview-questions","status":"publish","title":"Android Service Interview Questions","title_plain":"Android Service Interview Questions","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android Service Interview Questions' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-service-interview-questions' data-summary='In this post you will find set of interview questions and answers on Android Service, IntentService and AlarmService'><\/div>\n<h3>1. What is the purposes of Service in Android?<\/h3>\n<p>Android Service is used to perform long running jobs off the UI thread. A typical long running tasks can be periodic downloading of data from internet, saving multiple records into database, perform file I\/O, fetching your phone contacts list, etc. For such long running tasks, Service is used to avoid UI lags and makes user experience better.<\/p>\n<h3>2. Explain service lifecycle methods?<\/h3>\n<p>A service can be run by the system, If someone calls Context.startService() or bindService() method.<\/p>\n<ol style=\"padding-left: 30px;\">\n<li><b>onStartCommand()<\/b> &#8211; This method is called when the service be started by calling startService(). Once this method executes, the service is started and can run in the background indefinitely. If you implement this, it is your responsibility to stop the service when its work is done, by calling stopSelf() or stopService(). \u00a0If you are defining your service as, bounded service then you don\u2019t need to implement this method.<\/li>\n<li><b>onBind()<\/b> &#8211; You need to override this method, only if you are defining your service as bounded service. This method is called, when another component wants to bind with the service by calling bindService(). In your implementation of this method, you must provide an interface that clients use to communicate with the service, by returning an IBinder. You must always implement this method, but if you don\u2019t want to allow binding, then you should return null.<\/li>\n<li><b>onCreate()<\/b>&#8211; This method is called while the service is first created. Here all the service initialization is done. This method is never called again.<\/li>\n<li><b>onDestroy()<\/b> &#8211; The system calls this method when the service is no longer used and is being destroyed. This method is used to, clean up any resources such as threads, registered listeners, receivers, etc. This is the last call the service receives.<\/li>\n<\/ol>\n<h3>3. What is the difference between bound and unbounded service?<\/h3>\n<ol style=\"padding-left: 30px;\">\n<li><strong>Bound Service &#8211;\u00a0<\/strong>Service which call indefinitely in between activity. An Android component may bind itself to a Service using bindservice (). A bound service would run as long as the other application components are bound to it. As soon as they unbind, the service destroys itself.<\/li>\n<li><strong>Unbound Service &#8211;\u00a0<\/strong>Service which call at the life span of calling activity. In this case, an application component starts the service, and it would continue to run in the background, even if the original component that initiated it is destroyed. For instance, when started, a service would continue to play music in the background indefinitely.<\/li>\n<\/ol>\n<h3>4. What are the different clock types supported for AlarmService?<\/h3>\n<p>Android supports two clock types for alarm service. Once is elapsed real time and other is real time clock (RTC). \u00a0Elapsed real time uses the time since device last booted. Real time clock (RTC) uses UTC time for alarm service clock. RTC is most commonly used for setting alarm service in android.<\/p>\n<h3>5. How to define a service in manifest<\/h3>\n<p>All the services \u00a0used in the app need to be registered in application Manifest. Services are declared as shown below<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;!--Service declared in manifest --&gt;\r\n&lt;service android:name=\".HelloService\"\r\nandroid:exported=\"false\"\/&gt;<\/pre>\n<h3>6. How to pass data to an IntentService ?<\/h3>\n<p>You can pass data as bundle to IntentService before you start.<\/p>\n<pre class=\"prettyprint lang-java\">Intent intent = new Intent(Intent.ACTION_SYNC, null, this, DownloadService.class);\r\n\r\n\/* Send optional extras to Download IntentService *\/\r\nintent.putExtra(\"url\", url);\r\nintent.putExtra(\"receiver\", mReceiver);\r\nintent.putExtra(\"requestId\", 101);\r\n\r\nstartService(intent);<\/pre>\n<h3>7. What is an alarm service and explain it&#8217;s need with real-world example<\/h3>\n<p>Alarm service is used to run tasks periodically at given interval. You can design application like alrm, birthday reminder, or AlarmManager can be used to initiate long running operations such as syncing data from server once a day. \u00a0\u00a0Once an Alarm Started, this will execute until it is stopped explicitly or until device reboots.<\/p>\n<h3>8. How to stop service?<\/h3>\n<p>Bounded service stops itself once it finishes its tasks. But for unbounded service we need to call stopSelf() or stopService() method.<\/p>\n<h3>9. Can an IntentService execute multiple tasks sequentially?<\/h3>\n<p>No. Intent Services are designed to perform one task at single point of time. \u00a0However tasks can be queued.<\/p>\n<h3>10. How can we make the AlarmService run forever even after device reboot<\/h3>\n<p>Once you start an AlarmService, it runs forever until your device restarts. Once your device restart, you have to start the service explicitly to run it forever again. You have to register BroadcastReceiver to handle boot event.<\/p>\n<h3>11. What are the key differences between a service and IntentService in Android?<\/h3>\n<table>\n<tbody>\n<tr>\n<th><strong>Service<\/strong><\/th>\n<th><strong>IntentService<\/strong><\/th>\n<\/tr>\n<tr>\n<td>Service can be used in tasks with no UI, but shouldn&#8217;t be too long. If you need to perform long tasks, you must create a new thread with in Service<\/td>\n<td>IntentService can be used in long running tasks usually with no communication to Main Thread. If communication is required, can use Main Thread handler or broadcast intents.<\/td>\n<\/tr>\n<tr>\n<td>Service can be started using startService() method<\/td>\n<td>IntentService can be started using startService() method and it triggers onHandleIntent() method.<\/td>\n<\/tr>\n<tr>\n<td>Service can be triggered from any thread<\/td>\n<td>IntentService must be triggered from Main Thread<\/td>\n<\/tr>\n<tr>\n<td>Service runs in background but it runs on the Main Thread of the application.<\/td>\n<td>IntentService runs on a separate worker thread<\/td>\n<\/tr>\n<tr>\n<td>The Service may block the Main Thread of the application.<\/td>\n<td>The IntentService cannot run tasks in parallel. Hence all the consecutive intents will go into the message queue for the worker thread and will execute sequentially.<\/td>\n<\/tr>\n<tr>\n<td>You must call stopSelf() or stopService() to stop a service once your its job is done.<\/td>\n<td>IntentService stops itself when it finishes its job so you never have to call stopSelf()<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n","excerpt":"<p>In this post you will find set of interview questions and answers on Android Service, IntentService and AlarmService<\/p>\n","date":"2014-09-23 08:00:53","modified":"2015-03-18 16:30:31","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":147,"slug":"qa","title":"Q&amp;A","description":"","post_count":4}],"author":{"id":855,"slug":"javatechig","name":"JAVATECHIG","first_name":"Javatechig","last_name":"","nickname":"JAVATECHIG","url":"http:\/\/stacktips.com","description":"Provides tutorials, tips, examples and source code on leading Java, Android, Blackberry, PhoneGap and related mobile technologies."},"comments":[{"id":8518,"name":"Yogesh Wani","url":"","date":"2016-05-10 14:57:00","content":"<p>public class MainActivity extends ListActivity {<\/p>\n<p>    ListView mListView;<\/p>\n<p>    ArrayList mRoutesList;<\/p>\n<p>    RoutesAdapter mRoutesAdapter;<\/p>\n<p>    @Override<\/p>\n<p>    protected void onCreate(Bundle savedInstanceState) {<\/p>\n<p>        super.onCreate(savedInstanceState);<\/p>\n<p>        init();<\/p>\n<p>        new ThreadWorker(this,new RouteHandler()).execute((Object[]) null);<\/p>\n<p>        mListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {<\/p>\n<p>            @Override<\/p>\n<p>            public void onItemClick(AdapterView parent, View view, int position, long id) {<\/p>\n<p>                Intent intent = new Intent(MainActivity.this,RouteDetails.class);<\/p>\n<p>                intent.putExtra(&#8220;route&#8221;,mRoutesList.get(position));<\/p>\n<p>                startActivity(intent);<\/p>\n<p>            }<\/p>\n<p>        });<\/p>\n<p>    }<\/p>\n<p>    private void init() {<\/p>\n<p>        mListView = getListView();<\/p>\n<p>        mRoutesList = new ArrayList();<\/p>\n<p>        mRoutesAdapter = new RoutesAdapter(this,mRoutesList);<\/p>\n<p>        mListView.setAdapter(mRoutesAdapter);<\/p>\n<p>    }<\/p>\n<p>    class  RouteHandler extends Handler{<\/p>\n<p>        @Override<\/p>\n<p>        public void handleMessage(Message msg) {<\/p>\n<p>            super.handleMessage(msg);<\/p>\n<p>            ArrayList routes = (ArrayList) msg.obj;<\/p>\n<p>            mRoutesList.addAll(routes);<\/p>\n<p>            mRoutesAdapter.notifyDataSetChanged();<\/p>\n<p>        }<\/p>\n<p>    }<\/p>\n<p>}<\/p>\n","parent":0},{"id":8519,"name":"Yogesh Wani","url":"","date":"2016-05-10 14:59:00","content":"<p>public class ThreadWorker extends AsyncTask&lt;Object,Object,ArrayList&gt; {<\/p>\n<p>    MainActivity.RouteHandler routeHandler;<\/p>\n<p>    Context context;<\/p>\n<p>    public ThreadWorker(Context context, MainActivity.RouteHandler routeHandler) {<\/p>\n<p>        this.context = context;<\/p>\n<p>        this.routeHandler = routeHandler;<\/p>\n<p>    }<\/p>\n<p>    @Override<\/p>\n<p>    protected ArrayList doInBackground(Object&#8230; params) {<\/p>\n<p>        ArrayList routes = WebUtil.getRouteDetails();<\/p>\n<p>        return routes;<\/p>\n<p>    }<\/p>\n<p>    @Override<\/p>\n<p>    protected void onPostExecute(ArrayList routes) {<\/p>\n<p>        super.onPostExecute(routes);<\/p>\n<p>        Message message = new Message();<\/p>\n<p>        message.obj = routes;<\/p>\n<p>        routeHandler.handleMessage(message);<\/p>\n<p>    }<\/p>\n<p>}<\/p>\n","parent":0},{"id":8520,"name":"Yogesh Wani","url":"","date":"2016-05-10 15:00:00","content":"<p>public class WebUtil {<\/p>\n<p>    public static ArrayList getRouteDetails(){<\/p>\n<p>        URL url;<\/p>\n<p>        HttpURLConnection httpURLConnection;<\/p>\n<p>        try {<\/p>\n<p>            url = new URL(&#8220;http:\/\/bitcodetech.co\/ws_ios_assignment\/routes.php&#8221;);<\/p>\n<p>            httpURLConnection = (HttpURLConnection) url.openConnection();<\/p>\n<p>            httpURLConnection.connect();<\/p>\n<p>            InputStream in = new BufferedInputStream(httpURLConnection.getInputStream());<\/p>\n<p>            byte[] arr = new byte[1024];<\/p>\n<p>            int count;<\/p>\n<p>            StringBuilder stringBuilder = new StringBuilder();<\/p>\n<p>            while ((count=(in.read(arr)))!=-1){<\/p>\n<p>                stringBuilder.append(new String(arr,0,count));<\/p>\n<p>            }<\/p>\n<p>            JSONObject jsonObject = new JSONObject(stringBuilder.toString());<\/p>\n<p>            JSONArray routes = jsonObject.getJSONArray(&#8220;routes&#8221;);<\/p>\n<p>            ArrayList routesarray = new ArrayList();<\/p>\n<p>            for(int i=0;i&lt;routes.length();i++){<\/p>\n<p>                JSONObject obj = routes.getJSONObject(i);<\/p>\n<p>                String from = obj.getString(&quot;from&quot;);<\/p>\n<p>                String to = obj.getString(&quot;to&quot;);<\/p>\n<p>                String duration = obj.getString(&quot;duration&quot;);<\/p>\n<p>                String time = obj.getString(&quot;time&quot;);<\/p>\n<p>                String fair = obj.getString(&quot;fair&quot;);<\/p>\n<p>                ArrayList stopsarray = new ArrayList();<\/p>\n<p>                JSONArray stops = obj.getJSONArray(&#8220;stops&#8221;);<\/p>\n<p>                for(int j=0;j&lt;stops.length();j++){<\/p>\n<p>                    JSONObject stopobj = stops.getJSONObject(j);<\/p>\n<p>                    String name = stopobj.getString(&quot;name&quot;);<\/p>\n<p>                    stopsarray.add(name);<\/p>\n<p>                }<\/p>\n<p>                Routes routes1 = new Routes(from,to,duration,time,fair,stopsarray);<\/p>\n<p>                routesarray.add(routes1);<\/p>\n<p>            }<\/p>\n<p>            return routesarray;<\/p>\n<p>        } catch (MalformedURLException e) {<\/p>\n<p>            e.printStackTrace();<\/p>\n<p>        } catch (IOException e) {<\/p>\n<p>            e.printStackTrace();<\/p>\n<p>        } catch (JSONException e) {<\/p>\n<p>            e.printStackTrace();<\/p>\n<p>        }<\/p>\n<p>        return null;<\/p>\n<p>    }<\/p>\n<p>}<\/p>\n","parent":0},{"id":8521,"name":"Yogesh Wani","url":"","date":"2016-05-10 15:04:00","content":"<p>public class RouteView extends LinearLayout {<\/p>\n<p>    TextView mTxtFrom,mTxtTo,mTxtTime;<\/p>\n<p>    Routes routes;<\/p>\n<p>    public RouteView(Context context) {<\/p>\n<p>        super(context);<\/p>\n<p>        LayoutInflater inflater = LayoutInflater.from(context);<\/p>\n<p>        View view = inflater.inflate(R.layout.lay_routeview,this);<\/p>\n<p>        mTxtFrom = (TextView) view.findViewById(R.id.txtFrom);<\/p>\n<p>        mTxtTo = (TextView) view.findViewById(R.id.txtTo);<\/p>\n<p>        mTxtTime = (TextView) view.findViewById(R.id.txtTime);<\/p>\n<p>    }<\/p>\n<p>    public Routes getRoutes() {<\/p>\n<p>        return routes;<\/p>\n<p>    }<\/p>\n<p>    public void setRoutes(Routes routes) {<\/p>\n<p>        this.routes = routes;<\/p>\n<p>        mTxtFrom.setText(routes.getFrom());<\/p>\n<p>        mTxtTo.setText(routes.getTo());<\/p>\n<p>        mTxtTime.setText(routes.getTime());<\/p>\n<p>    }<\/p>\n<p>}<\/p>\n","parent":0},{"id":8522,"name":"Yogesh Wani","url":"","date":"2016-05-10 15:05:00","content":"<p>public class RoutesAdapter extends BaseAdapter {<\/p>\n<p>    Context mContext;<\/p>\n<p>    ArrayList mRoutesList;<\/p>\n<p>    RouteView mRouteView;<\/p>\n<p>    public RoutesAdapter(Context context, ArrayList routesList) {<\/p>\n<p>        this.mContext = context;<\/p>\n<p>        this.mRoutesList = routesList;<\/p>\n<p>    }<\/p>\n<p>    @Override<\/p>\n<p>    public int getCount() {<\/p>\n<p>        return mRoutesList.size();<\/p>\n<p>    }<\/p>\n<p>    @Override<\/p>\n<p>    public Object getItem(int position) {<\/p>\n<p>        return null;<\/p>\n<p>    }<\/p>\n<p>    @Override<\/p>\n<p>    public long getItemId(int position) {<\/p>\n<p>        return 0;<\/p>\n<p>    }<\/p>\n<p>    @Override<\/p>\n<p>    public View getView(int position, View convertView, ViewGroup parent) {<\/p>\n<p>        if(convertView==null){<\/p>\n<p>            mRouteView = new RouteView(mContext);<\/p>\n<p>        }else {<\/p>\n<p>            mRouteView = (RouteView) convertView;<\/p>\n<p>        }<\/p>\n<p>        mRouteView.setRoutes(mRoutesList.get(position));<\/p>\n<p>        return mRouteView;<\/p>\n<p>    }<\/p>\n<p>}<\/p>\n","parent":0},{"id":8523,"name":"Yogesh Wani","url":"","date":"2016-05-10 15:05:00","content":"<p>public class Routes implements Serializable {<\/p>\n<p>    String mFrom,mTo,mDuration,mTime,mFair;<\/p>\n<p>    ArrayList mStops;<\/p>\n<p>    public Routes( String from, String to, String duration, String time, String fair,  ArrayList stops) {<\/p>\n<p>        this.mFrom = from;<\/p>\n<p>        this.mTo = to;<\/p>\n<p>        this.mDuration = duration;<\/p>\n<p>        this.mTime = time;<\/p>\n<p>        this.mFair = fair;<\/p>\n<p>        this.mStops = stops;<\/p>\n<p>    }<\/p>\n<p>    public String getFrom() {<\/p>\n<p>        return mFrom;<\/p>\n<p>    }<\/p>\n<p>    public void setFrom(String from) {<\/p>\n<p>        this.mFrom = from;<\/p>\n<p>    }<\/p>\n<p>    public String getTo() {<\/p>\n<p>        return mTo;<\/p>\n<p>    }<\/p>\n<p>    public void setTo(String to) {<\/p>\n<p>        this.mTo = to;<\/p>\n<p>    }<\/p>\n<p>    public String getDuration() {<\/p>\n<p>        return mDuration;<\/p>\n<p>    }<\/p>\n<p>    public void setDuration(String duration) {<\/p>\n<p>        this.mDuration = duration;<\/p>\n<p>    }<\/p>\n<p>    public String getTime() {<\/p>\n<p>        return mTime;<\/p>\n<p>    }<\/p>\n<p>    public void setTime(String time) {<\/p>\n<p>        this.mTime = time;<\/p>\n<p>    }<\/p>\n<p>    public String getFair() {<\/p>\n<p>        return mFair;<\/p>\n<p>    }<\/p>\n<p>    public void setFair(String fair) {<\/p>\n<p>        this.mFair = fair;<\/p>\n<p>    }<\/p>\n<p>    public ArrayList getmStops() {<\/p>\n<p>        return mStops;<\/p>\n<p>    }<\/p>\n<p>    public void setmStops(ArrayList mStops) {<\/p>\n<p>        this.mStops = mStops;<\/p>\n<p>    }<\/p>\n<p>}<\/p>\n","parent":0},{"id":8524,"name":"Yogesh Wani","url":"","date":"2016-05-10 15:06:00","content":"<p>public class RouteDetails extends Activity {<\/p>\n<p>    TextView mTxtDisplayFrom,mTxtDisplayTo,mTxtDisplayDuration,mTxtDisplayTime,mTxtDisplayFair,mTxtDisplayStop;<\/p>\n<p>    @Override<\/p>\n<p>    protected void onCreate(Bundle savedInstanceState) {<\/p>\n<p>        super.onCreate(savedInstanceState);<\/p>\n<p>        setContentView(R.layout.activity_route_details);<\/p>\n<p>        mTxtDisplayFrom = (TextView) findViewById(R.id.txtDisplayFrom);<\/p>\n<p>        mTxtDisplayTo = (TextView) findViewById(R.id.txtDisplayTo);<\/p>\n<p>        mTxtDisplayDuration = (TextView) findViewById(R.id.txtDisplayDuration);<\/p>\n<p>        mTxtDisplayTime = (TextView) findViewById(R.id.txtDisplayTime);<\/p>\n<p>        mTxtDisplayFair = (TextView) findViewById(R.id.txtDisplayFair);<\/p>\n<p>        mTxtDisplayStop = (TextView) findViewById(R.id.txtDisplayStops);<\/p>\n<p>        Intent intent = getIntent();<\/p>\n<p>        Routes routes = (Routes) intent.getSerializableExtra(&#8220;route&#8221;);<\/p>\n<p>        mTxtDisplayFrom.setText(routes.getFrom());<\/p>\n<p>        mTxtDisplayTo.setText(routes.getTo());<\/p>\n<p>        mTxtDisplayDuration.setText(routes.getDuration());<\/p>\n<p>        mTxtDisplayTime.setText(routes.getTime());<\/p>\n<p>        mTxtDisplayFair.setText(routes.getFair());<\/p>\n<p>        ArrayList stopsarray = new ArrayList();<\/p>\n<p>        stopsarray = routes.getmStops();<\/p>\n<p>        for(int i =0;i&lt;stopsarray.size();i++){<\/p>\n<p>            if(i==0){<\/p>\n<p>                mTxtDisplayStop.setText(stopsarray.get(i));<\/p>\n<p>            }else{<\/p>\n<p>                mTxtDisplayStop.append(&quot; ,&quot;+stopsarray.get(i));<\/p>\n<p>            }<\/p>\n<p>        }<\/p>\n<p>    }<\/p>\n<p>}<\/p>\n","parent":0},{"id":8525,"name":"Yogesh Wani","url":"","date":"2016-05-10 15:06:00","content":"<p>Bus Demo<\/p>\n","parent":0},{"id":8526,"name":"Yogesh Wani","url":"","date":"2016-05-10 15:14:00","content":"<p><a href=\"http:\/\/stacktips.com\/android\/android-service-interview-questions\" rel=\"nofollow\">http:\/\/stacktips.com\/android\/android-service-interview-questions<\/a><\/p>\n","parent":0}],"attachments":[],"comment_count":9,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"dsq_thread_id":["3042956949"],"snap_isAutoPosted":["1"],"fsb_social_facebook":["3"],"fsb_social_twitter":["3"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-09-23 02:32:04\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"d056c48f853ea63960e0d2acf40c839d\";s:5:\"pDate\";s:19:\"2014-09-23 02:32:10\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_888697077809214\";s:5:\"pDate\";s:19:\"2014-09-23 02:32:16\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"2eWeJ6\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/2eWeJ6\/comments\";s:5:\"pDate\";s:19:\"2014-09-23 02:32:20\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:98196071666;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/98196071666\";s:5:\"pDate\";s:19:\"2014-09-23 02:32:21\";}}\";"],"snapTW":["s:271:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:8:\"attchImg\";s:1:\"0\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"514240828303089664\";s:5:\"pDate\";s:19:\"2014-09-23 02:32:22\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["4163"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154}}},{"id":5940,"type":"post","slug":"android-interview-questions","url":"http:\/\/stacktips.com\/tutorials\/android\/android-interview-questions","status":"publish","title":"Android Interview Question Answers For Freshers","title_plain":"Android Interview Question Answers For Freshers","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android Interview Question Answers For Freshers' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-interview-questions' data-summary=''><\/div>\n<p>Here in this post, you will find compiled set of android interview questions and answers. These questions are intended for freshers and android learners. I am on my way publishing the more advance interview questions sets.<\/p>\n<h3>1. When does onResume() method called?<\/h3>\n<p>onResume() method is an activity lifecycle method. This is called when the activity come to foreground. You can override this method in your activity to execute code when activity is started, restarted or comes to foreground.<\/p>\n<h3>2. How to launch an activity in your application?<\/h3>\n<p>For launching an activity, we need to create an explicit intent that defines the activity that we wish to start. In the below code snippet, the first parameter to Intent constructor is the current activity context and the second parameter is your new activity <code>class.startActivity()<\/code> method can be called on Activity context.<\/p>\n<pre class=\"prettyprint lang-java\">Intent intent = new Intent(this, SecondActivity.class);\r\nstartActivity(intent);<\/pre>\n<p>If you want to start an activity from fragment<\/p>\n<pre class=\"prettyprint lang-java\">Intent intent = new Intent(getActivity(), SecondActivity.class);\r\ngetActivity().startActivity(intent);<\/pre>\n<h3>3. How to define an Activity as launcher activity in application Manifest file?<\/h3>\n<p>All the activities used in the application should be defined in application manifest file. For launcher activity you need to define intent filter as shown in the below code snippets.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;activity android:name=\".MyActivity\"\r\n              android:label=\"@string\/app_name\"&gt;\r\n        &lt;intent-filter&gt;\r\n            &lt;action android:name=\"android.intent.action.MAIN\" \/&gt;\r\n            &lt;category android:name=\"android.intent.category.LAUNCHER\" \/&gt;\r\n        &lt;\/intent-filter&gt;\r\n    &lt;\/activity&gt;\r\n<\/pre>\n<h3>4. What is a ANR ?<\/h3>\n<p>ANR is short for Application Not Responding. Android systems shows this dialog, if application is performing too much of task on main thread and been unresponsive for a long period of time.<\/p>\n<h3>5. What are the measures to avoid application ANR?<\/h3>\n<p>ANR in application is annoying to user. It can be caused due to various reasons. Below are some of the tips to avoid ANR<\/p>\n<ul>\n<li>Perform all you long running network or database operation in separate thread<\/li>\n<li>If you have too much of background tasks, then take it off the UI thread. You may use IntentService<\/li>\n<li>Server not responding for longer period can be guilt for ANR. To avoid always define HTTP time out for your all your webs service calls.<\/li>\n<li>Be watchful of infinite loops during your complex calculations<\/li>\n<\/ul>\n<h3>6. What is the difference between a regular .png and a nine-patch image?<\/h3>\n<p>The nine patch images are extension with <code>.9.png<\/code>. Nine-patch image allows resizing that can be used as background or other image size requirements for the target device. The Nine-patch refers to the way you can resize the image: 4 corners that are unscaled, 4 edges that are scaled in 1 axis, and the middle one that can be scaled into both axes.<\/p>\n<h3>7. How to share text using android share Intent ?<\/h3>\n<p>Share intent is an easy and convenient way of sharing content of your application with other apps.<\/p>\n<pre class=\"prettyprint lang-java\">Intent sendIntent = new Intent();\r\nsendIntent.setAction(Intent.ACTION_SEND);\r\nsendIntent.putExtra(Intent.EXTRA_TEXT, \"This is my text to send.\");\r\nsendIntent.setType(\"text\/plain\");\r\nstartActivity(sendIntent);\r\n<\/pre>\n<h3>8. What is the use of WebView in android?<\/h3>\n<p>A WebView is an android UI component that displays webpages. It can either display a remote webpage or can also load static HTML data. This encompasses the functionality of a browser that can be integrated to application. WebView uses the WebKit rendering engine to display web pages and includes methods to navigate forward and backward through a history, zoom in and out, etc.<\/p>\n<h3>9. Define different kind of context in android<\/h3>\n<p>Context defines the current state of application or object. Context provides access to things such as creating new activity instance, access databases, start a service, etc.\u00a0You can get the context by invoking <code>getApplicationContext()<\/code>, <code>getContext()<\/code>, <code>getBaseContext()<\/code> or <code>this<\/code> when in the activity class.<\/p>\n<pre class=\"prettyprint lang-java\">\/\/Creating ui instance\r\nImageButton button = new ImageButton(getContext());\r\n\r\n\/\/creating adapter\r\nListAdapter adapter = new SimpleCursorAdapter(getApplicationContext(), ...);\r\n\r\n\/\/querying content provider\r\ngetApplicationContext().getContentResolver().query(uri, ...);\r\n\r\n\/\/start activity. Here this means activity context\r\nIntent intent = new Intent(this, SecondActivity.class);\r\n<\/pre>\n<h3>10. What are the different storage methods in android<\/h3>\n<p>Android offers several different options for data persistence.<\/p>\n<ol>\n<li><strong>Shared Preferences<\/strong> &#8211; Store private primitive data in key-value pairs. This sometimes gets limited as it offers only key value pairs. You cannot save your own java types.<\/li>\n<li><strong>Internal Storage<\/strong> &#8211; Store private data on the device memory<\/li>\n<li><strong>External Storage<\/strong> &#8211; Store public data on the shared external storage<\/li>\n<li><strong>SQLite Databases<\/strong> &#8211; Store structured data in a private database. You can define many number of tables and can store data like other RDBMS.<\/li>\n<\/ol>\n","excerpt":"<p>Here in this post, you will find compiled set of android interview questions and answers. These questions are intended for freshers and android learners. I am on my way publishing the more advance interview questions sets. 1. When does onResume() method called? onResume() method is an activity lifecycle method. This is called when the activity [&hellip;]<\/p>\n","date":"2014-09-21 18:13:00","modified":"2015-03-18 16:30:32","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":855,"slug":"javatechig","name":"JAVATECHIG","first_name":"Javatechig","last_name":"","nickname":"JAVATECHIG","url":"http:\/\/stacktips.com","description":"Provides tutorials, tips, examples and source code on leading Java, Android, Blackberry, PhoneGap and related mobile technologies."},"comments":[{"id":7570,"name":"Parvez Rafi","url":"","date":"2014-09-22 20:12:00","content":"<p>Need some detailed explaination about the use of &#8220;this&#8221; and &#8220;getbasecontext&#8221; in the constructor of intent&#8230;<br \/>\nIntent intent = new Intent(this, SecondActivity.class);<\/p>\n<p>Intent intent = new Intent(getbasecontext(), SecondActivity.class);<\/p>\n<p>i have used both in my Apps both are working fine but need to know the exact difference..<\/p>\n<p>thankyou<\/p>\n","parent":0},{"id":7571,"name":"javatechig","url":"http:\/\/stacktips.com\/","date":"2014-09-22 20:23:00","content":"<p>getBaseContext() is available in ContextWrapper class. <\/p>\n<p>ContextWrapper is used proxying implementation of Context that simply delegates all of its calls to another Context. This means if you are inside activity and call getBaseContext() you will get activity context and that is same as calling &#8220;this&#8221;. <\/p>\n<p>And, calling getBaseContext() inside Application will get application context.<\/p>\n","parent":7570}],"attachments":[],"comment_count":2,"comment_status":"open","thumbnail":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"snap_isAutoPosted":["1"],"fsb_social_facebook":["2"],"fsb_social_twitter":["2"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"dsq_thread_id":["3039259549"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-09-21 12:43:31\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"963f3861d8e6557648005ac58a246341\";s:5:\"pDate\";s:19:\"2014-09-21 12:43:48\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_887820097896912\";s:5:\"pDate\";s:19:\"2014-09-21 12:43:36\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"2U6Iqf\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/2U6Iqf\/comments\";s:5:\"pDate\";s:19:\"2014-09-21 12:43:52\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:98050044916;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/98050044916\";s:5:\"pDate\";s:19:\"2014-09-21 12:43:38\";}}\";"],"snapTW":["s:271:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:8:\"attchImg\";s:1:\"0\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"513669852221816833\";s:5:\"pDate\";s:19:\"2014-09-21 12:43:30\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["13658","13658"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/10\/Interview-questions-and-answers.jpg","width":248,"height":154}}},{"id":5822,"type":"post","slug":"repeat-alarm-example-in-android","url":"http:\/\/stacktips.com\/tutorials\/android\/repeat-alarm-example-in-android","status":"publish","title":"Repeat Alarm Example In Android Using AlarmManager","title_plain":"Repeat Alarm Example In Android Using AlarmManager","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Repeat Alarm Example In Android Using AlarmManager' data-link='http:\/\/stacktips.com\/tutorials\/android\/repeat-alarm-example-in-android' data-summary='In this tutorial we will learn how to create a repeat alarm example in android using AlarmManager class. AlarmManager is a class in Android which is used access device alarm service. This allow your application to execute certain piece of code on a given scheduled time. This can run outside the lifetime of your application.'><\/div>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-alarmmanager-in-android\">1. AlarmManager in android<\/a><\/li><li><a href=\"#2-setting-repeat-alarm\">2. Setting repeat alarm<\/a><\/li><li><a href=\"#3-defining-alarm-broadcastreceiver\">3. Defining Alarm BroadcastReceiver<\/a><\/li><li><a href=\"#4-schedule-and-cancel-alarm-from-activity\">4. Schedule and cancel alarm from activity<\/a><\/li><li><a href=\"#5-starting-alarm-service-on-device-reboot\">5. Starting alarm service on device reboot<\/a><\/li><li><a href=\"#6-declaring-application-manifest\">6. Declaring Application Manifest<\/a><\/li><li><a href=\"#7-download-source-code\">7. Download source code<\/a><\/li><\/ul><\/div>\n<\/p>\n<p>In the\u00a0context of this tutorial we will learn how to create a repeat alarm example in android using AlarmManager class.<\/p>\n<h1><span id=\"1-alarmmanager-in-android\">1. AlarmManager in android<\/span><\/h1>\n<ol>\n<li><code>AlarmManager<\/code> is a class in Android which is used access device alarm service. This allow your application to execute certain piece of code on a given scheduled time. This can run outside the lifetime of your application.<\/li>\n<li>Once alarm is scheduled, it will invoke even when your application is not running or even when your device is in sleep.<\/li>\n<li>An alarm can wake your device, but this consumes more battery. So you have to be careful while scheduling an alarm task which executes more frequently. The schedule frequency should be be set to minimum as possible.<\/li>\n<li>Once an Alarm Started, this will execute until it is stopped explicitly or until device reboots.<\/li>\n<li>For example, an AlarmManager is used to initiate long running operations such as syncing data from server once a day.<\/li>\n<li>AlarmManger help you to fire <code>Intent<\/code> at given intervals<\/li>\n<li>This can be used along with broadcast receivers to start a service to perform network operations.<\/li>\n<li>It is different form java <code>Timer<\/code> and <code>TimerTask<\/code>, as they execute with in application life cycle.<\/li>\n<\/ol>\n<h1><span id=\"2-setting-repeat-alarm\">2. Setting repeat alarm<\/span><\/h1>\n<ol>\n<li>Android supports two clock types for alarm service. Once is elapsed real time and other is real time clock (RTC)<\/li>\n<li>Elapsed real time uses the time since device last booted<\/li>\n<li>Real time clock (RTC) uses UTC time for alarm service clock. RTC is most commonly used for setting alarm service in android.<\/li>\n<\/ol>\n<p>In this example, we&#8217;ll show you to schedule alarm using RTC. The application using a single activity containing\u00a0three buttons. One button is for starting an alarm service, another to cancel scheduled alarm. The third button is to start the alarm at specified calendar time. For example, if you have set a time for your birthday reminder. It will invoke at 10:30 PM and will repeat on\u00a0every 30 mins.<\/p>\n<p>Let us have a look into our activity layout file (my_activity.xml)<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;RelativeLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    xmlns:tools=\"http:\/\/schemas.android.com\/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:paddingBottom=\"@dimen\/activity_vertical_margin\"\r\n    android:paddingLeft=\"@dimen\/activity_horizontal_margin\"\r\n    android:paddingRight=\"@dimen\/activity_horizontal_margin\"\r\n    android:paddingTop=\"@dimen\/activity_vertical_margin\"\r\n    tools:context=\".MyActivity\"&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id\/textView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"20dp\"\r\n        android:text=\"@string\/hint\"\r\n        android:textAppearance=\"?android:attr\/textAppearanceLarge\" \/&gt;\r\n\r\n    &lt;Button\r\n        android:id=\"@+id\/startAlarm\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentLeft=\"true\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_below=\"@+id\/textView\"\r\n        android:layout_marginBottom=\"20dp\"\r\n        android:text=\"Start Alarm Service\" \/&gt;\r\n\r\n    &lt;Button\r\n        android:id=\"@+id\/stopAlarm\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id\/startAlarm\"\r\n        android:layout_marginBottom=\"20dp\"\r\n        android:text=\"Stop Alarm\" \/&gt;\r\n\r\n\r\n    &lt;Button\r\n        android:id=\"@+id\/stopAlarmAt10\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id\/stopAlarm\"\r\n        android:text=\"Stop Alarm at 10:30\" \/&gt;\r\n\r\n&lt;\/RelativeLayout&gt;\r\n<\/pre>\n<p><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/AlarmManager-Example-in-Android.png\"><img class=\"alignnone size-medium wp-image-5835\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/AlarmManager-Example-in-Android-620x433.png\" alt=\"AlarmManager Example in Android\" width=\"620\" height=\"433\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/AlarmManager-Example-in-Android-620x433.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/AlarmManager-Example-in-Android-300x209.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/AlarmManager-Example-in-Android-940x657.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/AlarmManager-Example-in-Android-800x559.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/AlarmManager-Example-in-Android-900x629.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/AlarmManager-Example-in-Android-370x258.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/AlarmManager-Example-in-Android.png 950w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/center><\/p>\n<h1><span id=\"3-defining-alarm-broadcastreceiver\">3. Defining Alarm BroadcastReceiver<\/span><\/h1>\n<p>In this example, we are associating alarm service with broadcast receiver. Alarm service will invoke this receiver on scheduled time. For the sake of simplicity we are just showing an toast to user for each time the alarm is invoked. You may write your logic to start a service or download task.<\/p>\n<p><strong>Note:<\/strong> If your alarm has to perform network task, then start a download service inside <code>onRecieve()<\/code> method of your alarm broadcast.<\/p>\n<pre class=\"prettyprint lang-java\">package com.javatechig.alarmservice;\r\n\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.widget.Toast;\r\n\r\npublic class AlarmReceiver extends BroadcastReceiver {\r\n\r\n    @Override\r\n    public void onReceive(Context context, Intent intent) {\r\n\r\n        \/\/ For our recurring task, we'll just display a message\r\n        Toast.makeText(context, \"I'm running\", Toast.LENGTH_SHORT).show();\r\n    }\r\n}\r\n<\/pre>\n<h1><span id=\"4-schedule-and-cancel-alarm-from-activity\">4. Schedule and cancel alarm from activity<\/span><\/h1>\n<p>In the above two steps we have defined activity layout and alarm broadcast receiver.\u00a0Let us have a look into MainActivity.java file. Inside MyActivity class, we have defined three simple methods start(), stop() and startAt10(). The start() method schedule the alarm, cancel() method cancel the scheduled alarm, and startAt!0() method will start the alarm at 10:30 PM with a fixed 20 minutes interval.<\/p>\n<pre class=\"prettyprint lang-java\">package com.javatechig.alarmservice;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlarmManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\nimport java.util.Calendar;\r\n\r\npublic class MyActivity extends Activity {\r\n\r\n    private PendingIntent pendingIntent;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_my);\r\n\r\n        \/* Retrieve a PendingIntent that will perform a broadcast *\/\r\n        Intent alarmIntent = new Intent(MyActivity.this, AlarmReceiver.class);\r\n        pendingIntent = PendingIntent.getBroadcast(MyActivity.this, 0, alarmIntent, 0);\r\n\r\n        findViewById(R.id.startAlarm).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                start();\r\n            }\r\n        });\r\n\r\n        findViewById(R.id.stopAlarm).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                cancel();\r\n            }\r\n        });\r\n\r\n        findViewById(R.id.stopAlarmAt10).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                startAt10();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void start() {\r\n        AlarmManager manager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);\r\n        int interval = 8000;\r\n\r\n        manager.setInexactRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis(), interval, pendingIntent);\r\n        Toast.makeText(this, \"Alarm Set\", Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    public void cancel() {\r\n        AlarmManager manager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);\r\n        manager.cancel(pendingIntent);\r\n        Toast.makeText(this, \"Alarm Canceled\", Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    public void startAt10() {\r\n        AlarmManager manager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);\r\n        int interval = 1000 * 60 * 20;\r\n\r\n        \/* Set the alarm to start at 10:30 AM *\/\r\n        Calendar calendar = Calendar.getInstance();\r\n        calendar.setTimeInMillis(System.currentTimeMillis());\r\n        calendar.set(Calendar.HOUR_OF_DAY, 10);\r\n        calendar.set(Calendar.MINUTE, 30);\r\n\r\n        \/* Repeating on every 20 minutes interval *\/\r\n        manager.setRepeating(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(),\r\n                1000 * 60 * 20, pendingIntent);\r\n    }\r\n\r\n}\r\n<\/pre>\n<h1><span id=\"5-starting-alarm-service-on-device-reboot\">5. Starting alarm service on device reboot<\/span><\/h1>\n<p>As discussed earlier, once an alarm service is started, it execute until it is explicitly stopped or until device reboots. This means that, if your device is restarted then your alarm is stopped. To avoid such situatation, you have to restart your alarm service as soon as device boot completes. Below code snippet will help you to start alarm service once device reboots.<\/p>\n<pre class=\"prettyprint lang-java\">package com.javatechig.alarmservice;\r\n\r\nimport android.app.AlarmManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.widget.Toast;\r\n\r\n\/**\r\n * @author Nilanchala\r\n *         &lt;p\/&gt;\r\n *         Broadcast reciever, starts when the device gets starts.\r\n *         Start your repeating alarm here.\r\n *\/\r\npublic class DeviceBootReceiver extends BroadcastReceiver {\r\n\r\n    @Override\r\n    public void onReceive(Context context, Intent intent) {\r\n        if (intent.getAction().equals(\"android.intent.action.BOOT_COMPLETED\")) {\r\n            \/* Setting the alarm here *\/\r\n            Intent alarmIntent = new Intent(context, AlarmReceiver.class);\r\n            PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, alarmIntent, 0);\r\n\r\n            AlarmManager manager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\r\n            int interval = 8000;\r\n            manager.setInexactRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis(), interval, pendingIntent);\r\n\r\n            Toast.makeText(context, \"Alarm Set\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n}\r\n<\/pre>\n<h1><span id=\"6-declaring-application-manifest\">6. Declaring Application Manifest<\/span><\/h1>\n<p>To start your alarm on device reboot, you have to register your above declared <code>DeviceBootReciever<\/code> class in your application manifest. This also need <code>android.permission.RECEIVE_BOOT_COMPLETED<\/code><\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;manifest xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    package=\"com.javatechig.alarmservice\" &gt;\r\n\r\n    &lt;application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@drawable\/ic_launcher\"\r\n        android:label=\"@string\/app_name\"\r\n        android:theme=\"@style\/AppTheme\" &gt;\r\n\r\n        &lt;!-- Permission to start Alarm on device reboot --&gt;\r\n        &lt;uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\"\/&gt;\r\n\r\n        &lt;activity\r\n            android:name=\".MyActivity\"\r\n            android:label=\"@string\/app_name\" &gt;\r\n            &lt;intent-filter&gt;\r\n                &lt;action android:name=\"android.intent.action.MAIN\" \/&gt;\r\n                &lt;category android:name=\"android.intent.category.LAUNCHER\" \/&gt;\r\n            &lt;\/intent-filter&gt;\r\n        &lt;\/activity&gt;\r\n\r\n        &lt;receiver android:name=&quot;.AlarmReceiver&quot;&gt;\r\n\t      &lt;intent-filter&gt;\r\n\t           &lt;action android:name=&quot;android.intent.action.BOOT_COMPLETED&quot;\/&gt;\r\n\t      &lt;\/intent-filter&gt;\r\n        &lt;\/receiver&gt;\r\n\r\n        &lt;!-- Will not be called unless the application explicitly enables it --&gt;\r\n        &lt;receiver android:name=\".DeviceBootReceiver\"\r\n            android:enabled=\"false\"&gt;\r\n            &lt;intent-filter&gt;\r\n                &lt;action android:name=\"android.intent.action.BOOT_COMPLETED\"\/&gt;\r\n            &lt;\/intent-filter&gt;\r\n        &lt;\/receiver&gt;\r\n\r\n    &lt;\/application&gt;\r\n&lt;\/manifest&gt;\r\n<\/pre>\n<h1><span id=\"7-download-source-code\">7. Download source code<\/span><\/h1>\n<p>Download Complete source code from <a href=\"https:\/\/github.com\/javatechig\/Android-Alarm-Service-Example\" target=\"_blank\"><strong>GitHub<\/strong><\/a><\/p>\n","excerpt":"<p>In this tutorial we will learn how to create a repeat alarm example in android using AlarmManager class. AlarmManager is a class in Android which is used access device alarm service. This allow your application to execute certain piece of code on a given scheduled time. This can run outside the lifetime of your application.<\/p>\n","date":"2014-09-17 06:38:00","modified":"2015-03-19 16:26:31","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":219,"slug":"alarm","title":"Alarm","description":"","post_count":1},{"id":145,"slug":"broadcastreceiver","title":"BroadcastReceiver","description":"","post_count":1},{"id":144,"slug":"service","title":"Service","description":"","post_count":3}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":7585,"name":"javatechig","url":"http:\/\/stacktips.com\/","date":"2014-09-27 15:02:00","content":"<p>you must have a device or emulator. You can download Genymotion.<\/p>\n<p><a href=\"http:\/\/stacktips.com\/android\/fastest-android-emulator-for-testing-genymotion\" rel=\"nofollow\">http:\/\/stacktips.com\/android\/fastest-android-emulator-for-testing-genymotion<\/a><\/p>\n","parent":0},{"id":7725,"name":"Haleem","url":"","date":"2014-12-31 20:55:00","content":"<p>have u tried before u post this article?<\/p>\n","parent":0},{"id":7736,"name":"Alon","url":"","date":"2015-01-10 20:41:00","content":"<p>You probably need to register the Receiver. Try to add the below to your manifest<\/p>\n","parent":0},{"id":7795,"name":"JavaTechig","url":"http:\/\/stacktips.com\/","date":"2015-02-10 15:17:00","content":"<p>Broadcast receivers enable applications to receive intents that are broadcast by the system or by other applications, even when other components of the application are not running.<\/p>\n<p>There are two ways to make a broadcast receiver known to the system: One is declare it in the manifest file with this element. The other is to create the receiver dynamically in code and register it with the Context.registerReceiver() method. See the BroadcastReceiver class description for more on dynamically created receivers.<\/p>\n","parent":0},{"id":7840,"name":"JavaTechig","url":"http:\/\/stacktips.com\/","date":"2015-02-23 15:56:00","content":"<p>Not the exact solution you looking at. But this will certainly give you  an idea of how to do this.<\/p>\n<p>\/\/Alarm will appear 2 hours after current time<br \/>\nlong time = 7200000;<br \/>\nCalendar cal = Calendar.getInstance();<br \/>\ncal.add(Calendar.MINUTE, time);<\/p>\n<p>int REQUEST_CODE = 1004;<br \/>\nIntent intent = new Intent(ctx, AlarmReceiver.class);<br \/>\nPendingIntent sender = PendingIntent.getBroadcast(this, REQUEST_CODE, intent, PendingIntent.FLAG_UPDATE_CURRENT);<\/p>\n<p>AlarmManager am = (AlarmManager) getSystemService(ALARM_SERVICE);<br \/>\nam.set(AlarmManager.RTC_WAKEUP, cal.getTimeInMillis(), sender);<\/p>\n","parent":0},{"id":7889,"name":"Elixtor","url":"","date":"2015-03-02 10:16:00","content":"<p>I had to move the  tag before the  tag and add  , then work fine, thank you for the example!<\/p>\n","parent":0},{"id":7916,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-17 00:09:00","content":"<p>Do you see any error? It is difficult to trace the problem without the code. <\/p>\n<p>Share me the code.. <\/p>\n","parent":0},{"id":7929,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-19 16:28:00","content":"<p>Thanks for pointing out Kiran. <\/p>\n<p>Have updated the example code.<\/p>\n","parent":0},{"id":7994,"name":"anant sophia","url":"","date":"2015-05-02 14:27:00","content":"<p>thanx, good tutorial!<\/p>\n","parent":0},{"id":8139,"name":"Cesar Mosta","url":"","date":"2015-08-04 08:01:00","content":"<p>This tutorial is really good, but I had a problem with the reboot, I included the &#8220;&#8221; in the manifest, but, when I restart the device, the alarm doesn&#8217;t wake up, untill I start it from the activity<\/p>\n","parent":0},{"id":8143,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-08-05 12:00:00","content":"<p>Thanks for pointing it out.<\/p>\n","parent":8139},{"id":8149,"name":"Sunny Kinger","url":"http:\/\/www.kingsway24seven.com","date":"2015-08-07 09:41:00","content":"<p>Good Tutorial Thanks<\/p>\n","parent":0},{"id":8154,"name":"Christian C","url":"","date":"2015-08-28 23:44:00","content":"<p>Very Good, thank you!!<\/p>\n","parent":0},{"id":8200,"name":"Sami","url":"","date":"2015-09-13 13:31:00","content":"<p>Thank you so much. It was simple and fair enough.<\/p>\n","parent":0},{"id":8413,"name":"Arnaldo Raposo","url":"","date":"2016-02-28 10:25:00","content":"<p>Hi<br \/>\nDon&#8217;t know why but when I reboot the device the alarm only run once?<\/p>\n","parent":0},{"id":8457,"name":"aa","url":"","date":"2016-03-25 15:51:00","content":"<p>can you see<br \/>\n<a href=\"http:\/\/stackoverflow.com\/questions\/4459058\/alarm-manager-example\" rel=\"nofollow\">http:\/\/stackoverflow.com\/questions\/4459058\/alarm-manager-example<\/a><\/p>\n","parent":8413}],"attachments":[{"id":5835,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/AlarmManager-Example-in-Android.png","slug":"alarmmanager-example-in-android","title":"AlarmManager Example in Android","description":"","caption":"","parent":5822,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/AlarmManager-Example-in-Android.png","width":950,"height":664},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/AlarmManager-Example-in-Android-620x433.png","width":620,"height":433},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/AlarmManager-Example-in-Android.png","width":950,"height":664},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/AlarmManager-Example-in-Android.png","width":950,"height":664}}}],"comment_count":16,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"dsq_thread_id":["3024742466"],"snap_isAutoPosted":["1"],"fsb_social_facebook":["0"],"fsb_social_twitter":["0"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"6eZ4Da\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/6eZ4Da\/comments\";s:5:\"pDate\";s:19:\"2014-09-17 06:38:24\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:97715653986;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/97715653986\";s:5:\"pDate\";s:19:\"2014-09-17 06:38:26\";}}\";"],"snapImportedFBComments":["a:1:{i:7563;s:36:\"fbxcw885829238095998_887164171295838\";}"],"snapImportedComments":["a:0:{}"],"cf_url":[""],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-09-17 06:38:09\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"6f4bc71704838f41f478d15570d696ed\";s:5:\"pDate\";s:19:\"2014-09-17 06:38:14\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_885829238095998\";s:5:\"pDate\";s:19:\"2014-09-17 06:38:20\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:271:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:8:\"attchImg\";s:1:\"0\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"512128427470516226\";s:5:\"pDate\";s:19:\"2014-09-17 06:38:26\";}}\";"],"post_views_count":["11935"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":5839,"type":"post","slug":"how-to-create-excel-file-in-android","url":"http:\/\/stacktips.com\/tutorials\/android\/how-to-create-excel-file-in-android","status":"publish","title":"How To Create Excel File In Android","title_plain":"How To Create Excel File In Android","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How To Create Excel File In Android' data-link='http:\/\/stacktips.com\/tutorials\/android\/how-to-create-excel-file-in-android' data-summary='In this tutorial we will explain\u00a0how to create excel file in android using Java for excel library. The example provided below is the extended version of our previous android SQLite database tutorial. We recommend you to have a glance at it before going through this example.'><\/div>\n<p>In this tutorial we will explain\u00a0how to create excel file in android using Java for excel library. The example provided below is the extended version of our previous <a title=\"Android SQLite Database Tutorial\" href=\"http:\/\/stacktips.com\/android\/android-sqlite-database-tutorial\" target=\"_blank\">android SQLite database tutorial<\/a>. We recommend you to have a glance at it before going through this example.<\/p>\n<p>In our previous example, we have explained you how to create an TODO application in android using SQLite database. Now in this post we will export the data saved in database to an excel file and will store it on SDCard.<\/p>\n<h3>Step-1<\/h3>\n<p>Download Java for Excel library from below path.<br \/>\n<a href=\"http:\/\/jexcelapi.sourceforge.net\/\" target=\"_blank\">http:\/\/jexcelapi.sourceforge.net\/<\/a><br \/>\n<a href=\"http:\/\/sourceforge.net\/projects\/jexcelapi\/files\/\" target=\"_blank\">http:\/\/sourceforge.net\/projects\/jexcelapi\/files\/<\/a><\/p>\n<h3>Step-2<\/h3>\n<p>Export and save data\u00a0from cursor into excel spreadsheet and saves the spreadsheet into external storage directory.<\/p>\n<pre class=\"prettyprint lang-java\">\/**\r\n* Exports the cursor value to an excel sheet.\r\n* Recommended to call this method in a separate thread,\r\n* especially if you have more number of threads.\r\n*  \r\n* @param cursor\r\n*\/\r\n\r\nprivate void exportToExcel(Cursor cursor) {\t\t\r\n\tfinal String fileName = \"TodoList.xls\";\r\n\t\r\n\t\/\/Saving file in external storage\r\n\tFile sdCard = Environment.getExternalStorageDirectory();\t\r\n\tFile directory = new File(sdCard.getAbsolutePath() + \"\/javatechig.todo\");\r\n\t\t\r\n\t\/\/create directory if not exist\r\n\tif(!directory.isDirectory()){\r\n\t\tdirectory.mkdirs();\t\r\n\t}\r\n\t\t\r\n\t\/\/file path\r\n\tFile file = new File(directory, fileName);\r\n\t\r\n\tWorkbookSettings wbSettings = new WorkbookSettings();\r\n\twbSettings.setLocale(new Locale(\"en\", \"EN\"));\t\t\r\n\tWritableWorkbook workbook;\r\n\t\t\r\n\ttry {\r\n\t\tworkbook = Workbook.createWorkbook(file, wbSettings);\t\t\t\r\n\t\t\/\/Excel sheet name. 0 represents first sheet\r\n\t\tWritableSheet sheet = workbook.createSheet(\"MyShoppingList\", 0);\r\n\r\n\t\ttry {\r\n\t\t\tsheet.addCell(new Label(0, 0, \"Subject\")); \/\/ column and row\r\n\t\t\tsheet.addCell(new Label(1, 0, \"Description\"));\t\t\t\t\r\n\t\t\tif (cursor.moveToFirst()) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tString title = cursor.getString(cursor.getColumnIndex(DatabaseHelper.TODO_SUBJECT));\r\n\t\t\t\t\tString desc = cursor.getString(cursor.getColumnIndex(DatabaseHelper.TODO_DESC));\r\n\r\n\t\t\t\t\tint i = cursor.getPosition() + 1;\t\t\t\t\t\t\r\n\t\t\t\t\tsheet.addCell(new Label(0, i, title));\r\n\t\t\t\t\tsheet.addCell(new Label(1, i, desc));\t\t\t\t\t\t\r\n\t\t\t\t} while (cursor.moveToNext());\r\n\t\t\t}\t\t\t\t\r\n\t\t\t\/\/closing cursor\r\n\t\t\tcursor.close();\t\t\t\t\t\r\n\t\t} catch (RowsExceededException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (WriteException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\t\t\t\r\n\t\tworkbook.write();\t\t\r\n\t\ttry {\r\n\t\t\tworkbook.close();\r\n\t\t} catch (WriteException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t} catch (IOException e) {\r\n\t\te.printStackTrace();\r\n\t}\r\n}\r\n<\/pre>\n","excerpt":"<p>In this tutorial we will explain\u00a0how to create excel file in android using Java for excel library. The example provided below is the extended version of our previous android SQLite database tutorial. We recommend you to have a glance at it before going through this example.<\/p>\n","date":"2014-09-16 12:05:39","modified":"2015-02-20 17:49:48","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":7696,"name":"Ehsan Bahari","url":"","date":"2014-11-26 12:36:00","content":"<p>Tanx &#8230;Awesome. <\/p>\n<p>how i can make my xls file right to left(Persian)?<\/p>\n","parent":0},{"id":7953,"name":"Billel","url":"","date":"2015-03-27 00:05:00","content":"<p>private void exportToExcel(Cursor cursor) {<br \/>\n    \tfinal String fileName = &#8220;TodoList.xls&#8221;;<\/p>\n<p>    \t\/\/Saving file in external storage<br \/>\n    \tFile sdCard = Environment.getExternalStorageDirectory();<br \/>\n    \tFile directory = new File(sdCard.getAbsolutePath() + &#8220;\/javatechig.todo&#8221;);<\/p>\n<p>    \t\/\/create directory if not exist<br \/>\n    \tif(!directory.isDirectory()){<br \/>\n    \t\tdirectory.mkdirs();<br \/>\n    \t}<\/p>\n<p>    \t\/\/file path<br \/>\n    \tFile file = new File(directory, fileName);<\/p>\n<p>    \tWorkbookSettings wbSettings = new WorkbookSettings();<br \/>\n    \twbSettings.setLocale(new Locale(&#8220;en&#8221;, &#8220;EN&#8221;));<br \/>\n    \tWritableWorkbook workbook;<\/p>\n<p>    \ttry {<br \/>\n    \t\tworkbook = Workbook.createWorkbook(file, wbSettings);<br \/>\n    \t\t\/\/Excel sheet name. 0 represents first sheet<br \/>\n    \t\tWritableSheet sheet = workbook.createSheet(&#8220;MyShoppingList&#8221;, 0);<\/p>\n<p>    \t\ttry {<br \/>\n    \t\t\t\/\/ column and row<br \/>\n    \t\t\tsheet.addCell(new Label(0, 0, &#8220;Code&#8221;));<br \/>\n    \t\t\tsheet.addCell(new Label(1, 0, &#8220;Format&#8221;));<br \/>\n    \t\t\tsheet.addCell(new Label(2, 0, &#8220;Type&#8221;));<br \/>\n    \t\t\tsheet.addCell(new Label(3, 0, &#8220;Name&#8221;));<br \/>\n    \t\t\tsheet.addCell(new Label(4, 0, &#8220;Price&#8221;));<br \/>\n    \t\t\tsheet.addCell(new Label(5, 0, &#8220;Quantity&#8221;));<br \/>\n    \t\t\tif (cursor.moveToFirst()) {<br \/>\n    \t\t\t\tdo {<br \/>\n    \t\t\t\t\tString code = cursor.getString(cursor.getColumnIndex(p.getCode()));<br \/>\n    \t\t\t\t\tString format = cursor.getString(cursor.getColumnIndex(p.getFormat()));<br \/>\n    \t\t\t\t\tString type = cursor.getString(cursor.getColumnIndex(p.getType()));<br \/>\n    \t\t\t\t\tString name = cursor.getString(cursor.getColumnIndex(p.getName()));<br \/>\n    \t\t\t\t\tString price = cursor.getString(cursor.getColumnIndex(p.getQuantity()));<br \/>\n    \t\t\t\t\tString quantity = cursor.getString(cursor.getColumnIndex(p.getPrice()));<\/p>\n<p>    \t\t\t\t\tint i = cursor.getPosition() + 1;<br \/>\n    \t\t\t\t\tsheet.addCell(new Label(0, i, code));<br \/>\n    \t\t\t\t\tsheet.addCell(new Label(1, i, format));<br \/>\n    \t\t\t\t\tsheet.addCell(new Label(2, i, type));<br \/>\n    \t\t\t\t\tsheet.addCell(new Label(1, i, name));<br \/>\n    \t\t\t\t\tsheet.addCell(new Label(1, i, price));<br \/>\n    \t\t\t\t\tsheet.addCell(new Label(1, i, quantity));<br \/>\n    \t\t\t\t} while (cursor.moveToNext());<br \/>\n    \t\t\t}<br \/>\n    \t\t\t\/\/closing cursor<br \/>\n    \t\t\tcursor.close();<br \/>\n    \t\t} catch (RowsExceededException e) {<br \/>\n    \t\t\te.printStackTrace();<br \/>\n    \t\t} catch (WriteException e) {<br \/>\n    \t\t\te.printStackTrace();<br \/>\n    \t\t}<br \/>\n    \t\tworkbook.write();<br \/>\n    \t\ttry {<br \/>\n    \t\t\tworkbook.close();<br \/>\n    \t\t} catch (WriteException e) {<br \/>\n    \t\t\te.printStackTrace();<br \/>\n    \t\t}<br \/>\n    \t} catch (IOException e) {<br \/>\n    \t\te.printStackTrace();<br \/>\n    \t}<br \/>\n    }<\/p>\n","parent":0},{"id":7954,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-27 16:38:00","content":"<p>Have you downloaded and used the Java for Excel library? <\/p>\n<p>If already added please revisit your build path.<\/p>\n","parent":7953},{"id":7955,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-27 16:39:00","content":"<p>Not quite sure. if that is supported by the library. You probably have to check the api docs.<\/p>\n","parent":7696},{"id":7962,"name":"Billel","url":"","date":"2015-03-30 03:35:00","content":"<p>please, can you give me a project of an application that uses this method to export the database in an excel file?<\/p>\n","parent":0},{"id":7966,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-30 16:39:00","content":"<p>Here is the project code. <\/p>\n<p><a href=\"https:\/\/github.com\/javatechig\/Advance-Android-Tutorials\/tree\/master\/TODO%20Android%20App\" rel=\"nofollow\">https:\/\/github.com\/javatechig\/Advance-Android-Tutorials\/tree\/master\/TODO%20Android%20App<\/a><\/p>\n","parent":7962},{"id":7970,"name":"Billel","url":"","date":"2015-03-30 17:39:00","content":"<p>I could not download it, you could send it to me by email (billel.31@outlook.com) ???<\/p>\n","parent":7966},{"id":7971,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-30 19:21:00","content":"<p>done. Check your mail.<\/p>\n","parent":7970},{"id":7976,"name":"Billel","url":"","date":"2015-03-31 17:57:00","content":"<p>thank you so much.<\/p>\n","parent":7971},{"id":7984,"name":"Nilanchala Panigrahy","url":"","date":"2015-04-12 10:30:00","content":"<p>The current example accepts the Cursor object. Cursor is a result set data returned from SQLite database.  <\/p>\n<p>You can pass arraylist of any other type of collections to generate Excel files.<\/p>\n","parent":0},{"id":8005,"name":"Nilanchala Panigrahy","url":"","date":"2015-05-14 15:47:00","content":"<p>Please download from github.<\/p>\n","parent":0},{"id":8036,"name":"JavaTechig","url":"http:\/\/stacktips.com\/","date":"2015-06-09 12:30:00","content":"<p>Download it here<\/p>\n<p><a href=\"https:\/\/github.com\/javatechig\/Advance-Android-Tutorials\/archive\/master.zip\" rel=\"nofollow\">https:\/\/github.com\/javatechig\/Advance-Android-Tutorials\/archive\/master.zip<\/a><\/p>\n<p>Note, you will get other projects example included.<\/p>\n","parent":0},{"id":8047,"name":"Anu","url":"","date":"2015-06-24 23:42:00","content":"<p>Hi, I seem to be getting an error when I try to run this. It does not recognize &#8220;DatabaseHelper&#8221;. Any idea what I&#8217;m doing wrong?<br \/>\nThanks.<\/p>\n","parent":0},{"id":8085,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-07-13 17:09:00","content":"<p>checkout the download link<\/p>\n<p><a href=\"https:\/\/github.com\/javatechig\/Advance-Android-Tutorials\/archive\/master.zip\" rel=\"nofollow\">https:\/\/github.com\/javatechig\/Advance-Android-Tutorials\/archive\/master.zip<\/a><\/p>\n","parent":0},{"id":8318,"name":"Jaishree Rathod","url":"","date":"2015-11-26 20:15:00","content":"<p>Hi ,<\/p>\n<p>I am able to see the excel sheet on click on exportExcel menu item .I downloaded the Todo APP and run the app than added record into it but couldnot succeed to see the excel sheet.Please help me .Thanks<\/p>\n","parent":0},{"id":8319,"name":"Jaishree Rathod","url":"","date":"2015-11-26 20:43:00","content":"<p>Hi I am not see the excelsheet from the TodoAPp.Thanks<\/p>\n","parent":0}],"attachments":[],"comment_count":16,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"dsq_thread_id":["3021443178"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-09-16 06:35:41\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"0307904e9752678c891038e78c72af6c\";s:5:\"pDate\";s:19:\"2014-09-16 06:35:47\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_885399631472292\";s:5:\"pDate\";s:19:\"2014-09-16 06:35:52\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"2uYFgn\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/2uYFgn\/comments\";s:5:\"pDate\";s:19:\"2014-09-16 06:35:56\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:97633309616;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/97633309616\";s:5:\"pDate\";s:19:\"2014-09-16 06:35:56\";}}\";"],"snap_isAutoPosted":["1"],"snapTW":["s:271:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:8:\"attchImg\";s:1:\"0\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"511765414120931328\";s:5:\"pDate\";s:19:\"2014-09-16 06:35:57\";}}\";"],"fsb_social_facebook":["3"],"fsb_social_twitter":["2"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"cf_url":[""],"post_views_count":["7557"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":5845,"type":"post","slug":"android-third-party-libraries-sdks","url":"http:\/\/stacktips.com\/tutorials\/android\/android-third-party-libraries-sdks","status":"publish","title":"Android third party libraries and SDK&#8217;s","title_plain":"Android third party libraries and SDK&#8217;s","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android third party libraries and SDK&#039;s' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-third-party-libraries-sdks' data-summary=''><\/div>\n<p>Over past few years, the age of mobile development become an fiercely-competitive world of serious money making business. Android developers network is growing rapidly. As the network grows, there are many open source libraries available. Although using someone written code is not be recommended always, but sometimes it helps in getting the application quicker to market.<\/p>\n<p>In this post we have outlined some of the popular android third party libraries and SDK&#8217;s. If you find some library is missing from your favourite list, or discovered a new one. Please email us the details to <a href=\"mailto:javatechig@gmail.com\">javatechig@gmail.com<\/a>. We will add them to the list.<\/p>\n<table class=\"reference\">\n<colgroup>\n<col style=\"width:20%\">\n<col style=\"width:80%\">\n  <\/colgroup>\n<tbody>\n<tr>\n<th colspan=\"2\">User Interface Libraries<\/th>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"http:\/\/actionbarsherlock.com\/\" target=\"_blank\">ActionBarSherlock<\/a>\n<\/td>\n<td>ActionBarSherlock is an extension of the support library designed to facilitate the use of the action bar design pattern across all versions of Android with a single API. ActionBarSherlock was widely used before Google introduced AppCompact.<\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"https:\/\/github.com\/chrisbanes\/ActionBar-PullToRefresh\" target=\"_blank\">ActionBar PullToRefresh<\/a>\n<\/td>\n<td>ActionBar PullToRefresh provides an easy way to add a modern version of the pull-to-refresh interaction to your application.<\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"https:\/\/github.com\/chrisbanes\/Android-PullToRefresh\" target=\"_blank\">Android PullToRefresh<\/a>\n<\/td>\n<td>This project aims to provide a reusable Pull to Refresh widget for Android. It was originally based on Johan Nilsson&#8217;s library (mainly for graphics, strings and animations), but these have been replaced since.<\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"http:\/\/viewpagerindicator.com\/\" target=\"_blank\">View Pager Indicator<\/a>\n<\/td>\n<td>Paging indicator widgets compatible with the ViewPager from the Android Support Library and ActionBarSherlock.<\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"http:\/\/nineoldandroids.com\/\" target=\"_blank\">Nine Old Android<\/a>\n<\/td>\n<td>Android library for using the Honeycomb (Android 3.0) animation API on all versions of the platform back to 1.0! Animation prior to Honeycomb was very limited in what it could accomplish so in Android 3.x a new API was written.<\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"https:\/\/code.google.com\/p\/achartengine\/\" target=\"_blank\">A Chart Engine<\/a>\n<\/td>\n<td>AChartEngine is a charting library for Android applications. It currently supports all major and widely used chart types.<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<table class=\"reference\">\n<colgroup>\n<col style=\"width:20%\">\n<col style=\"width:80%\">\n  <\/colgroup>\n<tbody>\n<tr>\n<th colspan=\"2\">Android Networking Libraries<\/th>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"http:\/\/square.github.io\/okhttp\/\" target=\"_blank\">okHttp<\/a>\n<\/td>\n<td>HTTP is the way modern applications network. It\u2019s how we exchange data &amp; media. Doing HTTP efficiently makes your stuff load faster and saves bandwidth.<\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"http:\/\/developer.android.com\/training\/volley\/index.html\" target=\"_blank\">Volley<\/a>\n<\/td>\n<td>Volley is an HTTP library that makes networking for Android apps easier and most importantly, faster. Volley is available through the open AOSP repository.<\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"http:\/\/loopj.com\/android-async-http\/\" target=\"_blank\">Android Asynchronous Http Client<\/a>\n<\/td>\n<td>An asynchronous callback-based Http client for Android built on top of Apache\u2019s HttpClient libraries. All requests are made outside of your app\u2019s main UI thread, but any callback logic will be executed on the same thread as the callback was created using Android\u2019s Handler message passing.<\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"https:\/\/code.google.com\/p\/google-gson\/\" target=\"_blank\">Google GSON<\/a>\n<\/td>\n<td>Gson is a Java library that can be used to convert Java Objects into their JSON representation. It can also be used to convert a JSON string to an equivalent Java object. Gson can work with arbitrary Java objects including pre-existing objects that you do not have source-code of.<\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"http:\/\/square.github.io\/retrofit\/\" target=\"_blank\">Retrofit<\/a>\n<\/td>\n<td>Retrofit is a type-safe REST client for Android and Java. This uses annotation to describe HTTP server calls. This is an elegant solution for managing REST API calls in in android application.<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<table class=\"reference\">\n<colgroup>\n<col style=\"width:20%\">\n<col style=\"width:80%\">\n  <\/colgroup>\n<tbody>\n<tr>\n<th colspan=\"2\">Image Downloading And Caching Libraries<\/th>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"http:\/\/square.github.io\/picasso\/#download\" target=\"_blank\">Picasso<\/a>\n<\/td>\n<td>A powerful image downloading and caching library for Android.<br \/>\n<a title=\"How to Use Picasso Image Loader Library in Android\" href=\"http:\/\/stacktips.com\/android\/how-to-use-picasso-library-in-android\">How to use Picaso in Android?<\/a><\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"https:\/\/github.com\/nostra13\/Android-Universal-Image-Loader\" target=\"_blank\">Universal Image Loader<\/a>\n<\/td>\n<td>UIL aims to provide a powerful, flexible and highly customizable instrument for image loading, caching and displaying. It provides a lot of configuration options and good control over the image loading and caching process.<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<table class=\"reference\">\n<colgroup>\n<col style=\"width:20%\">\n<col style=\"width:80%\">\n  <\/colgroup>\n<tbody>\n<tr>\n<th colspan=\"2\">Database Helper Libraries<\/th>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"http:\/\/www.activeandroid.com\/\" target=\"_blank\">ActiveAndroid<\/a>\n<\/td>\n<td>ActiveAndroid is an active record style ORM (object relational mapper). It allows you to save and retrieve SQLite database records without ever writing a single SQL statement. Each database record is wrapped neatly into a class with methods like save() and delete().<\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"http:\/\/ormlite.com\/\" target=\"_blank\">ORM Lite<\/a>\n<\/td>\n<td>Object Relational Mapping Lite (ORM Lite) provides some simple, lightweight functionality for persisting Java objects to SQL databases while avoiding the complexity and overhead of more standard ORM packages.<\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n<a href=\"http:\/\/greendao-orm.com\/\" target=\"_blank\">Green DOA<\/a>\n<\/td>\n<td>GreenDAO is an open source project to help Android developers working with data stored in SQLite. GreenDAO does all the SQLite helper work for you. It maps Java objects to database tables (often called ORM). This way you can store, update, delete, and query for Java objects using a simple object oriented API.<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<table class=\"reference\">\n<colgroup>\n<col style=\"width:20%\">\n<col style=\"width:80%\">\n  <\/colgroup>\n<tbody>\n<tr>\n<th colspan=\"2\">Other Android Libraries<\/th>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"https:\/\/github.com\/excilys\/androidannotations\" target=\"_blank\">Android Anotaion Framework<\/a>\n<\/td>\n<td>AndroidAnnotations is an Open Source framework that speeds up Android development. It takes care of the plumbing, and lets you concentrate on what&#8217;s really important. By simplifying your code, it facilitates its maintenance.<\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\"><a href=\"http:\/\/greenrobot.github.io\/EventBus\/\" target=\"_blank\">EventBus<\/a><\/td>\n<td>EventBus works on publisher, subscriber model similar to Observer design pattern. This helps in hassel free communication between Activities, Fragments, and background threads.<\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"https:\/\/github.com\/square\/otto\" target=\"_blank\">Otto<\/a>\n<\/td>\n<td>An enhanced Guava-based event bus with emphasis on Android support. Otto is an event bus designed to decouple different parts of your application while still allowing them to communicate efficiently.<\/td>\n<\/tr>\n<tr>\n<td style=\"vertical-align: middle;\">\n <a href=\"http:\/\/square.github.io\/dagger\/\" target=\"_blank\">Dragger<\/a>\n<\/td>\n<td>Dragger is a faster dependency injector for Android and Java<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n","excerpt":"<p>Over past few years, the age of mobile development become an fiercely-competitive world of serious money making business. Android developers network is growing rapidly. As the network grows, there are many open source libraries available. Although using someone written code is not be recommended always, but sometimes it helps in getting the application quicker to [&hellip;]<\/p>\n","date":"2014-09-15 23:34:35","modified":"2015-03-18 16:30:32","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":173,"slug":"open","title":"Open","description":"","post_count":1}],"author":{"id":855,"slug":"javatechig","name":"JAVATECHIG","first_name":"Javatechig","last_name":"","nickname":"JAVATECHIG","url":"http:\/\/stacktips.com","description":"Provides tutorials, tips, examples and source code on leading Java, Android, Blackberry, PhoneGap and related mobile technologies."},"comments":[{"id":7769,"name":"Andy508","url":"","date":"2015-01-30 21:22:00","content":"<p>Nice collections of libraries.<\/p>\n","parent":0},{"id":7781,"name":"JavaTechig","url":"http:\/\/stacktips.com\/","date":"2015-02-03 22:32:00","content":"<p>Thanks Andy.<\/p>\n","parent":7769},{"id":8009,"name":"Hardik","url":"","date":"2015-05-22 16:07:00","content":"<p>Picasso library is a life saver,i usually avoid using third party libraries.<\/p>\n","parent":0},{"id":8515,"name":"Dharmesh","url":"","date":"2016-05-07 13:08:00","content":"<p>The android introduce the rum time permission in Marshmallow. The code around is very complex and verbose. I try to develop the library around it to make the use simple for my applications(<a href=\"https:\/\/play.google.com\/store\/apps\/details?id=com.vistrav.duplicateimagefinder\" rel=\"nofollow\">https:\/\/play.google.com\/store\/apps\/details?id=com.vistrav.duplicateimagefinder<\/a>). The library is very simple and very easy to use with few lines of code. I thought this can be useful for other android developers as well so just want to share with comumity. Please take a look how to use this library here. hope you would like it <a href=\"https:\/\/github.com\/00ec454\/Ask\" rel=\"nofollow\">https:\/\/github.com\/00ec454\/Ask<\/a>.<\/p>\n","parent":0},{"id":8536,"name":"Mohit Kumar","url":"","date":"2016-06-14 08:40:00","content":"<p>The best choice for Android Networking is <a href=\"https:\/\/github.com\/amitshekhariitbhu\/AndroidNetworking\" rel=\"nofollow\">https:\/\/github.com\/amitshekhariitbhu\/AndroidNetworking<\/a> &#8211; Android Networking is the best library for doing any type of networking.<\/p>\n","parent":0}],"attachments":[],"comment_count":5,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_social_facebook":["3"],"fsb_social_twitter":["4"],"fsb_social_google":["1"],"fsb_social_linkedin":["7"],"fsb_social_pinterest":["0"],"dsq_thread_id":["3024228450"],"fsb_show_social":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:137:\"a:1:{i:0;a:3:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";}}\";"],"snapDA":["s:104:\"a:1:{i:0;a:3:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";}}\";"],"snapDI":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapDL":["s:106:\"a:1:{i:0;a:3:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";}}\";"],"snapFB":["s:234:\"a:1:{i:0;a:8:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapLI":["s:265:\"a:1:{i:0;a:8:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapSU":["s:127:\"a:1:{i:0;a:4:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";}}\";"],"snapTR":["s:370:\"a:1:{i:0;a:8:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";}}\";"],"snapTW":["s:145:\"a:1:{i:0;a:5:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:8:\"attchImg\";s:1:\"0\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"cf_url":[""],"post_views_count":["6931"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":5772,"type":"post","slug":"creating-a-background-service-in-android","url":"http:\/\/stacktips.com\/tutorials\/android\/creating-a-background-service-in-android","status":"publish","title":"Creating a Background Service in Android Using IntentService","title_plain":"Creating a Background Service in Android Using IntentService","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Creating a Background Service in Android Using IntentService' data-link='http:\/\/stacktips.com\/tutorials\/android\/creating-a-background-service-in-android' data-summary='In this tutorial we will take a look into one of most important and commonly used Android concept called IntentService. This post explains steps involved in creating a background service in Android using IntentService.'><\/div>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-what-is-intentservice\">1. What is IntentService?<\/a><\/li><li><a href=\"#2-intentservice-limitations\">2. IntentService Limitations<\/a><\/li><li><a href=\"#3-why-do-we-need-intentservice\">3. Why do we need IntentService?<\/a><\/li><li><a href=\"#4-create-an-intentservice\">4. Create an IntentService<\/a><\/li><li><a href=\"#5-declaring-service-in-the-manifest\">5. Declaring Service in the Manifest<\/a><\/li><li><a href=\"#6-sending-work-requests-to-the-intentservice\">6. Sending Work Requests to the IntentService<\/a><\/li><li><a href=\"#7-report-status-from-intentservice-to-activity\">7. Report Status From IntentService to Activity<\/a><\/li><li><a href=\"#8-receive-status-broadcasts-from-an-intentservice\">8. Receive Status Broadcasts from an IntentService<\/a><\/li><li><a href=\"#9-output\">9. Output<\/a><\/li><li><a href=\"#11-download-source-code\">11. Download Source Code<\/a><\/li><\/ul><\/div>\n<br \/>\nIn this tutorial we will take a look into one of most important and commonly used Android concept called IntentService. This post explains steps involved in creating a background service in Android using IntentService. Before you start with this post, we recommend you to have a glance at below posts<\/p>\n<p><strong><span style=\"color: #ff0000;\">*<\/span> <a title=\"Android Service Example\" href=\"http:\/\/stacktips.com\/android\/android-service-example\" target=\"_blank\">Checkout Android Service Tutorial<\/a><\/strong><\/p>\n<p><strong><span style=\"color: #ff0000;\">*<\/span> <a title=\"Android Networking Tutorial\" href=\"http:\/\/stacktips.com\/android\/android-networking-tutorial\" target=\"_blank\">Android Networking Tutorial<\/a><\/strong><\/p>\n<h1><span id=\"1-what-is-intentservice\">1. What is IntentService?<\/span><\/h1>\n<p>IntentService is a subclass of <code>android.app.Service<\/code> class. A stated intent service allows to handle long running tasks without effecting the application UI thread. This is not bound to any activity so, it is not getting effected for any change in activity lifecycle. Once IntentService is started, it handles each Intent using a worker thread and stops itself when it runs out of work.<\/p>\n<p>IntentService would be an best solution, If you have an work queue to process. For example, if your application using analytics you will likely to send event name and related parameter to your tracking server for each user generated event. Although each event means a tiny piece of data, creating networking request on each click will result an overhead to your application. Instead, you can use work queue processor design pattern and process the events in a batch.<\/p>\n<h1><span id=\"2-intentservice-limitations\">2. IntentService Limitations<\/span><\/h1>\n<ol>\n<li>No easy or direct way to interact with user interface directly from IntentService. Later in this example, we will explain to pass result back from IntentService to<\/li>\n<li>With IntentService, there can only be one request processed at any single point of time. If you request for another task, then the new job will wait until the previous one is completed. This means that IntentService process the request<\/li>\n<li>An tasks stated using IntentService cannot be interrupted<\/li>\n<\/ol>\n<h1><span id=\"3-why-do-we-need-intentservice\">3. Why do we need IntentService?<\/span><\/h1>\n<p>Android design guidelines strongly suggests to perform all the long running tasks off the UI thread. For example, if you have to periodically download the largest chunk of data from server, you must use IntentService to avoid ANR. ANR (Application not responding) message often occurs, if your main thread is doing too much of work. In this course of this tutorial, we will learn the below concepts<\/p>\n<ol>\n<li>How to create and use IntentService<\/li>\n<li>How to pass data from activity to service as parameter<\/li>\n<li>How to pass result back to activity<\/li>\n<li>Update activity based on the result<\/li>\n<\/ol>\n<h4>Case Study<\/h4>\n<p>To make this tutorial easy to understand we will extend our previous tutorial (<a title=\"Android Networking Tutorial\" href=\"http:\/\/stacktips.com\/android\/android-networking-tutorial\" target=\"_blank\">Android Networking Tutorial<\/a>) to use Intent Service for downloading the data from server. We suggest you to checkout <strong><a href=\"http:\/\/stacktips.com\/android\/android-networking-tutorial\" target=\"_blank\">Android Networking Example<\/a><\/strong> to get familiar with downloading data from server using different http clients available in Android.<\/p>\n<p><strong>Feed Url :\u00a0<a href=\"http:\/\/stacktips.com\/api\/get_category_posts\/?dev=1&amp;slug=android\" target=\"_blank\">http:\/\/stacktips.com\/api\/get_category_posts\/?dev=1&amp;slug=android<\/a><\/strong><\/p>\n<p><strong> Expected Result<\/strong>\u00a0Start service to download the data when application is started. Once download is complete, update ListView present in your activity.<\/p>\n<p><strong>Feed Response\u00a0Object<\/strong><\/p>\n<p><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response.png\"><img class=\"alignnone size-full wp-image-5736\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response.png\" alt=\"JSON Feed Response\" width=\"1024\" height=\"913\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response.png 1024w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-300x267.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-620x552.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-940x838.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-800x713.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-1000x891.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-900x802.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-370x329.png 370w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/center><\/p>\n<h1><span id=\"4-create-an-intentservice\">4. Create an IntentService<\/span><\/h1>\n<p>In the context of our example, we will create an IntentService to download the data from server. Once download is completed, the response will be sent back to activity. Lets create a new class <code>DownloadService.java<\/code> and extend it from <code>android.app.IntentService<\/code>. Now let us override <code>onHandleIntent()<\/code> method.<\/p>\n<p>When service is started the onHandleIntent() method is called on the worker thread.Unlike Service, IntentService stops itself once it completes its task, so you don&#8217;t need to call stopSelf() for stoping the IntentService.<\/p>\n<pre class=\"prettyprint lang-java\">package com.javatechig.intentserviceexample;\r\n\r\nimport android.app.IntentService;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.ResultReceiver;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport java.io.BufferedInputStream;\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\npublic class DownloadService extends IntentService {\r\n\r\n    public static final int STATUS_RUNNING = 0;\r\n    public static final int STATUS_FINISHED = 1;\r\n    public static final int STATUS_ERROR = 2;\r\n\r\n    private static final String TAG = \"DownloadService\";\r\n\r\n    public DownloadService() {\r\n        super(DownloadService.class.getName());\r\n    }\r\n\r\n    @Override\r\n    protected void onHandleIntent(Intent intent) {\r\n\r\n        Log.d(TAG, \"Service Started!\");\r\n\r\n        final ResultReceiver receiver = intent.getParcelableExtra(\"receiver\");\r\n        String url = intent.getStringExtra(\"url\");\r\n\r\n        Bundle bundle = new Bundle();\r\n\r\n        if (!TextUtils.isEmpty(url)) {\r\n            \/* Update UI: Download Service is Running *\/\r\n            receiver.send(STATUS_RUNNING, Bundle.EMPTY);\r\n\r\n            try {\r\n                String[] results = downloadData(url);\r\n\r\n                \/* Sending result back to activity *\/\r\n                if (null != results &amp;&amp; results.length &gt; 0) {\r\n                    bundle.putStringArray(\"result\", results);\r\n                    receiver.send(STATUS_FINISHED, bundle);\r\n                }\r\n            } catch (Exception e) {\r\n\r\n                \/* Sending error message back to activity *\/\r\n                bundle.putString(Intent.EXTRA_TEXT, e.toString());\r\n                receiver.send(STATUS_ERROR, bundle);\r\n            }\r\n        }\r\n        Log.d(TAG, \"Service Stopping!\");\r\n        this.stopSelf();\r\n    }\r\n\r\n    private String[] downloadData(String requestUrl) throws IOException, DownloadException {\r\n        InputStream inputStream = null;\r\n        HttpURLConnection urlConnection = null;\r\n\r\n        \/* forming th java.net.URL object *\/\r\n        URL url = new URL(requestUrl);\r\n        urlConnection = (HttpURLConnection) url.openConnection();\r\n\r\n        \/* optional request header *\/\r\n        urlConnection.setRequestProperty(\"Content-Type\", \"application\/json\");\r\n\r\n        \/* optional request header *\/\r\n        urlConnection.setRequestProperty(\"Accept\", \"application\/json\");\r\n\r\n        \/* for Get request *\/\r\n        urlConnection.setRequestMethod(\"GET\");\r\n        int statusCode = urlConnection.getResponseCode();\r\n\r\n        \/* 200 represents HTTP OK *\/\r\n        if (statusCode == 200) {\r\n            inputStream = new BufferedInputStream(urlConnection.getInputStream());\r\n            String response = convertInputStreamToString(inputStream);\r\n            String[] results = parseResult(response);\r\n            return results;\r\n        } else {\r\n            throw new DownloadException(\"Failed to fetch data!!\");\r\n        }\r\n    }\r\n\r\n    private String convertInputStreamToString(InputStream inputStream) throws IOException {\r\n\r\n        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\r\n        String line = \"\";\r\n        String result = \"\";\r\n\r\n        while ((line = bufferedReader.readLine()) != null) {\r\n            result += line;\r\n        }\r\n\r\n            \/* Close Stream *\/\r\n        if (null != inputStream) {\r\n            inputStream.close();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private String[] parseResult(String result) {\r\n\r\n        String[] blogTitles = null;\r\n        try {\r\n            JSONObject response = new JSONObject(result);\r\n            JSONArray posts = response.optJSONArray(\"posts\");\r\n            blogTitles = new String[posts.length()];\r\n\r\n            for (int i = 0; i &lt; posts.length(); i++) {\r\n                JSONObject post = posts.optJSONObject(i);\r\n                String title = post.optString(\"title\");\r\n                blogTitles[i] = title;\r\n            }\r\n\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return blogTitles;\r\n    }\r\n\r\n    public class DownloadException extends Exception {\r\n\r\n        public DownloadException(String message) {\r\n            super(message);\r\n        }\r\n\r\n        public DownloadException(String message, Throwable cause) {\r\n            super(message, cause);\r\n        }\r\n    }\r\n}\r\n<\/pre>\n<h4>How it works<\/h4>\n<ol >\n<li>DownloadService class extending <code>IntentService<\/code> and overriding <code>onHandleIntent()<\/code> method. In onHandleIntent() method we will perform our network request to download data from server<\/li>\n<li>Before it downloads the data from server, the request is being fetched from bundle. Our Activity will send this data as extras while starting the<\/li>\n<li>Once Download is successful we will send the response back to activity via <code>ResultReceiver<\/code><\/li>\n<li>For any exceptions or error, we will pass the error response back to activity via ResultReceiver.<\/li>\n<li>We have declared custom exception class <code>DownloadException<\/code> for handling all our custom error messages. You may do this<\/li>\n<\/ol>\n<h1><span id=\"5-declaring-service-in-the-manifest\">5. Declaring Service in the Manifest<\/span><\/h1>\n<p>Like <code>Service<\/code>, an IntentService also needs an entry in your application manifest. Provide the element entry and declare all your IntentServices you using. Additionally as we are performing operation to download data from internet, we will request for <code>android.permission.INTERNET<\/code> permission.<\/p>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;manifest xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    package=\"com.javatechig.intentserviceexample\"&gt;\r\n\r\n    &lt;!-- Internet permission, as we are accessing data from server --&gt;\r\n    &lt;uses-permission android:name=\"android.permission.INTERNET\" \/&gt;\r\n\r\n    &lt;application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@drawable\/ic_launcher\"\r\n        android:label=\"@string\/app_name\"\r\n        android:theme=\"@style\/AppTheme\"&gt;\r\n        &lt;activity\r\n            android:name=\".MyActivity\"\r\n            android:label=\"@string\/app_name\"&gt;\r\n            &lt;intent-filter&gt;\r\n                &lt;action android:name=\"android.intent.action.MAIN\" \/&gt;\r\n\r\n                &lt;category android:name=\"android.intent.category.LAUNCHER\" \/&gt;\r\n            &lt;\/intent-filter&gt;\r\n        &lt;\/activity&gt;\r\n\r\n\r\n        &lt;!-- Declaring Service in Manifest --&gt;\r\n        &lt;service\r\n            android:name=\".DownloadService\"\r\n            android:exported=\"false\" \/&gt;\r\n\r\n    &lt;\/application&gt;\r\n\r\n&lt;\/manifest&gt;\r\n<\/pre>\n<h1><span id=\"6-sending-work-requests-to-the-intentservice\">6. Sending Work Requests to the IntentService<\/span><\/h1>\n<p>To start the DownloadService to download data, you must create an explicit Intent and add all the request parameters to it. A service can be started by calling <code>startService()<\/code> method. You can start an IntentService either form an <code>Activity<\/code> or a <code>Fragment<\/code>.<\/p>\n<p>What is the additional <code>DownloadResultReceiver<\/code> here, huh?. Remember that we have to pass the result of download request from service to activity. This will be done through <code>ResultReceiver<\/code>.<\/p>\n<pre class=\"prettyprint lang-java\">\/* Starting Download Service *\/\r\nmReceiver = new DownloadResultReceiver(new Handler());\r\nmReceiver.setReceiver(this);\r\nIntent intent = new Intent(Intent.ACTION_SYNC, null, this, DownloadService.class);\r\n\r\n\/* Send optional extras to Download IntentService *\/\r\nintent.putExtra(\"url\", url);\r\nintent.putExtra(\"receiver\", mReceiver);\r\nintent.putExtra(\"requestId\", 101);\r\n\r\nstartService(intent);\r\n<\/pre>\n<h1><span id=\"7-report-status-from-intentservice-to-activity\">7. Report Status From IntentService to Activity<\/span><\/h1>\n<p>To send the status of a work request in an IntentService to other components, get the instance of ResultReceiver. Send the status by calling send() method.<\/p>\n<pre class=\"prettyprint lang-java\">final ResultReceiver receiver = intent.getParcelableExtra(\"receiver\");\r\nBundle bundle = new Bundle();\r\n\r\n\/* Service Started *\/\r\nreceiver.send(STATUS_RUNNING, Bundle.EMPTY);\r\n\r\n\/* Status Finished *\/\r\nbundle.putStringArray(\"result\", results);\r\nreceiver.send(STATUS_FINISHED, bundle);\r\n\r\n\/* Sending error message back to activity *\/\r\nbundle.putString(Intent.EXTRA_TEXT, \"Error message here..\");\r\nreceiver.send(STATUS_ERROR, bundle);\r\n<\/pre>\n<h1><span id=\"8-receive-status-broadcasts-from-an-intentservice\">8. Receive Status Broadcasts from an IntentService<\/span><\/h1>\n<p>To receive results back from IntentService, we can use subclass of <code>ResultReciever<\/code>. Once results are sent from Service the <code>onReceiveResult()<\/code> method will be called. Your activity handles this response and fetches the results from the Bundle. Once results are recieved, accordingly the activity instance updates the UI.<\/p>\n<h4>DownloadResultReceiver.java<\/h4>\n<pre class=\"prettyprint lang-java\">package com.javatechig.intentserviceexample;\r\n\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.ResultReceiver;\r\n\r\npublic class DownloadResultReceiver extends ResultReceiver {\r\n    private Receiver mReceiver;\r\n\r\n    public DownloadResultReceiver(Handler handler) {\r\n        super(handler);\r\n    }\r\n\r\n    public void setReceiver(Receiver receiver) {\r\n        mReceiver = receiver;\r\n    }\r\n\r\n    public interface Receiver {\r\n        public void onReceiveResult(int resultCode, Bundle resultData);\r\n    }\r\n\r\n    @Override\r\n    protected void onReceiveResult(int resultCode, Bundle resultData) {\r\n        if (mReceiver != null) {\r\n            mReceiver.onReceiveResult(resultCode, resultData);\r\n        }\r\n    }\r\n}\r\n<\/pre>\n<h4>MainActivity.java<\/h4>\n<pre class=\"prettyprint lang-java\">@Override\r\n    public void onReceiveResult(int resultCode, Bundle resultData) {\r\n        switch (resultCode) {\r\n            case DownloadService.STATUS_RUNNING:\r\n                setProgressBarIndeterminateVisibility(true);\r\n                break;\r\n            case DownloadService.STATUS_FINISHED:\r\n                \/* Hide progress &amp; extract result from bundle *\/\r\n                setProgressBarIndeterminateVisibility(false);\r\n                String[] results = resultData.getStringArray(\"result\");\r\n\r\n                \/* Update ListView with result *\/\r\n                arrayAdapter = new ArrayAdapter(MyActivity.this, android.R.layout.simple_list_item_2, results);\r\n                listView.setAdapter(arrayAdapter);\r\n                break;\r\n            case DownloadService.STATUS_ERROR:\r\n                \/* Handle the error *\/\r\n                String error = resultData.getString(Intent.EXTRA_TEXT);\r\n                Toast.makeText(this, error, Toast.LENGTH_LONG).show();\r\n                break;\r\n        }\r\n    }\r\n<\/pre>\n<h1><span id=\"9-output\">9. Output<\/span><\/h1>\n<p><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example.png\"><img class=\"alignnone size-medium wp-image-5743\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example-620x1048.png\" alt=\"Android Networking Example\" width=\"620\" height=\"1048\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example-620x1048.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example-300x507.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example-800x1352.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example-370x625.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example.png 845w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/center>&nbsp;<\/p>\n<h1><span id=\"11-download-source-code\">11. Download Source Code<\/span><\/h1>\n<p>Download complete example source code from <a href=\"https:\/\/github.com\/javatechig\/Android-IntentService-Example\" target=\"_blank\"><strong>GitHub<\/strong><\/a><\/p>\n","excerpt":"<p>In this tutorial we will take a look into one of most important and commonly used Android concept called IntentService. This post explains steps involved in creating a background service in Android using IntentService.<\/p>\n","date":"2014-09-15 07:00:28","modified":"2015-02-06 19:46:30","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":48,"slug":"android-advanced","title":"Android Advanced","description":"","post_count":23},{"id":142,"slug":"networking","title":"Networking","description":"","post_count":2},{"id":144,"slug":"service","title":"Service","description":"","post_count":3}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":7715,"name":"Hosam Gemei","url":"","date":"2014-12-18 18:10:00","content":"<p>Pretty good work, thanks \ud83d\ude42<\/p>\n","parent":0},{"id":7753,"name":"user","url":"","date":"2015-01-20 02:52:00","content":"<p>Pretty useful article. Thank you! \ud83d\ude42<\/p>\n","parent":0},{"id":7829,"name":"marol","url":"","date":"2015-02-21 10:56:00","content":"<p>I run your source code, but it got force close, any idea what was causing it?<\/p>\n","parent":0},{"id":7836,"name":"JavaTechig","url":"http:\/\/stacktips.com\/","date":"2015-02-23 15:50:00","content":"<p>Not so sure. Can you paste the error log pls?<\/p>\n","parent":7829},{"id":7947,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-24 19:07:00","content":"<p>Thanks for pointing out.. Will update as your suggestions. <\/p>\n","parent":0},{"id":8134,"name":"JavaCoder","url":"","date":"2015-08-01 14:36:00","content":"<p>According to the developer.android.com:<\/p>\n<p>The IntentService does the following:<br \/>\n-&gt; Creates a default worker thread that executes all intents delivered to onStartCommand() separate from your application&#8217;s main thread.<br \/>\n-&gt; Creates a work queue that passes one intent at a time to your onHandleIntent() implementation, so you never have to worry about multi-threading.<br \/>\n-&gt; Stops the service after all start requests have been handled, so you never have to call stopSelf().<br \/>\n-&gt; Provides default implementation of onBind() that returns null.<br \/>\n-&gt; Provides a default implementation of onStartCommand() that sends the intent to the work queue and then to your onHandleIntent() implementation.<\/p>\n<p>So, stopSelf() should not be called while using IntentService. And, maybe calling stopSelf() might produce incorrect behaviour.<\/p>\n","parent":0},{"id":8190,"name":"Zaier","url":"","date":"2015-09-07 23:12:00","content":"<p>Hi,<br \/>\nyou are not so right my JavaCoder \ud83d\ude09<br \/>\nThey say<br \/>\n&#8220;All requests are handled on a single worker thread &#8212; they may take as long as necessary (and will not block the application&#8217;s main loop), but only one request will be processed at a time.&#8221;<br \/>\nfrom here<br \/>\n<a href=\"http:\/\/developer.android.com\/reference\/android\/app\/IntentService.html\" rel=\"nofollow\">http:\/\/developer.android.com\/reference\/android\/app\/IntentService.html<\/a><\/p>\n<p>But you, you said<br \/>\n&#8220;-&gt; Creates a work queue that passes one intent at a time to your onHandleIntent() implementation, so you never have to worry about multi-threading.&#8221;<br \/>\nyou see the difference \ud83d\ude09 ?<br \/>\nYou should really care about multi-threading and for that , we can use the<br \/>\nThreadPoolExecutor java SE 5 ,  and the Service class (not the IntentService), here we can get our pool fixed by &#8216;n&#8217; threads running on the same time where &#8216;n&#8217; is a number that we can choose it responding to our need.<\/p>\n<p>I wished that you wrote the link where you found this infos, but anyway I did it in your place.<br \/>\ncheers<\/p>\n","parent":8134},{"id":8191,"name":"Zaier","url":"","date":"2015-09-07 23:13:00","content":"<p>you have a good blog I will check it from time to time \ud83d\ude42<\/p>\n","parent":0},{"id":8192,"name":"Zaier","url":"","date":"2015-09-07 23:16:00","content":"<p>look at this too<br \/>\nIntentServiceThis is a subclass of Service that uses a worker thread to handle all start requests, one at a time. This is the best option if you don&#8217;t require that your service handle multiple requests simultaneously. All you need to do is implementonHandleIntent(), which receives the intent for each start request so you can do the background work.<br \/>\n<a href=\"http:\/\/developer.android.com\/guide\/components\/services.html\" rel=\"nofollow\">http:\/\/developer.android.com\/guide\/components\/services.html<\/a><br \/>\nI think it clearer now<\/p>\n","parent":8134},{"id":8193,"name":"Zaier","url":"","date":"2015-09-08 01:04:00","content":"<p>you can set a timeout , and check the file if it is downloaded in the same thread created by the IntentService<\/p>\n","parent":0},{"id":8194,"name":"Zaier","url":"","date":"2015-09-08 01:06:00","content":"<p>Can anyone explain to me why should I use &#8220;Intent.ACTION_SYNC&#8221; as an Action,<br \/>\nwhy not just use the other simple constructor of Intent(context,JavaClazz.class)<br \/>\nthanks in advance<\/p>\n","parent":0},{"id":8198,"name":"JavaCoder","url":"","date":"2015-09-09 21:36:00","content":"<p>Actually those are exact words from <a href=\"http:\/\/developer.android.com\/guide\/components\/services.html#ExtendingIntentService\" rel=\"nofollow\">http:\/\/developer.android.com\/guide\/components\/services.html#ExtendingIntentService<\/a>.<\/p>\n<p>I have updated the link in previous comment also.<\/p>\n","parent":8190}],"attachments":[],"comment_count":12,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"fsb_social_facebook":["5"],"fsb_social_twitter":["3"],"fsb_social_google":["2"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"snap_isAutoPosted":["1"],"dsq_thread_id":["3019172226"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-09-15 07:00:35\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"9180d19ef29e7233684eca765d044211\";s:5:\"pDate\";s:19:\"2014-09-15 07:00:40\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_884946211517634\";s:5:\"pDate\";s:19:\"2014-09-15 07:00:45\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"1U2sWa\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/1U2sWa\/comments\";s:5:\"pDate\";s:19:\"2014-09-15 07:00:49\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:97550143056;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/97550143056\";s:5:\"pDate\";s:19:\"2014-09-15 07:00:52\";}}\";"],"snapTW":["s:271:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:8:\"attchImg\";s:1:\"0\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"511409298061004800\";s:5:\"pDate\";s:19:\"2014-09-15 07:00:52\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"cf_url":[""],"post_views_count":["13031","13031"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":5735,"type":"post","slug":"android-networking-tutorial","url":"http:\/\/stacktips.com\/tutorials\/android\/android-networking-tutorial","status":"publish","title":"Android Networking Tutorial","title_plain":"Android Networking Tutorial","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Android Networking Tutorial' data-link='http:\/\/stacktips.com\/tutorials\/android\/android-networking-tutorial' data-summary='In this android networking tutorial we will create a sample application that illustrates how to perform network operations in android.'><\/div>\n<p><div id=\"toc_container\" class=\"toc_transparent no_bullets\"><ul class=\"toc_list\"><li><a href=\"#1-introduction\">1. Introduction<\/a><\/li><li><a href=\"#2-apache-httpclient-vs-httpurlconnection\">2. Apache HttpClient vs HttpURLConnection<\/a><\/li><li><a href=\"#3-android-networking-using-apache-httpclient\">3. Android Networking Using Apache HttpClient<\/a><\/li><li><a href=\"#4-application-manifest-permissions\">4. Application Manifest Permissions<\/a><\/li><li><a href=\"#5-downloading-data-using-httpget\">5. Downloading Data Using HttpGet<\/a><\/li><li><a href=\"#6-converting-stream-to-string\">6. Converting Stream to String<\/a><\/li><li><a href=\"#7-jsonresponse-parsing\">7. JSON\u00a0Response Parsing<\/a><\/li><li><a href=\"#8-using-asynchttptask-fromactivity\">8. Using AsyncHttpTask From\u00a0Activity<\/a><\/li><li><a href=\"#9-android-networking-using-httpurlconnection\">9. Android Networking Using HttpURLConnection<\/a><\/li><li><a href=\"#10-android-networking-best-practices\">10. Android Networking Best Practices<\/a><\/li><li><a href=\"#11-download-complete-source-code\">11. Download Complete Source Code<\/a><\/li><li><a href=\"#12screenshot\">12.\u00a0Screenshot<\/a><\/li><\/ul><\/div>\n<\/p>\n<h1><span id=\"1-introduction\">1. Introduction<\/span><\/h1>\n<p>In this android networking tutorial we will create a sample application that illustrates how to perform network operations in android. By going through this lesson, you will learn the following topics<\/p>\n<ol>\n<li>How to create network connection? What are the different available Http clients in android<\/li>\n<li>How download, parse and consume JSON\u00a0data?<\/li>\n<li>What are the best approaches and design practices?<\/li>\n<\/ol>\n<p>Networking in android means the ability to send and receive data from remote server. This data can be either a plain text, xml, json, image or a video stream. Android primarily supports two HTTP clients for networking, one by using <code>Apache HttpClient<\/code> and other using <code>HttpURLConnection<\/code>.<\/p>\n<h1><span id=\"2-apache-httpclient-vs-httpurlconnection\">2. Apache HttpClient vs HttpURLConnection<\/span><\/h1>\n<p>Older version of android was supporting only Apache HttpClient for all network operations. But since <code>Gingerbread (Android 2.3<\/code>) , android recommend to use HttpURLConnection. HttpURLConnection is simple and thin API\u2019s supporting transparent compression and response caching. Response cache is used to improve speed and loading time.<\/p>\n<h1><span id=\"3-android-networking-using-apache-httpclient\">3. Android Networking Using Apache HttpClient<\/span><\/h1>\n<p>In this tutorial we will create a sample application that illustrates how to perform network operations in android. To make this post simplified, we will download the data from the following url and will show the article titles on a ListView. Refer the screenshot for\u00a0an overview of how application looks<\/p>\n<p>Feed request Url: <a href=\"http:\/\/stacktips.com\/api\/get_category_posts\/?dev=1&amp;slug=android\" target=\"_blank\">http:\/\/stacktips.com\/api\/get_category_posts\/?dev=1&amp;slug=android<\/a><\/p>\n<p>Below is the format of response we are expecting from server. We will get the list of posts and each post contains details like title, content, excerpt, etc. We will take all the list of titles and will display on the ListView.<\/p>\n<p><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response.png\"><img class=\"alignnone size-full wp-image-5736\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response.png\" alt=\"JSON Feed Response\" width=\"1024\" height=\"913\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response.png 1024w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-300x267.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-620x552.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-940x838.png 940w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-800x713.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-1000x891.png 1000w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-900x802.png 900w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-370x329.png 370w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/center><\/p>\n<h1><span id=\"4-application-manifest-permissions\">4. Application Manifest Permissions<\/span><\/h1>\n<p>As our application is connecting to remote server, we have to provide internet permission. Just add the below line of code in your application manifest. This should be a direct child of \u00a0&lt;manifest&gt; element.<\/p>\n<pre class=\"prettyprint lang-xml\"> &lt;uses-permission android:name=\"android.permission.INTERNET\"\/&gt;\r\n<\/pre>\n<h1><span id=\"5-downloading-data-using-httpget\">5. Downloading Data Using HttpGet<\/span><\/h1>\n<p>Downloading data is an long running task and it is recommended that all the long running task should be performed off the UI thread. And in this example we will create a simple downloader asynchronous task that performs the feed download action.<\/p>\n<h4>What is AsyncTask?<\/h4>\n<p>Async task enables you to implement multi threading without get hands dirty into threads. AsyncTask enables proper and easy use methods that allows performing background operations and passing the results back to the UI thread. Learn more about android AsyncTask from below links<\/p>\n<p class=\"entry-title\"><strong><span style=\"color: #ff0000;\">*\u00a0<\/span><a href=\"http:\/\/stacktips.com\/android\/handler-and-asynctask-in-android\" target=\"_blank\">Handler and AsyncTask in Android<\/a><\/strong><\/p>\n<h4>AsyncHttpTask.java<\/h4>\n<pre class=\"prettyprint lang-java\">public class AsyncHttpTask extends AsyncTask&lt;String, Void, Integer&gt; {\r\n\r\n        @Override\r\n        protected Integer doInBackground(String... params) {\r\n            InputStream inputStream = null;\r\n            Integer result = 0;\r\n            try {\r\n                \/* create Apache HttpClient *\/\r\n                HttpClient httpclient = new DefaultHttpClient();\r\n\r\n                \/* HttpGet Method *\/\r\n                HttpGet httpGet = new HttpGet(params[0]);\r\n\r\n                \/* optional request header *\/\r\n                httpGet.setHeader(\"Content-Type\", \"application\/json\");\r\n\r\n                \/* optional request header *\/\r\n                httpGet.setHeader(\"Accept\", \"application\/json\");\r\n\r\n                \/* Make http request call *\/\r\n                HttpResponse httpResponse = httpclient.execute(httpGet);\r\n                int statusCode = httpResponse.getStatusLine().getStatusCode();\r\n\r\n                \/* 200 represents HTTP OK *\/\r\n                if (statusCode ==  200) {\r\n                    \/* receive response as inputStream *\/\r\n                    inputStream = httpResponse.getEntity().getContent();\r\n                    String response = convertInputStreamToString(inputStream);\r\n                    parseResult(response);\r\n                    result = 1; \/\/ Successful\r\n                } else{\r\n                    result = 0; \/\/\"Failed to fetch data!\";\r\n                }\r\n            } catch (Exception e) {\r\n                Log.d(TAG, e.getLocalizedMessage());\r\n            }\r\n            return result; \/\/\"Failed to fetch data!\";\r\n        }\\\r\n\r\n        @Override\r\n        protected void onPostExecute(Integer result) {\r\n            \/* Download complete. Lets update UI *\/\r\n            if(result == 1){\r\n                arrayAdapter = new ArrayAdapter(MyActivity.this, android.R.layout.simple_list_item_1, blogTitles);\r\n                listView.setAdapter(arrayAdapter);\r\n            }else{\r\n                Log.e(TAG, \"Failed to fetch data!\");\r\n            }\r\n        }\r\n    }\r\n<\/pre>\n<h4>Code Explanation<\/h4>\n<ul>\n<li><code>AsyncHttpTask<\/code> is used to perform http connection and download data from server.<\/li>\n<li><code>doInBackground()<\/code> method is executed on a new thread. This method takes feed request url as input parameter.<\/li>\n<li>This is using apache <code>HttpClient<\/code> method to download the data from server<\/li>\n<li>Once the response is received it checks for the response status code. HTTP status 200 means, the request is successful. You may validate for other http error code types and do the required validations. Once request is successful, it fetches the content stream.<\/li>\n<li>Now we have to convert the stream to string and then process your parser. The stream to string conversation and the JSON\u00a0parser is done in two different method. Later on this tutorial we will see them.<\/li>\n<li>Once the data is parsed, the <code>doInBackground()<\/code> method completes its tasks and then <code>onPostExecute()<\/code> method invokes.<\/li>\n<li><code>onPostExecute()<\/code> method we will update the adapter value and the list content.<\/li>\n<\/ul>\n<h1><span id=\"6-converting-stream-to-string\">6. Converting Stream to String<\/span><\/h1>\n<pre class=\"prettyprint lang-java\">private String convertInputStreamToString(InputStream inputStream) throws IOException {\r\n        BufferedReader bufferedReader = new BufferedReader( new InputStreamReader(inputStream));\r\n        String line = \"\";\r\n        String result = \"\";\r\n        while((line = bufferedReader.readLine()) != null){\r\n            result += line;\r\n        }\r\n\r\n            \/* Close Stream *\/\r\n        if(null!=inputStream){\r\n            inputStream.close();\r\n        }\r\n        return result;\r\n    }\r\n<\/pre>\n<h1><span id=\"7-jsonresponse-parsing\">7. JSON\u00a0Response Parsing<\/span><\/h1>\n<p>Note: The focus of this tutorial is more on explaining network connections in android and not focused towards explaining the json parser. If you are looking for some help on JSON parsing, you may read the below post<\/p>\n<p><strong><span style=\"color: #ff0000;\">*\u00a0<\/span><a title=\"JSON Feed Reader in Android\" href=\"http:\/\/stacktips.com\/android\/json-feed-reader-in-android\">JSON Feed Reader in Android<\/a><\/strong><\/p>\n<pre class=\"prettyprint lang-java\">private void parseResult(String result) {\r\n        try{\r\n            JSONObject response = new JSONObject(result);\r\n            JSONArray posts = response.optJSONArray(\"posts\");\r\n            blogTitles = new String[posts.length()];\r\n\r\n            for(int i=0; i&lt; posts.length();i++ ){\r\n                JSONObject post = posts.optJSONObject(i);\r\n                String title = post.optString(\"title\");\r\n                blogTitles[i] = title;\r\n            }\r\n        }catch (JSONException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n<\/pre>\n<h1><span id=\"8-using-asynchttptask-fromactivity\">8. Using AsyncHttpTask From\u00a0Activity<\/span><\/h1>\n<p>As discussed earlier, our ui contains a simple ListView and uses basic <code>ArrayAdapter<\/code>. You may customise your ListView of the kind you want. Need guide on building custom list? Checkout our below tutorial.<\/p>\n<p><strong><span style=\"color: #ff0000;\">*<\/span>\u00a0<a title=\"Android ListView Tutorial\" href=\"http:\/\/stacktips.com\/android\/android-listview-tutorial\" target=\"_blank\">Android ListView Tutorial<\/a><\/strong><br \/>\n<strong><span style=\"color: #ff0000;\">*\u00a0<\/span><a title=\"ListView with Section Header in Android\" href=\"http:\/\/stacktips.com\/android\/listview-with-section-header-in-android\" target=\"_blank\">ListView with Section Header in Android<\/a><\/strong><\/p>\n<h4>Activity layout (activity_my.xml)<\/h4>\n<pre class=\"prettyprint lang-xml\">&lt;RelativeLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    xmlns:tools=\"http:\/\/schemas.android.com\/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:paddingLeft=\"@dimen\/activity_horizontal_margin\"\r\n    android:paddingRight=\"@dimen\/activity_horizontal_margin\"\r\n    android:paddingTop=\"@dimen\/activity_vertical_margin\"\r\n    android:paddingBottom=\"@dimen\/activity_vertical_margin\"\r\n    tools:context=\".MyActivity\"&gt;\r\n\r\n    &lt;ListView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id\/listView\"\r\n        android:layout_alignParentLeft=\"true\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:choiceMode=\"singleChoice\" \/&gt;\r\n&lt;\/RelativeLayout&gt;\r\n<\/pre>\n<h4>Activity Java class<\/h4>\n<p>Let us have a look into Activity onCreate() method<\/p>\n<pre class=\"prettyprint lang-java\">@Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_my);\r\n\r\n        listView = (ListView) findViewById(R.id.listView);\r\n        final String url = \"http:\/\/stacktips.com\/api\/get_category_posts\/?dev=1&amp;slug=android\";\r\n        new AsyncHttpTask().execute(url);\r\n    }\r\n<\/pre>\n<h1><span id=\"9-android-networking-using-httpurlconnection\">9. Android Networking Using HttpURLConnection<\/span><\/h1>\n<p>In the above example, we have used Apache <code>HttpClient<\/code> to connect to server and download data. Now let us use <code>HttpURLConnection<\/code> in the same example. The only place we need to change is inside <code>doInBackgrond()<\/code> method of AsyncHttpTask class.<\/p>\n<pre class=\"prettyprint lang-java\"> @Override\r\n        protected Integer doInBackground(String... params) {\r\n            InputStream inputStream = null;\r\n            HttpURLConnection urlConnection = null;\r\n            Integer result = 0;\r\n            try {\r\n                \/* forming th java.net.URL object *\/\r\n                URL url = new URL(params[0]);\r\n                urlConnection = (HttpURLConnection) url.openConnection();\r\n\r\n                 \/* optional request header *\/\r\n                urlConnection.setRequestProperty(\"Content-Type\", \"application\/json\");\r\n\r\n                \/* optional request header *\/\r\n                urlConnection.setRequestProperty(\"Accept\", \"application\/json\");\r\n\r\n                \/* for Get request *\/\r\n                urlConnection.setRequestMethod(\"GET\");\r\n                int statusCode = urlConnection.getResponseCode();\r\n\r\n                \/* 200 represents HTTP OK *\/\r\n                if (statusCode ==  200) {\r\n                    inputStream = new BufferedInputStream(urlConnection.getInputStream());\r\n                    String response = convertInputStreamToString(inputStream);\r\n                    parseResult(response);\r\n                    result = 1; \/\/ Successful\r\n                }else{\r\n                    result = 0; \/\/\"Failed to fetch data!\";\r\n                }\r\n            } catch (Exception e) {\r\n                Log.d(TAG, e.getLocalizedMessage());\r\n            }\r\n            return result; \/\/\"Failed to fetch data!\";\r\n        }\r\n<\/pre>\n<h1><span id=\"10-android-networking-best-practices\">10. Android Networking Best Practices<\/span><\/h1>\n<ul>\n<li>Do not ever download data in main thread. That will cause Application Not Responding (ANR)<\/li>\n<li>Use <code>HttpURLConnection<\/code> instead of apache <code>HttpClient<\/code> if your application is targeted from Android 2.3 onwards<\/li>\n<li>If you have a very long running task like uploading a video, use IntentService<\/li>\n<li>Let user know what is going on. This means there should be some visual representation of download progress. In this example we have not used any (which will show an empty screen while data is being downloaded). Without a progress representation, your application will mislead user.<\/li>\n<\/ul>\n<h1><span id=\"11-download-complete-source-code\">11. Download Complete Source Code<\/span><\/h1>\n<p>Download the Android Networking Example using Apache HttpClient from\u00a0from <a href=\"https:\/\/github.com\/javatechig\/Android-HttpGet-Apache-HttpClient\" target=\"_blank\"><strong>GitHub<\/strong><\/a>.<\/p>\n<p>Download the Android Networking Example using HttpURLConnection from <a href=\"https:\/\/github.com\/javatechig\/Android-HttpGet-HttpURLConnection\" target=\"_blank\"><strong>GitHub<\/strong><\/a>.<\/p>\n<h1><span id=\"12screenshot\">12.\u00a0Screenshot<\/span><\/h1>\n<p><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example.png\"><img class=\"alignnone size-medium wp-image-5743\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example-620x1048.png\" alt=\"Android Networking Example\" width=\"620\" height=\"1048\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example-620x1048.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example-300x507.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example-800x1352.png 800w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example-370x625.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example.png 845w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/center><\/p>\n","excerpt":"<p>In this android networking tutorial we will create a sample application that illustrates how to perform network operations in android.<\/p>\n","date":"2014-09-13 09:30:04","modified":"2015-02-15 21:22:21","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[{"id":48,"slug":"android-advanced","title":"Android Advanced","description":"","post_count":23},{"id":142,"slug":"networking","title":"Networking","description":"","post_count":2}],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8251,"name":"Cherry Naresh","url":"","date":"2015-10-06 14:46:00","content":"<p>how to send data to webservice<\/p>\n","parent":0},{"id":8299,"name":"Bala Vamsi Krishna Venigalla","url":"","date":"2015-11-04 09:35:00","content":"<p>How parse json data of 2 urls at a time(one is text data url and other is Image Url)<\/p>\n","parent":0},{"id":8408,"name":"RD87","url":"","date":"2016-02-26 09:26:00","content":"<p>Thanks..<\/p>\n","parent":0},{"id":8446,"name":"Chirag thaker","url":"","date":"2016-03-14 18:46:00","content":"<p>This is a good demo for fetching data from Url through HttpUrlConnection. can you post some snippets for Send data to web service through HttpUrlconnection<\/p>\n","parent":0},{"id":8484,"name":"Tushar","url":"","date":"2016-04-14 11:25:00","content":"<p>sir how to send data server base db.<\/p>\n","parent":0}],"attachments":[{"id":5736,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response.png","slug":"json-feed-response","title":"JSON Feed Response","description":"JSON Feed Response","caption":"","parent":5735,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response.png","width":1024,"height":913},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response-620x552.png","width":620,"height":552},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response.png","width":1024,"height":913},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/JSON-Feed-Response.png","width":1024,"height":913}}},{"id":5743,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example.png","slug":"android-networking-example","title":"Android Networking Example","description":"","caption":"","parent":5735,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example.png","width":845,"height":1429},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example-620x1048.png","width":620,"height":1048},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example.png","width":845,"height":1429},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Android-Networking-Example.png","width":845,"height":1429}}}],"comment_count":5,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"snap_isAutoPosted":["1"],"fsb_social_facebook":["7"],"fsb_social_twitter":["4"],"fsb_social_google":["14"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"dsq_thread_id":["3013945953"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"2LmEjr\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/2LmEjr\/comments\";s:5:\"pDate\";s:19:\"2014-09-13 09:30:43\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:97370823591;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/97370823591\";s:5:\"pDate\";s:19:\"2014-09-13 09:30:45\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"cf_url":[""],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-09-13 09:30:24\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"0e4468fedc165e29f2c7f05e9b3df71a\";s:5:\"pDate\";s:19:\"2014-09-13 09:30:34\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_884041464941442\";s:5:\"pDate\";s:19:\"2014-09-13 09:30:40\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:271:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:8:\"attchImg\";s:1:\"0\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"510722241948950528\";s:5:\"pDate\";s:19:\"2014-09-13 09:30:45\";}}\";"],"post_views_count":["9950"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":5386,"type":"post","slug":"how-to-integrate-twitter-in-android-application","url":"http:\/\/stacktips.com\/tutorials\/android\/how-to-integrate-twitter-in-android-application","status":"publish","title":"How To Integrate Twitter In Android Application","title_plain":"How To Integrate Twitter In Android Application","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How To Integrate Twitter In Android Application' data-link='http:\/\/stacktips.com\/tutorials\/android\/how-to-integrate-twitter-in-android-application' data-summary='This tutorial explains, how to integrate twitter in android application. The example below using twitter4j java library for login to twitter and allows to share a simple text post and image post in users twitters timeline.'><\/div>\n<p>This tutorial explains,\u00a0how to integrate twitter in android application.\u00a0The example below using twitter4j java library for login to twitter and allows to post\u00a0text and image in users twitters timeline.\u00a0This application involves following steps<\/p>\n<ol>\n<li>Download twitter4j jar file<\/li>\n<li>Create a new application in Twitter developer console<\/li>\n<li>Design your application user interface<\/li>\n<li>Allow user to login to twitter and get authentication token<\/li>\n<li>Save the token for further use<\/li>\n<li>Post text or image content on twitter timeline<\/li>\n<\/ol>\n<h1>1. Download Twitter SDK<\/h1>\n<p>Twitter4J is an unofficial Java library for the Twitter API. With Twitter4J, you can easily integrate your Java application with the Twitter service. Note that twitter4j is an unofficial library.<\/p>\n<p>You need to download this library before you can start integrating twitter on android. <a href=\"http:\/\/twitter4j.org\/en\/\" target=\"_blank\">Download here.<\/a><\/p>\n<h1>2. Create New App\u00a0in Twitter console<\/h1>\n<ol>\n<li>Visit the below link to login to twitter developer console and login with your credentials<br \/>\n<a href=\"https:\/\/dev.twitter.com\/apps\" target=\"_blank\">https:\/\/dev.twitter.com\/apps<\/a><\/li>\n<li>You will see a console as shown in the screenshot below. Here you can see list of applications created on twitter. For our example let us create a new application by clicking on the \u201cCreate a new application\u201d button.<\/li>\n<li>Fill the required application details like name, description, website link and callback url. Call back url is optional, so can be left blank. And move next.<\/li>\n<li>Now we are done. You can see your app console as shown in the screenshot below.\u00a0For twitter integration in android we require consumer secret and consumer key.<\/li>\n<\/ol>\n<p><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Create-new-application-in-twitter-console.png\"><img class=\"alignnone size-medium wp-image-5692\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Create-new-application-in-twitter-console-620x558.png\" alt=\"Create new application in twitter console\" width=\"620\" height=\"558\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Create-new-application-in-twitter-console-620x558.png 620w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Create-new-application-in-twitter-console-300x270.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Create-new-application-in-twitter-console-370x333.png 370w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Create-new-application-in-twitter-console.png 633w\" sizes=\"(max-width: 620px) 100vw, 620px\" \/><\/a><\/center><\/p>\n<h1>3. Create New Android Application<\/h1>\n<p>Now we are ready to start write sample application to integrate twitter4j sdk in android. Create a new project and add\u00a0<code>twitter4j-core-4.0.2.jar<\/code> to libs folder.<\/p>\n<p>In this example, we have two activities. MainActivity and WebView activity. The MainActivity uses a simple layout that allows user to login to Twitter, and\u00a0after login\u00a0user can share message\u00a0on twitter. The WebViewActivity shows user a login screen through which user can login to twitter by supplying twitter credentials. Once user is authenticated, it will be redirected to the MainActivity with the oAuth response.<\/p>\n<p>Let us have a look into applications layout files.<\/p>\n<h4>activity_main.xml<\/h4>\n<pre class=\"prettyprint lang-xml\">&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    xmlns:tools=\"http:\/\/schemas.android.com\/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    android:padding=\"@dimen\/activity_vertical_margin\" &gt;\r\n\r\n    &lt;RelativeLayout\r\n        android:id=\"@+id\/login_layout\"\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"fill_parent\"\r\n        android:orientation=\"vertical\"\r\n        android:visibility=\"visible\" &gt;\r\n\r\n        &lt;TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:text=\"@string\/login_instructions\"\r\n            android:textAppearance=\"?android:attr\/textAppearanceLarge\"\r\n            android:textColor=\"#0080B4\" \/&gt;\r\n\r\n        &lt;Button\r\n            android:id=\"@+id\/btn_login\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerInParent=\"true\"\r\n            android:background=\"#0080B4\"\r\n            android:text=\"@string\/btn_login\"\r\n            android:textColor=\"#fff\" \/&gt;\r\n    &lt;\/RelativeLayout&gt;\r\n\r\n    &lt;LinearLayout\r\n        android:id=\"@+id\/share_layout\"\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"fill_parent\"\r\n        android:orientation=\"vertical\"\r\n        android:visibility=\"gone\" &gt;\r\n\r\n        &lt;TextView\r\n            android:id=\"@+id\/user_name\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingBottom=\"10dp\"\r\n            android:text=\"@string\/hello\"\r\n            android:textAppearance=\"?android:attr\/textAppearanceLarge\"\r\n            android:textColor=\"#0080B4\" \/&gt;\r\n\r\n        &lt;ImageView\r\n            android:id=\"@+id\/imageView\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"150dp\"\r\n            android:scaleType=\"centerCrop\"\r\n            android:src=\"@drawable\/lakeside_view\" \/&gt;\r\n\r\n        &lt;EditText\r\n            android:id=\"@+id\/share_text\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:background=\"#cceaf3\"\r\n            android:hint=\"@string\/share_instructions\"\r\n            android:inputType=\"textMultiLine\"\r\n            android:minLines=\"5\"\r\n            android:padding=\"10dp\" \/&gt;\r\n\r\n        &lt;Button\r\n            android:id=\"@+id\/btn_share\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:background=\"#0080B4\"\r\n            android:text=\"@string\/btn_share\"\r\n            android:textColor=\"#fff\" \/&gt;\r\n    &lt;\/LinearLayout&gt;\r\n\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<p>The above layout is being used in MainActivity.java. Below is the layout for WebViewActivity.java<\/p>\n<h4>activity_webview.xml<\/h4>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    xmlns:tools=\"http:\/\/schemas.android.com\/tools\"\r\n    android:id=\"@+id\/urlContainer\"\r\n    android:layout_width=\"fill_parent\"\r\n    android:layout_height=\"fill_parent\"\r\n    android:orientation=\"horizontal\" &gt;\r\n\r\n    &lt;WebView\r\n        android:id=\"@+id\/webView\"\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"fill_parent\"\r\n        android:layout_below=\"@id\/urlContainer\" \/&gt;\r\n\r\n&lt;\/LinearLayout&gt;\r\n<\/pre>\n<p>The above layout files using few of the strings which are defined in <code>strings.xml<\/code>. This file also contains the mandatory twitter parameters. Please do paste\u00a0your own twitter <strong>consumer key<\/strong> and <strong>consumer secret<\/strong> obtained from twitter developer console (Step-1)<\/p>\n<h4>strings.xml<\/h4>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;resources&gt;\r\n\r\n    &lt;!-- Strings used in app ui--&gt;\r\n    &lt;string name=\"app_name\"&gt;TwitterShare&lt;\/string&gt;\r\n    &lt;string name=\"action_settings\"&gt;Settings&lt;\/string&gt;\r\n    &lt;string name=\"hello\"&gt;Hello, &lt;\/string&gt;\r\n    &lt;string name=\"login_instructions\"&gt;Login to twiter&lt;\/string&gt;\r\n    &lt;string name=\"share_instructions\"&gt;Enter share message&lt;\/string&gt;\r\n    &lt;string name=\"btn_login\"&gt;Login to Twitter&lt;\/string&gt;\r\n    &lt;string name=\"btn_share\"&gt;Share&lt;\/string&gt;\r\n\r\n    &lt;!-- Twitter Configurations --&gt;\r\n    &lt;string name=\"twitter_callback\"&gt;http:\/\/javatechig.android.app&lt;\/string&gt;\r\n    &lt;string name=\"twitter_consumer_key\"&gt;YOUR_CONSUMER_KEY_HERE&lt;\/string&gt;\r\n    &lt;string name=\"twitter_consumer_secret\"&gt;YOUR_CONSUMER_SECRET_HERE&lt;\/string&gt;\r\n    &lt;string name=\"twitter_oauth_verifier\"&gt;oauth_verifier&lt;\/string&gt;\r\n    &lt;!-- End Configurations --&gt;\r\n&lt;\/resources&gt;\r\n<\/pre>\n<h1>4. Application Manifest Permissions<\/h1>\n<p>In the above two steps, we have declared the layout files and the strings used in the application. Before we getting into the massive piece of activity code, let us have a look into our application Manifest file. In this file, we have declared both the activities used in this application. Note, this application needs <code>android.permission.INTERNET<\/code> permission and so lets declare it.<\/p>\n<h4>Manifest.xml<\/h4>\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;manifest xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    package=\"com.example.twittershare\"\r\n    android:versionCode=\"1\"\r\n    android:versionName=\"1.0\" &gt;\r\n\r\n    &lt;uses-sdk\r\n        android:minSdkVersion=\"8\"\r\n        android:targetSdkVersion=\"14\" \/&gt;\r\n\r\n    &lt;!-- Permission - Internet Connect --&gt;\r\n    &lt;uses-permission android:name=\"android.permission.INTERNET\" \/&gt;\r\n\r\n    &lt;!-- Network State Permissions --&gt;\r\n    &lt;uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" \/&gt;\r\n\r\n    &lt;application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@drawable\/ic_launcher\"\r\n        android:label=\"@string\/app_name\"\r\n        android:theme=\"@style\/AppTheme\" &gt;\r\n        &lt;activity\r\n            android:name=\"com.example.twittershare.MainActivity\"\r\n            android:label=\"@string\/app_name\" &gt;\r\n            &lt;intent-filter&gt;\r\n                &lt;action android:name=\"android.intent.action.MAIN\" \/&gt;\r\n\r\n                &lt;category android:name=\"android.intent.category.LAUNCHER\" \/&gt;\r\n            &lt;\/intent-filter&gt;\r\n            &lt;intent-filter&gt;\r\n                &lt;action android:name=\"android.intent.action.VIEW\" \/&gt;\r\n\r\n                &lt;category android:name=\"android.intent.category.DEFAULT\" \/&gt;\r\n                &lt;category android:name=\"android.intent.category.BROWSABLE\" \/&gt;\r\n\r\n                &lt;data\r\n                    android:host=\"t4jsample\"\r\n                    android:scheme=\"oauth\" \/&gt;\r\n            &lt;\/intent-filter&gt;\r\n        &lt;\/activity&gt;\r\n        &lt;activity\r\n            android:name=\"com.example.twittershare.WebViewActivity\"\r\n            android:label=\"@string\/app_name\" \/&gt;\r\n    &lt;\/application&gt;\r\n\r\n&lt;\/manifest&gt;\r\n<\/pre>\n<h4>MainActivity.java<\/h4>\n<pre class=\"prettyprint lang-java\">package com.example.twittershare;\r\n\r\nimport java.io.InputStream;\r\nimport twitter4j.StatusUpdate;\r\nimport twitter4j.Twitter;\r\nimport twitter4j.TwitterException;\r\nimport twitter4j.TwitterFactory;\r\nimport twitter4j.User;\r\nimport twitter4j.auth.AccessToken;\r\nimport twitter4j.auth.RequestToken;\r\nimport twitter4j.conf.Configuration;\r\nimport twitter4j.conf.ConfigurationBuilder;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.SharedPreferences.Editor;\r\nimport android.net.Uri;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.os.StrictMode;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.View.OnClickListener;\r\nimport android.widget.EditText;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\npublic class MainActivity extends Activity implements OnClickListener {\r\n\t\r\n\t\/* Shared preference keys *\/\r\n\tprivate static final String PREF_NAME = \"sample_twitter_pref\";\r\n\tprivate static final String PREF_KEY_OAUTH_TOKEN = \"oauth_token\";\r\n\tprivate static final String PREF_KEY_OAUTH_SECRET = \"oauth_token_secret\";\r\n\tprivate static final String PREF_KEY_TWITTER_LOGIN = \"is_twitter_loggedin\";\r\n\tprivate static final String PREF_USER_NAME = \"twitter_user_name\";\r\n\r\n\t\/* Any number for uniquely distinguish your request *\/\r\n\tpublic static final int WEBVIEW_REQUEST_CODE = 100;\r\n\r\n\tprivate ProgressDialog pDialog;\r\n\r\n\tprivate static Twitter twitter;\r\n\tprivate static RequestToken requestToken;\r\n\t\r\n\tprivate static SharedPreferences mSharedPreferences;\r\n\r\n\tprivate EditText mShareEditText;\r\n\tprivate TextView userName;\r\n\tprivate View loginLayout;\r\n\tprivate View shareLayout;\r\n\r\n\tprivate String consumerKey = null;\r\n\tprivate String consumerSecret = null;\r\n\tprivate String callbackUrl = null;\r\n\tprivate String oAuthVerifier = null;\r\n\r\n\t@SuppressLint(\"NewApi\")\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\r\n\t\t\/* initializing twitter parameters from string.xml *\/\r\n\t\tinitTwitterConfigs();\r\n\r\n\t\t\/* Enabling strict mode *\/\r\n\t\tStrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n\t\tStrictMode.setThreadPolicy(policy);\r\n\r\n\t\t\/* Setting activity layout file *\/\r\n\t\tsetContentView(R.layout.activity_main);\r\n\r\n\t\tloginLayout = (RelativeLayout) findViewById(R.id.login_layout);\r\n\t\tshareLayout = (LinearLayout) findViewById(R.id.share_layout);\r\n\t\tmShareEditText = (EditText) findViewById(R.id.share_text);\r\n\t\tuserName = (TextView) findViewById(R.id.user_name);\r\n\t\t\r\n\t\t\/* register button click listeners *\/\r\n\t\tfindViewById(R.id.btn_login).setOnClickListener(this);\r\n\t\tfindViewById(R.id.btn_share).setOnClickListener(this);\r\n\r\n\t\t\/* Check if required twitter keys are set *\/\r\n\t\tif (TextUtils.isEmpty(consumerKey) || TextUtils.isEmpty(consumerSecret)) {\r\n\t\t\tToast.makeText(this, \"Twitter key and secret not configured\",\r\n\t\t\t\t\tToast.LENGTH_SHORT).show();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t\/* Initialize application preferences *\/\r\n\t\tmSharedPreferences = getSharedPreferences(PREF_NAME, 0);\r\n\r\n\t\tboolean isLoggedIn = mSharedPreferences.getBoolean(PREF_KEY_TWITTER_LOGIN, false);\r\n\t\t\r\n\t\t\/*  if already logged in, then hide login layout and show share layout *\/\r\n\t\tif (isLoggedIn) {\r\n\t\t\tloginLayout.setVisibility(View.GONE);\r\n\t\t\tshareLayout.setVisibility(View.VISIBLE);\r\n\r\n\t\t\tString username = mSharedPreferences.getString(PREF_USER_NAME, \"\");\r\n\t\t\tuserName.setText(getResources ().getString(R.string.hello)\r\n\t\t\t\t\t+ username);\r\n\r\n\t\t} else {\r\n\t\t\tloginLayout.setVisibility(View.VISIBLE);\r\n\t\t\tshareLayout.setVisibility(View.GONE);\r\n\r\n\t\t\tUri uri = getIntent().getData();\r\n\t\t\t\r\n\t\t\tif (uri != null &amp;&amp; uri.toString().startsWith(callbackUrl)) {\r\n\t\t\t\r\n\t\t\t\tString verifier = uri.getQueryParameter(oAuthVerifier);\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\/* Getting oAuth authentication token *\/\r\n\t\t\t\t\tAccessToken accessToken = twitter.getOAuthAccessToken(requestToken, verifier);\r\n\r\n\t\t\t\t\t\/* Getting user id form access token *\/\r\n\t\t\t\t\tlong userID = accessToken.getUserId();\r\n\t\t\t\t\tfinal User user = twitter.showUser(userID);\r\n\t\t\t\t\tfinal String username = user.getName();\r\n\r\n\t\t\t\t\t\/* save updated token *\/\r\n\t\t\t\t\tsaveTwitterInfo(accessToken);\r\n\r\n\t\t\t\t\tloginLayout.setVisibility(View.GONE);\r\n\t\t\t\t\tshareLayout.setVisibility(View.VISIBLE);\r\n\t\t\t\t\tuserName.setText(getString(R.string.hello) + username);\r\n\t\t\t\t\t\r\n\t\t\t\t} catch (Exception e) {\r\n\t\t\t\t\tLog.e(\"Failed to login Twitter!!\", e.getMessage());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\t\/**\r\n\t * Saving user information, after user is authenticated for the first time.\r\n\t * You don't need to show user to login, until user has a valid access toen\r\n\t *\/\r\n\tprivate void saveTwitterInfo(AccessToken accessToken) {\r\n\t\t\r\n\t\tlong userID = accessToken.getUserId();\r\n\t\t\r\n\t\tUser user;\r\n\t\ttry {\r\n\t\t\tuser = twitter.showUser(userID);\r\n\t\t\r\n\t\t\tString username = user.getName();\r\n\r\n\t\t\t\/* Storing oAuth tokens to shared preferences *\/\r\n\t\t\tEditor e = mSharedPreferences.edit();\r\n\t\t\te.putString(PREF_KEY_OAUTH_TOKEN, accessToken.getToken());\r\n\t\t\te.putString(PREF_KEY_OAUTH_SECRET, accessToken.getTokenSecret());\r\n\t\t\te.putBoolean(PREF_KEY_TWITTER_LOGIN, true);\r\n\t\t\te.putString(PREF_USER_NAME, username);\r\n\t\t\te.commit();\r\n\r\n\t\t} catch (TwitterException e1) {\r\n\t\t\te1.printStackTrace();\r\n\t\t}\r\n\t}\r\n\r\n\t\/* Reading twitter essential configuration parameters from strings.xml *\/\r\n\tprivate void initTwitterConfigs() {\r\n\t\tconsumerKey = getString(R.string.twitter_consumer_key);\r\n\t\tconsumerSecret = getString(R.string.twitter_consumer_secret);\r\n\t\tcallbackUrl = getString(R.string.twitter_callback);\r\n\t\toAuthVerifier = getString(R.string.twitter_oauth_verifier);\r\n\t}\r\n\r\n\t\r\n\tprivate void loginToTwitter() {\r\n\t\tboolean isLoggedIn = mSharedPreferences.getBoolean(PREF_KEY_TWITTER_LOGIN, false);\r\n\t\t\r\n\t\tif (!isLoggedIn) {\r\n\t\t\tfinal ConfigurationBuilder builder = new ConfigurationBuilder();\r\n\t\t\tbuilder.setOAuthConsumerKey(consumerKey);\r\n\t\t\tbuilder.setOAuthConsumerSecret(consumerSecret);\r\n\r\n\t\t\tfinal Configuration configuration = builder.build();\r\n\t\t\tfinal TwitterFactory factory = new TwitterFactory(configuration);\r\n\t\t\ttwitter = factory.getInstance();\r\n\r\n\t\t\ttry {\r\n\t\t\t\trequestToken = twitter.getOAuthRequestToken(callbackUrl);\r\n\r\n\t\t\t\t\/**\r\n\t\t\t\t *  Loading twitter login page on webview for authorization \r\n\t\t\t\t *  Once authorized, results are received at onActivityResult\r\n\t\t\t\t *  *\/\r\n\t\t\t\tfinal Intent intent = new Intent(this, WebViewActivity.class);\r\n\t\t\t\tintent.putExtra(WebViewActivity.EXTRA_URL, requestToken.getAuthenticationURL());\r\n\t\t\t\tstartActivityForResult(intent, WEBVIEW_REQUEST_CODE);\r\n\t\t\t\t\r\n\t\t\t} catch (TwitterException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tloginLayout.setVisibility(View.GONE);\r\n\t\t\tshareLayout.setVisibility(View.VISIBLE);\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n\r\n\t\tif (resultCode == Activity.RESULT_OK) {\r\n\t\t\tString verifier = data.getExtras().getString(oAuthVerifier);\r\n\t\t\ttry {\r\n\t\t\t\tAccessToken accessToken = twitter.getOAuthAccessToken(requestToken, verifier);\r\n\r\n\t\t\t\tlong userID = accessToken.getUserId();\r\n\t\t\t\tfinal User user = twitter.showUser(userID);\r\n\t\t\t\tString username = user.getName();\r\n\t\t\t\t\r\n\t\t\t\tsaveTwitterInfo(accessToken);\r\n\r\n\t\t\t\tloginLayout.setVisibility(View.GONE);\r\n\t\t\t\tshareLayout.setVisibility(View.VISIBLE);\r\n\t\t\t\tuserName.setText(MainActivity.this.getResources().getString(\r\n\t\t\t\t\t\tR.string.hello) + username);\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tLog.e(\"Twitter Login Failed\", e.getMessage());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void onClick(View v) {\r\n\t\tswitch (v.getId()) {\r\n\t\tcase R.id.btn_login:\r\n\t\t\tloginToTwitter();\r\n\t\t\tbreak;\r\n\t\tcase R.id.btn_share:\r\n\t\t\tfinal String status = mShareEditText.getText().toString();\r\n\t\t\t\r\n\t\t\tif (status.trim().length() &gt; 0) {\r\n\t\t\t\tnew updateTwitterStatus().execute(status);\r\n\t\t\t} else {\r\n\t\t\t\tToast.makeText(this, \"Message is empty!!\", Toast.LENGTH_SHORT).show();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tclass updateTwitterStatus extends AsyncTask&lt;String, String, Void&gt; {\r\n\t\t@Override\r\n\t\tprotected void onPreExecute() {\r\n\t\t\tsuper.onPreExecute();\r\n\t\t\t\r\n\t\t\tpDialog = new ProgressDialog(MainActivity.this);\r\n\t\t\tpDialog.setMessage(\"Posting to twitter...\");\r\n\t\t\tpDialog.setIndeterminate(false);\r\n\t\t\tpDialog.setCancelable(false);\r\n\t\t\tpDialog.show();\r\n\t\t}\r\n\r\n\t\tprotected Void doInBackground(String... args) {\r\n\r\n\t\t\tString status = args[0];\r\n\t\t\ttry {\r\n\t\t\t\tConfigurationBuilder builder = new ConfigurationBuilder();\r\n\t\t\t\tbuilder.setOAuthConsumerKey(consumerKey);\r\n\t\t\t\tbuilder.setOAuthConsumerSecret(consumerSecret);\r\n\t\t\t\t\r\n\t\t\t\t\/\/ Access Token\r\n\t\t\t\tString access_token = mSharedPreferences.getString(PREF_KEY_OAUTH_TOKEN, \"\");\r\n\t\t\t\t\/\/ Access Token Secret\r\n\t\t\t\tString access_token_secret = mSharedPreferences.getString(PREF_KEY_OAUTH_SECRET, \"\");\r\n\r\n\t\t\t\tAccessToken accessToken = new AccessToken(access_token, access_token_secret);\r\n\t\t\t\tTwitter twitter = new TwitterFactory(builder.build()).getInstance(accessToken);\r\n\r\n\t\t\t\t\/\/ Update status\r\n\t\t\t\tStatusUpdate statusUpdate = new StatusUpdate(status);\r\n\t\t\t\tInputStream is = getResources().openRawResource(R.drawable.lakeside_view);\r\n\t\t\t\tstatusUpdate.setMedia(\"test.jpg\", is);\r\n\t\t\t\t\r\n\t\t\t\ttwitter4j.Status response = twitter.updateStatus(statusUpdate);\r\n\r\n\t\t\t\tLog.d(\"Status\", response.getText());\r\n\t\t\t\t\r\n\t\t\t} catch (TwitterException e) {\r\n\t\t\t\tLog.d(\"Failed to post!\", e.getMessage());\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tprotected void onPostExecute(Void result) {\r\n\t\t\t\r\n\t\t\t\/* Dismiss the progress dialog after sharing *\/\r\n\t\t\tpDialog.dismiss();\r\n\t\t\t\r\n\t\t\tToast.makeText(MainActivity.this, \"Posted to Twitter!\", Toast.LENGTH_SHORT).show();\r\n\r\n\t\t\t\/\/ Clearing EditText field\r\n\t\t\tmShareEditText.setText(\"\");\r\n\t\t}\r\n\r\n\t}\r\n}\r\n<\/pre>\n<h4>WebViewActivity.java<\/h4>\n<pre class=\"prettyprint lang-java\">package com.example.twittershare;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.webkit.WebView;\r\nimport android.webkit.WebViewClient;\r\n\r\npublic class WebViewActivity extends Activity {\r\n\t\r\n\tprivate WebView webView;\r\n\t\r\n\tpublic static String EXTRA_URL = \"extra_url\";\r\n\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\t\r\n\t\tsetContentView(R.layout.activity_webview);\r\n\t\t\r\n\t\tsetTitle(\"Login\");\r\n\r\n\t\tfinal String url = this.getIntent().getStringExtra(EXTRA_URL);\r\n\t\tif (null == url) {\r\n\t\t\tLog.e(\"Twitter\", \"URL cannot be null\");\r\n\t\t\tfinish();\r\n\t\t}\r\n\r\n\t\twebView = (WebView) findViewById(R.id.webView);\r\n\t\twebView.setWebViewClient(new MyWebViewClient());\r\n\t\twebView.loadUrl(url);\r\n\t}\r\n\r\n\r\n\tclass MyWebViewClient extends WebViewClient {\r\n\t\t\r\n\t\t@Override\r\n\t\tpublic boolean shouldOverrideUrlLoading(WebView view, String url) {\r\n\r\n\t\t\tif (url.contains(getResources().getString(R.string.twitter_callback))) {\r\n\t\t\t\tUri uri = Uri.parse(url);\r\n\t\t\t\t\r\n\t\t\t\t\/* Sending results back *\/\r\n\t\t\t\tString verifier = uri.getQueryParameter(getString(R.string.twitter_oauth_verifier));\r\n\t\t\t\tIntent resultIntent = new Intent();\r\n\t\t\t\tresultIntent.putExtra(getString(R.string.twitter_oauth_verifier), verifier);\r\n\t\t\t\tsetResult(RESULT_OK, resultIntent);\r\n\t\t\t\t\r\n\t\t\t\t\/* closing webview *\/\r\n\t\t\t\tfinish();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n<\/pre>\n<h1>5. Output<\/h1>\n<p><center><a href=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-11-at-12.16.37-AM.png\"><img class=\"alignnone size-full wp-image-5708\" src=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-11-at-12.16.37-AM.png\" alt=\"How to integrate twitter in android application\" width=\"526\" height=\"384\" srcset=\"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-11-at-12.16.37-AM.png 526w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-11-at-12.16.37-AM-300x219.png 300w, http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-11-at-12.16.37-AM-370x270.png 370w\" sizes=\"(max-width: 526px) 100vw, 526px\" \/><\/a><\/center><\/p>\n<h1>6. Download Source Code<\/h1>\n<p>Download complete example source code from\u00a0<strong><a href=\"https:\/\/github.com\/javatechig\/Twitter-Sharing-Example-Android\" target=\"_blank\">GitHub<\/a><\/strong>.<\/p>\n","excerpt":"<p>This tutorial explains, how to integrate twitter in android application. The example below using twitter4j java library for login to twitter and allows to share a simple text post and image post in users twitters timeline.<\/p>\n","date":"2014-09-12 18:00:34","modified":"2015-02-17 20:18:08","categories":[{"id":237,"slug":"android","title":"Android","description":"Android Development tutorials covers a wide range of topics including basics Android concepts, building UI layouts, and some of the advance concepts used for developing for Android apps. This page lists all recent tutorials we have on our website. For learning chapter by chapter from start you can visit <a href=\"http:\/\/stacktips.com\/android-tutorials\">here<\/a>.\r\n\r\nSupport us by sharing this page on your social networks.","parent":297,"post_count":112}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":7654,"name":"Nybler","url":"","date":"2014-10-24 12:16:00","content":"<p>Thank You. This code works perfectly.<\/p>\n","parent":0},{"id":7677,"name":"javatechig","url":"http:\/\/stacktips.com\/","date":"2014-11-23 10:51:00","content":"<p>Thanks Arrturo. By the way you can find me from my author profile.<\/p>\n","parent":0},{"id":7679,"name":"javatechig","url":"http:\/\/stacktips.com\/","date":"2014-11-23 10:54:00","content":"<p>Thanks for sharing your experience.<\/p>\n","parent":0},{"id":7685,"name":"javatechig","url":"http:\/\/stacktips.com\/","date":"2014-11-23 11:32:00","content":"<p>Please check if your device date and time is set to appropriate. <\/p>\n","parent":0},{"id":7777,"name":"BINIL S","url":"","date":"2015-02-03 16:09:00","content":"<p>I tried the app by using my own  &#8220;Consumer Key&#8221; and &#8220;Consumer Secret Key&#8221;. At that time am getting 401 Authentication error.I put the correct &#8220;key&#8221; and the time is syncing.<\/p>\n<p>But by using the your &#8220;Key&#8221; the app is perfectly working.<br \/>\nCan you please tell me where I was wrong<\/p>\n","parent":0},{"id":7780,"name":"JavaTechig","url":"http:\/\/stacktips.com\/","date":"2015-02-03 22:09:00","content":"<p>Did you create your fresh set of keys? if yes, it takes a while  to get live. <\/p>\n","parent":7777},{"id":7782,"name":"BINIL S","url":"","date":"2015-02-04 11:50:00","content":"<p>OK, will it get any conformation message after its getting live<\/p>\n","parent":7780},{"id":7787,"name":"JavaTechig","url":"http:\/\/stacktips.com\/","date":"2015-02-04 15:00:00","content":"<p>Alright!<\/p>\n","parent":7782},{"id":7806,"name":"Eng Mohammad Rababah","url":"","date":"2015-02-17 20:05:00","content":"<p>hi javatechig<\/p>\n<p>I am using your code but my question is: How I can logout from twitter?<\/p>\n<p>thanks in advance<\/p>\n","parent":0},{"id":7807,"name":"JavaTechig","url":"http:\/\/stacktips.com\/","date":"2015-02-17 20:22:00","content":"<p>The following code will help<\/p>\n<p>CookieSyncManager.createInstance(this);<br \/>\nCookieManager cookieManager = CookieManager.getInstance();<br \/>\ncookieManager.removeSessionCookie();<\/p>\n<p>twitter.setOAuthAccessToken(null);<br \/>\ntwitter.shutdown();<\/p>\n","parent":7806},{"id":7808,"name":"JavaTechig","url":"http:\/\/stacktips.com\/","date":"2015-02-17 20:23:00","content":"<p>Updated with comment. Please check <\/p>\n","parent":0},{"id":7923,"name":"Lakshmana Raja Makineedi","url":"","date":"2015-03-18 19:55:00","content":"<p>Thank You so much for this tutorial , this helped me a lot  and i want Facebook integration also can you send that link please . and your code is perfectly working.<\/p>\n","parent":0},{"id":7924,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-18 20:24:00","content":"<p>Checkout <a href=\"http:\/\/stacktips.com\/android\/using-facebook-sdk-in-android-example\" rel=\"nofollow\">Using Facebook SDK in Android Example<\/a> tutorial .<\/p>\n","parent":7923},{"id":7932,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-20 18:18:00","content":"<p>quite easy. Just use the code below. It should work<\/p>\n<p>twitter.createFriendship(&#8220;javatechig&#8221;)<\/p>\n","parent":0},{"id":7945,"name":"Priyanka","url":"","date":"2015-03-24 15:54:00","content":"<p>thanks. But where can i add this code? please explain<\/p>\n","parent":7932},{"id":7946,"name":"Nilanchala Panigrahy","url":"","date":"2015-03-24 19:05:00","content":"<p>Add this after twitter authentication is done. Instead of <code>updateTwitterStatus()<\/code> you can use <code>twitter.createFriendship()<\/code> method.<\/p>\n","parent":7945},{"id":7999,"name":"Joy","url":"","date":"2015-05-13 12:46:00","content":"<p>Thanks for Working and Simple example..I am newbie i want to login into app via twitter..What do i have to change for that,any suggestions will be helpful<br \/>\nThanks in Advance<\/p>\n","parent":0},{"id":8008,"name":"anii","url":"","date":"2015-05-20 19:16:00","content":"<p>thanks alotttt works like charm \ud83d\ude42<\/p>\n","parent":0},{"id":8020,"name":"Anand Kumar","url":"","date":"2015-06-02 15:43:00","content":"<p>awsome tutorial thanks a lot sir<\/p>\n","parent":0},{"id":8037,"name":"Jaideep Gupta","url":"","date":"2015-06-15 12:37:00","content":"<p>Hello Sir<br \/>\nthis code works for me but I want to get Twitter friend list. How is it possible?<\/p>\n","parent":0},{"id":8038,"name":"Jaideep Gupta","url":"","date":"2015-06-15 13:00:00","content":"<p>Thank sir this code works for me<br \/>\nbut also i want to get twitter friend list. how is it done<\/p>\n","parent":0},{"id":8062,"name":"Astha Dangi","url":"","date":"2015-07-03 11:08:00","content":"<p>Thanks sir this code is really help full for me<br \/>\nbut i want to extract user information and then return to my app. how it is done&#8230; plss help<\/p>\n","parent":0},{"id":8295,"name":"Hamza Anas","url":"","date":"2015-11-02 19:46:00","content":"<p>I&#8217;ve used your code and it works great but you havent explained a lot of your java code. It would have been helpful to know what these methods and reserved keywords are and how to use them.<\/p>\n","parent":0},{"id":8310,"name":"Tech Morphosis","url":"","date":"2015-11-19 11:28:00","content":"<p>hurrreyyyyyyy &#8230; happy . Thanks dude .. keep going<\/p>\n","parent":0},{"id":8354,"name":"Nilanchala Panigrahy","url":"http:\/\/stacktips.com","date":"2015-12-23 18:20:00","content":"<p>you need to import twitter4j library. <\/p>\n","parent":0},{"id":8392,"name":"raman rayat","url":"","date":"2016-02-21 12:03:00","content":"<p>hi thanks for tutorial but after login my app is moving to call back url it is not coming back and showing share layout screen after loging &#8230;please help me<\/p>\n","parent":0},{"id":8400,"name":"Aryan Roy","url":"","date":"2016-02-25 11:42:00","content":"<p>great&#8230;code it really helpful!!<br \/>\nBut i faced some fabric installation issue which solved on below blog. <a href=\"http:\/\/androidtechtutorials.blogspot.in\/\" rel=\"nofollow\">http:\/\/androidtechtutorials.blogspot.in\/<\/a><br \/>\nvery helpful blog for social login&#8230;.step by step explaination.<\/p>\n","parent":0},{"id":8401,"name":"Aryan Roy","url":"","date":"2016-02-25 12:17:00","content":"<p>great code but i want for studio in fabric which i found on below link.<\/p>\n<p><a href=\"http:\/\/androidtechtutorials.blogspot.in\/\" rel=\"nofollow\">http:\/\/androidtechtutorials.blogspot.in\/<\/a><\/p>\n<p>gr8 code  step by step explanation.<\/p>\n","parent":0},{"id":8444,"name":"ombalakumar","url":"","date":"2016-03-14 15:32:00","content":"<p>i am getting error in getInstance(), removeSessionCookie() and shutdown()<\/p>\n","parent":7807}],"attachments":[{"id":5692,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Create-new-application-in-twitter-console.png","slug":"create-new-application-in-twitter-console","title":"Create new application in twitter console","description":"Create new application in twitter console","caption":"","parent":5386,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Create-new-application-in-twitter-console.png","width":633,"height":570},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Create-new-application-in-twitter-console-620x558.png","width":620,"height":558},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Create-new-application-in-twitter-console.png","width":633,"height":570},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Create-new-application-in-twitter-console.png","width":633,"height":570},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Create-new-application-in-twitter-console.png","width":633,"height":570},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Create-new-application-in-twitter-console.png","width":633,"height":570}}},{"id":5708,"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-11-at-12.16.37-AM.png","slug":"screen-shot-2014-09-11-at-12-16-37-am","title":"How to integrate twitter in android application","description":"How to integrate twitter in android application","caption":"Android Tutorials","parent":5386,"mime_type":"image\/png","images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-11-at-12.16.37-AM.png","width":526,"height":384},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-11-at-12.16.37-AM.png","width":526,"height":384},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-11-at-12.16.37-AM.png","width":526,"height":384},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-11-at-12.16.37-AM.png","width":526,"height":384},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-11-at-12.16.37-AM.png","width":526,"height":384},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-11-at-12.16.37-AM.png","width":526,"height":384},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Screen-Shot-2014-09-11-at-12.16.37-AM.png","width":526,"height":384}}}],"comment_count":29,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-09-12 12:30:54\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"c29bf152655f9adba6f77f227eb977b3\";s:5:\"pDate\";s:19:\"2014-09-12 12:30:59\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_883646304980958\";s:5:\"pDate\";s:19:\"2014-09-12 12:31:05\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"771aJB\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/771aJB\/comments\";s:5:\"pDate\";s:19:\"2014-09-12 12:31:09\";}}\";"],"fsb_social_facebook":["6"],"fsb_social_twitter":["7"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:97296928771;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/97296928771\";s:5:\"pDate\";s:19:\"2014-09-12 12:31:12\";}}\";"],"snap_isAutoPosted":["1"],"snapTW":["s:271:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:8:\"attchImg\";s:1:\"0\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"510405269583446016\";s:5:\"pDate\";s:19:\"2014-09-12 12:31:13\";}}\";"],"dsq_thread_id":["3011329758"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"cf_url":[""],"post_views_count":["8078"]},"thumbnail_size":"thumbnail","thumbnail_images":[]},{"id":5680,"type":"post","slug":"count-line-word-characters-file","url":"http:\/\/stacktips.com\/random\/count-line-word-characters-file","status":"publish","title":"Count line word and characters in file","title_plain":"Count line word and characters in file","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='Count line word and characters in file' data-link='http:\/\/stacktips.com\/random\/count-line-word-characters-file' data-summary=''><\/div>\n<p>In this example we&#8217;ll see how to count line, word and characters in file.<\/p>\n<pre class=\"prettyprint lang-java\">package com.javatechig;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.io.LineNumberReader;\r\n\r\npublic class FileCountExample {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tFile file = new File(\"file1.txt\");\r\n\r\n\t\tif (file.exists()) {\r\n\t\t\tSystem.out.println(\"Total Lines=\" + getLineCount(file));\r\n\t\t\tSystem.out.println(\"Total Words=\" + getWordCount(file));\r\n\t\t\tSystem.out.println(\"Total Characters=\" + getCharacterCount(file));\r\n\t\t} else {\r\n\t\t\tSystem.out.println(\"File does not exists!\");\r\n\t\t}\r\n\t}\r\n\r\n\t\/**\r\n\t * Use a BufferedReader to read the file line-by-line using readLine(). Then\r\n\t * split each line on whitespace using String.split(\"\\\\s\") and the size of\r\n\t * the resulting array is the total words count.\r\n\t *\/\r\n\tprivate static int getWordCount(File file) {\r\n\t\tint count = 0;\r\n\t\ttry {\r\n\t\t\tFileReader fr = new FileReader(file);\r\n\t\t\tBufferedReader br = new BufferedReader(fr);\r\n\r\n\t\t\tString line = br.readLine();\r\n\t\t\twhile (line != null) {\r\n\t\t\t\tString[] parts = line.split(\" \");\r\n\t\t\t\tfor (String w : parts) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t\tline = br.readLine();\r\n\t\t\t}\r\n\r\n\t\t} catch (FileNotFoundException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\r\n\t}\r\n\r\n\tprivate static int getCharacterCount(File file) {\r\n\t\tFileReader fr = null;\r\n\t\tint charCount = 0;\r\n\r\n\t\ttry {\r\n                    fr = new FileReader(file);\r\n\t\t    while (fr.read() &gt; -1) {\r\n\t\t       charCount++;\r\n   \t\t    }\r\n\r\n\t\t} catch (FileNotFoundException e1) {\r\n\t\t\te1.printStackTrace();\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\r\n\t\tfinally {\r\n                   if (null != fr)\r\n                \ttry {\r\n                           fr.close();\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t     e.printStackTrace();\r\n\t\t     }\r\n\t\t}\r\n\t\treturn charCount;\r\n\t}\r\n\r\n\tprivate static int getLineCount(File file) {\r\n\t\tint linenumber = 0;\r\n\t\tFileReader fr = null;\r\n\t\ttry {\r\n\t\t\tfr = new FileReader(file);\r\n\r\n\t\t\t\/**\r\n\t\t\t * buffered character-input stream that keeps track of line numbers\r\n\t\t\t *\/\r\n\t\t\tLineNumberReader lnr = new LineNumberReader(fr);\r\n\t\t\twhile (lnr.readLine() != null) {\r\n\t\t\t\tlinenumber++;\r\n\t\t\t}\r\n\t\t\tlnr.close();\r\n\r\n\t\t\treturn linenumber;\r\n\t\t} catch (FileNotFoundException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\r\n\t\tfinally {\r\n\t\t\tif (null != fr)\r\n\t\t\t   try {\r\n\t\t\t\tr.close();\r\n\t\t\t   } catch (IOException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn linenumber;\r\n\t}\r\n}<\/pre>\n","excerpt":"<p>In this example we&#8217;ll see how to count line, word and characters in file. package com.javatechig; import java.io.BufferedReader; import java.io.File; import java.io.FileNotFoundException; import java.io.FileReader; import java.io.IOException; import java.io.LineNumberReader; public class FileCountExample { public static void main(String[] args) { File file = new File(&#8220;file1.txt&#8221;); if (file.exists()) { System.out.println(&#8220;Total Lines=&#8221; + getLineCount(file)); System.out.println(&#8220;Total Words=&#8221; + getWordCount(file)); System.out.println(&#8220;Total [&hellip;]<\/p>\n","date":"2014-09-11 09:13:45","modified":"2015-07-29 20:52:35","categories":[{"id":1,"slug":"random","title":"Random","description":"","parent":0,"post_count":39}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"snap_isAutoPosted":["1"],"fsb_social_facebook":["1"],"fsb_social_twitter":["2"],"fsb_social_google":["1"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"dsq_thread_id":["3009430953"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-09-11 09:14:02\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"5dCfiO\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/5dCfiO\/comments\";s:5:\"pDate\";s:19:\"2014-09-11 09:14:16\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:97208213191;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/97208213191\";s:5:\"pDate\";s:19:\"2014-09-11 09:14:17\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["5992"],"cf_url":[""],"snap_MYURL":[""],"snapEdIT":["1"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"b8488f4e550b3c3d6c66a56c522a7a1d\";s:5:\"pDate\";s:19:\"2014-09-11 09:14:07\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_883189871693268\";s:5:\"pDate\";s:19:\"2014-09-11 09:14:13\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapTW":["s:271:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:8:\"attchImg\";s:1:\"0\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"509993324225130496\";s:5:\"pDate\";s:19:\"2014-09-11 09:14:17\";}}\";"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-620x380.jpg","width":620,"height":380},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150}}},{"id":5675,"type":"post","slug":"how-to-delete-and-rename-a-file-in-java","url":"http:\/\/stacktips.com\/random\/how-to-delete-and-rename-a-file-in-java","status":"publish","title":"How to delete and rename a file in java","title_plain":"How to delete and rename a file in java","content":"<div class='shareaholic-canvas' data-app-id='24995492' data-app='share_buttons' data-title='How to delete and rename a file in java' data-link='http:\/\/stacktips.com\/random\/how-to-delete-and-rename-a-file-in-java' data-summary=''><\/div>\n<p>This post provides sample program explaining\u00a0how to delete and rename a file in java<\/p>\n<h3>Rename file in Java<\/h3>\n<pre class=\"prettyprint lang-java\">package com.javatechig;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\npublic class RenameFile {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\t\/* File (or directory) with old name *\/\r\n\t\tFile file = new File(\"\/Users\/Neel\/Documents\/Workspace\/file.txt\");\r\n\r\n\t\t\/* File (or directory) with new name *\/\r\n\t\tFile file2 = new File(\"\/Users\/Neel\/Documents\/Workspace\/new-file.txt\");\r\n\r\n\t\tif (file2.exists()) {\r\n\t\t\ttry {\r\n\t\t\t\tthrow new java.io.IOException(\"File already exists!\");\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t\/* Rename file *\/\r\n\t\tboolean success = file.renameTo(file2);\r\n\t\tif (!success) {\r\n\t\t\tSystem.out.println(\"Couldn't rename file!\");\r\n\t\t} else {\r\n\t\t\tSystem.out.println(\"File renamed successfully!\");\r\n\t\t}\r\n\t}\r\n\r\n}<\/pre>\n<h3>Delete file in Java<\/h3>\n<pre class=\"prettyprint lang-java\">package com.javatechig;\r\n\r\nimport java.io.File;\r\n\r\npublic class DeleteFile {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\ttry {\r\n\t\t\tFile file = new File(\r\n\t\t\t\t\t\"\/Users\/Neel\/Documents\/Workspace\/file1.txt\");\r\n\r\n\t\t\tif (file.delete()) {\r\n\t\t\t\tSystem.out.println(file.getName() + \" is deleted!\");\r\n\t\t\t} else {\r\n\t\t\t\tSystem.out.println(\"Delete operation is failed.\");\r\n\t\t\t}\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n<\/pre>\n","excerpt":"<p>This post provides sample program explaining\u00a0how to delete and rename a file in java Rename file in Java package com.javatechig; import java.io.File; import java.io.IOException; public class RenameFile { public static void main(String[] args) { \/* File (or directory) with old name *\/ File file = new File(&#8220;\/Users\/Neel\/Documents\/Workspace\/file.txt&#8221;); \/* File (or directory) with new name *\/ [&hellip;]<\/p>\n","date":"2014-09-10 14:02:49","modified":"2014-09-27 16:22:30","categories":[{"id":1,"slug":"random","title":"Random","description":"","parent":0,"post_count":39}],"tags":[],"author":{"id":12,"slug":"nilanchala","name":"Nilanchala","first_name":"Nilanchala","last_name":"Panigrahy","nickname":"Neel","url":"http:\/\/stacktips.com","description":"A blogger, a bit of tech freak and a software developer. He is a thought leader in the fusion of design and mobile technologies.  Author of <a href=\"https:\/\/www.amazon.co.uk\/Xamarin-Mobile-Application-Development-Android\/dp\/1785280376\/280-3721224-4790423\" rel=\"nofollow\">Xamarin Mobile Application Development for Android<\/a> book, DZone MVB and founder of <a href=\"http:\/\/stacktips.com\/\">stacktips.com<\/a>."},"comments":[{"id":8312,"name":"Shivam Singh","url":"http:\/\/javaproficiency.com","date":"2015-11-21 00:21:00","content":"<p>Nice post and also visit simple code for delete a file in java <a href=\"http:\/\/tinyurl.com\/javatechig\" rel=\"nofollow\"> Delete file in java <\/a><\/p>\n","parent":0}],"attachments":[],"comment_count":1,"comment_status":"open","thumbnail":null,"custom_fields":{"post_options":["a:5:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";s:8:\"pf_video\";s:0:\"\";s:8:\"ad_above\";s:0:\"\";s:8:\"ad_below\";s:0:\"\";}"],"page_options":["a:2:{s:8:\"sb_usage\";s:15:\"default-sidebar\";s:9:\"hwa_usage\";s:17:\"default-headerbar\";}"],"fsb_show_social":["0"],"snap_isAutoPosted":["1"],"fsb_social_facebook":["3"],"fsb_social_twitter":["2"],"fsb_social_google":["0"],"fsb_social_linkedin":["0"],"fsb_social_pinterest":["0"],"dsq_thread_id":["3010268550"],"snap_MYURL":[""],"snapEdIT":["1"],"snapBG":["s:164:\"a:1:{i:0;a:4:{s:4:\"doBG\";s:1:\"1\";s:11:\"SNAPTformat\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:43:\"%FULLTEXT% <br\/><a href='%URL%'>%TITLE%<\/a>\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDA":["s:131:\"a:1:{i:0;a:4:{s:4:\"doDA\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:10:\"%FULLTEXT%\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapDI":["s:215:\"a:1:{i:0;a:7:{s:4:\"doDI\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:2:\"DI\";s:5:\"pDate\";s:19:\"2014-09-10 14:02:55\";}}\";"],"snapDL":["s:246:\"a:1:{i:0;a:7:{s:4:\"doDL\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:12:\"%RAWEXCERPT%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:32:\"7daea8863548c282e1e97c08765177ca\";s:5:\"pDate\";s:19:\"2014-09-10 14:03:05\";}}\";"],"snapFB":["s:374:\"a:1:{i:0;a:12:{s:4:\"doFB\";s:1:\"1\";s:8:\"postType\";s:1:\"A\";s:10:\"AttachPost\";s:1:\"2\";s:10:\"SNAPformat\";s:32:\"%TITLE% - %CATS%\r\n\r\n%RAWEXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:31:\"228850867127175_882830398395882\";s:5:\"pDate\";s:19:\"2014-09-10 14:03:11\";}}\";"],"snapFF":["s:155:\"a:1:{i:0;a:5:{s:4:\"doFF\";s:1:\"1\";s:8:\"attchImg\";s:1:\"0\";s:10:\"SNAPformat\";s:25:\"%TITLE% - %URL% %EXCERPT%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";}}\";"],"snapIP":["s:102:\"a:1:{i:0;a:3:{s:4:\"doIP\";s:1:\"1\";s:11:\"SNAPformatT\";s:7:\"%TITLE%\";s:10:\"SNAPformat\";s:9:\"%EXCERPT%\";}}\";"],"snapLI":["s:292:\"a:1:{i:0;a:9:{s:4:\"doLI\";s:1:\"1\";s:10:\"AttachPost\";s:1:\"1\";s:10:\"SNAPformat\";s:41:\"New post has been published on %SITENAME%\";s:11:\"SNAPformatT\";s:18:\"New Post - %TITLE%\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";}}\";"],"snapSU":["s:312:\"a:1:{i:0;a:9:{s:4:\"doSU\";s:1:\"1\";s:7:\"apSUCat\";s:10:\"Technology\";s:4:\"nsfw\";s:1:\"0\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:6:\"1WxdKX\";s:7:\"postURL\";s:50:\"http:\/\/www.stumbleupon.com\/content\/1WxdKX\/comments\";s:5:\"pDate\";s:19:\"2014-09-10 14:03:16\";}}\";"],"snapTR":["s:552:\"a:1:{i:0;a:13:{s:4:\"doTR\";s:1:\"1\";s:12:\"apTRPostType\";s:1:\"T\";s:11:\"SNAPTformat\";s:20:\"%TITLE% - %SITENAME%\";s:10:\"SNAPformat\";s:141:\"<blockquote><p>New Post has been published on %URL%<\/p><\/blockquote><p><strong>%TITLE%<\/strong><\/p><p><img src='%IMG%'\/><\/p><p>%FULLTEXT%<\/p>\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:9:\"isAutoURL\";s:1:\"A\";s:8:\"urlToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";i:97138404376;s:7:\"postURL\";s:45:\"http:\/\/javatechig.tumblr.com\/post\/97138404376\";s:5:\"pDate\";s:19:\"2014-09-10 14:03:16\";}}\";"],"snapTW":["s:271:\"a:1:{i:0;a:9:{s:4:\"doTW\";s:1:\"1\";s:10:\"SNAPformat\";s:15:\"%TITLE% - %URL%\";s:8:\"attchImg\";s:1:\"0\";s:9:\"isAutoImg\";s:1:\"A\";s:8:\"imgToUse\";s:0:\"\";s:11:\"isPrePosted\";s:1:\"1\";s:8:\"isPosted\";s:1:\"1\";s:4:\"pgID\";s:18:\"509703662558404608\";s:5:\"pDate\";s:19:\"2014-09-10 14:03:17\";}}\";"],"snapImportedFBComments":["a:0:{}"],"snapImportedComments":["a:0:{}"],"post_views_count":["2881"]},"thumbnail_size":"thumbnail","thumbnail_images":{"full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"medium":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-620x380.jpg","width":620,"height":380},"medium_large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"large":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"shareaholic-thumbnail":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-lay-a":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-lay-a-nosid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-lay-b":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-fa-full":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150},"vce-fa-grid":{"url":"http:\/\/stacktips.com\/wp-content\/uploads\/2014\/09\/Java_Header-e1415185024983.jpg","width":248,"height":150}}}]}
